import{f as mt}from"./cross-fetch-04a8fabb.js";import{C as xe,i as ft,g as ee,f as Vn,B as h,p as qn,a as Fn,b as Bt,S as Bn}from"./@ethersproject-ddeba03c.js";import{g as z}from"./graphql-tag-9568edd7.js";import{A as Lt,H as Dt,I as Et}from"./@apollo-b7627a8e.js";var D;(function(n){n.OptionMarketViewer="OptionMarketViewer",n.LyraRegistry="LyraRegistry",n.ExchangeAdapter="ExchangeAdapter",n.TestFaucet="TestFaucet"})(D||(D={}));var Oe;(function(n){n.MultiDistributor="MultiDistributor",n.Multicall3="Multicall3"})(Oe||(Oe={}));var C;(function(n){n.OptionMarket="OptionMarket",n.OptionMarketPricer="OptionMarketPricer",n.OptionToken="OptionToken",n.ShortCollateral="ShortCollateral",n.OptionGreekCache="OptionGreekCache",n.LiquidityToken="LiquidityToken",n.LiquidityPool="LiquidityPool",n.PoolHedger="PoolHedger"})(C||(C={}));var J;(function(n){n[n.LongCall=0]="LongCall",n[n.LongPut=1]="LongPut",n[n.ShortCoveredCall=2]="ShortCoveredCall",n[n.ShortCall=3]="ShortCall",n[n.ShortPut=4]="ShortPut"})(J||(J={}));var ae;(function(n){n.Testnet="testnet",n.Mainnet="mainnet"})(ae||(ae={}));const Qt=1;var Xe;(function(n){n.Trade="Trade",n.PositionUpdated="PositionUpdated",n.Transfer="Transfer"})(Xe||(Xe={}));var ye;(function(n){n[n.Empty=0]="Empty",n[n.Active=1]="Active",n[n.Closed=2]="Closed",n[n.Liquidated=3]="Liquidated",n[n.Settled=4]="Settled",n[n.Merged=5]="Merged"})(ye||(ye={}));var ie;(function(n){n[n.Opened=0]="Opened",n[n.Adjusted=1]="Adjusted",n[n.Closed=2]="Closed",n[n.SplitFrom=3]="SplitFrom",n[n.SplitInto=4]="SplitInto",n[n.Merged=5]="Merged",n[n.MergedInto=6]="MergedInto",n[n.Settled=7]="Settled",n[n.Liquidated=8]="Liquidated",n[n.Transfer=9]="Transfer"})(ie||(ie={}));var _t;(function(n){n[n.Open=0]="Open",n[n.Close=1]="Close",n[n.Liquidate=2]="Liquidate"})(_t||(_t={}));var X;(function(n){n.ContractCall="ContractCall",n.Log="Log",n.Subgraph="Subgraph"})(X||(X={}));ie.Adjusted,ie.Closed,ie.Liquidated,ie.Opened,ie.Settled,ie.Merged,ie.MergedInto,ie.SplitFrom,ie.SplitInto;function L(n,e,t,a,i){return{to:t,data:i,from:a,chainId:e??n.network.chainId}}const Ln=[{inputs:[],stateMutability:"nonpayable",type:"constructor"},{inputs:[{internalType:"bytes32",name:"contractName",type:"bytes32"}],name:"NonExistentGlobalContract",type:"error"},{inputs:[{internalType:"address",name:"optionMarket",type:"address"}],name:"NonExistentMarket",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"nominatedOwner",type:"address"}],name:"OnlyNominatedOwner",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"owner",type:"address"}],name:"OnlyOwner",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"market",type:"address"}],name:"RemovingInvalidMarket",type:"error"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"name",type:"bytes32"},{indexed:!1,internalType:"address",name:"addr",type:"address"}],name:"GlobalAddressUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"contract OptionMarket",name:"market",type:"address"}],name:"MarketRemoved",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"contract OptionMarket",name:"optionMarket",type:"address"},{components:[{internalType:"contract LiquidityPool",name:"liquidityPool",type:"address"},{internalType:"contract LiquidityToken",name:"liquidityToken",type:"address"},{internalType:"contract OptionGreekCache",name:"greekCache",type:"address"},{internalType:"contract OptionMarket",name:"optionMarket",type:"address"},{internalType:"contract OptionMarketPricer",name:"optionMarketPricer",type:"address"},{internalType:"contract OptionToken",name:"optionToken",type:"address"},{internalType:"contract PoolHedger",name:"poolHedger",type:"address"},{internalType:"contract ShortCollateral",name:"shortCollateral",type:"address"},{internalType:"contract GWAVOracle",name:"gwavOracle",type:"address"},{internalType:"contract IERC20",name:"quoteAsset",type:"address"},{internalType:"contract IERC20",name:"baseAsset",type:"address"}],indexed:!1,internalType:"struct LyraRegistry.OptionMarketAddresses",name:"market",type:"tuple"}],name:"MarketUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"oldOwner",type:"address"},{indexed:!1,internalType:"address",name:"newOwner",type:"address"}],name:"OwnerChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"newOwner",type:"address"}],name:"OwnerNominated",type:"event"},{inputs:[],name:"acceptOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"contract LiquidityPool",name:"liquidityPool",type:"address"},{internalType:"contract LiquidityToken",name:"liquidityToken",type:"address"},{internalType:"contract OptionGreekCache",name:"greekCache",type:"address"},{internalType:"contract OptionMarket",name:"optionMarket",type:"address"},{internalType:"contract OptionMarketPricer",name:"optionMarketPricer",type:"address"},{internalType:"contract OptionToken",name:"optionToken",type:"address"},{internalType:"contract PoolHedger",name:"poolHedger",type:"address"},{internalType:"contract ShortCollateral",name:"shortCollateral",type:"address"},{internalType:"contract GWAVOracle",name:"gwavOracle",type:"address"},{internalType:"contract IERC20",name:"quoteAsset",type:"address"},{internalType:"contract IERC20",name:"baseAsset",type:"address"}],internalType:"struct LyraRegistry.OptionMarketAddresses",name:"newMarketAddresses",type:"tuple"}],name:"addMarket",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"contractName",type:"bytes32"}],name:"getGlobalAddress",outputs:[{internalType:"address",name:"globalContract",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract OptionMarket",name:"optionMarket",type:"address"}],name:"getMarketAddresses",outputs:[{components:[{internalType:"contract LiquidityPool",name:"liquidityPool",type:"address"},{internalType:"contract LiquidityToken",name:"liquidityToken",type:"address"},{internalType:"contract OptionGreekCache",name:"greekCache",type:"address"},{internalType:"contract OptionMarket",name:"optionMarket",type:"address"},{internalType:"contract OptionMarketPricer",name:"optionMarketPricer",type:"address"},{internalType:"contract OptionToken",name:"optionToken",type:"address"},{internalType:"contract PoolHedger",name:"poolHedger",type:"address"},{internalType:"contract ShortCollateral",name:"shortCollateral",type:"address"},{internalType:"contract GWAVOracle",name:"gwavOracle",type:"address"},{internalType:"contract IERC20",name:"quoteAsset",type:"address"},{internalType:"contract IERC20",name:"baseAsset",type:"address"}],internalType:"struct LyraRegistry.OptionMarketAddresses",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"",type:"bytes32"}],name:"globalAddresses",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract OptionMarket",name:"",type:"address"}],name:"marketAddresses",outputs:[{internalType:"contract LiquidityPool",name:"liquidityPool",type:"address"},{internalType:"contract LiquidityToken",name:"liquidityToken",type:"address"},{internalType:"contract OptionGreekCache",name:"greekCache",type:"address"},{internalType:"contract OptionMarket",name:"optionMarket",type:"address"},{internalType:"contract OptionMarketPricer",name:"optionMarketPricer",type:"address"},{internalType:"contract OptionToken",name:"optionToken",type:"address"},{internalType:"contract PoolHedger",name:"poolHedger",type:"address"},{internalType:"contract ShortCollateral",name:"shortCollateral",type:"address"},{internalType:"contract GWAVOracle",name:"gwavOracle",type:"address"},{internalType:"contract IERC20",name:"quoteAsset",type:"address"},{internalType:"contract IERC20",name:"baseAsset",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_owner",type:"address"}],name:"nominateNewOwner",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"nominatedOwner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"optionMarkets",outputs:[{internalType:"contract OptionMarket",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract OptionMarket",name:"market",type:"address"}],name:"removeMarket",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32[]",name:"names",type:"bytes32[]"},{internalType:"address[]",name:"addresses",type:"address[]"}],name:"updateGlobalAddresses",outputs:[],stateMutability:"nonpayable",type:"function"}],Dn=[{inputs:[],stateMutability:"nonpayable",type:"constructor"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"nominatedOwner",type:"address"}],name:"OnlyNominatedOwner",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"owner",type:"address"}],name:"OnlyOwner",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"market",type:"address"}],name:"RemovingInvalidMarket",type:"error"},{anonymous:!1,inputs:[{components:[{internalType:"contract LiquidityPool",name:"liquidityPool",type:"address"},{internalType:"contract LiquidityToken",name:"liquidityToken",type:"address"},{internalType:"contract OptionGreekCache",name:"greekCache",type:"address"},{internalType:"contract OptionMarket",name:"optionMarket",type:"address"},{internalType:"contract OptionMarketPricer",name:"optionMarketPricer",type:"address"},{internalType:"contract OptionToken",name:"optionToken",type:"address"},{internalType:"contract ShortCollateral",name:"shortCollateral",type:"address"},{internalType:"contract PoolHedger",name:"poolHedger",type:"address"},{internalType:"contract IERC20",name:"quoteAsset",type:"address"},{internalType:"contract IERC20",name:"baseAsset",type:"address"}],indexed:!1,internalType:"struct OptionMarketViewer.OptionMarketAddresses",name:"market",type:"tuple"}],name:"MarketAdded",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"contract OptionMarket",name:"market",type:"address"}],name:"MarketRemoved",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"oldOwner",type:"address"},{indexed:!1,internalType:"address",name:"newOwner",type:"address"}],name:"OwnerChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"newOwner",type:"address"}],name:"OwnerNominated",type:"event"},{inputs:[],name:"acceptOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"contract LiquidityPool",name:"liquidityPool",type:"address"},{internalType:"contract LiquidityToken",name:"liquidityToken",type:"address"},{internalType:"contract OptionGreekCache",name:"greekCache",type:"address"},{internalType:"contract OptionMarket",name:"optionMarket",type:"address"},{internalType:"contract OptionMarketPricer",name:"optionMarketPricer",type:"address"},{internalType:"contract OptionToken",name:"optionToken",type:"address"},{internalType:"contract ShortCollateral",name:"shortCollateral",type:"address"},{internalType:"contract PoolHedger",name:"poolHedger",type:"address"},{internalType:"contract IERC20",name:"quoteAsset",type:"address"},{internalType:"contract IERC20",name:"baseAsset",type:"address"}],internalType:"struct OptionMarketViewer.OptionMarketAddresses",name:"newMarketAddresses",type:"tuple"}],name:"addMarket",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract OptionMarket",name:"market",type:"address"},{internalType:"uint256",name:"boardId",type:"uint256"}],name:"getBoard",outputs:[{components:[{internalType:"address",name:"market",type:"address"},{internalType:"uint256",name:"boardId",type:"uint256"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"baseIv",type:"uint256"},{internalType:"uint256",name:"priceAtExpiry",type:"uint256"},{internalType:"bool",name:"isPaused",type:"bool"},{internalType:"uint256",name:"forceCloseGwavIV",type:"uint256"},{components:[{internalType:"int256",name:"netDelta",type:"int256"},{internalType:"int256",name:"netStdVega",type:"int256"},{internalType:"int256",name:"netOptionValue",type:"int256"}],internalType:"struct OptionGreekCache.NetGreeks",name:"netGreeks",type:"tuple"},{components:[{internalType:"uint256",name:"strikeId",type:"uint256"},{internalType:"uint256",name:"boardId",type:"uint256"},{internalType:"uint256",name:"strikePrice",type:"uint256"},{internalType:"uint256",name:"skew",type:"uint256"},{internalType:"uint256",name:"forceCloseSkew",type:"uint256"},{components:[{internalType:"int256",name:"callDelta",type:"int256"},{internalType:"int256",name:"putDelta",type:"int256"},{internalType:"uint256",name:"stdVega",type:"uint256"},{internalType:"uint256",name:"callPrice",type:"uint256"},{internalType:"uint256",name:"putPrice",type:"uint256"}],internalType:"struct OptionGreekCache.StrikeGreeks",name:"cachedGreeks",type:"tuple"},{internalType:"uint256",name:"baseReturnedRatio",type:"uint256"},{internalType:"uint256",name:"longCallOpenInterest",type:"uint256"},{internalType:"uint256",name:"longPutOpenInterest",type:"uint256"},{internalType:"uint256",name:"shortCallBaseOpenInterest",type:"uint256"},{internalType:"uint256",name:"shortCallQuoteOpenInterest",type:"uint256"},{internalType:"uint256",name:"shortPutOpenInterest",type:"uint256"}],internalType:"struct OptionMarketViewer.StrikeView[]",name:"strikes",type:"tuple[]"}],internalType:"struct OptionMarketViewer.BoardView",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"baseKey",type:"bytes32"},{internalType:"uint256",name:"boardId",type:"uint256"}],name:"getBoardForBaseKey",outputs:[{components:[{internalType:"address",name:"market",type:"address"},{internalType:"uint256",name:"boardId",type:"uint256"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"baseIv",type:"uint256"},{internalType:"uint256",name:"priceAtExpiry",type:"uint256"},{internalType:"bool",name:"isPaused",type:"bool"},{internalType:"uint256",name:"forceCloseGwavIV",type:"uint256"},{components:[{internalType:"int256",name:"netDelta",type:"int256"},{internalType:"int256",name:"netStdVega",type:"int256"},{internalType:"int256",name:"netOptionValue",type:"int256"}],internalType:"struct OptionGreekCache.NetGreeks",name:"netGreeks",type:"tuple"},{components:[{internalType:"uint256",name:"strikeId",type:"uint256"},{internalType:"uint256",name:"boardId",type:"uint256"},{internalType:"uint256",name:"strikePrice",type:"uint256"},{internalType:"uint256",name:"skew",type:"uint256"},{internalType:"uint256",name:"forceCloseSkew",type:"uint256"},{components:[{internalType:"int256",name:"callDelta",type:"int256"},{internalType:"int256",name:"putDelta",type:"int256"},{internalType:"uint256",name:"stdVega",type:"uint256"},{internalType:"uint256",name:"callPrice",type:"uint256"},{internalType:"uint256",name:"putPrice",type:"uint256"}],internalType:"struct OptionGreekCache.StrikeGreeks",name:"cachedGreeks",type:"tuple"},{internalType:"uint256",name:"baseReturnedRatio",type:"uint256"},{internalType:"uint256",name:"longCallOpenInterest",type:"uint256"},{internalType:"uint256",name:"longPutOpenInterest",type:"uint256"},{internalType:"uint256",name:"shortCallBaseOpenInterest",type:"uint256"},{internalType:"uint256",name:"shortCallQuoteOpenInterest",type:"uint256"},{internalType:"uint256",name:"shortPutOpenInterest",type:"uint256"}],internalType:"struct OptionMarketViewer.StrikeView[]",name:"strikes",type:"tuple[]"}],internalType:"struct OptionMarketViewer.BoardView",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract OptionMarket",name:"market",type:"address"},{internalType:"uint256",name:"strikeId",type:"uint256"}],name:"getBoardForStrikeId",outputs:[{components:[{internalType:"address",name:"market",type:"address"},{internalType:"uint256",name:"boardId",type:"uint256"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"baseIv",type:"uint256"},{internalType:"uint256",name:"priceAtExpiry",type:"uint256"},{internalType:"bool",name:"isPaused",type:"bool"},{internalType:"uint256",name:"forceCloseGwavIV",type:"uint256"},{components:[{internalType:"int256",name:"netDelta",type:"int256"},{internalType:"int256",name:"netStdVega",type:"int256"},{internalType:"int256",name:"netOptionValue",type:"int256"}],internalType:"struct OptionGreekCache.NetGreeks",name:"netGreeks",type:"tuple"},{components:[{internalType:"uint256",name:"strikeId",type:"uint256"},{internalType:"uint256",name:"boardId",type:"uint256"},{internalType:"uint256",name:"strikePrice",type:"uint256"},{internalType:"uint256",name:"skew",type:"uint256"},{internalType:"uint256",name:"forceCloseSkew",type:"uint256"},{components:[{internalType:"int256",name:"callDelta",type:"int256"},{internalType:"int256",name:"putDelta",type:"int256"},{internalType:"uint256",name:"stdVega",type:"uint256"},{internalType:"uint256",name:"callPrice",type:"uint256"},{internalType:"uint256",name:"putPrice",type:"uint256"}],internalType:"struct OptionGreekCache.StrikeGreeks",name:"cachedGreeks",type:"tuple"},{internalType:"uint256",name:"baseReturnedRatio",type:"uint256"},{internalType:"uint256",name:"longCallOpenInterest",type:"uint256"},{internalType:"uint256",name:"longPutOpenInterest",type:"uint256"},{internalType:"uint256",name:"shortCallBaseOpenInterest",type:"uint256"},{internalType:"uint256",name:"shortCallQuoteOpenInterest",type:"uint256"},{internalType:"uint256",name:"shortPutOpenInterest",type:"uint256"}],internalType:"struct OptionMarketViewer.StrikeView[]",name:"strikes",type:"tuple[]"}],internalType:"struct OptionMarketViewer.BoardView",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract OptionMarket[]",name:"markets",type:"address[]"},{internalType:"address",name:"account",type:"address"}],name:"getLiquidityBalancesAndAllowances",outputs:[{components:[{internalType:"address",name:"token",type:"address"},{internalType:"uint256",name:"balance",type:"uint256"},{internalType:"uint256",name:"allowance",type:"uint256"}],internalType:"struct OptionMarketViewer.LiquidityBalanceAndAllowance[]",name:"",type:"tuple[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract OptionMarket",name:"market",type:"address"}],name:"getLiveBoards",outputs:[{components:[{internalType:"address",name:"market",type:"address"},{internalType:"uint256",name:"boardId",type:"uint256"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"baseIv",type:"uint256"},{internalType:"uint256",name:"priceAtExpiry",type:"uint256"},{internalType:"bool",name:"isPaused",type:"bool"},{internalType:"uint256",name:"forceCloseGwavIV",type:"uint256"},{components:[{internalType:"int256",name:"netDelta",type:"int256"},{internalType:"int256",name:"netStdVega",type:"int256"},{internalType:"int256",name:"netOptionValue",type:"int256"}],internalType:"struct OptionGreekCache.NetGreeks",name:"netGreeks",type:"tuple"},{components:[{internalType:"uint256",name:"strikeId",type:"uint256"},{internalType:"uint256",name:"boardId",type:"uint256"},{internalType:"uint256",name:"strikePrice",type:"uint256"},{internalType:"uint256",name:"skew",type:"uint256"},{internalType:"uint256",name:"forceCloseSkew",type:"uint256"},{components:[{internalType:"int256",name:"callDelta",type:"int256"},{internalType:"int256",name:"putDelta",type:"int256"},{internalType:"uint256",name:"stdVega",type:"uint256"},{internalType:"uint256",name:"callPrice",type:"uint256"},{internalType:"uint256",name:"putPrice",type:"uint256"}],internalType:"struct OptionGreekCache.StrikeGreeks",name:"cachedGreeks",type:"tuple"},{internalType:"uint256",name:"baseReturnedRatio",type:"uint256"},{internalType:"uint256",name:"longCallOpenInterest",type:"uint256"},{internalType:"uint256",name:"longPutOpenInterest",type:"uint256"},{internalType:"uint256",name:"shortCallBaseOpenInterest",type:"uint256"},{internalType:"uint256",name:"shortCallQuoteOpenInterest",type:"uint256"},{internalType:"uint256",name:"shortPutOpenInterest",type:"uint256"}],internalType:"struct OptionMarketViewer.StrikeView[]",name:"strikes",type:"tuple[]"}],internalType:"struct OptionMarketViewer.BoardView[]",name:"marketBoards",type:"tuple[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract OptionMarket",name:"market",type:"address"}],name:"getMarket",outputs:[{components:[{internalType:"bool",name:"isPaused",type:"bool"},{internalType:"uint256",name:"totalQueuedDeposits",type:"uint256"},{internalType:"uint256",name:"totalQueuedWithdrawals",type:"uint256"},{internalType:"uint256",name:"tokenPrice",type:"uint256"},{components:[{internalType:"contract LiquidityPool",name:"liquidityPool",type:"address"},{internalType:"contract LiquidityToken",name:"liquidityToken",type:"address"},{internalType:"contract OptionGreekCache",name:"greekCache",type:"address"},{internalType:"contract OptionMarket",name:"optionMarket",type:"address"},{internalType:"contract OptionMarketPricer",name:"optionMarketPricer",type:"address"},{internalType:"contract OptionToken",name:"optionToken",type:"address"},{internalType:"contract ShortCollateral",name:"shortCollateral",type:"address"},{internalType:"contract PoolHedger",name:"poolHedger",type:"address"},{internalType:"contract IERC20",name:"quoteAsset",type:"address"},{internalType:"contract IERC20",name:"baseAsset",type:"address"}],internalType:"struct OptionMarketViewer.OptionMarketAddresses",name:"marketAddresses",type:"tuple"},{components:[{components:[{internalType:"uint256",name:"maxBoardExpiry",type:"uint256"},{internalType:"address",name:"securityModule",type:"address"},{internalType:"uint256",name:"feePortionReserved",type:"uint256"},{internalType:"uint256",name:"staticBaseSettlementFee",type:"uint256"}],internalType:"struct OptionMarket.OptionMarketParameters",name:"optionMarketParams",type:"tuple"},{components:[{internalType:"uint256",name:"minDepositWithdraw",type:"uint256"},{internalType:"uint256",name:"depositDelay",type:"uint256"},{internalType:"uint256",name:"withdrawalDelay",type:"uint256"},{internalType:"uint256",name:"withdrawalFee",type:"uint256"},{internalType:"uint256",name:"liquidityCBThreshold",type:"uint256"},{internalType:"uint256",name:"liquidityCBTimeout",type:"uint256"},{internalType:"uint256",name:"ivVarianceCBThreshold",type:"uint256"},{internalType:"uint256",name:"skewVarianceCBThreshold",type:"uint256"},{internalType:"uint256",name:"ivVarianceCBTimeout",type:"uint256"},{internalType:"uint256",name:"skewVarianceCBTimeout",type:"uint256"},{internalType:"address",name:"guardianMultisig",type:"address"},{internalType:"uint256",name:"guardianDelay",type:"uint256"},{internalType:"uint256",name:"boardSettlementCBTimeout",type:"uint256"},{internalType:"uint256",name:"maxFeePaid",type:"uint256"}],internalType:"struct LiquidityPool.LiquidityPoolParameters",name:"lpParams",type:"tuple"},{components:[{internalType:"uint256",name:"maxStrikesPerBoard",type:"uint256"},{internalType:"uint256",name:"acceptableSpotPricePercentMove",type:"uint256"},{internalType:"uint256",name:"staleUpdateDuration",type:"uint256"},{internalType:"uint256",name:"varianceIvGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"varianceSkewGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"optionValueIvGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"optionValueSkewGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"gwavSkewFloor",type:"uint256"},{internalType:"uint256",name:"gwavSkewCap",type:"uint256"},{internalType:"int256",name:"rateAndCarry",type:"int256"}],internalType:"struct OptionGreekCache.GreekCacheParameters",name:"greekCacheParams",type:"tuple"},{components:[{internalType:"uint256",name:"ivGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"skewGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"shortVolShock",type:"uint256"},{internalType:"uint256",name:"shortPostCutoffVolShock",type:"uint256"},{internalType:"uint256",name:"longVolShock",type:"uint256"},{internalType:"uint256",name:"longPostCutoffVolShock",type:"uint256"},{internalType:"uint256",name:"liquidateVolShock",type:"uint256"},{internalType:"uint256",name:"liquidatePostCutoffVolShock",type:"uint256"},{internalType:"uint256",name:"shortSpotMin",type:"uint256"},{internalType:"uint256",name:"liquidateSpotMin",type:"uint256"}],internalType:"struct OptionGreekCache.ForceCloseParameters",name:"forceCloseParams",type:"tuple"},{components:[{internalType:"uint256",name:"minStaticQuoteCollateral",type:"uint256"},{internalType:"uint256",name:"minStaticBaseCollateral",type:"uint256"},{internalType:"uint256",name:"shockVolA",type:"uint256"},{internalType:"uint256",name:"shockVolPointA",type:"uint256"},{internalType:"uint256",name:"shockVolB",type:"uint256"},{internalType:"uint256",name:"shockVolPointB",type:"uint256"},{internalType:"uint256",name:"callSpotPriceShock",type:"uint256"},{internalType:"uint256",name:"putSpotPriceShock",type:"uint256"}],internalType:"struct OptionGreekCache.MinCollateralParameters",name:"minCollatParams",type:"tuple"},{components:[{internalType:"uint256",name:"optionPriceFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"optionPriceFee1xPoint",type:"uint256"},{internalType:"uint256",name:"optionPriceFee2xPoint",type:"uint256"},{internalType:"uint256",name:"spotPriceFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"spotPriceFee1xPoint",type:"uint256"},{internalType:"uint256",name:"spotPriceFee2xPoint",type:"uint256"},{internalType:"uint256",name:"vegaFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"standardSize",type:"uint256"},{internalType:"uint256",name:"skewAdjustmentFactor",type:"uint256"}],internalType:"struct OptionMarketPricer.PricingParameters",name:"pricingParams",type:"tuple"},{components:[{internalType:"int256",name:"minDelta",type:"int256"},{internalType:"int256",name:"minForceCloseDelta",type:"int256"},{internalType:"uint256",name:"tradingCutoff",type:"uint256"},{internalType:"uint256",name:"minBaseIV",type:"uint256"},{internalType:"uint256",name:"maxBaseIV",type:"uint256"},{internalType:"uint256",name:"minSkew",type:"uint256"},{internalType:"uint256",name:"maxSkew",type:"uint256"},{internalType:"uint256",name:"minVol",type:"uint256"},{internalType:"uint256",name:"maxVol",type:"uint256"},{internalType:"uint256",name:"absMinSkew",type:"uint256"},{internalType:"uint256",name:"absMaxSkew",type:"uint256"},{internalType:"bool",name:"capSkewsToAbs",type:"bool"}],internalType:"struct OptionMarketPricer.TradeLimitParameters",name:"tradeLimitParams",type:"tuple"},{components:[{internalType:"uint256",name:"defaultVarianceFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"forceCloseVarianceFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"skewAdjustmentCoefficient",type:"uint256"},{internalType:"uint256",name:"referenceSkew",type:"uint256"},{internalType:"uint256",name:"minimumStaticSkewAdjustment",type:"uint256"},{internalType:"uint256",name:"vegaCoefficient",type:"uint256"},{internalType:"uint256",name:"minimumStaticVega",type:"uint256"},{internalType:"uint256",name:"ivVarianceCoefficient",type:"uint256"},{internalType:"uint256",name:"minimumStaticIvVariance",type:"uint256"}],internalType:"struct OptionMarketPricer.VarianceFeeParameters",name:"varianceFeeParams",type:"tuple"},{components:[{internalType:"uint256",name:"penaltyRatio",type:"uint256"},{internalType:"uint256",name:"liquidatorFeeRatio",type:"uint256"},{internalType:"uint256",name:"smFeeRatio",type:"uint256"},{internalType:"uint256",name:"minLiquidationFee",type:"uint256"}],internalType:"struct OptionToken.PartialCollateralParameters",name:"partialCollatParams",type:"tuple"},{components:[{internalType:"uint256",name:"interactionDelay",type:"uint256"},{internalType:"uint256",name:"hedgeCap",type:"uint256"}],internalType:"struct PoolHedger.PoolHedgerParameters",name:"poolHedgerParams",type:"tuple"}],internalType:"struct OptionMarketViewer.MarketParameters",name:"marketParameters",type:"tuple"},{components:[{internalType:"uint256",name:"freeLiquidity",type:"uint256"},{internalType:"uint256",name:"burnableLiquidity",type:"uint256"},{internalType:"uint256",name:"usedCollatLiquidity",type:"uint256"},{internalType:"uint256",name:"pendingDeltaLiquidity",type:"uint256"},{internalType:"uint256",name:"usedDeltaLiquidity",type:"uint256"},{internalType:"uint256",name:"NAV",type:"uint256"}],internalType:"struct LiquidityPool.Liquidity",name:"liquidity",type:"tuple"},{components:[{internalType:"int256",name:"netDelta",type:"int256"},{internalType:"int256",name:"netStdVega",type:"int256"},{internalType:"int256",name:"netOptionValue",type:"int256"}],internalType:"struct OptionGreekCache.NetGreeks",name:"globalNetGreeks",type:"tuple"},{components:[{internalType:"address",name:"market",type:"address"},{internalType:"uint256",name:"boardId",type:"uint256"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"baseIv",type:"uint256"},{internalType:"uint256",name:"priceAtExpiry",type:"uint256"},{internalType:"bool",name:"isPaused",type:"bool"},{internalType:"uint256",name:"forceCloseGwavIV",type:"uint256"},{components:[{internalType:"int256",name:"netDelta",type:"int256"},{internalType:"int256",name:"netStdVega",type:"int256"},{internalType:"int256",name:"netOptionValue",type:"int256"}],internalType:"struct OptionGreekCache.NetGreeks",name:"netGreeks",type:"tuple"},{components:[{internalType:"uint256",name:"strikeId",type:"uint256"},{internalType:"uint256",name:"boardId",type:"uint256"},{internalType:"uint256",name:"strikePrice",type:"uint256"},{internalType:"uint256",name:"skew",type:"uint256"},{internalType:"uint256",name:"forceCloseSkew",type:"uint256"},{components:[{internalType:"int256",name:"callDelta",type:"int256"},{internalType:"int256",name:"putDelta",type:"int256"},{internalType:"uint256",name:"stdVega",type:"uint256"},{internalType:"uint256",name:"callPrice",type:"uint256"},{internalType:"uint256",name:"putPrice",type:"uint256"}],internalType:"struct OptionGreekCache.StrikeGreeks",name:"cachedGreeks",type:"tuple"},{internalType:"uint256",name:"baseReturnedRatio",type:"uint256"},{internalType:"uint256",name:"longCallOpenInterest",type:"uint256"},{internalType:"uint256",name:"longPutOpenInterest",type:"uint256"},{internalType:"uint256",name:"shortCallBaseOpenInterest",type:"uint256"},{internalType:"uint256",name:"shortCallQuoteOpenInterest",type:"uint256"},{internalType:"uint256",name:"shortPutOpenInterest",type:"uint256"}],internalType:"struct OptionMarketViewer.StrikeView[]",name:"strikes",type:"tuple[]"}],internalType:"struct OptionMarketViewer.BoardView[]",name:"liveBoards",type:"tuple[]"},{components:[{internalType:"uint256",name:"spotPrice",type:"uint256"},{internalType:"bytes32",name:"quoteKey",type:"bytes32"},{internalType:"bytes32",name:"baseKey",type:"bytes32"},{internalType:"uint256",name:"quoteBaseFeeRate",type:"uint256"},{internalType:"uint256",name:"baseQuoteFeeRate",type:"uint256"}],internalType:"struct SynthetixAdapter.ExchangeParams",name:"exchangeParams",type:"tuple"}],internalType:"struct OptionMarketViewer.MarketViewWithBoards",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[],name:"getMarketAddresses",outputs:[{components:[{internalType:"contract LiquidityPool",name:"liquidityPool",type:"address"},{internalType:"contract LiquidityToken",name:"liquidityToken",type:"address"},{internalType:"contract OptionGreekCache",name:"greekCache",type:"address"},{internalType:"contract OptionMarket",name:"optionMarket",type:"address"},{internalType:"contract OptionMarketPricer",name:"optionMarketPricer",type:"address"},{internalType:"contract OptionToken",name:"optionToken",type:"address"},{internalType:"contract ShortCollateral",name:"shortCollateral",type:"address"},{internalType:"contract PoolHedger",name:"poolHedger",type:"address"},{internalType:"contract IERC20",name:"quoteAsset",type:"address"},{internalType:"contract IERC20",name:"baseAsset",type:"address"}],internalType:"struct OptionMarketViewer.OptionMarketAddresses[]",name:"",type:"tuple[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"baseKey",type:"bytes32"}],name:"getMarketForBaseKey",outputs:[{components:[{internalType:"bool",name:"isPaused",type:"bool"},{internalType:"uint256",name:"totalQueuedDeposits",type:"uint256"},{internalType:"uint256",name:"totalQueuedWithdrawals",type:"uint256"},{internalType:"uint256",name:"tokenPrice",type:"uint256"},{components:[{internalType:"contract LiquidityPool",name:"liquidityPool",type:"address"},{internalType:"contract LiquidityToken",name:"liquidityToken",type:"address"},{internalType:"contract OptionGreekCache",name:"greekCache",type:"address"},{internalType:"contract OptionMarket",name:"optionMarket",type:"address"},{internalType:"contract OptionMarketPricer",name:"optionMarketPricer",type:"address"},{internalType:"contract OptionToken",name:"optionToken",type:"address"},{internalType:"contract ShortCollateral",name:"shortCollateral",type:"address"},{internalType:"contract PoolHedger",name:"poolHedger",type:"address"},{internalType:"contract IERC20",name:"quoteAsset",type:"address"},{internalType:"contract IERC20",name:"baseAsset",type:"address"}],internalType:"struct OptionMarketViewer.OptionMarketAddresses",name:"marketAddresses",type:"tuple"},{components:[{components:[{internalType:"uint256",name:"maxBoardExpiry",type:"uint256"},{internalType:"address",name:"securityModule",type:"address"},{internalType:"uint256",name:"feePortionReserved",type:"uint256"},{internalType:"uint256",name:"staticBaseSettlementFee",type:"uint256"}],internalType:"struct OptionMarket.OptionMarketParameters",name:"optionMarketParams",type:"tuple"},{components:[{internalType:"uint256",name:"minDepositWithdraw",type:"uint256"},{internalType:"uint256",name:"depositDelay",type:"uint256"},{internalType:"uint256",name:"withdrawalDelay",type:"uint256"},{internalType:"uint256",name:"withdrawalFee",type:"uint256"},{internalType:"uint256",name:"liquidityCBThreshold",type:"uint256"},{internalType:"uint256",name:"liquidityCBTimeout",type:"uint256"},{internalType:"uint256",name:"ivVarianceCBThreshold",type:"uint256"},{internalType:"uint256",name:"skewVarianceCBThreshold",type:"uint256"},{internalType:"uint256",name:"ivVarianceCBTimeout",type:"uint256"},{internalType:"uint256",name:"skewVarianceCBTimeout",type:"uint256"},{internalType:"address",name:"guardianMultisig",type:"address"},{internalType:"uint256",name:"guardianDelay",type:"uint256"},{internalType:"uint256",name:"boardSettlementCBTimeout",type:"uint256"},{internalType:"uint256",name:"maxFeePaid",type:"uint256"}],internalType:"struct LiquidityPool.LiquidityPoolParameters",name:"lpParams",type:"tuple"},{components:[{internalType:"uint256",name:"maxStrikesPerBoard",type:"uint256"},{internalType:"uint256",name:"acceptableSpotPricePercentMove",type:"uint256"},{internalType:"uint256",name:"staleUpdateDuration",type:"uint256"},{internalType:"uint256",name:"varianceIvGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"varianceSkewGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"optionValueIvGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"optionValueSkewGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"gwavSkewFloor",type:"uint256"},{internalType:"uint256",name:"gwavSkewCap",type:"uint256"},{internalType:"int256",name:"rateAndCarry",type:"int256"}],internalType:"struct OptionGreekCache.GreekCacheParameters",name:"greekCacheParams",type:"tuple"},{components:[{internalType:"uint256",name:"ivGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"skewGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"shortVolShock",type:"uint256"},{internalType:"uint256",name:"shortPostCutoffVolShock",type:"uint256"},{internalType:"uint256",name:"longVolShock",type:"uint256"},{internalType:"uint256",name:"longPostCutoffVolShock",type:"uint256"},{internalType:"uint256",name:"liquidateVolShock",type:"uint256"},{internalType:"uint256",name:"liquidatePostCutoffVolShock",type:"uint256"},{internalType:"uint256",name:"shortSpotMin",type:"uint256"},{internalType:"uint256",name:"liquidateSpotMin",type:"uint256"}],internalType:"struct OptionGreekCache.ForceCloseParameters",name:"forceCloseParams",type:"tuple"},{components:[{internalType:"uint256",name:"minStaticQuoteCollateral",type:"uint256"},{internalType:"uint256",name:"minStaticBaseCollateral",type:"uint256"},{internalType:"uint256",name:"shockVolA",type:"uint256"},{internalType:"uint256",name:"shockVolPointA",type:"uint256"},{internalType:"uint256",name:"shockVolB",type:"uint256"},{internalType:"uint256",name:"shockVolPointB",type:"uint256"},{internalType:"uint256",name:"callSpotPriceShock",type:"uint256"},{internalType:"uint256",name:"putSpotPriceShock",type:"uint256"}],internalType:"struct OptionGreekCache.MinCollateralParameters",name:"minCollatParams",type:"tuple"},{components:[{internalType:"uint256",name:"optionPriceFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"optionPriceFee1xPoint",type:"uint256"},{internalType:"uint256",name:"optionPriceFee2xPoint",type:"uint256"},{internalType:"uint256",name:"spotPriceFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"spotPriceFee1xPoint",type:"uint256"},{internalType:"uint256",name:"spotPriceFee2xPoint",type:"uint256"},{internalType:"uint256",name:"vegaFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"standardSize",type:"uint256"},{internalType:"uint256",name:"skewAdjustmentFactor",type:"uint256"}],internalType:"struct OptionMarketPricer.PricingParameters",name:"pricingParams",type:"tuple"},{components:[{internalType:"int256",name:"minDelta",type:"int256"},{internalType:"int256",name:"minForceCloseDelta",type:"int256"},{internalType:"uint256",name:"tradingCutoff",type:"uint256"},{internalType:"uint256",name:"minBaseIV",type:"uint256"},{internalType:"uint256",name:"maxBaseIV",type:"uint256"},{internalType:"uint256",name:"minSkew",type:"uint256"},{internalType:"uint256",name:"maxSkew",type:"uint256"},{internalType:"uint256",name:"minVol",type:"uint256"},{internalType:"uint256",name:"maxVol",type:"uint256"},{internalType:"uint256",name:"absMinSkew",type:"uint256"},{internalType:"uint256",name:"absMaxSkew",type:"uint256"},{internalType:"bool",name:"capSkewsToAbs",type:"bool"}],internalType:"struct OptionMarketPricer.TradeLimitParameters",name:"tradeLimitParams",type:"tuple"},{components:[{internalType:"uint256",name:"defaultVarianceFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"forceCloseVarianceFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"skewAdjustmentCoefficient",type:"uint256"},{internalType:"uint256",name:"referenceSkew",type:"uint256"},{internalType:"uint256",name:"minimumStaticSkewAdjustment",type:"uint256"},{internalType:"uint256",name:"vegaCoefficient",type:"uint256"},{internalType:"uint256",name:"minimumStaticVega",type:"uint256"},{internalType:"uint256",name:"ivVarianceCoefficient",type:"uint256"},{internalType:"uint256",name:"minimumStaticIvVariance",type:"uint256"}],internalType:"struct OptionMarketPricer.VarianceFeeParameters",name:"varianceFeeParams",type:"tuple"},{components:[{internalType:"uint256",name:"penaltyRatio",type:"uint256"},{internalType:"uint256",name:"liquidatorFeeRatio",type:"uint256"},{internalType:"uint256",name:"smFeeRatio",type:"uint256"},{internalType:"uint256",name:"minLiquidationFee",type:"uint256"}],internalType:"struct OptionToken.PartialCollateralParameters",name:"partialCollatParams",type:"tuple"},{components:[{internalType:"uint256",name:"interactionDelay",type:"uint256"},{internalType:"uint256",name:"hedgeCap",type:"uint256"}],internalType:"struct PoolHedger.PoolHedgerParameters",name:"poolHedgerParams",type:"tuple"}],internalType:"struct OptionMarketViewer.MarketParameters",name:"marketParameters",type:"tuple"},{components:[{internalType:"uint256",name:"freeLiquidity",type:"uint256"},{internalType:"uint256",name:"burnableLiquidity",type:"uint256"},{internalType:"uint256",name:"usedCollatLiquidity",type:"uint256"},{internalType:"uint256",name:"pendingDeltaLiquidity",type:"uint256"},{internalType:"uint256",name:"usedDeltaLiquidity",type:"uint256"},{internalType:"uint256",name:"NAV",type:"uint256"}],internalType:"struct LiquidityPool.Liquidity",name:"liquidity",type:"tuple"},{components:[{internalType:"int256",name:"netDelta",type:"int256"},{internalType:"int256",name:"netStdVega",type:"int256"},{internalType:"int256",name:"netOptionValue",type:"int256"}],internalType:"struct OptionGreekCache.NetGreeks",name:"globalNetGreeks",type:"tuple"},{components:[{internalType:"address",name:"market",type:"address"},{internalType:"uint256",name:"boardId",type:"uint256"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"baseIv",type:"uint256"},{internalType:"uint256",name:"priceAtExpiry",type:"uint256"},{internalType:"bool",name:"isPaused",type:"bool"},{internalType:"uint256",name:"forceCloseGwavIV",type:"uint256"},{components:[{internalType:"int256",name:"netDelta",type:"int256"},{internalType:"int256",name:"netStdVega",type:"int256"},{internalType:"int256",name:"netOptionValue",type:"int256"}],internalType:"struct OptionGreekCache.NetGreeks",name:"netGreeks",type:"tuple"},{components:[{internalType:"uint256",name:"strikeId",type:"uint256"},{internalType:"uint256",name:"boardId",type:"uint256"},{internalType:"uint256",name:"strikePrice",type:"uint256"},{internalType:"uint256",name:"skew",type:"uint256"},{internalType:"uint256",name:"forceCloseSkew",type:"uint256"},{components:[{internalType:"int256",name:"callDelta",type:"int256"},{internalType:"int256",name:"putDelta",type:"int256"},{internalType:"uint256",name:"stdVega",type:"uint256"},{internalType:"uint256",name:"callPrice",type:"uint256"},{internalType:"uint256",name:"putPrice",type:"uint256"}],internalType:"struct OptionGreekCache.StrikeGreeks",name:"cachedGreeks",type:"tuple"},{internalType:"uint256",name:"baseReturnedRatio",type:"uint256"},{internalType:"uint256",name:"longCallOpenInterest",type:"uint256"},{internalType:"uint256",name:"longPutOpenInterest",type:"uint256"},{internalType:"uint256",name:"shortCallBaseOpenInterest",type:"uint256"},{internalType:"uint256",name:"shortCallQuoteOpenInterest",type:"uint256"},{internalType:"uint256",name:"shortPutOpenInterest",type:"uint256"}],internalType:"struct OptionMarketViewer.StrikeView[]",name:"strikes",type:"tuple[]"}],internalType:"struct OptionMarketViewer.BoardView[]",name:"liveBoards",type:"tuple[]"},{components:[{internalType:"uint256",name:"spotPrice",type:"uint256"},{internalType:"bytes32",name:"quoteKey",type:"bytes32"},{internalType:"bytes32",name:"baseKey",type:"bytes32"},{internalType:"uint256",name:"quoteBaseFeeRate",type:"uint256"},{internalType:"uint256",name:"baseQuoteFeeRate",type:"uint256"}],internalType:"struct SynthetixAdapter.ExchangeParams",name:"exchangeParams",type:"tuple"}],internalType:"struct OptionMarketViewer.MarketViewWithBoards",name:"market",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract OptionMarket[]",name:"markets",type:"address[]"}],name:"getMarkets",outputs:[{components:[{internalType:"contract IAddressResolver",name:"addressResolver",type:"address"},{internalType:"bool",name:"isPaused",type:"bool"},{components:[{internalType:"bool",name:"isPaused",type:"bool"},{internalType:"uint256",name:"totalQueuedDeposits",type:"uint256"},{internalType:"uint256",name:"totalQueuedWithdrawals",type:"uint256"},{internalType:"uint256",name:"tokenPrice",type:"uint256"},{components:[{internalType:"contract LiquidityPool",name:"liquidityPool",type:"address"},{internalType:"contract LiquidityToken",name:"liquidityToken",type:"address"},{internalType:"contract OptionGreekCache",name:"greekCache",type:"address"},{internalType:"contract OptionMarket",name:"optionMarket",type:"address"},{internalType:"contract OptionMarketPricer",name:"optionMarketPricer",type:"address"},{internalType:"contract OptionToken",name:"optionToken",type:"address"},{internalType:"contract ShortCollateral",name:"shortCollateral",type:"address"},{internalType:"contract PoolHedger",name:"poolHedger",type:"address"},{internalType:"contract IERC20",name:"quoteAsset",type:"address"},{internalType:"contract IERC20",name:"baseAsset",type:"address"}],internalType:"struct OptionMarketViewer.OptionMarketAddresses",name:"marketAddresses",type:"tuple"},{components:[{components:[{internalType:"uint256",name:"maxBoardExpiry",type:"uint256"},{internalType:"address",name:"securityModule",type:"address"},{internalType:"uint256",name:"feePortionReserved",type:"uint256"},{internalType:"uint256",name:"staticBaseSettlementFee",type:"uint256"}],internalType:"struct OptionMarket.OptionMarketParameters",name:"optionMarketParams",type:"tuple"},{components:[{internalType:"uint256",name:"minDepositWithdraw",type:"uint256"},{internalType:"uint256",name:"depositDelay",type:"uint256"},{internalType:"uint256",name:"withdrawalDelay",type:"uint256"},{internalType:"uint256",name:"withdrawalFee",type:"uint256"},{internalType:"uint256",name:"liquidityCBThreshold",type:"uint256"},{internalType:"uint256",name:"liquidityCBTimeout",type:"uint256"},{internalType:"uint256",name:"ivVarianceCBThreshold",type:"uint256"},{internalType:"uint256",name:"skewVarianceCBThreshold",type:"uint256"},{internalType:"uint256",name:"ivVarianceCBTimeout",type:"uint256"},{internalType:"uint256",name:"skewVarianceCBTimeout",type:"uint256"},{internalType:"address",name:"guardianMultisig",type:"address"},{internalType:"uint256",name:"guardianDelay",type:"uint256"},{internalType:"uint256",name:"boardSettlementCBTimeout",type:"uint256"},{internalType:"uint256",name:"maxFeePaid",type:"uint256"}],internalType:"struct LiquidityPool.LiquidityPoolParameters",name:"lpParams",type:"tuple"},{components:[{internalType:"uint256",name:"maxStrikesPerBoard",type:"uint256"},{internalType:"uint256",name:"acceptableSpotPricePercentMove",type:"uint256"},{internalType:"uint256",name:"staleUpdateDuration",type:"uint256"},{internalType:"uint256",name:"varianceIvGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"varianceSkewGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"optionValueIvGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"optionValueSkewGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"gwavSkewFloor",type:"uint256"},{internalType:"uint256",name:"gwavSkewCap",type:"uint256"},{internalType:"int256",name:"rateAndCarry",type:"int256"}],internalType:"struct OptionGreekCache.GreekCacheParameters",name:"greekCacheParams",type:"tuple"},{components:[{internalType:"uint256",name:"ivGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"skewGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"shortVolShock",type:"uint256"},{internalType:"uint256",name:"shortPostCutoffVolShock",type:"uint256"},{internalType:"uint256",name:"longVolShock",type:"uint256"},{internalType:"uint256",name:"longPostCutoffVolShock",type:"uint256"},{internalType:"uint256",name:"liquidateVolShock",type:"uint256"},{internalType:"uint256",name:"liquidatePostCutoffVolShock",type:"uint256"},{internalType:"uint256",name:"shortSpotMin",type:"uint256"},{internalType:"uint256",name:"liquidateSpotMin",type:"uint256"}],internalType:"struct OptionGreekCache.ForceCloseParameters",name:"forceCloseParams",type:"tuple"},{components:[{internalType:"uint256",name:"minStaticQuoteCollateral",type:"uint256"},{internalType:"uint256",name:"minStaticBaseCollateral",type:"uint256"},{internalType:"uint256",name:"shockVolA",type:"uint256"},{internalType:"uint256",name:"shockVolPointA",type:"uint256"},{internalType:"uint256",name:"shockVolB",type:"uint256"},{internalType:"uint256",name:"shockVolPointB",type:"uint256"},{internalType:"uint256",name:"callSpotPriceShock",type:"uint256"},{internalType:"uint256",name:"putSpotPriceShock",type:"uint256"}],internalType:"struct OptionGreekCache.MinCollateralParameters",name:"minCollatParams",type:"tuple"},{components:[{internalType:"uint256",name:"optionPriceFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"optionPriceFee1xPoint",type:"uint256"},{internalType:"uint256",name:"optionPriceFee2xPoint",type:"uint256"},{internalType:"uint256",name:"spotPriceFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"spotPriceFee1xPoint",type:"uint256"},{internalType:"uint256",name:"spotPriceFee2xPoint",type:"uint256"},{internalType:"uint256",name:"vegaFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"standardSize",type:"uint256"},{internalType:"uint256",name:"skewAdjustmentFactor",type:"uint256"}],internalType:"struct OptionMarketPricer.PricingParameters",name:"pricingParams",type:"tuple"},{components:[{internalType:"int256",name:"minDelta",type:"int256"},{internalType:"int256",name:"minForceCloseDelta",type:"int256"},{internalType:"uint256",name:"tradingCutoff",type:"uint256"},{internalType:"uint256",name:"minBaseIV",type:"uint256"},{internalType:"uint256",name:"maxBaseIV",type:"uint256"},{internalType:"uint256",name:"minSkew",type:"uint256"},{internalType:"uint256",name:"maxSkew",type:"uint256"},{internalType:"uint256",name:"minVol",type:"uint256"},{internalType:"uint256",name:"maxVol",type:"uint256"},{internalType:"uint256",name:"absMinSkew",type:"uint256"},{internalType:"uint256",name:"absMaxSkew",type:"uint256"},{internalType:"bool",name:"capSkewsToAbs",type:"bool"}],internalType:"struct OptionMarketPricer.TradeLimitParameters",name:"tradeLimitParams",type:"tuple"},{components:[{internalType:"uint256",name:"defaultVarianceFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"forceCloseVarianceFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"skewAdjustmentCoefficient",type:"uint256"},{internalType:"uint256",name:"referenceSkew",type:"uint256"},{internalType:"uint256",name:"minimumStaticSkewAdjustment",type:"uint256"},{internalType:"uint256",name:"vegaCoefficient",type:"uint256"},{internalType:"uint256",name:"minimumStaticVega",type:"uint256"},{internalType:"uint256",name:"ivVarianceCoefficient",type:"uint256"},{internalType:"uint256",name:"minimumStaticIvVariance",type:"uint256"}],internalType:"struct OptionMarketPricer.VarianceFeeParameters",name:"varianceFeeParams",type:"tuple"},{components:[{internalType:"uint256",name:"penaltyRatio",type:"uint256"},{internalType:"uint256",name:"liquidatorFeeRatio",type:"uint256"},{internalType:"uint256",name:"smFeeRatio",type:"uint256"},{internalType:"uint256",name:"minLiquidationFee",type:"uint256"}],internalType:"struct OptionToken.PartialCollateralParameters",name:"partialCollatParams",type:"tuple"},{components:[{internalType:"uint256",name:"interactionDelay",type:"uint256"},{internalType:"uint256",name:"hedgeCap",type:"uint256"}],internalType:"struct PoolHedger.PoolHedgerParameters",name:"poolHedgerParams",type:"tuple"}],internalType:"struct OptionMarketViewer.MarketParameters",name:"marketParameters",type:"tuple"},{components:[{internalType:"uint256",name:"freeLiquidity",type:"uint256"},{internalType:"uint256",name:"burnableLiquidity",type:"uint256"},{internalType:"uint256",name:"usedCollatLiquidity",type:"uint256"},{internalType:"uint256",name:"pendingDeltaLiquidity",type:"uint256"},{internalType:"uint256",name:"usedDeltaLiquidity",type:"uint256"},{internalType:"uint256",name:"NAV",type:"uint256"}],internalType:"struct LiquidityPool.Liquidity",name:"liquidity",type:"tuple"},{components:[{internalType:"int256",name:"netDelta",type:"int256"},{internalType:"int256",name:"netStdVega",type:"int256"},{internalType:"int256",name:"netOptionValue",type:"int256"}],internalType:"struct OptionGreekCache.NetGreeks",name:"globalNetGreeks",type:"tuple"},{components:[{internalType:"uint256",name:"spotPrice",type:"uint256"},{internalType:"bytes32",name:"quoteKey",type:"bytes32"},{internalType:"bytes32",name:"baseKey",type:"bytes32"},{internalType:"uint256",name:"quoteBaseFeeRate",type:"uint256"},{internalType:"uint256",name:"baseQuoteFeeRate",type:"uint256"}],internalType:"struct SynthetixAdapter.ExchangeParams",name:"exchangeParams",type:"tuple"}],internalType:"struct OptionMarketViewer.MarketView[]",name:"markets",type:"tuple[]"}],internalType:"struct OptionMarketViewer.MarketsView",name:"marketsView",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"getOwnerPositions",outputs:[{components:[{internalType:"address",name:"market",type:"address"},{components:[{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"uint256",name:"strikeId",type:"uint256"},{internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"collateral",type:"uint256"},{internalType:"enum OptionToken.PositionState",name:"state",type:"uint8"}],internalType:"struct OptionToken.OptionPosition[]",name:"positions",type:"tuple[]"}],internalType:"struct OptionMarketViewer.MarketOptionPositions[]",name:"",type:"tuple[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract OptionMarket",name:"market",type:"address"},{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"start",type:"uint256"},{internalType:"uint256",name:"limit",type:"uint256"}],name:"getOwnerPositionsInRange",outputs:[{components:[{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"uint256",name:"strikeId",type:"uint256"},{internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"collateral",type:"uint256"},{internalType:"enum OptionToken.PositionState",name:"state",type:"uint8"}],internalType:"struct OptionToken.OptionPosition[]",name:"",type:"tuple[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract SynthetixAdapter",name:"_synthetixAdapter",type:"address"}],name:"init",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"initialized",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract OptionMarket",name:"",type:"address"}],name:"marketAddresses",outputs:[{internalType:"contract LiquidityPool",name:"liquidityPool",type:"address"},{internalType:"contract LiquidityToken",name:"liquidityToken",type:"address"},{internalType:"contract OptionGreekCache",name:"greekCache",type:"address"},{internalType:"contract OptionMarket",name:"optionMarket",type:"address"},{internalType:"contract OptionMarketPricer",name:"optionMarketPricer",type:"address"},{internalType:"contract OptionToken",name:"optionToken",type:"address"},{internalType:"contract ShortCollateral",name:"shortCollateral",type:"address"},{internalType:"contract PoolHedger",name:"poolHedger",type:"address"},{internalType:"contract IERC20",name:"quoteAsset",type:"address"},{internalType:"contract IERC20",name:"baseAsset",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_owner",type:"address"}],name:"nominateNewOwner",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"nominatedOwner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"optionMarkets",outputs:[{internalType:"contract OptionMarket",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract OptionMarket",name:"market",type:"address"}],name:"removeMarket",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"synthetixAdapter",outputs:[{internalType:"contract SynthetixAdapter",name:"",type:"address"}],stateMutability:"view",type:"function"}],En=[{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"marketAddress",type:"address"}],name:"AllMarketsPaused",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"amountQuoteRequested",type:"uint256"},{internalType:"uint256",name:"baseToSpend",type:"uint256"},{internalType:"uint256",name:"baseLimit",type:"uint256"},{internalType:"uint256",name:"spotPrice",type:"uint256"},{internalType:"bytes32",name:"baseKey",type:"bytes32"},{internalType:"bytes32",name:"quoteKey",type:"bytes32"}],name:"BaseQuoteExchangeExceedsLimit",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"rewardAddress",type:"address"}],name:"InvalidRewardAddress",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"marketAddress",type:"address"}],name:"MarketIsPaused",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"nominatedOwner",type:"address"}],name:"OnlyNominatedOwner",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"owner",type:"address"}],name:"OnlyOwner",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"amountBaseRequested",type:"uint256"},{internalType:"uint256",name:"quoteToSpend",type:"uint256"},{internalType:"uint256",name:"quoteLimit",type:"uint256"},{internalType:"uint256",name:"spotPrice",type:"uint256"},{internalType:"bytes32",name:"quoteKey",type:"bytes32"},{internalType:"bytes32",name:"baseKey",type:"bytes32"}],name:"QuoteBaseExchangeExceedsLimit",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"spotPrice",type:"uint256"},{internalType:"bool",name:"invalid",type:"bool"}],name:"RateIsInvalid",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"bytes32",name:"fromKey",type:"bytes32"},{internalType:"bytes32",name:"toKey",type:"bytes32"},{internalType:"uint256",name:"amountSwapped",type:"uint256"},{internalType:"uint256",name:"amountReceived",type:"uint256"}],name:"ReceivedZeroFromExchange",type:"error"},{anonymous:!1,inputs:[{indexed:!1,internalType:"contract IAddressResolver",name:"addressResolver",type:"address"}],name:"AddressResolverSet",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"marketAddress",type:"address"},{indexed:!0,internalType:"address",name:"exchanger",type:"address"},{indexed:!1,internalType:"uint256",name:"baseSwapped",type:"uint256"},{indexed:!1,internalType:"uint256",name:"quoteReceived",type:"uint256"}],name:"BaseSwappedForQuote",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bool",name:"isPaused",type:"bool"}],name:"GlobalPausedSet",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"market",type:"address"},{indexed:!1,internalType:"bytes32",name:"quoteKey",type:"bytes32"},{indexed:!1,internalType:"bytes32",name:"baseKey",type:"bytes32"},{indexed:!1,internalType:"address",name:"rewardAddress",type:"address"},{indexed:!1,internalType:"bytes32",name:"trackingCode",type:"bytes32"}],name:"GlobalsSetForContract",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"contractAddress",type:"address"},{indexed:!1,internalType:"bool",name:"isPaused",type:"bool"}],name:"MarketPausedSet",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"oldOwner",type:"address"},{indexed:!1,internalType:"address",name:"newOwner",type:"address"}],name:"OwnerChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"newOwner",type:"address"}],name:"OwnerNominated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"marketAddress",type:"address"},{indexed:!0,internalType:"address",name:"exchanger",type:"address"},{indexed:!1,internalType:"uint256",name:"quoteSwapped",type:"uint256"},{indexed:!1,internalType:"uint256",name:"baseReceived",type:"uint256"}],name:"QuoteSwappedForBase",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"contract ISynthetix",name:"synthetix",type:"address"},{indexed:!1,internalType:"contract IExchanger",name:"exchanger",type:"address"},{indexed:!1,internalType:"contract IExchangeRates",name:"exchangeRates",type:"address"},{indexed:!1,internalType:"contract IDelegateApprovals",name:"delegateApprovals",type:"address"}],name:"SynthetixAddressesUpdated",type:"event"},{inputs:[],name:"acceptOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"addressResolver",outputs:[{internalType:"contract IAddressResolver",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"baseKey",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"delegateApprovals",outputs:[{internalType:"contract IDelegateApprovals",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{components:[{internalType:"uint256",name:"spotPrice",type:"uint256"},{internalType:"bytes32",name:"quoteKey",type:"bytes32"},{internalType:"bytes32",name:"baseKey",type:"bytes32"},{internalType:"uint256",name:"quoteBaseFeeRate",type:"uint256"},{internalType:"uint256",name:"baseQuoteFeeRate",type:"uint256"}],internalType:"struct SynthetixAdapter.ExchangeParams",name:"exchangeParams",type:"tuple"},{internalType:"uint256",name:"amountBase",type:"uint256"}],name:"estimateExchangeToExactBase",outputs:[{internalType:"uint256",name:"quoteNeeded",type:"uint256"}],stateMutability:"pure",type:"function"},{inputs:[{components:[{internalType:"uint256",name:"spotPrice",type:"uint256"},{internalType:"bytes32",name:"quoteKey",type:"bytes32"},{internalType:"bytes32",name:"baseKey",type:"bytes32"},{internalType:"uint256",name:"quoteBaseFeeRate",type:"uint256"},{internalType:"uint256",name:"baseQuoteFeeRate",type:"uint256"}],internalType:"struct SynthetixAdapter.ExchangeParams",name:"exchangeParams",type:"tuple"},{internalType:"uint256",name:"amountQuote",type:"uint256"}],name:"estimateExchangeToExactQuote",outputs:[{internalType:"uint256",name:"baseNeeded",type:"uint256"}],stateMutability:"pure",type:"function"},{inputs:[{internalType:"address",name:"optionMarket",type:"address"},{internalType:"uint256",name:"amountBase",type:"uint256"}],name:"exchangeFromExactBase",outputs:[{internalType:"uint256",name:"quoteReceived",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"optionMarket",type:"address"},{internalType:"uint256",name:"amountQuote",type:"uint256"}],name:"exchangeFromExactQuote",outputs:[{internalType:"uint256",name:"baseReceived",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"exchangeRates",outputs:[{internalType:"contract IExchangeRates",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{components:[{internalType:"uint256",name:"spotPrice",type:"uint256"},{internalType:"bytes32",name:"quoteKey",type:"bytes32"},{internalType:"bytes32",name:"baseKey",type:"bytes32"},{internalType:"uint256",name:"quoteBaseFeeRate",type:"uint256"},{internalType:"uint256",name:"baseQuoteFeeRate",type:"uint256"}],internalType:"struct SynthetixAdapter.ExchangeParams",name:"exchangeParams",type:"tuple"},{internalType:"address",name:"optionMarket",type:"address"},{internalType:"uint256",name:"amountBase",type:"uint256"}],name:"exchangeToExactBase",outputs:[{internalType:"uint256",name:"quoteSpent",type:"uint256"},{internalType:"uint256",name:"baseReceived",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"uint256",name:"spotPrice",type:"uint256"},{internalType:"bytes32",name:"quoteKey",type:"bytes32"},{internalType:"bytes32",name:"baseKey",type:"bytes32"},{internalType:"uint256",name:"quoteBaseFeeRate",type:"uint256"},{internalType:"uint256",name:"baseQuoteFeeRate",type:"uint256"}],internalType:"struct SynthetixAdapter.ExchangeParams",name:"exchangeParams",type:"tuple"},{internalType:"address",name:"optionMarket",type:"address"},{internalType:"uint256",name:"amountBase",type:"uint256"},{internalType:"uint256",name:"quoteLimit",type:"uint256"}],name:"exchangeToExactBaseWithLimit",outputs:[{internalType:"uint256",name:"quoteSpent",type:"uint256"},{internalType:"uint256",name:"baseReceived",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"uint256",name:"spotPrice",type:"uint256"},{internalType:"bytes32",name:"quoteKey",type:"bytes32"},{internalType:"bytes32",name:"baseKey",type:"bytes32"},{internalType:"uint256",name:"quoteBaseFeeRate",type:"uint256"},{internalType:"uint256",name:"baseQuoteFeeRate",type:"uint256"}],internalType:"struct SynthetixAdapter.ExchangeParams",name:"exchangeParams",type:"tuple"},{internalType:"address",name:"optionMarket",type:"address"},{internalType:"uint256",name:"amountQuote",type:"uint256"}],name:"exchangeToExactQuote",outputs:[{internalType:"uint256",name:"baseSpent",type:"uint256"},{internalType:"uint256",name:"quoteReceived",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"uint256",name:"spotPrice",type:"uint256"},{internalType:"bytes32",name:"quoteKey",type:"bytes32"},{internalType:"bytes32",name:"baseKey",type:"bytes32"},{internalType:"uint256",name:"quoteBaseFeeRate",type:"uint256"},{internalType:"uint256",name:"baseQuoteFeeRate",type:"uint256"}],internalType:"struct SynthetixAdapter.ExchangeParams",name:"exchangeParams",type:"tuple"},{internalType:"address",name:"optionMarket",type:"address"},{internalType:"uint256",name:"amountQuote",type:"uint256"},{internalType:"uint256",name:"baseLimit",type:"uint256"}],name:"exchangeToExactQuoteWithLimit",outputs:[{internalType:"uint256",name:"baseSpent",type:"uint256"},{internalType:"uint256",name:"quoteReceived",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"exchanger",outputs:[{internalType:"contract IExchanger",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"optionMarket",type:"address"}],name:"getExchangeParams",outputs:[{components:[{internalType:"uint256",name:"spotPrice",type:"uint256"},{internalType:"bytes32",name:"quoteKey",type:"bytes32"},{internalType:"bytes32",name:"baseKey",type:"bytes32"},{internalType:"uint256",name:"quoteBaseFeeRate",type:"uint256"},{internalType:"uint256",name:"baseQuoteFeeRate",type:"uint256"}],internalType:"struct SynthetixAdapter.ExchangeParams",name:"exchangeParams",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"to",type:"bytes32"}],name:"getSpotPrice",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_contractAddress",type:"address"}],name:"getSpotPriceForMarket",outputs:[{internalType:"uint256",name:"spotPrice",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"isGlobalPaused",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"isMarketPaused",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_owner",type:"address"}],name:"nominateNewOwner",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"nominatedOwner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"quoteKey",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"optionMarket",type:"address"}],name:"requireNotGlobalPaused",outputs:[],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"rewardAddress",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract IAddressResolver",name:"_addressResolver",type:"address"}],name:"setAddressResolver",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bool",name:"_isPaused",type:"bool"}],name:"setGlobalPaused",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_contractAddress",type:"address"},{internalType:"bytes32",name:"_quoteKey",type:"bytes32"},{internalType:"bytes32",name:"_baseKey",type:"bytes32"},{internalType:"address",name:"_rewardAddress",type:"address"},{internalType:"bytes32",name:"_trackingCode",type:"bytes32"}],name:"setGlobalsForContract",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_contractAddress",type:"address"},{internalType:"bool",name:"_isPaused",type:"bool"}],name:"setMarketPaused",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"synthetix",outputs:[{internalType:"contract ISynthetix",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"trackingCode",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"updateSynthetixAddresses",outputs:[],stateMutability:"nonpayable",type:"function"}],_n=[{inputs:[],name:"drip",outputs:[],stateMutability:"nonpayable",type:"function"}],Rn="0xEAf788AD8abd9C98bA05F6802a62B8DbC673D76B",Nn="0xbfa31380ED380cEb325153eA08f296A45A489108",Gn="0xF5A0442D4753cA1Ea36427ec071aa5E786dA5916",Hn="",Un={OptionMarketViewer:Rn,ExchangeAdapter:Nn,LyraRegistry:Gn,TestFaucet:Hn},Qn="0x9114B0a3D10D5f267b1FA21A0333e094d900f2f5",Wn="0xE3E2061d66ea546dD9CAD1fA171d0173A3Ab4b1E",$n="0x1C2Ca80c108ff73E281B20556afEB52ABa7a56B1",zn="0xfDd5592e9d657950ACBcCA69A51ecb3e3Bb2F1e7",Kn={OptionMarketViewer:Qn,LyraRegistry:Wn,ExchangeAdapter:$n,TestFaucet:zn},jn=[{inputs:[{internalType:"address",name:"thrower",type:"address"}],name:"AllMarketsPaused",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"contract IERC20Decimals",name:"asset",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"receiver",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"AssetTransferFailed",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"amountQuoteRequested",type:"uint256"},{internalType:"uint256",name:"baseToSpend",type:"uint256"},{internalType:"uint256",name:"baseLimit",type:"uint256"},{internalType:"uint256",name:"spotPrice",type:"uint256"},{internalType:"bytes32",name:"baseKey",type:"bytes32"},{internalType:"bytes32",name:"quoteKey",type:"bytes32"}],name:"BaseQuoteExchangeExceedsLimit",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"amountOut",type:"uint256"},{internalType:"uint256",name:"minAcceptedOut",type:"uint256"},{internalType:"contract IERC20Decimals",name:"tokenIn",type:"address"},{internalType:"contract IERC20Decimals",name:"tokenOut",type:"address"},{internalType:"address",name:"receiver",type:"address"}],name:"InsufficientSwap",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"inputAddress",type:"address"}],name:"InvalidAddress",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"int256",name:"answer",type:"int256"},{internalType:"uint256",name:"updatedAt",type:"uint256"},{internalType:"uint256",name:"blockTimestamp",type:"uint256"}],name:"InvalidAnswer",type:"error"},{inputs:[{components:[{internalType:"uint256",name:"staticSwapFeeEstimate",type:"uint256"},{internalType:"uint256",name:"gmxUsageThreshold",type:"uint256"},{internalType:"uint256",name:"priceVarianceCBPercent",type:"uint256"},{internalType:"uint256",name:"chainlinkStalenessCheck",type:"uint256"}],internalType:"struct GMXAdapter.MarketPricingParams",name:"params",type:"tuple"}],name:"InvalidMarketPricingParams",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"contract AggregatorV2V3Interface",name:"inputAddress",type:"address"}],name:"InvalidPriceFeedAddress",type:"error"},{inputs:[],name:"InvalidRiskFreeRate",type:"error"},{inputs:[],name:"InvalidStaticSwapFeeEstimate",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"marketAddress",type:"address"}],name:"MarketIsPaused",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"}],name:"NotImplemented",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"nominatedOwner",type:"address"}],name:"OnlyNominatedOwner",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"owner",type:"address"}],name:"OnlyOwner",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"minPrice",type:"uint256"},{internalType:"uint256",name:"maxPrice",type:"uint256"},{internalType:"uint256",name:"clPrice",type:"uint256"},{internalType:"uint256",name:"priceVarianceCBPercent",type:"uint256"}],name:"PriceVarianceTooHigh",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"amountBaseRequested",type:"uint256"},{internalType:"uint256",name:"quoteToSpend",type:"uint256"},{internalType:"uint256",name:"quoteLimit",type:"uint256"},{internalType:"uint256",name:"spotPrice",type:"uint256"},{internalType:"bytes32",name:"quoteKey",type:"bytes32"},{internalType:"bytes32",name:"baseKey",type:"bytes32"}],name:"QuoteBaseExchangeExceedsLimit",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"contract IERC20Decimals",name:"asset",type:"address"},{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"TransferFailed",type:"error"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"marketAddress",type:"address"},{indexed:!0,internalType:"address",name:"exchanger",type:"address"},{indexed:!1,internalType:"uint256",name:"baseSwapped",type:"uint256"},{indexed:!1,internalType:"uint256",name:"quoteReceived",type:"uint256"}],name:"BaseSwappedForQuote",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"asset",type:"address"},{indexed:!0,internalType:"address",name:"aggregator",type:"address"}],name:"ChainlinkAggregatorUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"vault",type:"address"}],name:"GMXVaultAddressUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bool",name:"isPaused",type:"bool"}],name:"GlobalPausedSet",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"contractAddress",type:"address"},{indexed:!1,internalType:"bool",name:"isPaused",type:"bool"}],name:"MarketPausedSet",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"optionMarket",type:"address"},{components:[{internalType:"uint256",name:"staticSwapFeeEstimate",type:"uint256"},{internalType:"uint256",name:"gmxUsageThreshold",type:"uint256"},{internalType:"uint256",name:"priceVarianceCBPercent",type:"uint256"},{internalType:"uint256",name:"chainlinkStalenessCheck",type:"uint256"}],indexed:!1,internalType:"struct GMXAdapter.MarketPricingParams",name:"marketPricingParams",type:"tuple"}],name:"MarketPricingParamsUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"oldOwner",type:"address"},{indexed:!1,internalType:"address",name:"newOwner",type:"address"}],name:"OwnerChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"newOwner",type:"address"}],name:"OwnerNominated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"marketAddress",type:"address"},{indexed:!0,internalType:"address",name:"exchanger",type:"address"},{indexed:!1,internalType:"uint256",name:"quoteSwapped",type:"uint256"},{indexed:!1,internalType:"uint256",name:"baseReceived",type:"uint256"}],name:"QuoteSwappedForBase",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"optionMarket",type:"address"},{indexed:!1,internalType:"int256",name:"newRate",type:"int256"}],name:"RiskFreeRateUpdated",type:"event"},{inputs:[],name:"GMX_PRICE_PRECISION",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"acceptOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"chainlinkFeeds",outputs:[{internalType:"contract AggregatorV2V3Interface",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_optionMarket",type:"address"},{internalType:"uint256",name:"_amountBase",type:"uint256"}],name:"estimateExchangeToExactBase",outputs:[{internalType:"uint256",name:"quoteNeeded",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_optionMarket",type:"address"},{internalType:"uint256",name:"_amountQuote",type:"uint256"}],name:"estimateExchangeToExactQuote",outputs:[{internalType:"uint256",name:"baseNeeded",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_optionMarket",type:"address"},{internalType:"uint256",name:"_amountBase",type:"uint256"}],name:"exchangeFromExactBase",outputs:[{internalType:"uint256",name:"quoteReceived",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"optionMarket",type:"address"},{internalType:"uint256",name:"amountQuote",type:"uint256"}],name:"exchangeFromExactQuote",outputs:[{internalType:"uint256",name:"baseReceived",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"optionMarket",type:"address"},{internalType:"uint256",name:"amountBase",type:"uint256"}],name:"exchangeToExactBase",outputs:[{internalType:"uint256",name:"quoteSpent",type:"uint256"},{internalType:"uint256",name:"baseReceived",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_optionMarket",type:"address"},{internalType:"uint256",name:"_amountBase",type:"uint256"},{internalType:"uint256",name:"_quoteLimit",type:"uint256"}],name:"exchangeToExactBaseWithLimit",outputs:[{internalType:"uint256",name:"quoteSpent",type:"uint256"},{internalType:"uint256",name:"baseReceived",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"optionMarket",type:"address"},{internalType:"uint256",name:"amountQuote",type:"uint256"}],name:"exchangeToExactQuote",outputs:[{internalType:"uint256",name:"baseSpent",type:"uint256"},{internalType:"uint256",name:"quoteReceived",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"optionMarket",type:"address"},{internalType:"uint256",name:"amountQuote",type:"uint256"},{internalType:"uint256",name:"baseLimit",type:"uint256"}],name:"exchangeToExactQuoteWithLimit",outputs:[{internalType:"uint256",name:"quoteSpent",type:"uint256"},{internalType:"uint256",name:"baseReceived",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_optionMarket",type:"address"}],name:"getAdapterState",outputs:[{components:[{internalType:"contract AggregatorV2V3Interface",name:"chainlinkFeed",type:"address"},{components:[{internalType:"uint256",name:"staticSwapFeeEstimate",type:"uint256"},{internalType:"uint256",name:"gmxUsageThreshold",type:"uint256"},{internalType:"uint256",name:"priceVarianceCBPercent",type:"uint256"},{internalType:"uint256",name:"chainlinkStalenessCheck",type:"uint256"}],internalType:"struct GMXAdapter.MarketPricingParams",name:"marketPricingParams",type:"tuple"},{internalType:"int256",name:"rateAndCarry",type:"int256"},{internalType:"uint256",name:"clPrice",type:"uint256"},{internalType:"uint256",name:"gmxMinPrice",type:"uint256"},{internalType:"uint256",name:"gmxMaxPrice",type:"uint256"}],internalType:"struct GMXAdapter.GMXAdapterState",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"optionMarket",type:"address"},{internalType:"uint256",name:"",type:"uint256"}],name:"getSettlementPriceForMarket",outputs:[{internalType:"uint256",name:"spotPrice",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"optionMarket",type:"address"},{internalType:"enum BaseExchangeAdapter.PriceType",name:"pricing",type:"uint8"}],name:"getSpotPriceForMarket",outputs:[{internalType:"uint256",name:"spotPrice",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"isGlobalPaused",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"isMarketPaused",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"marketPricingParams",outputs:[{internalType:"uint256",name:"staticSwapFeeEstimate",type:"uint256"},{internalType:"uint256",name:"gmxUsageThreshold",type:"uint256"},{internalType:"uint256",name:"priceVarianceCBPercent",type:"uint256"},{internalType:"uint256",name:"chainlinkStalenessCheck",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_owner",type:"address"}],name:"nominateNewOwner",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"nominatedOwner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"rateAndCarry",outputs:[{internalType:"int256",name:"",type:"int256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"optionMarket",type:"address"}],name:"requireNotGlobalPaused",outputs:[],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"optionMarket",type:"address"}],name:"requireNotMarketPaused",outputs:[],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_asset",type:"address"},{internalType:"contract AggregatorV2V3Interface",name:"_assetPriceFeed",type:"address"}],name:"setChainlinkFeed",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bool",name:"isPaused",type:"bool"}],name:"setGlobalPaused",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"optionMarket",type:"address"},{internalType:"bool",name:"isPaused",type:"bool"}],name:"setMarketPaused",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_optionMarket",type:"address"},{components:[{internalType:"uint256",name:"staticSwapFeeEstimate",type:"uint256"},{internalType:"uint256",name:"gmxUsageThreshold",type:"uint256"},{internalType:"uint256",name:"priceVarianceCBPercent",type:"uint256"},{internalType:"uint256",name:"chainlinkStalenessCheck",type:"uint256"}],internalType:"struct GMXAdapter.MarketPricingParams",name:"_marketPricingParams",type:"tuple"}],name:"setMarketPricingParams",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_optionMarket",type:"address"},{internalType:"int256",name:"_rate",type:"int256"}],name:"setRiskFreeRate",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract IVault",name:"_vault",type:"address"}],name:"setVaultContract",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"vault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"}],Xn=[{inputs:[],stateMutability:"nonpayable",type:"constructor"},{inputs:[{internalType:"bytes32",name:"contractName",type:"bytes32"}],name:"NonExistentGlobalContract",type:"error"},{inputs:[{internalType:"address",name:"optionMarket",type:"address"}],name:"NonExistentMarket",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"nominatedOwner",type:"address"}],name:"OnlyNominatedOwner",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"owner",type:"address"}],name:"OnlyOwner",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"market",type:"address"}],name:"RemovingInvalidMarket",type:"error"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"name",type:"bytes32"},{indexed:!1,internalType:"address",name:"addr",type:"address"}],name:"GlobalAddressUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"contract OptionMarket",name:"market",type:"address"}],name:"MarketRemoved",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"contract OptionMarket",name:"optionMarket",type:"address"},{components:[{internalType:"contract LiquidityPool",name:"liquidityPool",type:"address"},{internalType:"contract LiquidityToken",name:"liquidityToken",type:"address"},{internalType:"contract OptionGreekCache",name:"greekCache",type:"address"},{internalType:"contract OptionMarket",name:"optionMarket",type:"address"},{internalType:"contract OptionMarketPricer",name:"optionMarketPricer",type:"address"},{internalType:"contract OptionToken",name:"optionToken",type:"address"},{internalType:"contract PoolHedger",name:"poolHedger",type:"address"},{internalType:"contract ShortCollateral",name:"shortCollateral",type:"address"},{internalType:"contract GWAVOracle",name:"gwavOracle",type:"address"},{internalType:"contract IERC20",name:"quoteAsset",type:"address"},{internalType:"contract IERC20",name:"baseAsset",type:"address"}],indexed:!1,internalType:"struct LyraRegistry.OptionMarketAddresses",name:"market",type:"tuple"}],name:"MarketUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"oldOwner",type:"address"},{indexed:!1,internalType:"address",name:"newOwner",type:"address"}],name:"OwnerChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"newOwner",type:"address"}],name:"OwnerNominated",type:"event"},{inputs:[],name:"acceptOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"contract LiquidityPool",name:"liquidityPool",type:"address"},{internalType:"contract LiquidityToken",name:"liquidityToken",type:"address"},{internalType:"contract OptionGreekCache",name:"greekCache",type:"address"},{internalType:"contract OptionMarket",name:"optionMarket",type:"address"},{internalType:"contract OptionMarketPricer",name:"optionMarketPricer",type:"address"},{internalType:"contract OptionToken",name:"optionToken",type:"address"},{internalType:"contract PoolHedger",name:"poolHedger",type:"address"},{internalType:"contract ShortCollateral",name:"shortCollateral",type:"address"},{internalType:"contract GWAVOracle",name:"gwavOracle",type:"address"},{internalType:"contract IERC20",name:"quoteAsset",type:"address"},{internalType:"contract IERC20",name:"baseAsset",type:"address"}],internalType:"struct LyraRegistry.OptionMarketAddresses",name:"newMarketAddresses",type:"tuple"}],name:"addMarket",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"contractName",type:"bytes32"}],name:"getGlobalAddress",outputs:[{internalType:"address",name:"globalContract",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract OptionMarket",name:"optionMarket",type:"address"}],name:"getMarketAddresses",outputs:[{components:[{internalType:"contract LiquidityPool",name:"liquidityPool",type:"address"},{internalType:"contract LiquidityToken",name:"liquidityToken",type:"address"},{internalType:"contract OptionGreekCache",name:"greekCache",type:"address"},{internalType:"contract OptionMarket",name:"optionMarket",type:"address"},{internalType:"contract OptionMarketPricer",name:"optionMarketPricer",type:"address"},{internalType:"contract OptionToken",name:"optionToken",type:"address"},{internalType:"contract PoolHedger",name:"poolHedger",type:"address"},{internalType:"contract ShortCollateral",name:"shortCollateral",type:"address"},{internalType:"contract GWAVOracle",name:"gwavOracle",type:"address"},{internalType:"contract IERC20",name:"quoteAsset",type:"address"},{internalType:"contract IERC20",name:"baseAsset",type:"address"}],internalType:"struct LyraRegistry.OptionMarketAddresses",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"",type:"bytes32"}],name:"globalAddresses",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract OptionMarket",name:"",type:"address"}],name:"marketAddresses",outputs:[{internalType:"contract LiquidityPool",name:"liquidityPool",type:"address"},{internalType:"contract LiquidityToken",name:"liquidityToken",type:"address"},{internalType:"contract OptionGreekCache",name:"greekCache",type:"address"},{internalType:"contract OptionMarket",name:"optionMarket",type:"address"},{internalType:"contract OptionMarketPricer",name:"optionMarketPricer",type:"address"},{internalType:"contract OptionToken",name:"optionToken",type:"address"},{internalType:"contract PoolHedger",name:"poolHedger",type:"address"},{internalType:"contract ShortCollateral",name:"shortCollateral",type:"address"},{internalType:"contract GWAVOracle",name:"gwavOracle",type:"address"},{internalType:"contract IERC20",name:"quoteAsset",type:"address"},{internalType:"contract IERC20",name:"baseAsset",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_owner",type:"address"}],name:"nominateNewOwner",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"nominatedOwner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"optionMarkets",outputs:[{internalType:"contract OptionMarket",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract OptionMarket",name:"market",type:"address"}],name:"removeMarket",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32[]",name:"names",type:"bytes32[]"},{internalType:"address[]",name:"addresses",type:"address[]"}],name:"updateGlobalAddresses",outputs:[],stateMutability:"nonpayable",type:"function"}],Yn=[{inputs:[],stateMutability:"nonpayable",type:"constructor"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"nominatedOwner",type:"address"}],name:"OnlyNominatedOwner",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"owner",type:"address"}],name:"OnlyOwner",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"market",type:"address"}],name:"RemovingInvalidMarket",type:"error"},{anonymous:!1,inputs:[{components:[{internalType:"contract LiquidityPool",name:"liquidityPool",type:"address"},{internalType:"contract LiquidityToken",name:"liquidityToken",type:"address"},{internalType:"contract OptionGreekCache",name:"greekCache",type:"address"},{internalType:"contract OptionMarket",name:"optionMarket",type:"address"},{internalType:"contract OptionMarketPricer",name:"optionMarketPricer",type:"address"},{internalType:"contract OptionToken",name:"optionToken",type:"address"},{internalType:"contract ShortCollateral",name:"shortCollateral",type:"address"},{internalType:"contract PoolHedger",name:"poolHedger",type:"address"},{internalType:"contract IERC20Decimals",name:"quoteAsset",type:"address"},{internalType:"contract IERC20Decimals",name:"baseAsset",type:"address"}],indexed:!1,internalType:"struct OptionMarketViewer.OptionMarketAddresses",name:"market",type:"tuple"}],name:"MarketAdded",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"contract OptionMarket",name:"market",type:"address"}],name:"MarketRemoved",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"oldOwner",type:"address"},{indexed:!1,internalType:"address",name:"newOwner",type:"address"}],name:"OwnerChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"newOwner",type:"address"}],name:"OwnerNominated",type:"event"},{inputs:[],name:"acceptOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"contract LiquidityPool",name:"liquidityPool",type:"address"},{internalType:"contract LiquidityToken",name:"liquidityToken",type:"address"},{internalType:"contract OptionGreekCache",name:"greekCache",type:"address"},{internalType:"contract OptionMarket",name:"optionMarket",type:"address"},{internalType:"contract OptionMarketPricer",name:"optionMarketPricer",type:"address"},{internalType:"contract OptionToken",name:"optionToken",type:"address"},{internalType:"contract ShortCollateral",name:"shortCollateral",type:"address"},{internalType:"contract PoolHedger",name:"poolHedger",type:"address"},{internalType:"contract IERC20Decimals",name:"quoteAsset",type:"address"},{internalType:"contract IERC20Decimals",name:"baseAsset",type:"address"}],internalType:"struct OptionMarketViewer.OptionMarketAddresses",name:"newMarketAddresses",type:"tuple"}],name:"addMarket",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"exchangeAdapter",outputs:[{internalType:"contract BaseExchangeAdapter",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract OptionMarket",name:"market",type:"address"},{internalType:"uint256",name:"boardId",type:"uint256"}],name:"getBoard",outputs:[{components:[{internalType:"address",name:"market",type:"address"},{internalType:"uint256",name:"boardId",type:"uint256"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"baseIv",type:"uint256"},{internalType:"uint256",name:"priceAtExpiry",type:"uint256"},{internalType:"bool",name:"isPaused",type:"bool"},{internalType:"uint256",name:"varianceGwavIv",type:"uint256"},{internalType:"uint256",name:"forceCloseGwavIv",type:"uint256"},{internalType:"uint256",name:"longScaleFactor",type:"uint256"},{components:[{internalType:"int256",name:"netDelta",type:"int256"},{internalType:"int256",name:"netStdVega",type:"int256"},{internalType:"int256",name:"netOptionValue",type:"int256"}],internalType:"struct OptionGreekCache.NetGreeks",name:"netGreeks",type:"tuple"},{components:[{internalType:"uint256",name:"strikeId",type:"uint256"},{internalType:"uint256",name:"boardId",type:"uint256"},{internalType:"uint256",name:"strikePrice",type:"uint256"},{internalType:"uint256",name:"skew",type:"uint256"},{internalType:"uint256",name:"forceCloseSkew",type:"uint256"},{components:[{internalType:"int256",name:"callDelta",type:"int256"},{internalType:"int256",name:"putDelta",type:"int256"},{internalType:"uint256",name:"stdVega",type:"uint256"},{internalType:"uint256",name:"callPrice",type:"uint256"},{internalType:"uint256",name:"putPrice",type:"uint256"}],internalType:"struct OptionGreekCache.StrikeGreeks",name:"cachedGreeks",type:"tuple"},{internalType:"uint256",name:"baseReturnedRatio",type:"uint256"},{internalType:"uint256",name:"longCallOpenInterest",type:"uint256"},{internalType:"uint256",name:"longPutOpenInterest",type:"uint256"},{internalType:"uint256",name:"shortCallBaseOpenInterest",type:"uint256"},{internalType:"uint256",name:"shortCallQuoteOpenInterest",type:"uint256"},{internalType:"uint256",name:"shortPutOpenInterest",type:"uint256"}],internalType:"struct OptionMarketViewer.StrikeView[]",name:"strikes",type:"tuple[]"}],internalType:"struct OptionMarketViewer.BoardView",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"string",name:"baseSymbol",type:"string"},{internalType:"uint256",name:"boardId",type:"uint256"}],name:"getBoardForBase",outputs:[{components:[{internalType:"address",name:"market",type:"address"},{internalType:"uint256",name:"boardId",type:"uint256"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"baseIv",type:"uint256"},{internalType:"uint256",name:"priceAtExpiry",type:"uint256"},{internalType:"bool",name:"isPaused",type:"bool"},{internalType:"uint256",name:"varianceGwavIv",type:"uint256"},{internalType:"uint256",name:"forceCloseGwavIv",type:"uint256"},{internalType:"uint256",name:"longScaleFactor",type:"uint256"},{components:[{internalType:"int256",name:"netDelta",type:"int256"},{internalType:"int256",name:"netStdVega",type:"int256"},{internalType:"int256",name:"netOptionValue",type:"int256"}],internalType:"struct OptionGreekCache.NetGreeks",name:"netGreeks",type:"tuple"},{components:[{internalType:"uint256",name:"strikeId",type:"uint256"},{internalType:"uint256",name:"boardId",type:"uint256"},{internalType:"uint256",name:"strikePrice",type:"uint256"},{internalType:"uint256",name:"skew",type:"uint256"},{internalType:"uint256",name:"forceCloseSkew",type:"uint256"},{components:[{internalType:"int256",name:"callDelta",type:"int256"},{internalType:"int256",name:"putDelta",type:"int256"},{internalType:"uint256",name:"stdVega",type:"uint256"},{internalType:"uint256",name:"callPrice",type:"uint256"},{internalType:"uint256",name:"putPrice",type:"uint256"}],internalType:"struct OptionGreekCache.StrikeGreeks",name:"cachedGreeks",type:"tuple"},{internalType:"uint256",name:"baseReturnedRatio",type:"uint256"},{internalType:"uint256",name:"longCallOpenInterest",type:"uint256"},{internalType:"uint256",name:"longPutOpenInterest",type:"uint256"},{internalType:"uint256",name:"shortCallBaseOpenInterest",type:"uint256"},{internalType:"uint256",name:"shortCallQuoteOpenInterest",type:"uint256"},{internalType:"uint256",name:"shortPutOpenInterest",type:"uint256"}],internalType:"struct OptionMarketViewer.StrikeView[]",name:"strikes",type:"tuple[]"}],internalType:"struct OptionMarketViewer.BoardView",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract OptionMarket",name:"market",type:"address"},{internalType:"uint256",name:"strikeId",type:"uint256"}],name:"getBoardForStrikeId",outputs:[{components:[{internalType:"address",name:"market",type:"address"},{internalType:"uint256",name:"boardId",type:"uint256"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"baseIv",type:"uint256"},{internalType:"uint256",name:"priceAtExpiry",type:"uint256"},{internalType:"bool",name:"isPaused",type:"bool"},{internalType:"uint256",name:"varianceGwavIv",type:"uint256"},{internalType:"uint256",name:"forceCloseGwavIv",type:"uint256"},{internalType:"uint256",name:"longScaleFactor",type:"uint256"},{components:[{internalType:"int256",name:"netDelta",type:"int256"},{internalType:"int256",name:"netStdVega",type:"int256"},{internalType:"int256",name:"netOptionValue",type:"int256"}],internalType:"struct OptionGreekCache.NetGreeks",name:"netGreeks",type:"tuple"},{components:[{internalType:"uint256",name:"strikeId",type:"uint256"},{internalType:"uint256",name:"boardId",type:"uint256"},{internalType:"uint256",name:"strikePrice",type:"uint256"},{internalType:"uint256",name:"skew",type:"uint256"},{internalType:"uint256",name:"forceCloseSkew",type:"uint256"},{components:[{internalType:"int256",name:"callDelta",type:"int256"},{internalType:"int256",name:"putDelta",type:"int256"},{internalType:"uint256",name:"stdVega",type:"uint256"},{internalType:"uint256",name:"callPrice",type:"uint256"},{internalType:"uint256",name:"putPrice",type:"uint256"}],internalType:"struct OptionGreekCache.StrikeGreeks",name:"cachedGreeks",type:"tuple"},{internalType:"uint256",name:"baseReturnedRatio",type:"uint256"},{internalType:"uint256",name:"longCallOpenInterest",type:"uint256"},{internalType:"uint256",name:"longPutOpenInterest",type:"uint256"},{internalType:"uint256",name:"shortCallBaseOpenInterest",type:"uint256"},{internalType:"uint256",name:"shortCallQuoteOpenInterest",type:"uint256"},{internalType:"uint256",name:"shortPutOpenInterest",type:"uint256"}],internalType:"struct OptionMarketViewer.StrikeView[]",name:"strikes",type:"tuple[]"}],internalType:"struct OptionMarketViewer.BoardView",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract OptionMarket",name:"market",type:"address"}],name:"getMarket",outputs:[{components:[{internalType:"bool",name:"isPaused",type:"bool"},{internalType:"uint256",name:"spotPrice",type:"uint256"},{internalType:"string",name:"quoteSymbol",type:"string"},{internalType:"uint256",name:"quoteDecimals",type:"uint256"},{internalType:"string",name:"baseSymbol",type:"string"},{internalType:"uint256",name:"baseDecimals",type:"uint256"},{components:[{internalType:"uint256",name:"freeLiquidity",type:"uint256"},{internalType:"uint256",name:"burnableLiquidity",type:"uint256"},{internalType:"uint256",name:"reservedCollatLiquidity",type:"uint256"},{internalType:"uint256",name:"pendingDeltaLiquidity",type:"uint256"},{internalType:"uint256",name:"usedDeltaLiquidity",type:"uint256"},{internalType:"uint256",name:"NAV",type:"uint256"},{internalType:"uint256",name:"longScaleFactor",type:"uint256"}],internalType:"struct LiquidityPool.Liquidity",name:"liquidity",type:"tuple"},{components:[{internalType:"contract LiquidityPool",name:"liquidityPool",type:"address"},{internalType:"contract LiquidityToken",name:"liquidityToken",type:"address"},{internalType:"contract OptionGreekCache",name:"greekCache",type:"address"},{internalType:"contract OptionMarket",name:"optionMarket",type:"address"},{internalType:"contract OptionMarketPricer",name:"optionMarketPricer",type:"address"},{internalType:"contract OptionToken",name:"optionToken",type:"address"},{internalType:"contract ShortCollateral",name:"shortCollateral",type:"address"},{internalType:"contract PoolHedger",name:"poolHedger",type:"address"},{internalType:"contract IERC20Decimals",name:"quoteAsset",type:"address"},{internalType:"contract IERC20Decimals",name:"baseAsset",type:"address"}],internalType:"struct OptionMarketViewer.OptionMarketAddresses",name:"marketAddresses",type:"tuple"},{components:[{components:[{internalType:"uint256",name:"maxBoardExpiry",type:"uint256"},{internalType:"address",name:"securityModule",type:"address"},{internalType:"uint256",name:"feePortionReserved",type:"uint256"},{internalType:"uint256",name:"staticBaseSettlementFee",type:"uint256"}],internalType:"struct OptionMarket.OptionMarketParameters",name:"optionMarketParams",type:"tuple"},{components:[{internalType:"uint256",name:"minDepositWithdraw",type:"uint256"},{internalType:"uint256",name:"depositDelay",type:"uint256"},{internalType:"uint256",name:"withdrawalDelay",type:"uint256"},{internalType:"uint256",name:"withdrawalFee",type:"uint256"},{internalType:"address",name:"guardianMultisig",type:"address"},{internalType:"uint256",name:"guardianDelay",type:"uint256"},{internalType:"uint256",name:"adjustmentNetScalingFactor",type:"uint256"},{internalType:"uint256",name:"callCollatScalingFactor",type:"uint256"},{internalType:"uint256",name:"putCollatScalingFactor",type:"uint256"}],internalType:"struct LiquidityPool.LiquidityPoolParameters",name:"lpParams",type:"tuple"},{components:[{internalType:"uint256",name:"liquidityCBThreshold",type:"uint256"},{internalType:"uint256",name:"liquidityCBTimeout",type:"uint256"},{internalType:"uint256",name:"ivVarianceCBThreshold",type:"uint256"},{internalType:"uint256",name:"skewVarianceCBThreshold",type:"uint256"},{internalType:"uint256",name:"ivVarianceCBTimeout",type:"uint256"},{internalType:"uint256",name:"skewVarianceCBTimeout",type:"uint256"},{internalType:"uint256",name:"boardSettlementCBTimeout",type:"uint256"},{internalType:"uint256",name:"contractAdjustmentCBTimeout",type:"uint256"}],internalType:"struct LiquidityPool.CircuitBreakerParameters",name:"cbParams",type:"tuple"},{components:[{internalType:"uint256",name:"maxStrikesPerBoard",type:"uint256"},{internalType:"uint256",name:"acceptableSpotPricePercentMove",type:"uint256"},{internalType:"uint256",name:"staleUpdateDuration",type:"uint256"},{internalType:"uint256",name:"varianceIvGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"varianceSkewGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"optionValueIvGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"optionValueSkewGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"gwavSkewFloor",type:"uint256"},{internalType:"uint256",name:"gwavSkewCap",type:"uint256"}],internalType:"struct OptionGreekCache.GreekCacheParameters",name:"greekCacheParams",type:"tuple"},{components:[{internalType:"uint256",name:"ivGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"skewGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"shortVolShock",type:"uint256"},{internalType:"uint256",name:"shortPostCutoffVolShock",type:"uint256"},{internalType:"uint256",name:"longVolShock",type:"uint256"},{internalType:"uint256",name:"longPostCutoffVolShock",type:"uint256"},{internalType:"uint256",name:"liquidateVolShock",type:"uint256"},{internalType:"uint256",name:"liquidatePostCutoffVolShock",type:"uint256"},{internalType:"uint256",name:"shortSpotMin",type:"uint256"},{internalType:"uint256",name:"liquidateSpotMin",type:"uint256"}],internalType:"struct OptionGreekCache.ForceCloseParameters",name:"forceCloseParams",type:"tuple"},{components:[{internalType:"uint256",name:"minStaticQuoteCollateral",type:"uint256"},{internalType:"uint256",name:"minStaticBaseCollateral",type:"uint256"},{internalType:"uint256",name:"shockVolA",type:"uint256"},{internalType:"uint256",name:"shockVolPointA",type:"uint256"},{internalType:"uint256",name:"shockVolB",type:"uint256"},{internalType:"uint256",name:"shockVolPointB",type:"uint256"},{internalType:"uint256",name:"callSpotPriceShock",type:"uint256"},{internalType:"uint256",name:"putSpotPriceShock",type:"uint256"}],internalType:"struct OptionGreekCache.MinCollateralParameters",name:"minCollatParams",type:"tuple"},{components:[{internalType:"uint256",name:"optionPriceFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"optionPriceFee1xPoint",type:"uint256"},{internalType:"uint256",name:"optionPriceFee2xPoint",type:"uint256"},{internalType:"uint256",name:"spotPriceFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"spotPriceFee1xPoint",type:"uint256"},{internalType:"uint256",name:"spotPriceFee2xPoint",type:"uint256"},{internalType:"uint256",name:"vegaFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"standardSize",type:"uint256"},{internalType:"uint256",name:"skewAdjustmentFactor",type:"uint256"}],internalType:"struct OptionMarketPricer.PricingParameters",name:"pricingParams",type:"tuple"},{components:[{internalType:"int256",name:"minDelta",type:"int256"},{internalType:"int256",name:"minForceCloseDelta",type:"int256"},{internalType:"uint256",name:"tradingCutoff",type:"uint256"},{internalType:"uint256",name:"minBaseIV",type:"uint256"},{internalType:"uint256",name:"maxBaseIV",type:"uint256"},{internalType:"uint256",name:"minSkew",type:"uint256"},{internalType:"uint256",name:"maxSkew",type:"uint256"},{internalType:"uint256",name:"minVol",type:"uint256"},{internalType:"uint256",name:"maxVol",type:"uint256"},{internalType:"uint256",name:"absMinSkew",type:"uint256"},{internalType:"uint256",name:"absMaxSkew",type:"uint256"},{internalType:"bool",name:"capSkewsToAbs",type:"bool"}],internalType:"struct OptionMarketPricer.TradeLimitParameters",name:"tradeLimitParams",type:"tuple"},{components:[{internalType:"uint256",name:"defaultVarianceFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"forceCloseVarianceFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"skewAdjustmentCoefficient",type:"uint256"},{internalType:"uint256",name:"referenceSkew",type:"uint256"},{internalType:"uint256",name:"minimumStaticSkewAdjustment",type:"uint256"},{internalType:"uint256",name:"vegaCoefficient",type:"uint256"},{internalType:"uint256",name:"minimumStaticVega",type:"uint256"},{internalType:"uint256",name:"ivVarianceCoefficient",type:"uint256"},{internalType:"uint256",name:"minimumStaticIvVariance",type:"uint256"}],internalType:"struct OptionMarketPricer.VarianceFeeParameters",name:"varianceFeeParams",type:"tuple"},{components:[{internalType:"uint256",name:"penaltyRatio",type:"uint256"},{internalType:"uint256",name:"liquidatorFeeRatio",type:"uint256"},{internalType:"uint256",name:"smFeeRatio",type:"uint256"},{internalType:"uint256",name:"minLiquidationFee",type:"uint256"}],internalType:"struct OptionToken.PartialCollateralParameters",name:"partialCollatParams",type:"tuple"}],internalType:"struct OptionMarketViewer.MarketParameters",name:"marketParameters",type:"tuple"},{components:[{internalType:"int256",name:"netDelta",type:"int256"},{internalType:"int256",name:"netStdVega",type:"int256"},{internalType:"int256",name:"netOptionValue",type:"int256"}],internalType:"struct OptionGreekCache.NetGreeks",name:"globalNetGreeks",type:"tuple"},{components:[{internalType:"address",name:"market",type:"address"},{internalType:"uint256",name:"boardId",type:"uint256"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"baseIv",type:"uint256"},{internalType:"uint256",name:"priceAtExpiry",type:"uint256"},{internalType:"bool",name:"isPaused",type:"bool"},{internalType:"uint256",name:"varianceGwavIv",type:"uint256"},{internalType:"uint256",name:"forceCloseGwavIv",type:"uint256"},{internalType:"uint256",name:"longScaleFactor",type:"uint256"},{components:[{internalType:"int256",name:"netDelta",type:"int256"},{internalType:"int256",name:"netStdVega",type:"int256"},{internalType:"int256",name:"netOptionValue",type:"int256"}],internalType:"struct OptionGreekCache.NetGreeks",name:"netGreeks",type:"tuple"},{components:[{internalType:"uint256",name:"strikeId",type:"uint256"},{internalType:"uint256",name:"boardId",type:"uint256"},{internalType:"uint256",name:"strikePrice",type:"uint256"},{internalType:"uint256",name:"skew",type:"uint256"},{internalType:"uint256",name:"forceCloseSkew",type:"uint256"},{components:[{internalType:"int256",name:"callDelta",type:"int256"},{internalType:"int256",name:"putDelta",type:"int256"},{internalType:"uint256",name:"stdVega",type:"uint256"},{internalType:"uint256",name:"callPrice",type:"uint256"},{internalType:"uint256",name:"putPrice",type:"uint256"}],internalType:"struct OptionGreekCache.StrikeGreeks",name:"cachedGreeks",type:"tuple"},{internalType:"uint256",name:"baseReturnedRatio",type:"uint256"},{internalType:"uint256",name:"longCallOpenInterest",type:"uint256"},{internalType:"uint256",name:"longPutOpenInterest",type:"uint256"},{internalType:"uint256",name:"shortCallBaseOpenInterest",type:"uint256"},{internalType:"uint256",name:"shortCallQuoteOpenInterest",type:"uint256"},{internalType:"uint256",name:"shortPutOpenInterest",type:"uint256"}],internalType:"struct OptionMarketViewer.StrikeView[]",name:"strikes",type:"tuple[]"}],internalType:"struct OptionMarketViewer.BoardView[]",name:"liveBoards",type:"tuple[]"}],internalType:"struct OptionMarketViewer.MarketView",name:"marketView",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[],name:"getMarketAddresses",outputs:[{components:[{internalType:"contract LiquidityPool",name:"liquidityPool",type:"address"},{internalType:"contract LiquidityToken",name:"liquidityToken",type:"address"},{internalType:"contract OptionGreekCache",name:"greekCache",type:"address"},{internalType:"contract OptionMarket",name:"optionMarket",type:"address"},{internalType:"contract OptionMarketPricer",name:"optionMarketPricer",type:"address"},{internalType:"contract OptionToken",name:"optionToken",type:"address"},{internalType:"contract ShortCollateral",name:"shortCollateral",type:"address"},{internalType:"contract PoolHedger",name:"poolHedger",type:"address"},{internalType:"contract IERC20Decimals",name:"quoteAsset",type:"address"},{internalType:"contract IERC20Decimals",name:"baseAsset",type:"address"}],internalType:"struct OptionMarketViewer.OptionMarketAddresses[]",name:"",type:"tuple[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"string",name:"baseSymbol",type:"string"}],name:"getMarketForBase",outputs:[{components:[{internalType:"bool",name:"isPaused",type:"bool"},{internalType:"uint256",name:"spotPrice",type:"uint256"},{internalType:"string",name:"quoteSymbol",type:"string"},{internalType:"uint256",name:"quoteDecimals",type:"uint256"},{internalType:"string",name:"baseSymbol",type:"string"},{internalType:"uint256",name:"baseDecimals",type:"uint256"},{components:[{internalType:"uint256",name:"freeLiquidity",type:"uint256"},{internalType:"uint256",name:"burnableLiquidity",type:"uint256"},{internalType:"uint256",name:"reservedCollatLiquidity",type:"uint256"},{internalType:"uint256",name:"pendingDeltaLiquidity",type:"uint256"},{internalType:"uint256",name:"usedDeltaLiquidity",type:"uint256"},{internalType:"uint256",name:"NAV",type:"uint256"},{internalType:"uint256",name:"longScaleFactor",type:"uint256"}],internalType:"struct LiquidityPool.Liquidity",name:"liquidity",type:"tuple"},{components:[{internalType:"contract LiquidityPool",name:"liquidityPool",type:"address"},{internalType:"contract LiquidityToken",name:"liquidityToken",type:"address"},{internalType:"contract OptionGreekCache",name:"greekCache",type:"address"},{internalType:"contract OptionMarket",name:"optionMarket",type:"address"},{internalType:"contract OptionMarketPricer",name:"optionMarketPricer",type:"address"},{internalType:"contract OptionToken",name:"optionToken",type:"address"},{internalType:"contract ShortCollateral",name:"shortCollateral",type:"address"},{internalType:"contract PoolHedger",name:"poolHedger",type:"address"},{internalType:"contract IERC20Decimals",name:"quoteAsset",type:"address"},{internalType:"contract IERC20Decimals",name:"baseAsset",type:"address"}],internalType:"struct OptionMarketViewer.OptionMarketAddresses",name:"marketAddresses",type:"tuple"},{components:[{components:[{internalType:"uint256",name:"maxBoardExpiry",type:"uint256"},{internalType:"address",name:"securityModule",type:"address"},{internalType:"uint256",name:"feePortionReserved",type:"uint256"},{internalType:"uint256",name:"staticBaseSettlementFee",type:"uint256"}],internalType:"struct OptionMarket.OptionMarketParameters",name:"optionMarketParams",type:"tuple"},{components:[{internalType:"uint256",name:"minDepositWithdraw",type:"uint256"},{internalType:"uint256",name:"depositDelay",type:"uint256"},{internalType:"uint256",name:"withdrawalDelay",type:"uint256"},{internalType:"uint256",name:"withdrawalFee",type:"uint256"},{internalType:"address",name:"guardianMultisig",type:"address"},{internalType:"uint256",name:"guardianDelay",type:"uint256"},{internalType:"uint256",name:"adjustmentNetScalingFactor",type:"uint256"},{internalType:"uint256",name:"callCollatScalingFactor",type:"uint256"},{internalType:"uint256",name:"putCollatScalingFactor",type:"uint256"}],internalType:"struct LiquidityPool.LiquidityPoolParameters",name:"lpParams",type:"tuple"},{components:[{internalType:"uint256",name:"liquidityCBThreshold",type:"uint256"},{internalType:"uint256",name:"liquidityCBTimeout",type:"uint256"},{internalType:"uint256",name:"ivVarianceCBThreshold",type:"uint256"},{internalType:"uint256",name:"skewVarianceCBThreshold",type:"uint256"},{internalType:"uint256",name:"ivVarianceCBTimeout",type:"uint256"},{internalType:"uint256",name:"skewVarianceCBTimeout",type:"uint256"},{internalType:"uint256",name:"boardSettlementCBTimeout",type:"uint256"},{internalType:"uint256",name:"contractAdjustmentCBTimeout",type:"uint256"}],internalType:"struct LiquidityPool.CircuitBreakerParameters",name:"cbParams",type:"tuple"},{components:[{internalType:"uint256",name:"maxStrikesPerBoard",type:"uint256"},{internalType:"uint256",name:"acceptableSpotPricePercentMove",type:"uint256"},{internalType:"uint256",name:"staleUpdateDuration",type:"uint256"},{internalType:"uint256",name:"varianceIvGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"varianceSkewGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"optionValueIvGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"optionValueSkewGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"gwavSkewFloor",type:"uint256"},{internalType:"uint256",name:"gwavSkewCap",type:"uint256"}],internalType:"struct OptionGreekCache.GreekCacheParameters",name:"greekCacheParams",type:"tuple"},{components:[{internalType:"uint256",name:"ivGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"skewGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"shortVolShock",type:"uint256"},{internalType:"uint256",name:"shortPostCutoffVolShock",type:"uint256"},{internalType:"uint256",name:"longVolShock",type:"uint256"},{internalType:"uint256",name:"longPostCutoffVolShock",type:"uint256"},{internalType:"uint256",name:"liquidateVolShock",type:"uint256"},{internalType:"uint256",name:"liquidatePostCutoffVolShock",type:"uint256"},{internalType:"uint256",name:"shortSpotMin",type:"uint256"},{internalType:"uint256",name:"liquidateSpotMin",type:"uint256"}],internalType:"struct OptionGreekCache.ForceCloseParameters",name:"forceCloseParams",type:"tuple"},{components:[{internalType:"uint256",name:"minStaticQuoteCollateral",type:"uint256"},{internalType:"uint256",name:"minStaticBaseCollateral",type:"uint256"},{internalType:"uint256",name:"shockVolA",type:"uint256"},{internalType:"uint256",name:"shockVolPointA",type:"uint256"},{internalType:"uint256",name:"shockVolB",type:"uint256"},{internalType:"uint256",name:"shockVolPointB",type:"uint256"},{internalType:"uint256",name:"callSpotPriceShock",type:"uint256"},{internalType:"uint256",name:"putSpotPriceShock",type:"uint256"}],internalType:"struct OptionGreekCache.MinCollateralParameters",name:"minCollatParams",type:"tuple"},{components:[{internalType:"uint256",name:"optionPriceFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"optionPriceFee1xPoint",type:"uint256"},{internalType:"uint256",name:"optionPriceFee2xPoint",type:"uint256"},{internalType:"uint256",name:"spotPriceFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"spotPriceFee1xPoint",type:"uint256"},{internalType:"uint256",name:"spotPriceFee2xPoint",type:"uint256"},{internalType:"uint256",name:"vegaFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"standardSize",type:"uint256"},{internalType:"uint256",name:"skewAdjustmentFactor",type:"uint256"}],internalType:"struct OptionMarketPricer.PricingParameters",name:"pricingParams",type:"tuple"},{components:[{internalType:"int256",name:"minDelta",type:"int256"},{internalType:"int256",name:"minForceCloseDelta",type:"int256"},{internalType:"uint256",name:"tradingCutoff",type:"uint256"},{internalType:"uint256",name:"minBaseIV",type:"uint256"},{internalType:"uint256",name:"maxBaseIV",type:"uint256"},{internalType:"uint256",name:"minSkew",type:"uint256"},{internalType:"uint256",name:"maxSkew",type:"uint256"},{internalType:"uint256",name:"minVol",type:"uint256"},{internalType:"uint256",name:"maxVol",type:"uint256"},{internalType:"uint256",name:"absMinSkew",type:"uint256"},{internalType:"uint256",name:"absMaxSkew",type:"uint256"},{internalType:"bool",name:"capSkewsToAbs",type:"bool"}],internalType:"struct OptionMarketPricer.TradeLimitParameters",name:"tradeLimitParams",type:"tuple"},{components:[{internalType:"uint256",name:"defaultVarianceFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"forceCloseVarianceFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"skewAdjustmentCoefficient",type:"uint256"},{internalType:"uint256",name:"referenceSkew",type:"uint256"},{internalType:"uint256",name:"minimumStaticSkewAdjustment",type:"uint256"},{internalType:"uint256",name:"vegaCoefficient",type:"uint256"},{internalType:"uint256",name:"minimumStaticVega",type:"uint256"},{internalType:"uint256",name:"ivVarianceCoefficient",type:"uint256"},{internalType:"uint256",name:"minimumStaticIvVariance",type:"uint256"}],internalType:"struct OptionMarketPricer.VarianceFeeParameters",name:"varianceFeeParams",type:"tuple"},{components:[{internalType:"uint256",name:"penaltyRatio",type:"uint256"},{internalType:"uint256",name:"liquidatorFeeRatio",type:"uint256"},{internalType:"uint256",name:"smFeeRatio",type:"uint256"},{internalType:"uint256",name:"minLiquidationFee",type:"uint256"}],internalType:"struct OptionToken.PartialCollateralParameters",name:"partialCollatParams",type:"tuple"}],internalType:"struct OptionMarketViewer.MarketParameters",name:"marketParameters",type:"tuple"},{components:[{internalType:"int256",name:"netDelta",type:"int256"},{internalType:"int256",name:"netStdVega",type:"int256"},{internalType:"int256",name:"netOptionValue",type:"int256"}],internalType:"struct OptionGreekCache.NetGreeks",name:"globalNetGreeks",type:"tuple"},{components:[{internalType:"address",name:"market",type:"address"},{internalType:"uint256",name:"boardId",type:"uint256"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"baseIv",type:"uint256"},{internalType:"uint256",name:"priceAtExpiry",type:"uint256"},{internalType:"bool",name:"isPaused",type:"bool"},{internalType:"uint256",name:"varianceGwavIv",type:"uint256"},{internalType:"uint256",name:"forceCloseGwavIv",type:"uint256"},{internalType:"uint256",name:"longScaleFactor",type:"uint256"},{components:[{internalType:"int256",name:"netDelta",type:"int256"},{internalType:"int256",name:"netStdVega",type:"int256"},{internalType:"int256",name:"netOptionValue",type:"int256"}],internalType:"struct OptionGreekCache.NetGreeks",name:"netGreeks",type:"tuple"},{components:[{internalType:"uint256",name:"strikeId",type:"uint256"},{internalType:"uint256",name:"boardId",type:"uint256"},{internalType:"uint256",name:"strikePrice",type:"uint256"},{internalType:"uint256",name:"skew",type:"uint256"},{internalType:"uint256",name:"forceCloseSkew",type:"uint256"},{components:[{internalType:"int256",name:"callDelta",type:"int256"},{internalType:"int256",name:"putDelta",type:"int256"},{internalType:"uint256",name:"stdVega",type:"uint256"},{internalType:"uint256",name:"callPrice",type:"uint256"},{internalType:"uint256",name:"putPrice",type:"uint256"}],internalType:"struct OptionGreekCache.StrikeGreeks",name:"cachedGreeks",type:"tuple"},{internalType:"uint256",name:"baseReturnedRatio",type:"uint256"},{internalType:"uint256",name:"longCallOpenInterest",type:"uint256"},{internalType:"uint256",name:"longPutOpenInterest",type:"uint256"},{internalType:"uint256",name:"shortCallBaseOpenInterest",type:"uint256"},{internalType:"uint256",name:"shortCallQuoteOpenInterest",type:"uint256"},{internalType:"uint256",name:"shortPutOpenInterest",type:"uint256"}],internalType:"struct OptionMarketViewer.StrikeView[]",name:"strikes",type:"tuple[]"}],internalType:"struct OptionMarketViewer.BoardView[]",name:"liveBoards",type:"tuple[]"}],internalType:"struct OptionMarketViewer.MarketView",name:"marketView",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract OptionMarket[]",name:"markets",type:"address[]"}],name:"getMarkets",outputs:[{components:[{internalType:"bool",name:"isPaused",type:"bool"},{components:[{internalType:"bool",name:"isPaused",type:"bool"},{internalType:"uint256",name:"spotPrice",type:"uint256"},{internalType:"string",name:"quoteSymbol",type:"string"},{internalType:"uint256",name:"quoteDecimals",type:"uint256"},{internalType:"string",name:"baseSymbol",type:"string"},{internalType:"uint256",name:"baseDecimals",type:"uint256"},{components:[{internalType:"uint256",name:"freeLiquidity",type:"uint256"},{internalType:"uint256",name:"burnableLiquidity",type:"uint256"},{internalType:"uint256",name:"reservedCollatLiquidity",type:"uint256"},{internalType:"uint256",name:"pendingDeltaLiquidity",type:"uint256"},{internalType:"uint256",name:"usedDeltaLiquidity",type:"uint256"},{internalType:"uint256",name:"NAV",type:"uint256"},{internalType:"uint256",name:"longScaleFactor",type:"uint256"}],internalType:"struct LiquidityPool.Liquidity",name:"liquidity",type:"tuple"},{components:[{internalType:"contract LiquidityPool",name:"liquidityPool",type:"address"},{internalType:"contract LiquidityToken",name:"liquidityToken",type:"address"},{internalType:"contract OptionGreekCache",name:"greekCache",type:"address"},{internalType:"contract OptionMarket",name:"optionMarket",type:"address"},{internalType:"contract OptionMarketPricer",name:"optionMarketPricer",type:"address"},{internalType:"contract OptionToken",name:"optionToken",type:"address"},{internalType:"contract ShortCollateral",name:"shortCollateral",type:"address"},{internalType:"contract PoolHedger",name:"poolHedger",type:"address"},{internalType:"contract IERC20Decimals",name:"quoteAsset",type:"address"},{internalType:"contract IERC20Decimals",name:"baseAsset",type:"address"}],internalType:"struct OptionMarketViewer.OptionMarketAddresses",name:"marketAddresses",type:"tuple"},{components:[{components:[{internalType:"uint256",name:"maxBoardExpiry",type:"uint256"},{internalType:"address",name:"securityModule",type:"address"},{internalType:"uint256",name:"feePortionReserved",type:"uint256"},{internalType:"uint256",name:"staticBaseSettlementFee",type:"uint256"}],internalType:"struct OptionMarket.OptionMarketParameters",name:"optionMarketParams",type:"tuple"},{components:[{internalType:"uint256",name:"minDepositWithdraw",type:"uint256"},{internalType:"uint256",name:"depositDelay",type:"uint256"},{internalType:"uint256",name:"withdrawalDelay",type:"uint256"},{internalType:"uint256",name:"withdrawalFee",type:"uint256"},{internalType:"address",name:"guardianMultisig",type:"address"},{internalType:"uint256",name:"guardianDelay",type:"uint256"},{internalType:"uint256",name:"adjustmentNetScalingFactor",type:"uint256"},{internalType:"uint256",name:"callCollatScalingFactor",type:"uint256"},{internalType:"uint256",name:"putCollatScalingFactor",type:"uint256"}],internalType:"struct LiquidityPool.LiquidityPoolParameters",name:"lpParams",type:"tuple"},{components:[{internalType:"uint256",name:"liquidityCBThreshold",type:"uint256"},{internalType:"uint256",name:"liquidityCBTimeout",type:"uint256"},{internalType:"uint256",name:"ivVarianceCBThreshold",type:"uint256"},{internalType:"uint256",name:"skewVarianceCBThreshold",type:"uint256"},{internalType:"uint256",name:"ivVarianceCBTimeout",type:"uint256"},{internalType:"uint256",name:"skewVarianceCBTimeout",type:"uint256"},{internalType:"uint256",name:"boardSettlementCBTimeout",type:"uint256"},{internalType:"uint256",name:"contractAdjustmentCBTimeout",type:"uint256"}],internalType:"struct LiquidityPool.CircuitBreakerParameters",name:"cbParams",type:"tuple"},{components:[{internalType:"uint256",name:"maxStrikesPerBoard",type:"uint256"},{internalType:"uint256",name:"acceptableSpotPricePercentMove",type:"uint256"},{internalType:"uint256",name:"staleUpdateDuration",type:"uint256"},{internalType:"uint256",name:"varianceIvGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"varianceSkewGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"optionValueIvGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"optionValueSkewGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"gwavSkewFloor",type:"uint256"},{internalType:"uint256",name:"gwavSkewCap",type:"uint256"}],internalType:"struct OptionGreekCache.GreekCacheParameters",name:"greekCacheParams",type:"tuple"},{components:[{internalType:"uint256",name:"ivGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"skewGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"shortVolShock",type:"uint256"},{internalType:"uint256",name:"shortPostCutoffVolShock",type:"uint256"},{internalType:"uint256",name:"longVolShock",type:"uint256"},{internalType:"uint256",name:"longPostCutoffVolShock",type:"uint256"},{internalType:"uint256",name:"liquidateVolShock",type:"uint256"},{internalType:"uint256",name:"liquidatePostCutoffVolShock",type:"uint256"},{internalType:"uint256",name:"shortSpotMin",type:"uint256"},{internalType:"uint256",name:"liquidateSpotMin",type:"uint256"}],internalType:"struct OptionGreekCache.ForceCloseParameters",name:"forceCloseParams",type:"tuple"},{components:[{internalType:"uint256",name:"minStaticQuoteCollateral",type:"uint256"},{internalType:"uint256",name:"minStaticBaseCollateral",type:"uint256"},{internalType:"uint256",name:"shockVolA",type:"uint256"},{internalType:"uint256",name:"shockVolPointA",type:"uint256"},{internalType:"uint256",name:"shockVolB",type:"uint256"},{internalType:"uint256",name:"shockVolPointB",type:"uint256"},{internalType:"uint256",name:"callSpotPriceShock",type:"uint256"},{internalType:"uint256",name:"putSpotPriceShock",type:"uint256"}],internalType:"struct OptionGreekCache.MinCollateralParameters",name:"minCollatParams",type:"tuple"},{components:[{internalType:"uint256",name:"optionPriceFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"optionPriceFee1xPoint",type:"uint256"},{internalType:"uint256",name:"optionPriceFee2xPoint",type:"uint256"},{internalType:"uint256",name:"spotPriceFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"spotPriceFee1xPoint",type:"uint256"},{internalType:"uint256",name:"spotPriceFee2xPoint",type:"uint256"},{internalType:"uint256",name:"vegaFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"standardSize",type:"uint256"},{internalType:"uint256",name:"skewAdjustmentFactor",type:"uint256"}],internalType:"struct OptionMarketPricer.PricingParameters",name:"pricingParams",type:"tuple"},{components:[{internalType:"int256",name:"minDelta",type:"int256"},{internalType:"int256",name:"minForceCloseDelta",type:"int256"},{internalType:"uint256",name:"tradingCutoff",type:"uint256"},{internalType:"uint256",name:"minBaseIV",type:"uint256"},{internalType:"uint256",name:"maxBaseIV",type:"uint256"},{internalType:"uint256",name:"minSkew",type:"uint256"},{internalType:"uint256",name:"maxSkew",type:"uint256"},{internalType:"uint256",name:"minVol",type:"uint256"},{internalType:"uint256",name:"maxVol",type:"uint256"},{internalType:"uint256",name:"absMinSkew",type:"uint256"},{internalType:"uint256",name:"absMaxSkew",type:"uint256"},{internalType:"bool",name:"capSkewsToAbs",type:"bool"}],internalType:"struct OptionMarketPricer.TradeLimitParameters",name:"tradeLimitParams",type:"tuple"},{components:[{internalType:"uint256",name:"defaultVarianceFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"forceCloseVarianceFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"skewAdjustmentCoefficient",type:"uint256"},{internalType:"uint256",name:"referenceSkew",type:"uint256"},{internalType:"uint256",name:"minimumStaticSkewAdjustment",type:"uint256"},{internalType:"uint256",name:"vegaCoefficient",type:"uint256"},{internalType:"uint256",name:"minimumStaticVega",type:"uint256"},{internalType:"uint256",name:"ivVarianceCoefficient",type:"uint256"},{internalType:"uint256",name:"minimumStaticIvVariance",type:"uint256"}],internalType:"struct OptionMarketPricer.VarianceFeeParameters",name:"varianceFeeParams",type:"tuple"},{components:[{internalType:"uint256",name:"penaltyRatio",type:"uint256"},{internalType:"uint256",name:"liquidatorFeeRatio",type:"uint256"},{internalType:"uint256",name:"smFeeRatio",type:"uint256"},{internalType:"uint256",name:"minLiquidationFee",type:"uint256"}],internalType:"struct OptionToken.PartialCollateralParameters",name:"partialCollatParams",type:"tuple"}],internalType:"struct OptionMarketViewer.MarketParameters",name:"marketParameters",type:"tuple"},{components:[{internalType:"int256",name:"netDelta",type:"int256"},{internalType:"int256",name:"netStdVega",type:"int256"},{internalType:"int256",name:"netOptionValue",type:"int256"}],internalType:"struct OptionGreekCache.NetGreeks",name:"globalNetGreeks",type:"tuple"},{components:[{internalType:"address",name:"market",type:"address"},{internalType:"uint256",name:"boardId",type:"uint256"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"baseIv",type:"uint256"},{internalType:"uint256",name:"priceAtExpiry",type:"uint256"},{internalType:"bool",name:"isPaused",type:"bool"},{internalType:"uint256",name:"varianceGwavIv",type:"uint256"},{internalType:"uint256",name:"forceCloseGwavIv",type:"uint256"},{internalType:"uint256",name:"longScaleFactor",type:"uint256"},{components:[{internalType:"int256",name:"netDelta",type:"int256"},{internalType:"int256",name:"netStdVega",type:"int256"},{internalType:"int256",name:"netOptionValue",type:"int256"}],internalType:"struct OptionGreekCache.NetGreeks",name:"netGreeks",type:"tuple"},{components:[{internalType:"uint256",name:"strikeId",type:"uint256"},{internalType:"uint256",name:"boardId",type:"uint256"},{internalType:"uint256",name:"strikePrice",type:"uint256"},{internalType:"uint256",name:"skew",type:"uint256"},{internalType:"uint256",name:"forceCloseSkew",type:"uint256"},{components:[{internalType:"int256",name:"callDelta",type:"int256"},{internalType:"int256",name:"putDelta",type:"int256"},{internalType:"uint256",name:"stdVega",type:"uint256"},{internalType:"uint256",name:"callPrice",type:"uint256"},{internalType:"uint256",name:"putPrice",type:"uint256"}],internalType:"struct OptionGreekCache.StrikeGreeks",name:"cachedGreeks",type:"tuple"},{internalType:"uint256",name:"baseReturnedRatio",type:"uint256"},{internalType:"uint256",name:"longCallOpenInterest",type:"uint256"},{internalType:"uint256",name:"longPutOpenInterest",type:"uint256"},{internalType:"uint256",name:"shortCallBaseOpenInterest",type:"uint256"},{internalType:"uint256",name:"shortCallQuoteOpenInterest",type:"uint256"},{internalType:"uint256",name:"shortPutOpenInterest",type:"uint256"}],internalType:"struct OptionMarketViewer.StrikeView[]",name:"strikes",type:"tuple[]"}],internalType:"struct OptionMarketViewer.BoardView[]",name:"liveBoards",type:"tuple[]"}],internalType:"struct OptionMarketViewer.MarketView[]",name:"markets",type:"tuple[]"}],internalType:"struct OptionMarketViewer.MarketsView",name:"marketsView",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"getOwnerPositions",outputs:[{components:[{internalType:"address",name:"market",type:"address"},{components:[{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"uint256",name:"strikeId",type:"uint256"},{internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"collateral",type:"uint256"},{internalType:"enum OptionToken.PositionState",name:"state",type:"uint8"}],internalType:"struct OptionToken.OptionPosition[]",name:"positions",type:"tuple[]"}],internalType:"struct OptionMarketViewer.MarketOptionPositions[]",name:"",type:"tuple[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract BaseExchangeAdapter",name:"_exchangeAdapter",type:"address"}],name:"init",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"initialized",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract OptionMarket",name:"",type:"address"}],name:"marketAddresses",outputs:[{internalType:"contract LiquidityPool",name:"liquidityPool",type:"address"},{internalType:"contract LiquidityToken",name:"liquidityToken",type:"address"},{internalType:"contract OptionGreekCache",name:"greekCache",type:"address"},{internalType:"contract OptionMarket",name:"optionMarket",type:"address"},{internalType:"contract OptionMarketPricer",name:"optionMarketPricer",type:"address"},{internalType:"contract OptionToken",name:"optionToken",type:"address"},{internalType:"contract ShortCollateral",name:"shortCollateral",type:"address"},{internalType:"contract PoolHedger",name:"poolHedger",type:"address"},{internalType:"contract IERC20Decimals",name:"quoteAsset",type:"address"},{internalType:"contract IERC20Decimals",name:"baseAsset",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_owner",type:"address"}],name:"nominateNewOwner",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"nominatedOwner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"optionMarkets",outputs:[{internalType:"contract OptionMarket",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract OptionMarket",name:"market",type:"address"}],name:"removeMarket",outputs:[],stateMutability:"nonpayable",type:"function"}],Zn=[{inputs:[{internalType:"address",name:"thrower",type:"address"}],name:"AllMarketsPaused",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"contract IERC20Decimals",name:"asset",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"receiver",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"AssetTransferFailed",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"amountQuoteRequested",type:"uint256"},{internalType:"uint256",name:"baseToSpend",type:"uint256"},{internalType:"uint256",name:"baseLimit",type:"uint256"},{internalType:"uint256",name:"spotPrice",type:"uint256"},{internalType:"bytes32",name:"baseKey",type:"bytes32"},{internalType:"bytes32",name:"quoteKey",type:"bytes32"}],name:"BaseQuoteExchangeExceedsLimit",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"amountOut",type:"uint256"},{internalType:"uint256",name:"minAcceptedOut",type:"uint256"},{internalType:"contract IERC20Decimals",name:"tokenIn",type:"address"},{internalType:"contract IERC20Decimals",name:"tokenOut",type:"address"},{internalType:"address",name:"receiver",type:"address"}],name:"InsufficientSwap",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"inputAddress",type:"address"}],name:"InvalidAddress",type:"error"},{inputs:[],name:"InvalidRiskFreeRate",type:"error"},{inputs:[],name:"InvalidSNXPerpV2Price",type:"error"},{inputs:[],name:"InvalidStaticEstimationDiscount",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"marketAddress",type:"address"}],name:"MarketIsPaused",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"}],name:"NotImplemented",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"nominatedOwner",type:"address"}],name:"OnlyNominatedOwner",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"owner",type:"address"}],name:"OnlyOwner",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"amountBaseRequested",type:"uint256"},{internalType:"uint256",name:"quoteToSpend",type:"uint256"},{internalType:"uint256",name:"quoteLimit",type:"uint256"},{internalType:"uint256",name:"spotPrice",type:"uint256"},{internalType:"bytes32",name:"quoteKey",type:"bytes32"},{internalType:"bytes32",name:"baseKey",type:"bytes32"}],name:"QuoteBaseExchangeExceedsLimit",type:"error"},{inputs:[{internalType:"address",name:"optionMarket",type:"address"},{internalType:"uint248",name:"reason",type:"uint248"}],name:"SNXPerpV2MarketSuspended",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"contract IERC20Decimals",name:"asset",type:"address"},{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"TransferFailed",type:"error"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"addressResolver",type:"address"}],name:"AddressResolverUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"marketAddress",type:"address"},{indexed:!0,internalType:"address",name:"exchanger",type:"address"},{indexed:!1,internalType:"uint256",name:"baseSwapped",type:"uint256"},{indexed:!1,internalType:"uint256",name:"quoteReceived",type:"uint256"}],name:"BaseSwappedForQuote",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"optionMarket",type:"address"},{indexed:!1,internalType:"uint256",name:"quoteSpentD18",type:"uint256"},{indexed:!1,internalType:"uint256",name:"baseAssetinD18",type:"uint256"}],name:"ExchangeToExactBaseWithLimit",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"optionMarket",type:"address"},{indexed:!1,internalType:"uint256",name:"quoteSpentD18",type:"uint256"},{indexed:!1,internalType:"uint256",name:"baseAssetinD18",type:"uint256"}],name:"ExchangedFromExactBase",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bool",name:"isPaused",type:"bool"}],name:"GlobalPausedSet",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"optionMarket",type:"address"},{indexed:!1,internalType:"uint256",name:"staticEstimationDiscount",type:"uint256"},{indexed:!1,internalType:"address",name:"snxPerpV2Market",type:"address"},{indexed:!1,internalType:"address",name:"uniswapPool",type:"address"},{indexed:!1,internalType:"uint256",name:"feeTier",type:"uint256"}],name:"MarketAdapterConfigurationUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"contractAddress",type:"address"},{indexed:!1,internalType:"bool",name:"isPaused",type:"bool"}],name:"MarketPausedSet",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"oldOwner",type:"address"},{indexed:!1,internalType:"address",name:"newOwner",type:"address"}],name:"OwnerChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"newOwner",type:"address"}],name:"OwnerNominated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"marketAddress",type:"address"},{indexed:!0,internalType:"address",name:"exchanger",type:"address"},{indexed:!1,internalType:"uint256",name:"quoteSwapped",type:"uint256"},{indexed:!1,internalType:"uint256",name:"baseReceived",type:"uint256"}],name:"QuoteSwappedForBase",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"optionMarket",type:"address"},{indexed:!1,internalType:"int256",name:"riskFreeRate",type:"int256"}],name:"RiskFreeRateUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"asset",type:"address"},{indexed:!1,internalType:"address",name:"uniswapRouter",type:"address"}],name:"RouterApproved",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"synthetixSystemStatus",type:"address"}],name:"SynthetixSystemStatusUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"deviation",type:"uint256"}],name:"UniDeviationUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"uniswapRouter",type:"address"}],name:"UniswapRouterUpdated",type:"event"},{inputs:[],name:"acceptOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"addressResolver",outputs:[{internalType:"contract IAddressResolver",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract IERC20Decimals",name:"asset",type:"address"}],name:"approveRouter",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_optionMarket",type:"address"},{internalType:"uint256",name:"_amountBaseD18",type:"uint256"}],name:"estimateExchangeToExactBase",outputs:[{internalType:"uint256",name:"quoteNeededD18",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_optionMarket",type:"address"},{internalType:"uint256",name:"_amountQuoteD18",type:"uint256"}],name:"estimateExchangeToExactQuote",outputs:[{internalType:"uint256",name:"baseNeededD18",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_optionMarket",type:"address"},{internalType:"uint256",name:"_amountBaseD18",type:"uint256"}],name:"exchangeFromExactBase",outputs:[{internalType:"uint256",name:"quoteReceivedD18",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"}],name:"exchangeFromExactQuote",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"}],name:"exchangeToExactBase",outputs:[{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_optionMarket",type:"address"},{internalType:"uint256",name:"_amountBaseD18",type:"uint256"},{internalType:"uint256",name:"_quoteLimitD18",type:"uint256"}],name:"exchangeToExactBaseWithLimit",outputs:[{internalType:"uint256",name:"quoteSpentD18",type:"uint256"},{internalType:"uint256",name:"baseReceivedD18",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"}],name:"exchangeToExactQuote",outputs:[{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"}],name:"exchangeToExactQuoteWithLimit",outputs:[{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"optionMarket",type:"address"}],name:"getAdapterState",outputs:[{components:[{components:[{internalType:"uint256",name:"staticEstimationDiscount",type:"uint256"},{internalType:"address",name:"snxPerpV2MarketAddress",type:"address"},{components:[{internalType:"address",name:"pool",type:"address"},{internalType:"uint24",name:"feeTier",type:"uint24"}],internalType:"struct SNXPerpV2Adapter.UniswapPoolInfo",name:"uniswapInfo",type:"tuple"}],internalType:"struct SNXPerpV2Adapter.MarketAdapterConfiguration",name:"config",type:"tuple"},{internalType:"uint256",name:"snxPrice",type:"uint256"},{internalType:"int256",name:"riskFreeRate",type:"int256"}],internalType:"struct SNXPerpV2Adapter.MarketAdapterState",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"optionMarket",type:"address"}],name:"getPrices",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_optionMarket",type:"address"},{internalType:"uint256",name:"",type:"uint256"}],name:"getSettlementPriceForMarket",outputs:[{internalType:"uint256",name:"spotPrice",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"optionMarket",type:"address"},{internalType:"enum BaseExchangeAdapter.PriceType",name:"pricing",type:"uint8"}],name:"getSpotPriceForMarket",outputs:[{internalType:"uint256",name:"spotPrice",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"isGlobalPaused",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"isMarketPaused",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"marketConfigurations",outputs:[{internalType:"uint256",name:"staticEstimationDiscount",type:"uint256"},{internalType:"address",name:"snxPerpV2MarketAddress",type:"address"},{components:[{internalType:"address",name:"pool",type:"address"},{internalType:"uint24",name:"feeTier",type:"uint24"}],internalType:"struct SNXPerpV2Adapter.UniswapPoolInfo",name:"uniswapInfo",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_owner",type:"address"}],name:"nominateNewOwner",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"nominatedOwner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"rateAndCarry",outputs:[{internalType:"int256",name:"",type:"int256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"requireNotGlobalPaused",outputs:[],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"optionMarket",type:"address"}],name:"requireNotMarketPaused",outputs:[],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract IAddressResolver",name:"_addressResolver",type:"address"}],name:"setAddressResolver",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bool",name:"isPaused",type:"bool"}],name:"setGlobalPaused",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_optionMarket",type:"address"},{internalType:"uint256",name:"_staticEstimationDiscount",type:"uint256"},{internalType:"address",name:"_snxPerpV2MarketAddress",type:"address"},{internalType:"address",name:"_uniswapPool",type:"address"},{internalType:"uint24",name:"_uniswapFeeTier",type:"uint24"}],name:"setMarketAdapterConfiguration",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"optionMarket",type:"address"},{internalType:"bool",name:"isPaused",type:"bool"}],name:"setMarketPaused",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_optionMarket",type:"address"},{internalType:"int256",name:"_rate",type:"int256"}],name:"setRiskFreeRate",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"_deviation",type:"uint256"}],name:"setUniSwapDeviation",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract ISwapRouter",name:"_swapRouter",type:"address"}],name:"setUniswapRouter",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"swapRouter",outputs:[{internalType:"contract ISwapRouter",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"systemStatus",outputs:[{internalType:"contract ISystemStatus",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"uniDeviation",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"updateSynthetixAddresses",outputs:[],stateMutability:"nonpayable",type:"function"}],Jn=[{inputs:[],name:"drip",outputs:[],stateMutability:"nonpayable",type:"function"}],ea="0x0527A05c3CEBc9Ef8171FeD29DE5900A7ea093a4",ta="0x7D135662818d3540bd6f23294bFDB6946c52C9AB",na="0x6c87e4364Fd44B0D425ADfD0328e56b89b201329",aa="",ia={OptionMarketViewer:ea,ExchangeAdapter:ta,LyraRegistry:na,TestFaucet:aa},ra="0xB582CC9483ee1F862364C92C22CFD57f0fb607bc",pa="0xD7A69233b82F53b416c839ff1fB6C51bA59180d2",sa="0x1034C04bC515F18e5D1dFe5a94de6e65e7277fF7",ua="0xF2eDd52E32f8fE2eC76055C1A61958f1EFecb592",oa={OptionMarketViewer:ra,ExchangeAdapter:pa,LyraRegistry:sa,TestFaucet:ua},ya="0x136d92f1d103BA5267c85555b28787AE53Ee3CEF",la="0x2b1dF9A55Ceb1bba7D830C1a6731ff37383c4A53",ma="0x0FEd189bCD4A680e05B153dC7c3dC87004e162fb",da="",ca={OptionMarketViewer:ya,ExchangeAdapter:la,LyraRegistry:ma,TestFaucet:da},Ta="0x4D0EB92F4CFcB6b4Cc9A88baF1f6Ad9E9C92380A",fa="0x46CeCCaf391aFF578963042790C2ee1F88661DDf",ka="0xB13E26A28979b32F157F030dC795DDAbF59fEac4",ha="",ba={OptionMarketViewer:Ta,ExchangeAdapter:fa,LyraRegistry:ka,TestFaucet:ha},wa=(n,e,t)=>{switch(n){case A.Arbitrum:switch(e){case v.Avalon:throw new Error("Version.Avalon not supported on Arbitrum");case v.Newport:return ia[t]}case A.ArbitrumGoerli:switch(e){case v.Avalon:throw new Error("Version.Avalon not supported on Arbitrum Goerli");case v.Newport:return oa[t]}case A.Optimism:switch(e){case v.Avalon:return Un[t];case v.Newport:return ca[t]}case A.OptimismGoerli:switch(e){case v.Avalon:return Kn[t];case v.Newport:return ba[t]}}},Pa=(n,e,t)=>{switch(e){case D.OptionMarketViewer:switch(n){case v.Avalon:return Dn;case v.Newport:return Yn}case D.LyraRegistry:switch(n){case v.Avalon:return Ln;case v.Newport:return Xn}case D.ExchangeAdapter:switch(n){case v.Avalon:return En;case v.Newport:switch(t){case U.Arbitrum:return jn;case U.Optimism:return Zn}}case D.TestFaucet:switch(n){case v.Avalon:return _n;case v.Newport:return Jn}}};function W(n,e,t){const{provider:a}=n,i=wa(n.chain,e,t),r=Pa(e,t,n.network);return new xe(i,r,a)}const ga=[{constant:!0,inputs:[],name:"name",outputs:[{name:"",type:"string"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{name:"_spender",type:"address"},{name:"_value",type:"uint256"}],name:"approve",outputs:[{name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[],name:"totalSupply",outputs:[{name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{name:"_from",type:"address"},{name:"_to",type:"address"},{name:"_value",type:"uint256"}],name:"transferFrom",outputs:[{name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[],name:"decimals",outputs:[{name:"",type:"uint8"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[{name:"_owner",type:"address"}],name:"balanceOf",outputs:[{name:"balance",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[],name:"symbol",outputs:[{name:"",type:"string"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{name:"_to",type:"address"},{name:"_value",type:"uint256"}],name:"transfer",outputs:[{name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[{name:"_owner",type:"address"},{name:"_spender",type:"address"}],name:"allowance",outputs:[{name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{payable:!0,stateMutability:"payable",type:"fallback"},{anonymous:!1,inputs:[{indexed:!0,name:"owner",type:"address"},{indexed:!0,name:"spender",type:"address"},{indexed:!1,name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!0,name:"from",type:"address"},{indexed:!0,name:"to",type:"address"},{indexed:!1,name:"value",type:"uint256"}],name:"Transfer",type:"event"}];function Re(n,e){return new xe(e,ga,n)}const va=[{inputs:[],stateMutability:"nonpayable",type:"constructor"},{inputs:[{internalType:"address",name:"thrower",type:"address"}],name:"AlreadyInitialised",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"BaseTransferFailed",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"pendingBase",type:"uint256"},{internalType:"uint256",name:"estimatedExchangeCost",type:"uint256"},{internalType:"uint256",name:"freeLiquidity",type:"uint256"}],name:"InsufficientFreeLiquidityForBaseExchange",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"beneficiary",type:"address"}],name:"InvalidBeneficiaryAddress",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{components:[{internalType:"uint256",name:"minDepositWithdraw",type:"uint256"},{internalType:"uint256",name:"depositDelay",type:"uint256"},{internalType:"uint256",name:"withdrawalDelay",type:"uint256"},{internalType:"uint256",name:"withdrawalFee",type:"uint256"},{internalType:"uint256",name:"liquidityCBThreshold",type:"uint256"},{internalType:"uint256",name:"liquidityCBTimeout",type:"uint256"},{internalType:"uint256",name:"ivVarianceCBThreshold",type:"uint256"},{internalType:"uint256",name:"skewVarianceCBThreshold",type:"uint256"},{internalType:"uint256",name:"ivVarianceCBTimeout",type:"uint256"},{internalType:"uint256",name:"skewVarianceCBTimeout",type:"uint256"},{internalType:"address",name:"guardianMultisig",type:"address"},{internalType:"uint256",name:"guardianDelay",type:"uint256"},{internalType:"uint256",name:"boardSettlementCBTimeout",type:"uint256"},{internalType:"uint256",name:"maxFeePaid",type:"uint256"}],internalType:"struct LiquidityPool.LiquidityPoolParameters",name:"lpParams",type:"tuple"}],name:"InvalidLiquidityPoolParameters",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"quoteToLock",type:"uint256"},{internalType:"uint256",name:"freeLiquidity",type:"uint256"},{components:[{internalType:"uint256",name:"quote",type:"uint256"},{internalType:"uint256",name:"base",type:"uint256"}],internalType:"struct LiquidityPool.Collateral",name:"lockedCollateral",type:"tuple"}],name:"LockingMoreQuoteThanIsFree",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"amountQuote",type:"uint256"},{internalType:"uint256",name:"minDeposit",type:"uint256"}],name:"MinimumDepositNotMet",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"amountLiquidityToken",type:"uint256"},{internalType:"uint256",name:"minWithdraw",type:"uint256"}],name:"MinimumWithdrawNotMet",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"amountQuote",type:"uint256"},{components:[{internalType:"uint256",name:"freeLiquidity",type:"uint256"},{internalType:"uint256",name:"burnableLiquidity",type:"uint256"},{internalType:"uint256",name:"usedCollatLiquidity",type:"uint256"},{internalType:"uint256",name:"pendingDeltaLiquidity",type:"uint256"},{internalType:"uint256",name:"usedDeltaLiquidity",type:"uint256"},{internalType:"uint256",name:"NAV",type:"uint256"}],internalType:"struct LiquidityPool.Liquidity",name:"liquidity",type:"tuple"}],name:"NotEnoughFreeToReclaimInsolvency",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"nominatedOwner",type:"address"}],name:"OnlyNominatedOwner",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"optionMarket",type:"address"}],name:"OnlyOptionMarket",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"owner",type:"address"}],name:"OnlyOwner",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"poolHedger",type:"address"}],name:"OnlyPoolHedger",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"poolHedger",type:"address"}],name:"OnlyShortCollateral",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"int256",name:"totalAssetValue",type:"int256"},{internalType:"int256",name:"optionValueDebt",type:"int256"}],name:"OptionValueDebtExceedsTotalAssets",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"QuoteTransferFailed",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"premium",type:"uint256"},{internalType:"uint256",name:"reservedFee",type:"uint256"},{internalType:"uint256",name:"freeLiquidity",type:"uint256"}],name:"SendPremiumNotEnoughCollateral",type:"error"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"baseFreed",type:"uint256"},{indexed:!1,internalType:"uint256",name:"lockedCollateralBase",type:"uint256"}],name:"BaseFreed",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"baseLocked",type:"uint256"},{indexed:!1,internalType:"uint256",name:"lockedCollateralBase",type:"uint256"}],name:"BaseLocked",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"quoteSpent",type:"uint256"},{indexed:!1,internalType:"uint256",name:"baseReceived",type:"uint256"}],name:"BasePurchased",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"amountBase",type:"uint256"},{indexed:!1,internalType:"uint256",name:"quoteReceived",type:"uint256"}],name:"BaseSold",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"insolventSettlementAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amountQuoteReserved",type:"uint256"},{indexed:!1,internalType:"uint256",name:"totalOutstandingSettlements",type:"uint256"}],name:"BoardSettlement",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"newTimestamp",type:"uint256"}],name:"BoardSettlementCircuitBreakerUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"entryId",type:"uint256"},{indexed:!1,internalType:"bool",name:"boardNotStale",type:"bool"},{indexed:!1,internalType:"bool",name:"validEntry",type:"bool"},{indexed:!1,internalType:"bool",name:"guardianBypass",type:"bool"},{indexed:!1,internalType:"bool",name:"delaysExpired",type:"bool"}],name:"CheckingCanProcess",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"newTimestamp",type:"uint256"},{indexed:!1,internalType:"bool",name:"ivVarianceThresholdCrossed",type:"bool"},{indexed:!1,internalType:"bool",name:"skewVarianceThresholdCrossed",type:"bool"},{indexed:!1,internalType:"bool",name:"liquidityThresholdCrossed",type:"bool"}],name:"CircuitBreakerUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"caller",type:"address"},{indexed:!0,internalType:"address",name:"beneficiary",type:"address"},{indexed:!0,internalType:"uint256",name:"depositQueueId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amountDeposited",type:"uint256"},{indexed:!1,internalType:"uint256",name:"tokenPrice",type:"uint256"},{indexed:!1,internalType:"uint256",name:"tokensReceived",type:"uint256"},{indexed:!1,internalType:"uint256",name:"timestamp",type:"uint256"}],name:"DepositProcessed",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"depositor",type:"address"},{indexed:!0,internalType:"address",name:"beneficiary",type:"address"},{indexed:!0,internalType:"uint256",name:"depositQueueId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amountDeposited",type:"uint256"},{indexed:!1,internalType:"uint256",name:"totalQueuedDeposits",type:"uint256"},{indexed:!1,internalType:"uint256",name:"timestamp",type:"uint256"}],name:"DepositQueued",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"amountQuoteAdded",type:"uint256"},{indexed:!1,internalType:"uint256",name:"totalInsolventSettlementAmount",type:"uint256"}],name:"InsolventSettlementAmountUpdated",type:"event"},{anonymous:!1,inputs:[{components:[{internalType:"uint256",name:"minDepositWithdraw",type:"uint256"},{internalType:"uint256",name:"depositDelay",type:"uint256"},{internalType:"uint256",name:"withdrawalDelay",type:"uint256"},{internalType:"uint256",name:"withdrawalFee",type:"uint256"},{internalType:"uint256",name:"liquidityCBThreshold",type:"uint256"},{internalType:"uint256",name:"liquidityCBTimeout",type:"uint256"},{internalType:"uint256",name:"ivVarianceCBThreshold",type:"uint256"},{internalType:"uint256",name:"skewVarianceCBThreshold",type:"uint256"},{internalType:"uint256",name:"ivVarianceCBTimeout",type:"uint256"},{internalType:"uint256",name:"skewVarianceCBTimeout",type:"uint256"},{internalType:"address",name:"guardianMultisig",type:"address"},{internalType:"uint256",name:"guardianDelay",type:"uint256"},{internalType:"uint256",name:"boardSettlementCBTimeout",type:"uint256"},{internalType:"uint256",name:"maxFeePaid",type:"uint256"}],indexed:!1,internalType:"struct LiquidityPool.LiquidityPoolParameters",name:"lpParams",type:"tuple"}],name:"LiquidityPoolParametersUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"user",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"totalOutstandingSettlements",type:"uint256"}],name:"OutstandingSettlementSent",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"oldOwner",type:"address"},{indexed:!1,internalType:"address",name:"newOwner",type:"address"}],name:"OwnerChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"newOwner",type:"address"}],name:"OwnerNominated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"contract PoolHedger",name:"poolHedger",type:"address"}],name:"PoolHedgerUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"recipient",type:"address"},{indexed:!1,internalType:"uint256",name:"recipientPortion",type:"uint256"},{indexed:!1,internalType:"uint256",name:"optionMarketPortion",type:"uint256"}],name:"PremiumTransferred",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"quoteFreed",type:"uint256"},{indexed:!1,internalType:"uint256",name:"lockedCollateralQuote",type:"uint256"}],name:"QuoteFreed",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"quoteLocked",type:"uint256"},{indexed:!1,internalType:"uint256",name:"lockedCollateralQuote",type:"uint256"}],name:"QuoteLocked",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"amountQuote",type:"uint256"}],name:"QuoteTransferredToPoolHedger",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"caller",type:"address"},{indexed:!0,internalType:"address",name:"beneficiary",type:"address"},{indexed:!0,internalType:"uint256",name:"withdrawalQueueId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amountWithdrawn",type:"uint256"},{indexed:!1,internalType:"uint256",name:"tokenPrice",type:"uint256"},{indexed:!1,internalType:"uint256",name:"quoteReceived",type:"uint256"},{indexed:!1,internalType:"uint256",name:"totalQueuedWithdrawals",type:"uint256"},{indexed:!1,internalType:"uint256",name:"timestamp",type:"uint256"}],name:"WithdrawPartiallyProcessed",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"caller",type:"address"},{indexed:!0,internalType:"address",name:"beneficiary",type:"address"},{indexed:!0,internalType:"uint256",name:"withdrawalQueueId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amountWithdrawn",type:"uint256"},{indexed:!1,internalType:"uint256",name:"tokenPrice",type:"uint256"},{indexed:!1,internalType:"uint256",name:"quoteReceived",type:"uint256"},{indexed:!1,internalType:"uint256",name:"totalQueuedWithdrawals",type:"uint256"},{indexed:!1,internalType:"uint256",name:"timestamp",type:"uint256"}],name:"WithdrawProcessed",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"withdrawer",type:"address"},{indexed:!0,internalType:"address",name:"beneficiary",type:"address"},{indexed:!0,internalType:"uint256",name:"withdrawalQueueId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amountWithdrawn",type:"uint256"},{indexed:!1,internalType:"uint256",name:"totalQueuedWithdrawals",type:"uint256"},{indexed:!1,internalType:"uint256",name:"timestamp",type:"uint256"}],name:"WithdrawQueued",type:"event"},{inputs:[],name:"CBTimestamp",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"acceptOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"insolventSettlements",type:"uint256"},{internalType:"uint256",name:"amountQuoteFreed",type:"uint256"},{internalType:"uint256",name:"amountQuoteReserved",type:"uint256"},{internalType:"uint256",name:"amountBaseFreed",type:"uint256"}],name:"boardSettlement",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"exchangeBase",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"amountQuoteFreed",type:"uint256"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"totalCost",type:"uint256"},{internalType:"uint256",name:"reservedFee",type:"uint256"}],name:"freeQuoteCollateralAndSendPremium",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"getCurrentLiquidity",outputs:[{components:[{internalType:"uint256",name:"freeLiquidity",type:"uint256"},{internalType:"uint256",name:"burnableLiquidity",type:"uint256"},{internalType:"uint256",name:"usedCollatLiquidity",type:"uint256"},{internalType:"uint256",name:"pendingDeltaLiquidity",type:"uint256"},{internalType:"uint256",name:"usedDeltaLiquidity",type:"uint256"},{internalType:"uint256",name:"NAV",type:"uint256"}],internalType:"struct LiquidityPool.Liquidity",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"spotPrice",type:"uint256"}],name:"getLiquidity",outputs:[{components:[{internalType:"uint256",name:"freeLiquidity",type:"uint256"},{internalType:"uint256",name:"burnableLiquidity",type:"uint256"},{internalType:"uint256",name:"usedCollatLiquidity",type:"uint256"},{internalType:"uint256",name:"pendingDeltaLiquidity",type:"uint256"},{internalType:"uint256",name:"usedDeltaLiquidity",type:"uint256"},{internalType:"uint256",name:"NAV",type:"uint256"}],internalType:"struct LiquidityPool.Liquidity",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[],name:"getLpParams",outputs:[{components:[{internalType:"uint256",name:"minDepositWithdraw",type:"uint256"},{internalType:"uint256",name:"depositDelay",type:"uint256"},{internalType:"uint256",name:"withdrawalDelay",type:"uint256"},{internalType:"uint256",name:"withdrawalFee",type:"uint256"},{internalType:"uint256",name:"liquidityCBThreshold",type:"uint256"},{internalType:"uint256",name:"liquidityCBTimeout",type:"uint256"},{internalType:"uint256",name:"ivVarianceCBThreshold",type:"uint256"},{internalType:"uint256",name:"skewVarianceCBThreshold",type:"uint256"},{internalType:"uint256",name:"ivVarianceCBTimeout",type:"uint256"},{internalType:"uint256",name:"skewVarianceCBTimeout",type:"uint256"},{internalType:"address",name:"guardianMultisig",type:"address"},{internalType:"uint256",name:"guardianDelay",type:"uint256"},{internalType:"uint256",name:"boardSettlementCBTimeout",type:"uint256"},{internalType:"uint256",name:"maxFeePaid",type:"uint256"}],internalType:"struct LiquidityPool.LiquidityPoolParameters",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[],name:"getTokenPrice",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getTokenPriceWithCheck",outputs:[{internalType:"uint256",name:"tokenPrice",type:"uint256"},{internalType:"bool",name:"isStale",type:"bool"},{internalType:"uint256",name:"circuitBreakerExpiry",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getTotalPoolValueQuote",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getTotalTokenSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract SynthetixAdapter",name:"_synthetixAdapter",type:"address"},{internalType:"contract OptionMarket",name:"_optionMarket",type:"address"},{internalType:"contract LiquidityToken",name:"_liquidityToken",type:"address"},{internalType:"contract OptionGreekCache",name:"_greekCache",type:"address"},{internalType:"contract PoolHedger",name:"_poolHedger",type:"address"},{internalType:"contract ShortCollateral",name:"_shortCollateral",type:"address"},{internalType:"contract ERC20",name:"_quoteAsset",type:"address"},{internalType:"contract ERC20",name:"_baseAsset",type:"address"}],name:"init",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"beneficiary",type:"address"},{internalType:"uint256",name:"amountQuote",type:"uint256"}],name:"initiateDeposit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"beneficiary",type:"address"},{internalType:"uint256",name:"amountLiquidityToken",type:"uint256"}],name:"initiateWithdraw",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"insolventSettlementAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"amountBase",type:"uint256"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"totalCost",type:"uint256"},{internalType:"uint256",name:"reservedFee",type:"uint256"}],name:"liquidateBaseAndSendPremium",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"liquidationInsolventAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"amount",type:"uint256"},{components:[{internalType:"uint256",name:"spotPrice",type:"uint256"},{internalType:"bytes32",name:"quoteKey",type:"bytes32"},{internalType:"bytes32",name:"baseKey",type:"bytes32"},{internalType:"uint256",name:"quoteBaseFeeRate",type:"uint256"},{internalType:"uint256",name:"baseQuoteFeeRate",type:"uint256"}],internalType:"struct SynthetixAdapter.ExchangeParams",name:"exchangeParams",type:"tuple"},{internalType:"uint256",name:"freeLiquidity",type:"uint256"}],name:"lockBase",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"freeLiquidity",type:"uint256"}],name:"lockQuote",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"lockedCollateral",outputs:[{internalType:"uint256",name:"quote",type:"uint256"},{internalType:"uint256",name:"base",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"lpParams",outputs:[{internalType:"uint256",name:"minDepositWithdraw",type:"uint256"},{internalType:"uint256",name:"depositDelay",type:"uint256"},{internalType:"uint256",name:"withdrawalDelay",type:"uint256"},{internalType:"uint256",name:"withdrawalFee",type:"uint256"},{internalType:"uint256",name:"liquidityCBThreshold",type:"uint256"},{internalType:"uint256",name:"liquidityCBTimeout",type:"uint256"},{internalType:"uint256",name:"ivVarianceCBThreshold",type:"uint256"},{internalType:"uint256",name:"skewVarianceCBThreshold",type:"uint256"},{internalType:"uint256",name:"ivVarianceCBTimeout",type:"uint256"},{internalType:"uint256",name:"skewVarianceCBTimeout",type:"uint256"},{internalType:"address",name:"guardianMultisig",type:"address"},{internalType:"uint256",name:"guardianDelay",type:"uint256"},{internalType:"uint256",name:"boardSettlementCBTimeout",type:"uint256"},{internalType:"uint256",name:"maxFeePaid",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"nextQueuedDepositId",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"nextQueuedWithdrawalId",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_owner",type:"address"}],name:"nominateNewOwner",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"nominatedOwner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"poolHedger",outputs:[{internalType:"contract PoolHedger",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"limit",type:"uint256"}],name:"processDepositQueue",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"limit",type:"uint256"}],name:"processWithdrawalQueue",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"queuedDepositHead",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"queuedDeposits",outputs:[{internalType:"uint256",name:"id",type:"uint256"},{internalType:"address",name:"beneficiary",type:"address"},{internalType:"uint256",name:"amountLiquidity",type:"uint256"},{internalType:"uint256",name:"mintedTokens",type:"uint256"},{internalType:"uint256",name:"depositInitiatedTime",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"queuedWithdrawalHead",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"queuedWithdrawals",outputs:[{internalType:"uint256",name:"id",type:"uint256"},{internalType:"address",name:"beneficiary",type:"address"},{internalType:"uint256",name:"amountTokens",type:"uint256"},{internalType:"uint256",name:"quoteSent",type:"uint256"},{internalType:"uint256",name:"withdrawInitiatedTime",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{components:[{internalType:"uint256",name:"spotPrice",type:"uint256"},{internalType:"bytes32",name:"quoteKey",type:"bytes32"},{internalType:"bytes32",name:"baseKey",type:"bytes32"},{internalType:"uint256",name:"quoteBaseFeeRate",type:"uint256"},{internalType:"uint256",name:"baseQuoteFeeRate",type:"uint256"}],internalType:"struct SynthetixAdapter.ExchangeParams",name:"exchangeParams",type:"tuple"},{internalType:"uint256",name:"amountBase",type:"uint256"}],name:"reclaimInsolventBase",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"spotPrice",type:"uint256"},{internalType:"uint256",name:"amountQuote",type:"uint256"}],name:"reclaimInsolventQuote",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"user",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"sendSettlementValue",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"premium",type:"uint256"},{internalType:"uint256",name:"freeLiquidity",type:"uint256"},{internalType:"uint256",name:"reservedFee",type:"uint256"}],name:"sendShortPremium",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"uint256",name:"minDepositWithdraw",type:"uint256"},{internalType:"uint256",name:"depositDelay",type:"uint256"},{internalType:"uint256",name:"withdrawalDelay",type:"uint256"},{internalType:"uint256",name:"withdrawalFee",type:"uint256"},{internalType:"uint256",name:"liquidityCBThreshold",type:"uint256"},{internalType:"uint256",name:"liquidityCBTimeout",type:"uint256"},{internalType:"uint256",name:"ivVarianceCBThreshold",type:"uint256"},{internalType:"uint256",name:"skewVarianceCBThreshold",type:"uint256"},{internalType:"uint256",name:"ivVarianceCBTimeout",type:"uint256"},{internalType:"uint256",name:"skewVarianceCBTimeout",type:"uint256"},{internalType:"address",name:"guardianMultisig",type:"address"},{internalType:"uint256",name:"guardianDelay",type:"uint256"},{internalType:"uint256",name:"boardSettlementCBTimeout",type:"uint256"},{internalType:"uint256",name:"maxFeePaid",type:"uint256"}],internalType:"struct LiquidityPool.LiquidityPoolParameters",name:"_lpParams",type:"tuple"}],name:"setLiquidityPoolParameters",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract PoolHedger",name:"newPoolHedger",type:"address"}],name:"setPoolHedger",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"totalOutstandingSettlements",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalQueuedDeposits",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalQueuedWithdrawals",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"spotPrice",type:"uint256"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferQuoteToHedge",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"updateCBs",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"updateDelegateApproval",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"insolvencyAmountInQuote",type:"uint256"}],name:"updateLiquidationInsolvency",outputs:[],stateMutability:"nonpayable",type:"function"}],Ca=[{inputs:[{internalType:"string",name:"name_",type:"string"},{internalType:"string",name:"symbol_",type:"string"}],stateMutability:"nonpayable",type:"constructor"},{inputs:[{internalType:"address",name:"thrower",type:"address"}],name:"AlreadyInitialised",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"liquidityPool",type:"address"}],name:"OnlyLiquidityPool",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"nominatedOwner",type:"address"}],name:"OnlyNominatedOwner",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"owner",type:"address"}],name:"OnlyOwner",type:"error"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"contract ILiquidityTracker",name:"liquidityTracker",type:"address"}],name:"LiquidityTrackerSet",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"oldOwner",type:"address"},{indexed:!1,internalType:"address",name:"newOwner",type:"address"}],name:"OwnerChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"newOwner",type:"address"}],name:"OwnerNominated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"},{inputs:[],name:"acceptOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"tokenAmount",type:"uint256"}],name:"burn",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"subtractedValue",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_liquidityPool",type:"address"}],name:"init",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"liquidityPool",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"liquidityTracker",outputs:[{internalType:"contract ILiquidityTracker",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"tokenAmount",type:"uint256"}],name:"mint",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_owner",type:"address"}],name:"nominateNewOwner",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"nominatedOwner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract ILiquidityTracker",name:"_liquidityTracker",type:"address"}],name:"setLiquidityTracker",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"}],Ma=[{inputs:[],stateMutability:"nonpayable",type:"constructor"},{inputs:[{internalType:"address",name:"thrower",type:"address"}],name:"AlreadyInitialised",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"boardId",type:"uint256"},{internalType:"uint256",name:"newStrikesLength",type:"uint256"},{internalType:"uint256",name:"maxStrikesPerBoard",type:"uint256"}],name:"BoardStrikeLimitExceeded",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"boardId",type:"uint256"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"currentTimestamp",type:"uint256"}],name:"CannotUpdateExpiredBoard",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"timestamp",type:"uint256"},{internalType:"uint256",name:"lastObservedTimestamp",type:"uint256"}],name:"InvalidBlockTimestamp",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"boardId",type:"uint256"}],name:"InvalidBoardId",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{components:[{internalType:"uint256",name:"ivGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"skewGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"shortVolShock",type:"uint256"},{internalType:"uint256",name:"shortPostCutoffVolShock",type:"uint256"},{internalType:"uint256",name:"longVolShock",type:"uint256"},{internalType:"uint256",name:"longPostCutoffVolShock",type:"uint256"},{internalType:"uint256",name:"liquidateVolShock",type:"uint256"},{internalType:"uint256",name:"liquidatePostCutoffVolShock",type:"uint256"},{internalType:"uint256",name:"shortSpotMin",type:"uint256"},{internalType:"uint256",name:"liquidateSpotMin",type:"uint256"}],internalType:"struct OptionGreekCache.ForceCloseParameters",name:"forceCloseParams",type:"tuple"}],name:"InvalidForceCloseParameters",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{components:[{internalType:"uint256",name:"maxStrikesPerBoard",type:"uint256"},{internalType:"uint256",name:"acceptableSpotPricePercentMove",type:"uint256"},{internalType:"uint256",name:"staleUpdateDuration",type:"uint256"},{internalType:"uint256",name:"varianceIvGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"varianceSkewGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"optionValueIvGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"optionValueSkewGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"gwavSkewFloor",type:"uint256"},{internalType:"uint256",name:"gwavSkewCap",type:"uint256"},{internalType:"int256",name:"rateAndCarry",type:"int256"}],internalType:"struct OptionGreekCache.GreekCacheParameters",name:"greekCacheParams",type:"tuple"}],name:"InvalidGreekCacheParameters",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{components:[{internalType:"uint256",name:"minStaticQuoteCollateral",type:"uint256"},{internalType:"uint256",name:"minStaticBaseCollateral",type:"uint256"},{internalType:"uint256",name:"shockVolA",type:"uint256"},{internalType:"uint256",name:"shockVolPointA",type:"uint256"},{internalType:"uint256",name:"shockVolB",type:"uint256"},{internalType:"uint256",name:"shockVolPointB",type:"uint256"},{internalType:"uint256",name:"callSpotPriceShock",type:"uint256"},{internalType:"uint256",name:"putSpotPriceShock",type:"uint256"}],internalType:"struct OptionGreekCache.MinCollateralParameters",name:"minCollatParams",type:"tuple"}],name:"InvalidMinCollatParams",type:"error"},{inputs:[],name:"LnNegativeUndefined",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"nominatedOwner",type:"address"}],name:"OnlyNominatedOwner",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"optionMarket",type:"address"}],name:"OnlyOptionMarket",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"optionMarketPricer",type:"address"}],name:"OnlyOptionMarketPricer",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"owner",type:"address"}],name:"OnlyOwner",type:"error"},{inputs:[],name:"Overflow",type:"error"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"boardId",type:"uint256"}],name:"BoardCacheRemoved",type:"event"},{anonymous:!1,inputs:[{components:[{internalType:"uint256",name:"id",type:"uint256"},{internalType:"uint256[]",name:"strikes",type:"uint256[]"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"iv",type:"uint256"},{components:[{internalType:"int256",name:"netDelta",type:"int256"},{internalType:"int256",name:"netStdVega",type:"int256"},{internalType:"int256",name:"netOptionValue",type:"int256"}],internalType:"struct OptionGreekCache.NetGreeks",name:"netGreeks",type:"tuple"},{internalType:"uint256",name:"updatedAt",type:"uint256"},{internalType:"uint256",name:"updatedAtPrice",type:"uint256"},{internalType:"uint256",name:"maxSkewVariance",type:"uint256"},{internalType:"uint256",name:"ivVariance",type:"uint256"}],indexed:!1,internalType:"struct OptionGreekCache.OptionBoardCache",name:"boardCache",type:"tuple"}],name:"BoardCacheUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"boardId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newIv",type:"uint256"},{indexed:!1,internalType:"uint256",name:"globalMaxIvVariance",type:"uint256"}],name:"BoardIvUpdated",type:"event"},{anonymous:!1,inputs:[{components:[{internalType:"uint256",name:"ivGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"skewGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"shortVolShock",type:"uint256"},{internalType:"uint256",name:"shortPostCutoffVolShock",type:"uint256"},{internalType:"uint256",name:"longVolShock",type:"uint256"},{internalType:"uint256",name:"longPostCutoffVolShock",type:"uint256"},{internalType:"uint256",name:"liquidateVolShock",type:"uint256"},{internalType:"uint256",name:"liquidatePostCutoffVolShock",type:"uint256"},{internalType:"uint256",name:"shortSpotMin",type:"uint256"},{internalType:"uint256",name:"liquidateSpotMin",type:"uint256"}],indexed:!1,internalType:"struct OptionGreekCache.ForceCloseParameters",name:"params",type:"tuple"}],name:"ForceCloseParametersSet",type:"event"},{anonymous:!1,inputs:[{components:[{internalType:"uint256",name:"minUpdatedAt",type:"uint256"},{internalType:"uint256",name:"minUpdatedAtPrice",type:"uint256"},{internalType:"uint256",name:"maxUpdatedAtPrice",type:"uint256"},{internalType:"uint256",name:"maxSkewVariance",type:"uint256"},{internalType:"uint256",name:"maxIvVariance",type:"uint256"},{components:[{internalType:"int256",name:"netDelta",type:"int256"},{internalType:"int256",name:"netStdVega",type:"int256"},{internalType:"int256",name:"netOptionValue",type:"int256"}],internalType:"struct OptionGreekCache.NetGreeks",name:"netGreeks",type:"tuple"}],indexed:!1,internalType:"struct OptionGreekCache.GlobalCache",name:"globalCache",type:"tuple"}],name:"GlobalCacheUpdated",type:"event"},{anonymous:!1,inputs:[{components:[{internalType:"uint256",name:"maxStrikesPerBoard",type:"uint256"},{internalType:"uint256",name:"acceptableSpotPricePercentMove",type:"uint256"},{internalType:"uint256",name:"staleUpdateDuration",type:"uint256"},{internalType:"uint256",name:"varianceIvGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"varianceSkewGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"optionValueIvGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"optionValueSkewGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"gwavSkewFloor",type:"uint256"},{internalType:"uint256",name:"gwavSkewCap",type:"uint256"},{internalType:"int256",name:"rateAndCarry",type:"int256"}],indexed:!1,internalType:"struct OptionGreekCache.GreekCacheParameters",name:"params",type:"tuple"}],name:"GreekCacheParametersSet",type:"event"},{anonymous:!1,inputs:[{components:[{internalType:"uint256",name:"minStaticQuoteCollateral",type:"uint256"},{internalType:"uint256",name:"minStaticBaseCollateral",type:"uint256"},{internalType:"uint256",name:"shockVolA",type:"uint256"},{internalType:"uint256",name:"shockVolPointA",type:"uint256"},{internalType:"uint256",name:"shockVolB",type:"uint256"},{internalType:"uint256",name:"shockVolPointB",type:"uint256"},{internalType:"uint256",name:"callSpotPriceShock",type:"uint256"},{internalType:"uint256",name:"putSpotPriceShock",type:"uint256"}],indexed:!1,internalType:"struct OptionGreekCache.MinCollateralParameters",name:"params",type:"tuple"}],name:"MinCollateralParametersSet",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"oldOwner",type:"address"},{indexed:!1,internalType:"address",name:"newOwner",type:"address"}],name:"OwnerChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"newOwner",type:"address"}],name:"OwnerNominated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"strikeId",type:"uint256"}],name:"StrikeCacheRemoved",type:"event"},{anonymous:!1,inputs:[{components:[{internalType:"uint256",name:"id",type:"uint256"},{internalType:"uint256",name:"boardId",type:"uint256"},{internalType:"uint256",name:"strikePrice",type:"uint256"},{internalType:"uint256",name:"skew",type:"uint256"},{components:[{internalType:"int256",name:"callDelta",type:"int256"},{internalType:"int256",name:"putDelta",type:"int256"},{internalType:"uint256",name:"stdVega",type:"uint256"},{internalType:"uint256",name:"callPrice",type:"uint256"},{internalType:"uint256",name:"putPrice",type:"uint256"}],internalType:"struct OptionGreekCache.StrikeGreeks",name:"greeks",type:"tuple"},{internalType:"int256",name:"callExposure",type:"int256"},{internalType:"int256",name:"putExposure",type:"int256"},{internalType:"uint256",name:"skewVariance",type:"uint256"}],indexed:!1,internalType:"struct OptionGreekCache.StrikeCache",name:"strikeCache",type:"tuple"}],name:"StrikeCacheUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"strikeId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newSkew",type:"uint256"},{indexed:!1,internalType:"uint256",name:"globalMaxSkewVariance",type:"uint256"}],name:"StrikeSkewUpdated",type:"event"},{inputs:[],name:"acceptOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"uint256",name:"id",type:"uint256"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"iv",type:"uint256"},{internalType:"bool",name:"frozen",type:"bool"},{internalType:"uint256[]",name:"strikeIds",type:"uint256[]"}],internalType:"struct OptionMarket.OptionBoard",name:"board",type:"tuple"},{components:[{internalType:"uint256",name:"id",type:"uint256"},{internalType:"uint256",name:"strikePrice",type:"uint256"},{internalType:"uint256",name:"skew",type:"uint256"},{internalType:"uint256",name:"longCall",type:"uint256"},{internalType:"uint256",name:"shortCallBase",type:"uint256"},{internalType:"uint256",name:"shortCallQuote",type:"uint256"},{internalType:"uint256",name:"longPut",type:"uint256"},{internalType:"uint256",name:"shortPut",type:"uint256"},{internalType:"uint256",name:"boardId",type:"uint256"}],internalType:"struct OptionMarket.Strike[]",name:"strikes",type:"tuple[]"}],name:"addBoard",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"boardId",type:"uint256"},{internalType:"uint256",name:"strikeId",type:"uint256"},{internalType:"uint256",name:"strikePrice",type:"uint256"},{internalType:"uint256",name:"skew",type:"uint256"}],name:"addStrikeToBoard",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"boardId",type:"uint256"}],name:"getBoardGreeksView",outputs:[{components:[{components:[{internalType:"int256",name:"netDelta",type:"int256"},{internalType:"int256",name:"netStdVega",type:"int256"},{internalType:"int256",name:"netOptionValue",type:"int256"}],internalType:"struct OptionGreekCache.NetGreeks",name:"boardGreeks",type:"tuple"},{internalType:"uint256",name:"ivGWAV",type:"uint256"},{components:[{internalType:"int256",name:"callDelta",type:"int256"},{internalType:"int256",name:"putDelta",type:"int256"},{internalType:"uint256",name:"stdVega",type:"uint256"},{internalType:"uint256",name:"callPrice",type:"uint256"},{internalType:"uint256",name:"putPrice",type:"uint256"}],internalType:"struct OptionGreekCache.StrikeGreeks[]",name:"strikeGreeks",type:"tuple[]"},{internalType:"uint256[]",name:"skewGWAVs",type:"uint256[]"}],internalType:"struct OptionGreekCache.BoardGreeksView",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[],name:"getForceCloseParams",outputs:[{components:[{internalType:"uint256",name:"ivGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"skewGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"shortVolShock",type:"uint256"},{internalType:"uint256",name:"shortPostCutoffVolShock",type:"uint256"},{internalType:"uint256",name:"longVolShock",type:"uint256"},{internalType:"uint256",name:"longPostCutoffVolShock",type:"uint256"},{internalType:"uint256",name:"liquidateVolShock",type:"uint256"},{internalType:"uint256",name:"liquidatePostCutoffVolShock",type:"uint256"},{internalType:"uint256",name:"shortSpotMin",type:"uint256"},{internalType:"uint256",name:"liquidateSpotMin",type:"uint256"}],internalType:"struct OptionGreekCache.ForceCloseParameters",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[],name:"getGlobalCache",outputs:[{components:[{internalType:"uint256",name:"minUpdatedAt",type:"uint256"},{internalType:"uint256",name:"minUpdatedAtPrice",type:"uint256"},{internalType:"uint256",name:"maxUpdatedAtPrice",type:"uint256"},{internalType:"uint256",name:"maxSkewVariance",type:"uint256"},{internalType:"uint256",name:"maxIvVariance",type:"uint256"},{components:[{internalType:"int256",name:"netDelta",type:"int256"},{internalType:"int256",name:"netStdVega",type:"int256"},{internalType:"int256",name:"netOptionValue",type:"int256"}],internalType:"struct OptionGreekCache.NetGreeks",name:"netGreeks",type:"tuple"}],internalType:"struct OptionGreekCache.GlobalCache",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[],name:"getGlobalNetDelta",outputs:[{internalType:"int256",name:"",type:"int256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getGlobalOptionValue",outputs:[{internalType:"int256",name:"",type:"int256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getGreekCacheParams",outputs:[{components:[{internalType:"uint256",name:"maxStrikesPerBoard",type:"uint256"},{internalType:"uint256",name:"acceptableSpotPricePercentMove",type:"uint256"},{internalType:"uint256",name:"staleUpdateDuration",type:"uint256"},{internalType:"uint256",name:"varianceIvGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"varianceSkewGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"optionValueIvGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"optionValueSkewGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"gwavSkewFloor",type:"uint256"},{internalType:"uint256",name:"gwavSkewCap",type:"uint256"},{internalType:"int256",name:"rateAndCarry",type:"int256"}],internalType:"struct OptionGreekCache.GreekCacheParameters",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"boardId",type:"uint256"},{internalType:"uint256",name:"secondsAgo",type:"uint256"}],name:"getIvGWAV",outputs:[{internalType:"uint256",name:"ivGWAV",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getMinCollatParams",outputs:[{components:[{internalType:"uint256",name:"minStaticQuoteCollateral",type:"uint256"},{internalType:"uint256",name:"minStaticBaseCollateral",type:"uint256"},{internalType:"uint256",name:"shockVolA",type:"uint256"},{internalType:"uint256",name:"shockVolPointA",type:"uint256"},{internalType:"uint256",name:"shockVolB",type:"uint256"},{internalType:"uint256",name:"shockVolPointB",type:"uint256"},{internalType:"uint256",name:"callSpotPriceShock",type:"uint256"},{internalType:"uint256",name:"putSpotPriceShock",type:"uint256"}],internalType:"struct OptionGreekCache.MinCollateralParameters",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"},{internalType:"uint256",name:"strikePrice",type:"uint256"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"spotPrice",type:"uint256"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"getMinCollateral",outputs:[{internalType:"uint256",name:"minCollateral",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"boardId",type:"uint256"}],name:"getOptionBoardCache",outputs:[{components:[{internalType:"uint256",name:"id",type:"uint256"},{internalType:"uint256[]",name:"strikes",type:"uint256[]"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"iv",type:"uint256"},{components:[{internalType:"int256",name:"netDelta",type:"int256"},{internalType:"int256",name:"netStdVega",type:"int256"},{internalType:"int256",name:"netOptionValue",type:"int256"}],internalType:"struct OptionGreekCache.NetGreeks",name:"netGreeks",type:"tuple"},{internalType:"uint256",name:"updatedAt",type:"uint256"},{internalType:"uint256",name:"updatedAtPrice",type:"uint256"},{internalType:"uint256",name:"maxSkewVariance",type:"uint256"},{internalType:"uint256",name:"ivVariance",type:"uint256"}],internalType:"struct OptionGreekCache.OptionBoardCache",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{components:[{internalType:"bool",name:"isBuy",type:"bool"},{internalType:"bool",name:"isForceClose",type:"bool"},{internalType:"enum OptionMarket.TradeDirection",name:"tradeDirection",type:"uint8"},{internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"strikePrice",type:"uint256"},{components:[{internalType:"uint256",name:"freeLiquidity",type:"uint256"},{internalType:"uint256",name:"burnableLiquidity",type:"uint256"},{internalType:"uint256",name:"usedCollatLiquidity",type:"uint256"},{internalType:"uint256",name:"pendingDeltaLiquidity",type:"uint256"},{internalType:"uint256",name:"usedDeltaLiquidity",type:"uint256"},{internalType:"uint256",name:"NAV",type:"uint256"}],internalType:"struct LiquidityPool.Liquidity",name:"liquidity",type:"tuple"},{components:[{internalType:"uint256",name:"spotPrice",type:"uint256"},{internalType:"bytes32",name:"quoteKey",type:"bytes32"},{internalType:"bytes32",name:"baseKey",type:"bytes32"},{internalType:"uint256",name:"quoteBaseFeeRate",type:"uint256"},{internalType:"uint256",name:"baseQuoteFeeRate",type:"uint256"}],internalType:"struct SynthetixAdapter.ExchangeParams",name:"exchangeParams",type:"tuple"}],internalType:"struct OptionMarket.TradeParameters",name:"trade",type:"tuple"},{components:[{internalType:"uint256",name:"id",type:"uint256"},{internalType:"uint256",name:"strikePrice",type:"uint256"},{internalType:"uint256",name:"skew",type:"uint256"},{internalType:"uint256",name:"longCall",type:"uint256"},{internalType:"uint256",name:"shortCallBase",type:"uint256"},{internalType:"uint256",name:"shortCallQuote",type:"uint256"},{internalType:"uint256",name:"longPut",type:"uint256"},{internalType:"uint256",name:"shortPut",type:"uint256"},{internalType:"uint256",name:"boardId",type:"uint256"}],internalType:"struct OptionMarket.Strike",name:"strike",type:"tuple"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"newVol",type:"uint256"},{internalType:"bool",name:"isPostCutoff",type:"bool"}],name:"getPriceForForceClose",outputs:[{internalType:"uint256",name:"optionPrice",type:"uint256"},{internalType:"uint256",name:"forceCloseVol",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"timeToMaturity",type:"uint256"}],name:"getShockVol",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"strikeId",type:"uint256"},{internalType:"uint256",name:"secondsAgo",type:"uint256"}],name:"getSkewGWAV",outputs:[{internalType:"uint256",name:"skewGWAV",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"strikeId",type:"uint256"}],name:"getStrikeCache",outputs:[{components:[{internalType:"uint256",name:"id",type:"uint256"},{internalType:"uint256",name:"boardId",type:"uint256"},{internalType:"uint256",name:"strikePrice",type:"uint256"},{internalType:"uint256",name:"skew",type:"uint256"},{components:[{internalType:"int256",name:"callDelta",type:"int256"},{internalType:"int256",name:"putDelta",type:"int256"},{internalType:"uint256",name:"stdVega",type:"uint256"},{internalType:"uint256",name:"callPrice",type:"uint256"},{internalType:"uint256",name:"putPrice",type:"uint256"}],internalType:"struct OptionGreekCache.StrikeGreeks",name:"greeks",type:"tuple"},{internalType:"int256",name:"callExposure",type:"int256"},{internalType:"int256",name:"putExposure",type:"int256"},{internalType:"uint256",name:"skewVariance",type:"uint256"}],internalType:"struct OptionGreekCache.StrikeCache",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract SynthetixAdapter",name:"_synthetixAdapter",type:"address"},{internalType:"contract OptionMarket",name:"_optionMarket",type:"address"},{internalType:"address",name:"_optionMarketPricer",type:"address"}],name:"init",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"boardId",type:"uint256"}],name:"isBoardCacheStale",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"spotPrice",type:"uint256"}],name:"isGlobalCacheStale",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_owner",type:"address"}],name:"nominateNewOwner",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"nominatedOwner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"boardId",type:"uint256"}],name:"removeBoard",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"boardId",type:"uint256"},{internalType:"uint256",name:"newBaseIv",type:"uint256"}],name:"setBoardIv",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"uint256",name:"ivGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"skewGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"shortVolShock",type:"uint256"},{internalType:"uint256",name:"shortPostCutoffVolShock",type:"uint256"},{internalType:"uint256",name:"longVolShock",type:"uint256"},{internalType:"uint256",name:"longPostCutoffVolShock",type:"uint256"},{internalType:"uint256",name:"liquidateVolShock",type:"uint256"},{internalType:"uint256",name:"liquidatePostCutoffVolShock",type:"uint256"},{internalType:"uint256",name:"shortSpotMin",type:"uint256"},{internalType:"uint256",name:"liquidateSpotMin",type:"uint256"}],internalType:"struct OptionGreekCache.ForceCloseParameters",name:"_forceCloseParams",type:"tuple"}],name:"setForceCloseParameters",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"uint256",name:"maxStrikesPerBoard",type:"uint256"},{internalType:"uint256",name:"acceptableSpotPricePercentMove",type:"uint256"},{internalType:"uint256",name:"staleUpdateDuration",type:"uint256"},{internalType:"uint256",name:"varianceIvGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"varianceSkewGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"optionValueIvGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"optionValueSkewGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"gwavSkewFloor",type:"uint256"},{internalType:"uint256",name:"gwavSkewCap",type:"uint256"},{internalType:"int256",name:"rateAndCarry",type:"int256"}],internalType:"struct OptionGreekCache.GreekCacheParameters",name:"_greekCacheParams",type:"tuple"}],name:"setGreekCacheParameters",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"uint256",name:"minStaticQuoteCollateral",type:"uint256"},{internalType:"uint256",name:"minStaticBaseCollateral",type:"uint256"},{internalType:"uint256",name:"shockVolA",type:"uint256"},{internalType:"uint256",name:"shockVolPointA",type:"uint256"},{internalType:"uint256",name:"shockVolB",type:"uint256"},{internalType:"uint256",name:"shockVolPointB",type:"uint256"},{internalType:"uint256",name:"callSpotPriceShock",type:"uint256"},{internalType:"uint256",name:"putSpotPriceShock",type:"uint256"}],internalType:"struct OptionGreekCache.MinCollateralParameters",name:"_minCollatParams",type:"tuple"}],name:"setMinCollateralParameters",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"strikeId",type:"uint256"},{internalType:"uint256",name:"newSkew",type:"uint256"}],name:"setStrikeSkew",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"boardId",type:"uint256"}],name:"updateBoardCachedGreeks",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"uint256",name:"id",type:"uint256"},{internalType:"uint256",name:"strikePrice",type:"uint256"},{internalType:"uint256",name:"skew",type:"uint256"},{internalType:"uint256",name:"longCall",type:"uint256"},{internalType:"uint256",name:"shortCallBase",type:"uint256"},{internalType:"uint256",name:"shortCallQuote",type:"uint256"},{internalType:"uint256",name:"longPut",type:"uint256"},{internalType:"uint256",name:"shortPut",type:"uint256"},{internalType:"uint256",name:"boardId",type:"uint256"}],internalType:"struct OptionMarket.Strike",name:"strike",type:"tuple"},{components:[{internalType:"bool",name:"isBuy",type:"bool"},{internalType:"bool",name:"isForceClose",type:"bool"},{internalType:"enum OptionMarket.TradeDirection",name:"tradeDirection",type:"uint8"},{internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"strikePrice",type:"uint256"},{components:[{internalType:"uint256",name:"freeLiquidity",type:"uint256"},{internalType:"uint256",name:"burnableLiquidity",type:"uint256"},{internalType:"uint256",name:"usedCollatLiquidity",type:"uint256"},{internalType:"uint256",name:"pendingDeltaLiquidity",type:"uint256"},{internalType:"uint256",name:"usedDeltaLiquidity",type:"uint256"},{internalType:"uint256",name:"NAV",type:"uint256"}],internalType:"struct LiquidityPool.Liquidity",name:"liquidity",type:"tuple"},{components:[{internalType:"uint256",name:"spotPrice",type:"uint256"},{internalType:"bytes32",name:"quoteKey",type:"bytes32"},{internalType:"bytes32",name:"baseKey",type:"bytes32"},{internalType:"uint256",name:"quoteBaseFeeRate",type:"uint256"},{internalType:"uint256",name:"baseQuoteFeeRate",type:"uint256"}],internalType:"struct SynthetixAdapter.ExchangeParams",name:"exchangeParams",type:"tuple"}],internalType:"struct OptionMarket.TradeParameters",name:"trade",type:"tuple"},{internalType:"uint256",name:"iv",type:"uint256"},{internalType:"uint256",name:"skew",type:"uint256"},{internalType:"bool",name:"isPostCutoff",type:"bool"}],name:"updateStrikeExposureAndGetPrice",outputs:[{components:[{internalType:"uint256",name:"optionPrice",type:"uint256"},{internalType:"int256",name:"preTradeAmmNetStdVega",type:"int256"},{internalType:"int256",name:"postTradeAmmNetStdVega",type:"int256"},{internalType:"int256",name:"callDelta",type:"int256"},{internalType:"uint256",name:"volTraded",type:"uint256"},{internalType:"uint256",name:"ivVariance",type:"uint256"},{internalType:"uint256",name:"vega",type:"uint256"}],internalType:"struct OptionGreekCache.TradePricing",name:"pricing",type:"tuple"}],stateMutability:"nonpayable",type:"function"}],Oa=[{inputs:[],stateMutability:"nonpayable",type:"constructor"},{inputs:[{internalType:"address",name:"thrower",type:"address"}],name:"AlreadyInitialised",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"BaseTransferFailed",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"boardId",type:"uint256"}],name:"BoardAlreadySettled",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"boardId",type:"uint256"},{internalType:"uint256",name:"boardExpiry",type:"uint256"},{internalType:"uint256",name:"currentTime",type:"uint256"}],name:"BoardExpired",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"boardId",type:"uint256"}],name:"BoardIsFrozen",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"boardId",type:"uint256"}],name:"BoardNotExpired",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"boardId",type:"uint256"}],name:"BoardNotFrozen",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"enum OptionMarket.NonZeroValues",name:"valueType",type:"uint8"}],name:"ExpectedNonZeroValue",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"boardId",type:"uint256"}],name:"InvalidBoardId",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"currentTime",type:"uint256"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"maxBoardExpiry",type:"uint256"}],name:"InvalidExpiryTimestamp",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{components:[{internalType:"uint256",name:"maxBoardExpiry",type:"uint256"},{internalType:"address",name:"securityModule",type:"address"},{internalType:"uint256",name:"feePortionReserved",type:"uint256"},{internalType:"uint256",name:"staticBaseSettlementFee",type:"uint256"}],internalType:"struct OptionMarket.OptionMarketParameters",name:"optionMarketParams",type:"tuple"}],name:"InvalidOptionMarketParams",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"strikeId",type:"uint256"}],name:"InvalidStrikeId",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"nominatedOwner",type:"address"}],name:"OnlyNominatedOwner",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"owner",type:"address"}],name:"OnlyOwner",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"securityModule",type:"address"}],name:"OnlySecurityModule",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"QuoteTransferFailed",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"strikesLength",type:"uint256"},{internalType:"uint256",name:"skewsLength",type:"uint256"}],name:"StrikeSkewLengthMismatch",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"totalCost",type:"uint256"},{internalType:"uint256",name:"minCost",type:"uint256"},{internalType:"uint256",name:"maxCost",type:"uint256"}],name:"TotalCostOutsideOfSpecifiedBounds",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"iterations",type:"uint256"},{internalType:"uint256",name:"expectedAmount",type:"uint256"},{internalType:"uint256",name:"tradeAmount",type:"uint256"},{internalType:"uint256",name:"totalAmount",type:"uint256"}],name:"TradeIterationsHasRemainder",type:"error"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"boardId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"baseIv",type:"uint256"}],name:"BoardBaseIvSet",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"boardId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"expiry",type:"uint256"},{indexed:!1,internalType:"uint256",name:"baseIv",type:"uint256"},{indexed:!1,internalType:"bool",name:"frozen",type:"bool"}],name:"BoardCreated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"boardId",type:"uint256"},{indexed:!1,internalType:"bool",name:"frozen",type:"bool"}],name:"BoardFrozen",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"boardId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"spotPriceAtExpiry",type:"uint256"},{indexed:!1,internalType:"uint256",name:"totalUserLongProfitQuote",type:"uint256"},{indexed:!1,internalType:"uint256",name:"totalBoardLongCallCollateral",type:"uint256"},{indexed:!1,internalType:"uint256",name:"totalBoardLongPutCollateral",type:"uint256"},{indexed:!1,internalType:"uint256",name:"totalAMMShortCallProfitBase",type:"uint256"},{indexed:!1,internalType:"uint256",name:"totalAMMShortCallProfitQuote",type:"uint256"},{indexed:!1,internalType:"uint256",name:"totalAMMShortPutProfitQuote",type:"uint256"}],name:"BoardSettled",type:"event"},{anonymous:!1,inputs:[{components:[{internalType:"uint256",name:"maxBoardExpiry",type:"uint256"},{internalType:"address",name:"securityModule",type:"address"},{internalType:"uint256",name:"feePortionReserved",type:"uint256"},{internalType:"uint256",name:"staticBaseSettlementFee",type:"uint256"}],indexed:!1,internalType:"struct OptionMarket.OptionMarketParameters",name:"optionMarketParams",type:"tuple"}],name:"OptionMarketParamsSet",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"oldOwner",type:"address"},{indexed:!1,internalType:"address",name:"newOwner",type:"address"}],name:"OwnerChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"newOwner",type:"address"}],name:"OwnerNominated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"securityModule",type:"address"},{indexed:!1,internalType:"uint256",name:"quoteAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"baseAmount",type:"uint256"}],name:"SMClaimed",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"boardId",type:"uint256"},{indexed:!0,internalType:"uint256",name:"strikeId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"strikePrice",type:"uint256"},{indexed:!1,internalType:"uint256",name:"skew",type:"uint256"}],name:"StrikeAdded",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"strikeId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"skew",type:"uint256"}],name:"StrikeSkewSet",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"trader",type:"address"},{indexed:!0,internalType:"uint256",name:"strikeId",type:"uint256"},{indexed:!0,internalType:"uint256",name:"positionId",type:"uint256"},{components:[{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"strikePrice",type:"uint256"},{internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"},{internalType:"enum OptionMarket.TradeDirection",name:"tradeDirection",type:"uint8"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"setCollateralTo",type:"uint256"},{internalType:"bool",name:"isForceClose",type:"bool"},{internalType:"uint256",name:"spotPrice",type:"uint256"},{internalType:"uint256",name:"reservedFee",type:"uint256"},{internalType:"uint256",name:"totalCost",type:"uint256"}],indexed:!1,internalType:"struct OptionMarket.TradeEventData",name:"trade",type:"tuple"},{components:[{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"premium",type:"uint256"},{internalType:"uint256",name:"optionPriceFee",type:"uint256"},{internalType:"uint256",name:"spotPriceFee",type:"uint256"},{components:[{internalType:"int256",name:"preTradeAmmNetStdVega",type:"int256"},{internalType:"int256",name:"postTradeAmmNetStdVega",type:"int256"},{internalType:"uint256",name:"vegaUtil",type:"uint256"},{internalType:"uint256",name:"volTraded",type:"uint256"},{internalType:"uint256",name:"NAV",type:"uint256"},{internalType:"uint256",name:"vegaUtilFee",type:"uint256"}],internalType:"struct OptionMarketPricer.VegaUtilFeeComponents",name:"vegaUtilFee",type:"tuple"},{components:[{internalType:"uint256",name:"varianceFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"vega",type:"uint256"},{internalType:"uint256",name:"vegaCoefficient",type:"uint256"},{internalType:"uint256",name:"skew",type:"uint256"},{internalType:"uint256",name:"skewCoefficient",type:"uint256"},{internalType:"uint256",name:"ivVariance",type:"uint256"},{internalType:"uint256",name:"ivVarianceCoefficient",type:"uint256"},{internalType:"uint256",name:"varianceFee",type:"uint256"}],internalType:"struct OptionMarketPricer.VarianceFeeComponents",name:"varianceFee",type:"tuple"},{internalType:"uint256",name:"totalFee",type:"uint256"},{internalType:"uint256",name:"totalCost",type:"uint256"},{internalType:"uint256",name:"volTraded",type:"uint256"},{internalType:"uint256",name:"newBaseIv",type:"uint256"},{internalType:"uint256",name:"newSkew",type:"uint256"}],indexed:!1,internalType:"struct OptionMarketPricer.TradeResult[]",name:"tradeResults",type:"tuple[]"},{components:[{internalType:"address",name:"rewardBeneficiary",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"uint256",name:"returnCollateral",type:"uint256"},{internalType:"uint256",name:"lpPremiums",type:"uint256"},{internalType:"uint256",name:"lpFee",type:"uint256"},{internalType:"uint256",name:"liquidatorFee",type:"uint256"},{internalType:"uint256",name:"smFee",type:"uint256"},{internalType:"uint256",name:"insolventAmount",type:"uint256"}],indexed:!1,internalType:"struct OptionMarket.LiquidationEventData",name:"liquidation",type:"tuple"},{indexed:!1,internalType:"uint256",name:"timestamp",type:"uint256"}],name:"Trade",type:"event"},{inputs:[],name:"acceptOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"uint256",name:"amountCollateral",type:"uint256"}],name:"addCollateral",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"boardId",type:"uint256"},{internalType:"uint256",name:"strikePrice",type:"uint256"},{internalType:"uint256",name:"skew",type:"uint256"}],name:"addStrikeToBoard",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"boardToPriceAtExpiry",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{components:[{internalType:"uint256",name:"strikeId",type:"uint256"},{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"uint256",name:"iterations",type:"uint256"},{internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"setCollateralTo",type:"uint256"},{internalType:"uint256",name:"minTotalCost",type:"uint256"},{internalType:"uint256",name:"maxTotalCost",type:"uint256"}],internalType:"struct OptionMarket.TradeInputParameters",name:"params",type:"tuple"}],name:"closePosition",outputs:[{components:[{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"uint256",name:"totalCost",type:"uint256"},{internalType:"uint256",name:"totalFee",type:"uint256"}],internalType:"struct OptionMarket.Result",name:"result",type:"tuple"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"baseIV",type:"uint256"},{internalType:"uint256[]",name:"strikePrices",type:"uint256[]"},{internalType:"uint256[]",name:"skews",type:"uint256[]"},{internalType:"bool",name:"frozen",type:"bool"}],name:"createOptionBoard",outputs:[{internalType:"uint256",name:"boardId",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"uint256",name:"strikeId",type:"uint256"},{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"uint256",name:"iterations",type:"uint256"},{internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"setCollateralTo",type:"uint256"},{internalType:"uint256",name:"minTotalCost",type:"uint256"},{internalType:"uint256",name:"maxTotalCost",type:"uint256"}],internalType:"struct OptionMarket.TradeInputParameters",name:"params",type:"tuple"}],name:"forceClosePosition",outputs:[{components:[{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"uint256",name:"totalCost",type:"uint256"},{internalType:"uint256",name:"totalFee",type:"uint256"}],internalType:"struct OptionMarket.Result",name:"result",type:"tuple"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"boardId",type:"uint256"}],name:"forceSettleBoard",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"boardId",type:"uint256"}],name:"getBoardAndStrikeDetails",outputs:[{components:[{internalType:"uint256",name:"id",type:"uint256"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"iv",type:"uint256"},{internalType:"bool",name:"frozen",type:"bool"},{internalType:"uint256[]",name:"strikeIds",type:"uint256[]"}],internalType:"struct OptionMarket.OptionBoard",name:"",type:"tuple"},{components:[{internalType:"uint256",name:"id",type:"uint256"},{internalType:"uint256",name:"strikePrice",type:"uint256"},{internalType:"uint256",name:"skew",type:"uint256"},{internalType:"uint256",name:"longCall",type:"uint256"},{internalType:"uint256",name:"shortCallBase",type:"uint256"},{internalType:"uint256",name:"shortCallQuote",type:"uint256"},{internalType:"uint256",name:"longPut",type:"uint256"},{internalType:"uint256",name:"shortPut",type:"uint256"},{internalType:"uint256",name:"boardId",type:"uint256"}],internalType:"struct OptionMarket.Strike[]",name:"",type:"tuple[]"},{internalType:"uint256[]",name:"",type:"uint256[]"},{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"boardId",type:"uint256"}],name:"getBoardStrikes",outputs:[{internalType:"uint256[]",name:"strikeIds",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[],name:"getLiveBoards",outputs:[{internalType:"uint256[]",name:"_liveBoards",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[],name:"getNumLiveBoards",outputs:[{internalType:"uint256",name:"numLiveBoards",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"boardId",type:"uint256"}],name:"getOptionBoard",outputs:[{components:[{internalType:"uint256",name:"id",type:"uint256"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"iv",type:"uint256"},{internalType:"bool",name:"frozen",type:"bool"},{internalType:"uint256[]",name:"strikeIds",type:"uint256[]"}],internalType:"struct OptionMarket.OptionBoard",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[],name:"getOptionMarketParams",outputs:[{components:[{internalType:"uint256",name:"maxBoardExpiry",type:"uint256"},{internalType:"address",name:"securityModule",type:"address"},{internalType:"uint256",name:"feePortionReserved",type:"uint256"},{internalType:"uint256",name:"staticBaseSettlementFee",type:"uint256"}],internalType:"struct OptionMarket.OptionMarketParameters",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"strikeId",type:"uint256"}],name:"getSettlementParameters",outputs:[{internalType:"uint256",name:"strikePrice",type:"uint256"},{internalType:"uint256",name:"priceAtExpiry",type:"uint256"},{internalType:"uint256",name:"strikeToBaseReturned",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"strikeId",type:"uint256"}],name:"getStrike",outputs:[{components:[{internalType:"uint256",name:"id",type:"uint256"},{internalType:"uint256",name:"strikePrice",type:"uint256"},{internalType:"uint256",name:"skew",type:"uint256"},{internalType:"uint256",name:"longCall",type:"uint256"},{internalType:"uint256",name:"shortCallBase",type:"uint256"},{internalType:"uint256",name:"shortCallQuote",type:"uint256"},{internalType:"uint256",name:"longPut",type:"uint256"},{internalType:"uint256",name:"shortPut",type:"uint256"},{internalType:"uint256",name:"boardId",type:"uint256"}],internalType:"struct OptionMarket.Strike",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"strikeId",type:"uint256"}],name:"getStrikeAndBoard",outputs:[{components:[{internalType:"uint256",name:"id",type:"uint256"},{internalType:"uint256",name:"strikePrice",type:"uint256"},{internalType:"uint256",name:"skew",type:"uint256"},{internalType:"uint256",name:"longCall",type:"uint256"},{internalType:"uint256",name:"shortCallBase",type:"uint256"},{internalType:"uint256",name:"shortCallQuote",type:"uint256"},{internalType:"uint256",name:"longPut",type:"uint256"},{internalType:"uint256",name:"shortPut",type:"uint256"},{internalType:"uint256",name:"boardId",type:"uint256"}],internalType:"struct OptionMarket.Strike",name:"",type:"tuple"},{components:[{internalType:"uint256",name:"id",type:"uint256"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"iv",type:"uint256"},{internalType:"bool",name:"frozen",type:"bool"},{internalType:"uint256[]",name:"strikeIds",type:"uint256[]"}],internalType:"struct OptionMarket.OptionBoard",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"strikeId",type:"uint256"}],name:"getStrikeAndExpiry",outputs:[{internalType:"uint256",name:"strikePrice",type:"uint256"},{internalType:"uint256",name:"expiry",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract SynthetixAdapter",name:"_synthetixAdapter",type:"address"},{internalType:"contract LiquidityPool",name:"_liquidityPool",type:"address"},{internalType:"contract OptionMarketPricer",name:"_optionPricer",type:"address"},{internalType:"contract OptionGreekCache",name:"_greekCache",type:"address"},{internalType:"contract ShortCollateral",name:"_shortCollateral",type:"address"},{internalType:"contract OptionToken",name:"_optionToken",type:"address"},{internalType:"contract IERC20",name:"_quoteAsset",type:"address"},{internalType:"contract IERC20",name:"_baseAsset",type:"address"}],name:"init",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"address",name:"rewardBeneficiary",type:"address"}],name:"liquidatePosition",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_owner",type:"address"}],name:"nominateNewOwner",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"nominatedOwner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{components:[{internalType:"uint256",name:"strikeId",type:"uint256"},{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"uint256",name:"iterations",type:"uint256"},{internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"setCollateralTo",type:"uint256"},{internalType:"uint256",name:"minTotalCost",type:"uint256"},{internalType:"uint256",name:"maxTotalCost",type:"uint256"}],internalType:"struct OptionMarket.TradeInputParameters",name:"params",type:"tuple"}],name:"openPosition",outputs:[{components:[{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"uint256",name:"totalCost",type:"uint256"},{internalType:"uint256",name:"totalFee",type:"uint256"}],internalType:"struct OptionMarket.Result",name:"result",type:"tuple"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"boardId",type:"uint256"},{internalType:"uint256",name:"baseIv",type:"uint256"}],name:"setBoardBaseIv",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"boardId",type:"uint256"},{internalType:"bool",name:"frozen",type:"bool"}],name:"setBoardFrozen",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"uint256",name:"maxBoardExpiry",type:"uint256"},{internalType:"address",name:"securityModule",type:"address"},{internalType:"uint256",name:"feePortionReserved",type:"uint256"},{internalType:"uint256",name:"staticBaseSettlementFee",type:"uint256"}],internalType:"struct OptionMarket.OptionMarketParameters",name:"_optionMarketParams",type:"tuple"}],name:"setOptionMarketParams",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"strikeId",type:"uint256"},{internalType:"uint256",name:"skew",type:"uint256"}],name:"setStrikeSkew",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"boardId",type:"uint256"}],name:"settleExpiredBoard",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"smClaim",outputs:[],stateMutability:"nonpayable",type:"function"}],Sa=[{inputs:[],stateMutability:"nonpayable",type:"constructor"},{inputs:[{internalType:"address",name:"thrower",type:"address"}],name:"AlreadyInitialised",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"int256",name:"strikeCallDelta",type:"int256"},{internalType:"int256",name:"minDelta",type:"int256"},{internalType:"int256",name:"maxDelta",type:"int256"}],name:"ForceCloseDeltaOutOfRange",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"bool",name:"isBuy",type:"bool"},{internalType:"uint256",name:"newSkew",type:"uint256"},{internalType:"uint256",name:"minSkew",type:"uint256"},{internalType:"uint256",name:"maxSkew",type:"uint256"}],name:"ForceCloseSkewOutOfRange",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{components:[{internalType:"uint256",name:"optionPriceFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"optionPriceFee1xPoint",type:"uint256"},{internalType:"uint256",name:"optionPriceFee2xPoint",type:"uint256"},{internalType:"uint256",name:"spotPriceFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"spotPriceFee1xPoint",type:"uint256"},{internalType:"uint256",name:"spotPriceFee2xPoint",type:"uint256"},{internalType:"uint256",name:"vegaFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"standardSize",type:"uint256"},{internalType:"uint256",name:"skewAdjustmentFactor",type:"uint256"}],internalType:"struct OptionMarketPricer.PricingParameters",name:"pricingParams",type:"tuple"}],name:"InvalidPricingParameters",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{components:[{internalType:"int256",name:"minDelta",type:"int256"},{internalType:"int256",name:"minForceCloseDelta",type:"int256"},{internalType:"uint256",name:"tradingCutoff",type:"uint256"},{internalType:"uint256",name:"minBaseIV",type:"uint256"},{internalType:"uint256",name:"maxBaseIV",type:"uint256"},{internalType:"uint256",name:"minSkew",type:"uint256"},{internalType:"uint256",name:"maxSkew",type:"uint256"},{internalType:"uint256",name:"minVol",type:"uint256"},{internalType:"uint256",name:"maxVol",type:"uint256"},{internalType:"uint256",name:"absMinSkew",type:"uint256"},{internalType:"uint256",name:"absMaxSkew",type:"uint256"},{internalType:"bool",name:"capSkewsToAbs",type:"bool"}],internalType:"struct OptionMarketPricer.TradeLimitParameters",name:"tradeLimitParams",type:"tuple"}],name:"InvalidTradeLimitParameters",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"nominatedOwner",type:"address"}],name:"OnlyNominatedOwner",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"optionMarket",type:"address"}],name:"OnlyOptionMarket",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"owner",type:"address"}],name:"OnlyOwner",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"int256",name:"strikeCallDelta",type:"int256"},{internalType:"int256",name:"minDelta",type:"int256"},{internalType:"int256",name:"maxDelta",type:"int256"}],name:"TradeDeltaOutOfRange",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"tradingCutoff",type:"uint256"},{internalType:"uint256",name:"boardExpiry",type:"uint256"},{internalType:"uint256",name:"currentTime",type:"uint256"}],name:"TradingCutoffReached",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"bool",name:"isBuy",type:"bool"},{components:[{internalType:"uint256",name:"vol",type:"uint256"},{internalType:"uint256",name:"baseIv",type:"uint256"},{internalType:"uint256",name:"skew",type:"uint256"}],internalType:"struct OptionMarketPricer.VolComponents",name:"currentVol",type:"tuple"},{components:[{internalType:"uint256",name:"vol",type:"uint256"},{internalType:"uint256",name:"baseIv",type:"uint256"},{internalType:"uint256",name:"skew",type:"uint256"}],internalType:"struct OptionMarketPricer.VolComponents",name:"newVol",type:"tuple"},{components:[{internalType:"uint256",name:"vol",type:"uint256"},{internalType:"uint256",name:"baseIv",type:"uint256"},{internalType:"uint256",name:"skew",type:"uint256"}],internalType:"struct OptionMarketPricer.VolComponents",name:"tradeBounds",type:"tuple"}],name:"VolSkewOrBaseIvOutsideOfTradingBounds",type:"error"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"oldOwner",type:"address"},{indexed:!1,internalType:"address",name:"newOwner",type:"address"}],name:"OwnerChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"newOwner",type:"address"}],name:"OwnerNominated",type:"event"},{anonymous:!1,inputs:[{components:[{internalType:"uint256",name:"optionPriceFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"optionPriceFee1xPoint",type:"uint256"},{internalType:"uint256",name:"optionPriceFee2xPoint",type:"uint256"},{internalType:"uint256",name:"spotPriceFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"spotPriceFee1xPoint",type:"uint256"},{internalType:"uint256",name:"spotPriceFee2xPoint",type:"uint256"},{internalType:"uint256",name:"vegaFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"standardSize",type:"uint256"},{internalType:"uint256",name:"skewAdjustmentFactor",type:"uint256"}],indexed:!1,internalType:"struct OptionMarketPricer.PricingParameters",name:"pricingParams",type:"tuple"}],name:"PricingParametersSet",type:"event"},{anonymous:!1,inputs:[{components:[{internalType:"int256",name:"minDelta",type:"int256"},{internalType:"int256",name:"minForceCloseDelta",type:"int256"},{internalType:"uint256",name:"tradingCutoff",type:"uint256"},{internalType:"uint256",name:"minBaseIV",type:"uint256"},{internalType:"uint256",name:"maxBaseIV",type:"uint256"},{internalType:"uint256",name:"minSkew",type:"uint256"},{internalType:"uint256",name:"maxSkew",type:"uint256"},{internalType:"uint256",name:"minVol",type:"uint256"},{internalType:"uint256",name:"maxVol",type:"uint256"},{internalType:"uint256",name:"absMinSkew",type:"uint256"},{internalType:"uint256",name:"absMaxSkew",type:"uint256"},{internalType:"bool",name:"capSkewsToAbs",type:"bool"}],indexed:!1,internalType:"struct OptionMarketPricer.TradeLimitParameters",name:"tradeLimitParams",type:"tuple"}],name:"TradeLimitParametersSet",type:"event"},{anonymous:!1,inputs:[{components:[{internalType:"uint256",name:"defaultVarianceFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"forceCloseVarianceFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"skewAdjustmentCoefficient",type:"uint256"},{internalType:"uint256",name:"referenceSkew",type:"uint256"},{internalType:"uint256",name:"minimumStaticSkewAdjustment",type:"uint256"},{internalType:"uint256",name:"vegaCoefficient",type:"uint256"},{internalType:"uint256",name:"minimumStaticVega",type:"uint256"},{internalType:"uint256",name:"ivVarianceCoefficient",type:"uint256"},{internalType:"uint256",name:"minimumStaticIvVariance",type:"uint256"}],indexed:!1,internalType:"struct OptionMarketPricer.VarianceFeeParameters",name:"varianceFeeParams",type:"tuple"}],name:"VarianceFeeParametersSet",type:"event"},{inputs:[],name:"acceptOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"getPricingParams",outputs:[{components:[{internalType:"uint256",name:"optionPriceFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"optionPriceFee1xPoint",type:"uint256"},{internalType:"uint256",name:"optionPriceFee2xPoint",type:"uint256"},{internalType:"uint256",name:"spotPriceFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"spotPriceFee1xPoint",type:"uint256"},{internalType:"uint256",name:"spotPriceFee2xPoint",type:"uint256"},{internalType:"uint256",name:"vegaFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"standardSize",type:"uint256"},{internalType:"uint256",name:"skewAdjustmentFactor",type:"uint256"}],internalType:"struct OptionMarketPricer.PricingParameters",name:"pricingParameters",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"pointA",type:"uint256"},{internalType:"uint256",name:"pointB",type:"uint256"},{internalType:"uint256",name:"coefficient",type:"uint256"}],name:"getTimeWeightedFee",outputs:[{internalType:"uint256",name:"timeWeightedFee",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getTradeLimitParams",outputs:[{components:[{internalType:"int256",name:"minDelta",type:"int256"},{internalType:"int256",name:"minForceCloseDelta",type:"int256"},{internalType:"uint256",name:"tradingCutoff",type:"uint256"},{internalType:"uint256",name:"minBaseIV",type:"uint256"},{internalType:"uint256",name:"maxBaseIV",type:"uint256"},{internalType:"uint256",name:"minSkew",type:"uint256"},{internalType:"uint256",name:"maxSkew",type:"uint256"},{internalType:"uint256",name:"minVol",type:"uint256"},{internalType:"uint256",name:"maxVol",type:"uint256"},{internalType:"uint256",name:"absMinSkew",type:"uint256"},{internalType:"uint256",name:"absMaxSkew",type:"uint256"},{internalType:"bool",name:"capSkewsToAbs",type:"bool"}],internalType:"struct OptionMarketPricer.TradeLimitParameters",name:"tradeLimitParameters",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{components:[{internalType:"bool",name:"isBuy",type:"bool"},{internalType:"bool",name:"isForceClose",type:"bool"},{internalType:"enum OptionMarket.TradeDirection",name:"tradeDirection",type:"uint8"},{internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"strikePrice",type:"uint256"},{components:[{internalType:"uint256",name:"freeLiquidity",type:"uint256"},{internalType:"uint256",name:"burnableLiquidity",type:"uint256"},{internalType:"uint256",name:"usedCollatLiquidity",type:"uint256"},{internalType:"uint256",name:"pendingDeltaLiquidity",type:"uint256"},{internalType:"uint256",name:"usedDeltaLiquidity",type:"uint256"},{internalType:"uint256",name:"NAV",type:"uint256"}],internalType:"struct LiquidityPool.Liquidity",name:"liquidity",type:"tuple"},{components:[{internalType:"uint256",name:"spotPrice",type:"uint256"},{internalType:"bytes32",name:"quoteKey",type:"bytes32"},{internalType:"bytes32",name:"baseKey",type:"bytes32"},{internalType:"uint256",name:"quoteBaseFeeRate",type:"uint256"},{internalType:"uint256",name:"baseQuoteFeeRate",type:"uint256"}],internalType:"struct SynthetixAdapter.ExchangeParams",name:"exchangeParams",type:"tuple"}],internalType:"struct OptionMarket.TradeParameters",name:"trade",type:"tuple"},{components:[{internalType:"uint256",name:"optionPrice",type:"uint256"},{internalType:"int256",name:"preTradeAmmNetStdVega",type:"int256"},{internalType:"int256",name:"postTradeAmmNetStdVega",type:"int256"},{internalType:"int256",name:"callDelta",type:"int256"},{internalType:"uint256",name:"volTraded",type:"uint256"},{internalType:"uint256",name:"ivVariance",type:"uint256"},{internalType:"uint256",name:"vega",type:"uint256"}],internalType:"struct OptionGreekCache.TradePricing",name:"pricing",type:"tuple"},{internalType:"uint256",name:"newBaseIv",type:"uint256"},{internalType:"uint256",name:"newSkew",type:"uint256"}],name:"getTradeResult",outputs:[{components:[{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"premium",type:"uint256"},{internalType:"uint256",name:"optionPriceFee",type:"uint256"},{internalType:"uint256",name:"spotPriceFee",type:"uint256"},{components:[{internalType:"int256",name:"preTradeAmmNetStdVega",type:"int256"},{internalType:"int256",name:"postTradeAmmNetStdVega",type:"int256"},{internalType:"uint256",name:"vegaUtil",type:"uint256"},{internalType:"uint256",name:"volTraded",type:"uint256"},{internalType:"uint256",name:"NAV",type:"uint256"},{internalType:"uint256",name:"vegaUtilFee",type:"uint256"}],internalType:"struct OptionMarketPricer.VegaUtilFeeComponents",name:"vegaUtilFee",type:"tuple"},{components:[{internalType:"uint256",name:"varianceFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"vega",type:"uint256"},{internalType:"uint256",name:"vegaCoefficient",type:"uint256"},{internalType:"uint256",name:"skew",type:"uint256"},{internalType:"uint256",name:"skewCoefficient",type:"uint256"},{internalType:"uint256",name:"ivVariance",type:"uint256"},{internalType:"uint256",name:"ivVarianceCoefficient",type:"uint256"},{internalType:"uint256",name:"varianceFee",type:"uint256"}],internalType:"struct OptionMarketPricer.VarianceFeeComponents",name:"varianceFee",type:"tuple"},{internalType:"uint256",name:"totalFee",type:"uint256"},{internalType:"uint256",name:"totalCost",type:"uint256"},{internalType:"uint256",name:"volTraded",type:"uint256"},{internalType:"uint256",name:"newBaseIv",type:"uint256"},{internalType:"uint256",name:"newSkew",type:"uint256"}],internalType:"struct OptionMarketPricer.TradeResult",name:"tradeResult",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{components:[{internalType:"bool",name:"isBuy",type:"bool"},{internalType:"bool",name:"isForceClose",type:"bool"},{internalType:"enum OptionMarket.TradeDirection",name:"tradeDirection",type:"uint8"},{internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"strikePrice",type:"uint256"},{components:[{internalType:"uint256",name:"freeLiquidity",type:"uint256"},{internalType:"uint256",name:"burnableLiquidity",type:"uint256"},{internalType:"uint256",name:"usedCollatLiquidity",type:"uint256"},{internalType:"uint256",name:"pendingDeltaLiquidity",type:"uint256"},{internalType:"uint256",name:"usedDeltaLiquidity",type:"uint256"},{internalType:"uint256",name:"NAV",type:"uint256"}],internalType:"struct LiquidityPool.Liquidity",name:"liquidity",type:"tuple"},{components:[{internalType:"uint256",name:"spotPrice",type:"uint256"},{internalType:"bytes32",name:"quoteKey",type:"bytes32"},{internalType:"bytes32",name:"baseKey",type:"bytes32"},{internalType:"uint256",name:"quoteBaseFeeRate",type:"uint256"},{internalType:"uint256",name:"baseQuoteFeeRate",type:"uint256"}],internalType:"struct SynthetixAdapter.ExchangeParams",name:"exchangeParams",type:"tuple"}],internalType:"struct OptionMarket.TradeParameters",name:"trade",type:"tuple"},{components:[{internalType:"uint256",name:"optionPrice",type:"uint256"},{internalType:"int256",name:"preTradeAmmNetStdVega",type:"int256"},{internalType:"int256",name:"postTradeAmmNetStdVega",type:"int256"},{internalType:"int256",name:"callDelta",type:"int256"},{internalType:"uint256",name:"volTraded",type:"uint256"},{internalType:"uint256",name:"ivVariance",type:"uint256"},{internalType:"uint256",name:"vega",type:"uint256"}],internalType:"struct OptionGreekCache.TradePricing",name:"pricing",type:"tuple"},{internalType:"uint256",name:"skew",type:"uint256"}],name:"getVarianceFee",outputs:[{components:[{internalType:"uint256",name:"varianceFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"vega",type:"uint256"},{internalType:"uint256",name:"vegaCoefficient",type:"uint256"},{internalType:"uint256",name:"skew",type:"uint256"},{internalType:"uint256",name:"skewCoefficient",type:"uint256"},{internalType:"uint256",name:"ivVariance",type:"uint256"},{internalType:"uint256",name:"ivVarianceCoefficient",type:"uint256"},{internalType:"uint256",name:"varianceFee",type:"uint256"}],internalType:"struct OptionMarketPricer.VarianceFeeComponents",name:"varianceFeeComponents",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVarianceFeeParams",outputs:[{components:[{internalType:"uint256",name:"defaultVarianceFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"forceCloseVarianceFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"skewAdjustmentCoefficient",type:"uint256"},{internalType:"uint256",name:"referenceSkew",type:"uint256"},{internalType:"uint256",name:"minimumStaticSkewAdjustment",type:"uint256"},{internalType:"uint256",name:"vegaCoefficient",type:"uint256"},{internalType:"uint256",name:"minimumStaticVega",type:"uint256"},{internalType:"uint256",name:"ivVarianceCoefficient",type:"uint256"},{internalType:"uint256",name:"minimumStaticIvVariance",type:"uint256"}],internalType:"struct OptionMarketPricer.VarianceFeeParameters",name:"varianceFeeParameters",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{components:[{internalType:"bool",name:"isBuy",type:"bool"},{internalType:"bool",name:"isForceClose",type:"bool"},{internalType:"enum OptionMarket.TradeDirection",name:"tradeDirection",type:"uint8"},{internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"strikePrice",type:"uint256"},{components:[{internalType:"uint256",name:"freeLiquidity",type:"uint256"},{internalType:"uint256",name:"burnableLiquidity",type:"uint256"},{internalType:"uint256",name:"usedCollatLiquidity",type:"uint256"},{internalType:"uint256",name:"pendingDeltaLiquidity",type:"uint256"},{internalType:"uint256",name:"usedDeltaLiquidity",type:"uint256"},{internalType:"uint256",name:"NAV",type:"uint256"}],internalType:"struct LiquidityPool.Liquidity",name:"liquidity",type:"tuple"},{components:[{internalType:"uint256",name:"spotPrice",type:"uint256"},{internalType:"bytes32",name:"quoteKey",type:"bytes32"},{internalType:"bytes32",name:"baseKey",type:"bytes32"},{internalType:"uint256",name:"quoteBaseFeeRate",type:"uint256"},{internalType:"uint256",name:"baseQuoteFeeRate",type:"uint256"}],internalType:"struct SynthetixAdapter.ExchangeParams",name:"exchangeParams",type:"tuple"}],internalType:"struct OptionMarket.TradeParameters",name:"trade",type:"tuple"},{components:[{internalType:"uint256",name:"optionPrice",type:"uint256"},{internalType:"int256",name:"preTradeAmmNetStdVega",type:"int256"},{internalType:"int256",name:"postTradeAmmNetStdVega",type:"int256"},{internalType:"int256",name:"callDelta",type:"int256"},{internalType:"uint256",name:"volTraded",type:"uint256"},{internalType:"uint256",name:"ivVariance",type:"uint256"},{internalType:"uint256",name:"vega",type:"uint256"}],internalType:"struct OptionGreekCache.TradePricing",name:"pricing",type:"tuple"}],name:"getVegaUtilFee",outputs:[{components:[{internalType:"int256",name:"preTradeAmmNetStdVega",type:"int256"},{internalType:"int256",name:"postTradeAmmNetStdVega",type:"int256"},{internalType:"uint256",name:"vegaUtil",type:"uint256"},{internalType:"uint256",name:"volTraded",type:"uint256"},{internalType:"uint256",name:"NAV",type:"uint256"},{internalType:"uint256",name:"vegaUtilFee",type:"uint256"}],internalType:"struct OptionMarketPricer.VegaUtilFeeComponents",name:"vegaUtilFeeComponents",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_optionMarket",type:"address"},{internalType:"contract OptionGreekCache",name:"_greekCache",type:"address"}],name:"init",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"bool",name:"isBuy",type:"bool"},{internalType:"bool",name:"isForceClose",type:"bool"},{internalType:"enum OptionMarket.TradeDirection",name:"tradeDirection",type:"uint8"},{internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"strikePrice",type:"uint256"},{components:[{internalType:"uint256",name:"freeLiquidity",type:"uint256"},{internalType:"uint256",name:"burnableLiquidity",type:"uint256"},{internalType:"uint256",name:"usedCollatLiquidity",type:"uint256"},{internalType:"uint256",name:"pendingDeltaLiquidity",type:"uint256"},{internalType:"uint256",name:"usedDeltaLiquidity",type:"uint256"},{internalType:"uint256",name:"NAV",type:"uint256"}],internalType:"struct LiquidityPool.Liquidity",name:"liquidity",type:"tuple"},{components:[{internalType:"uint256",name:"spotPrice",type:"uint256"},{internalType:"bytes32",name:"quoteKey",type:"bytes32"},{internalType:"bytes32",name:"baseKey",type:"bytes32"},{internalType:"uint256",name:"quoteBaseFeeRate",type:"uint256"},{internalType:"uint256",name:"baseQuoteFeeRate",type:"uint256"}],internalType:"struct SynthetixAdapter.ExchangeParams",name:"exchangeParams",type:"tuple"}],internalType:"struct OptionMarket.TradeParameters",name:"trade",type:"tuple"},{internalType:"uint256",name:"boardBaseIv",type:"uint256"},{internalType:"uint256",name:"strikeSkew",type:"uint256"}],name:"ivImpactForTrade",outputs:[{internalType:"uint256",name:"newBaseIv",type:"uint256"},{internalType:"uint256",name:"newSkew",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_owner",type:"address"}],name:"nominateNewOwner",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"nominatedOwner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"pricingParams",outputs:[{internalType:"uint256",name:"optionPriceFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"optionPriceFee1xPoint",type:"uint256"},{internalType:"uint256",name:"optionPriceFee2xPoint",type:"uint256"},{internalType:"uint256",name:"spotPriceFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"spotPriceFee1xPoint",type:"uint256"},{internalType:"uint256",name:"spotPriceFee2xPoint",type:"uint256"},{internalType:"uint256",name:"vegaFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"standardSize",type:"uint256"},{internalType:"uint256",name:"skewAdjustmentFactor",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{components:[{internalType:"uint256",name:"optionPriceFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"optionPriceFee1xPoint",type:"uint256"},{internalType:"uint256",name:"optionPriceFee2xPoint",type:"uint256"},{internalType:"uint256",name:"spotPriceFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"spotPriceFee1xPoint",type:"uint256"},{internalType:"uint256",name:"spotPriceFee2xPoint",type:"uint256"},{internalType:"uint256",name:"vegaFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"standardSize",type:"uint256"},{internalType:"uint256",name:"skewAdjustmentFactor",type:"uint256"}],internalType:"struct OptionMarketPricer.PricingParameters",name:"_pricingParams",type:"tuple"}],name:"setPricingParams",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"int256",name:"minDelta",type:"int256"},{internalType:"int256",name:"minForceCloseDelta",type:"int256"},{internalType:"uint256",name:"tradingCutoff",type:"uint256"},{internalType:"uint256",name:"minBaseIV",type:"uint256"},{internalType:"uint256",name:"maxBaseIV",type:"uint256"},{internalType:"uint256",name:"minSkew",type:"uint256"},{internalType:"uint256",name:"maxSkew",type:"uint256"},{internalType:"uint256",name:"minVol",type:"uint256"},{internalType:"uint256",name:"maxVol",type:"uint256"},{internalType:"uint256",name:"absMinSkew",type:"uint256"},{internalType:"uint256",name:"absMaxSkew",type:"uint256"},{internalType:"bool",name:"capSkewsToAbs",type:"bool"}],internalType:"struct OptionMarketPricer.TradeLimitParameters",name:"_tradeLimitParams",type:"tuple"}],name:"setTradeLimitParams",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"uint256",name:"defaultVarianceFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"forceCloseVarianceFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"skewAdjustmentCoefficient",type:"uint256"},{internalType:"uint256",name:"referenceSkew",type:"uint256"},{internalType:"uint256",name:"minimumStaticSkewAdjustment",type:"uint256"},{internalType:"uint256",name:"vegaCoefficient",type:"uint256"},{internalType:"uint256",name:"minimumStaticVega",type:"uint256"},{internalType:"uint256",name:"ivVarianceCoefficient",type:"uint256"},{internalType:"uint256",name:"minimumStaticIvVariance",type:"uint256"}],internalType:"struct OptionMarketPricer.VarianceFeeParameters",name:"_varianceFeeParams",type:"tuple"}],name:"setVarianceFeeParams",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"tradeLimitParams",outputs:[{internalType:"int256",name:"minDelta",type:"int256"},{internalType:"int256",name:"minForceCloseDelta",type:"int256"},{internalType:"uint256",name:"tradingCutoff",type:"uint256"},{internalType:"uint256",name:"minBaseIV",type:"uint256"},{internalType:"uint256",name:"maxBaseIV",type:"uint256"},{internalType:"uint256",name:"minSkew",type:"uint256"},{internalType:"uint256",name:"maxSkew",type:"uint256"},{internalType:"uint256",name:"minVol",type:"uint256"},{internalType:"uint256",name:"maxVol",type:"uint256"},{internalType:"uint256",name:"absMinSkew",type:"uint256"},{internalType:"uint256",name:"absMaxSkew",type:"uint256"},{internalType:"bool",name:"capSkewsToAbs",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{components:[{internalType:"uint256",name:"id",type:"uint256"},{internalType:"uint256",name:"strikePrice",type:"uint256"},{internalType:"uint256",name:"skew",type:"uint256"},{internalType:"uint256",name:"longCall",type:"uint256"},{internalType:"uint256",name:"shortCallBase",type:"uint256"},{internalType:"uint256",name:"shortCallQuote",type:"uint256"},{internalType:"uint256",name:"longPut",type:"uint256"},{internalType:"uint256",name:"shortPut",type:"uint256"},{internalType:"uint256",name:"boardId",type:"uint256"}],internalType:"struct OptionMarket.Strike",name:"strike",type:"tuple"},{components:[{internalType:"bool",name:"isBuy",type:"bool"},{internalType:"bool",name:"isForceClose",type:"bool"},{internalType:"enum OptionMarket.TradeDirection",name:"tradeDirection",type:"uint8"},{internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"strikePrice",type:"uint256"},{components:[{internalType:"uint256",name:"freeLiquidity",type:"uint256"},{internalType:"uint256",name:"burnableLiquidity",type:"uint256"},{internalType:"uint256",name:"usedCollatLiquidity",type:"uint256"},{internalType:"uint256",name:"pendingDeltaLiquidity",type:"uint256"},{internalType:"uint256",name:"usedDeltaLiquidity",type:"uint256"},{internalType:"uint256",name:"NAV",type:"uint256"}],internalType:"struct LiquidityPool.Liquidity",name:"liquidity",type:"tuple"},{components:[{internalType:"uint256",name:"spotPrice",type:"uint256"},{internalType:"bytes32",name:"quoteKey",type:"bytes32"},{internalType:"bytes32",name:"baseKey",type:"bytes32"},{internalType:"uint256",name:"quoteBaseFeeRate",type:"uint256"},{internalType:"uint256",name:"baseQuoteFeeRate",type:"uint256"}],internalType:"struct SynthetixAdapter.ExchangeParams",name:"exchangeParams",type:"tuple"}],internalType:"struct OptionMarket.TradeParameters",name:"trade",type:"tuple"},{internalType:"uint256",name:"boardBaseIv",type:"uint256"},{internalType:"uint256",name:"boardExpiry",type:"uint256"}],name:"updateCacheAndGetTradeResult",outputs:[{components:[{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"premium",type:"uint256"},{internalType:"uint256",name:"optionPriceFee",type:"uint256"},{internalType:"uint256",name:"spotPriceFee",type:"uint256"},{components:[{internalType:"int256",name:"preTradeAmmNetStdVega",type:"int256"},{internalType:"int256",name:"postTradeAmmNetStdVega",type:"int256"},{internalType:"uint256",name:"vegaUtil",type:"uint256"},{internalType:"uint256",name:"volTraded",type:"uint256"},{internalType:"uint256",name:"NAV",type:"uint256"},{internalType:"uint256",name:"vegaUtilFee",type:"uint256"}],internalType:"struct OptionMarketPricer.VegaUtilFeeComponents",name:"vegaUtilFee",type:"tuple"},{components:[{internalType:"uint256",name:"varianceFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"vega",type:"uint256"},{internalType:"uint256",name:"vegaCoefficient",type:"uint256"},{internalType:"uint256",name:"skew",type:"uint256"},{internalType:"uint256",name:"skewCoefficient",type:"uint256"},{internalType:"uint256",name:"ivVariance",type:"uint256"},{internalType:"uint256",name:"ivVarianceCoefficient",type:"uint256"},{internalType:"uint256",name:"varianceFee",type:"uint256"}],internalType:"struct OptionMarketPricer.VarianceFeeComponents",name:"varianceFee",type:"tuple"},{internalType:"uint256",name:"totalFee",type:"uint256"},{internalType:"uint256",name:"totalCost",type:"uint256"},{internalType:"uint256",name:"volTraded",type:"uint256"},{internalType:"uint256",name:"newBaseIv",type:"uint256"},{internalType:"uint256",name:"newSkew",type:"uint256"}],internalType:"struct OptionMarketPricer.TradeResult",name:"tradeResult",type:"tuple"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"varianceFeeParams",outputs:[{internalType:"uint256",name:"defaultVarianceFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"forceCloseVarianceFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"skewAdjustmentCoefficient",type:"uint256"},{internalType:"uint256",name:"referenceSkew",type:"uint256"},{internalType:"uint256",name:"minimumStaticSkewAdjustment",type:"uint256"},{internalType:"uint256",name:"vegaCoefficient",type:"uint256"},{internalType:"uint256",name:"minimumStaticVega",type:"uint256"},{internalType:"uint256",name:"ivVarianceCoefficient",type:"uint256"},{internalType:"uint256",name:"minimumStaticIvVariance",type:"uint256"}],stateMutability:"view",type:"function"}],xa=[{inputs:[{internalType:"string",name:"name_",type:"string"},{internalType:"string",name:"symbol_",type:"string"}],stateMutability:"nonpayable",type:"constructor"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"bool",name:"invalidPositionId",type:"bool"},{internalType:"bool",name:"positionInactive",type:"bool"},{internalType:"bool",name:"isShort",type:"bool"}],name:"AddingCollateralToInvalidPosition",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{components:[{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"uint256",name:"strikeId",type:"uint256"},{internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"collateral",type:"uint256"},{internalType:"enum OptionToken.PositionState",name:"state",type:"uint8"}],internalType:"struct OptionToken.OptionPosition",name:"position",type:"tuple"},{internalType:"uint256",name:"spotPrice",type:"uint256"}],name:"AdjustmentResultsInMinimumCollateralNotBeingMet",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"}],name:"AlreadyInitialised",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"bool",name:"invalidPositionId",type:"bool"},{internalType:"bool",name:"positionInactive",type:"bool"},{internalType:"bool",name:"strikeMismatch",type:"bool"},{internalType:"bool",name:"optionTypeMismatch",type:"bool"}],name:"CannotAdjustInvalidPosition",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"}],name:"CannotClosePositionZero",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"}],name:"CannotOpenZeroAmount",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"uint256",name:"setCollateralTo",type:"uint256"}],name:"FullyClosingWithNonZeroSetCollateral",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{components:[{internalType:"uint256",name:"penaltyRatio",type:"uint256"},{internalType:"uint256",name:"liquidatorFeeRatio",type:"uint256"},{internalType:"uint256",name:"smFeeRatio",type:"uint256"},{internalType:"uint256",name:"minLiquidationFee",type:"uint256"}],internalType:"struct OptionToken.PartialCollateralParameters",name:"partialCollatParams",type:"tuple"}],name:"InvalidPartialCollateralParameters",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"originalPositionAmount",type:"uint256"},{internalType:"uint256",name:"splitAmount",type:"uint256"}],name:"InvalidSplitAmount",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"uint256",name:"positionId",type:"uint256"}],name:"MergingUnapprovedPosition",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"}],name:"MustMergeTwoOrMorePositions",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"nominatedOwner",type:"address"}],name:"OnlyNominatedOwner",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"optionMarket",type:"address"}],name:"OnlyOptionMarket",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"owner",type:"address"}],name:"OnlyOwner",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"address",name:"trader",type:"address"},{internalType:"address",name:"owner",type:"address"}],name:"OnlyOwnerCanAdjustPosition",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"shortCollateral",type:"address"}],name:"OnlyShortCollateral",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{components:[{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"uint256",name:"strikeId",type:"uint256"},{internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"collateral",type:"uint256"},{internalType:"enum OptionToken.PositionState",name:"state",type:"uint8"}],internalType:"struct OptionToken.OptionPosition",name:"firstPosition",type:"tuple"},{components:[{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"uint256",name:"strikeId",type:"uint256"},{internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"collateral",type:"uint256"},{internalType:"enum OptionToken.PositionState",name:"state",type:"uint8"}],internalType:"struct OptionToken.OptionPosition",name:"nextPosition",type:"tuple"},{internalType:"bool",name:"ownerMismatch",type:"bool"},{internalType:"bool",name:"strikeMismatch",type:"bool"},{internalType:"bool",name:"optionTypeMismatch",type:"bool"},{internalType:"bool",name:"duplicatePositionId",type:"bool"}],name:"PositionMismatchWhenMerging",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{components:[{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"uint256",name:"strikeId",type:"uint256"},{internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"collateral",type:"uint256"},{internalType:"enum OptionToken.PositionState",name:"state",type:"uint8"}],internalType:"struct OptionToken.OptionPosition",name:"position",type:"tuple"},{internalType:"uint256",name:"spotPrice",type:"uint256"}],name:"PositionNotLiquidatable",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{components:[{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"uint256",name:"strikeId",type:"uint256"},{internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"collateral",type:"uint256"},{internalType:"enum OptionToken.PositionState",name:"state",type:"uint8"}],internalType:"struct OptionToken.OptionPosition",name:"position",type:"tuple"},{internalType:"uint256",name:"spotPrice",type:"uint256"}],name:"ResultingNewPositionLiquidatable",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{components:[{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"uint256",name:"strikeId",type:"uint256"},{internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"collateral",type:"uint256"},{internalType:"enum OptionToken.PositionState",name:"state",type:"uint8"}],internalType:"struct OptionToken.OptionPosition",name:"position",type:"tuple"},{internalType:"uint256",name:"spotPrice",type:"uint256"}],name:"ResultingOriginalPositionLiquidatable",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"uint256",name:"positionId",type:"uint256"}],name:"SplittingUnapprovedPosition",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"strikeId",type:"uint256"}],name:"StrikeIsSettled",type:"error"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"approved",type:"address"},{indexed:!0,internalType:"uint256",name:"tokenId",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"operator",type:"address"},{indexed:!1,internalType:"bool",name:"approved",type:"bool"}],name:"ApprovalForAll",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"oldOwner",type:"address"},{indexed:!1,internalType:"address",name:"newOwner",type:"address"}],name:"OwnerChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"newOwner",type:"address"}],name:"OwnerNominated",type:"event"},{anonymous:!1,inputs:[{components:[{internalType:"uint256",name:"penaltyRatio",type:"uint256"},{internalType:"uint256",name:"liquidatorFeeRatio",type:"uint256"},{internalType:"uint256",name:"smFeeRatio",type:"uint256"},{internalType:"uint256",name:"minLiquidationFee",type:"uint256"}],indexed:!1,internalType:"struct OptionToken.PartialCollateralParameters",name:"partialCollateralParams",type:"tuple"}],name:"PartialCollateralParamsSet",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"positionId",type:"uint256"},{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"enum OptionToken.PositionUpdatedType",name:"updatedType",type:"uint8"},{components:[{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"uint256",name:"strikeId",type:"uint256"},{internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"collateral",type:"uint256"},{internalType:"enum OptionToken.PositionState",name:"state",type:"uint8"}],indexed:!1,internalType:"struct OptionToken.OptionPosition",name:"position",type:"tuple"},{indexed:!1,internalType:"uint256",name:"timestamp",type:"uint256"}],name:"PositionUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!0,internalType:"uint256",name:"tokenId",type:"uint256"}],name:"Transfer",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"string",name:"URI",type:"string"}],name:"URISet",type:"event"},{inputs:[],name:"acceptOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"uint256",name:"amountCollateral",type:"uint256"}],name:"addCollateral",outputs:[{internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"bool",name:"isBuy",type:"bool"},{internalType:"bool",name:"isForceClose",type:"bool"},{internalType:"enum OptionMarket.TradeDirection",name:"tradeDirection",type:"uint8"},{internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"strikePrice",type:"uint256"},{components:[{internalType:"uint256",name:"freeLiquidity",type:"uint256"},{internalType:"uint256",name:"burnableLiquidity",type:"uint256"},{internalType:"uint256",name:"usedCollatLiquidity",type:"uint256"},{internalType:"uint256",name:"pendingDeltaLiquidity",type:"uint256"},{internalType:"uint256",name:"usedDeltaLiquidity",type:"uint256"},{internalType:"uint256",name:"NAV",type:"uint256"}],internalType:"struct LiquidityPool.Liquidity",name:"liquidity",type:"tuple"},{components:[{internalType:"uint256",name:"spotPrice",type:"uint256"},{internalType:"bytes32",name:"quoteKey",type:"bytes32"},{internalType:"bytes32",name:"baseKey",type:"bytes32"},{internalType:"uint256",name:"quoteBaseFeeRate",type:"uint256"},{internalType:"uint256",name:"baseQuoteFeeRate",type:"uint256"}],internalType:"struct SynthetixAdapter.ExchangeParams",name:"exchangeParams",type:"tuple"}],internalType:"struct OptionMarket.TradeParameters",name:"trade",type:"tuple"},{internalType:"uint256",name:"strikeId",type:"uint256"},{internalType:"address",name:"trader",type:"address"},{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"uint256",name:"optionCost",type:"uint256"},{internalType:"uint256",name:"setCollateralTo",type:"uint256"},{internalType:"bool",name:"isOpen",type:"bool"}],name:"adjustPosition",outputs:[{internalType:"uint256",name:"",type:"uint256"},{internalType:"int256",name:"pendingCollateral",type:"int256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"approve",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"baseURI",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{components:[{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"uint256",name:"strikeId",type:"uint256"},{internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"collateral",type:"uint256"},{internalType:"enum OptionToken.PositionState",name:"state",type:"uint8"}],internalType:"struct OptionToken.OptionPosition",name:"position",type:"tuple"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"strikePrice",type:"uint256"},{internalType:"uint256",name:"spotPrice",type:"uint256"}],name:"canLiquidate",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"getApproved",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"gwavPremium",type:"uint256"},{internalType:"uint256",name:"userPositionCollateral",type:"uint256"},{internalType:"uint256",name:"convertedMinLiquidationFee",type:"uint256"},{internalType:"uint256",name:"insolvencyMultiplier",type:"uint256"}],name:"getLiquidationFees",outputs:[{components:[{internalType:"uint256",name:"returnCollateral",type:"uint256"},{internalType:"uint256",name:"lpPremiums",type:"uint256"},{internalType:"uint256",name:"lpFee",type:"uint256"},{internalType:"uint256",name:"liquidatorFee",type:"uint256"},{internalType:"uint256",name:"smFee",type:"uint256"},{internalType:"uint256",name:"insolventAmount",type:"uint256"}],internalType:"struct OptionToken.LiquidationFees",name:"liquidationFees",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"positionId",type:"uint256"}],name:"getOptionPosition",outputs:[{components:[{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"uint256",name:"strikeId",type:"uint256"},{internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"collateral",type:"uint256"},{internalType:"enum OptionToken.PositionState",name:"state",type:"uint8"}],internalType:"struct OptionToken.OptionPosition",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256[]",name:"positionIds",type:"uint256[]"}],name:"getOptionPositions",outputs:[{components:[{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"uint256",name:"strikeId",type:"uint256"},{internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"collateral",type:"uint256"},{internalType:"enum OptionToken.PositionState",name:"state",type:"uint8"}],internalType:"struct OptionToken.OptionPosition[]",name:"",type:"tuple[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"target",type:"address"}],name:"getOwnerPositions",outputs:[{components:[{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"uint256",name:"strikeId",type:"uint256"},{internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"collateral",type:"uint256"},{internalType:"enum OptionToken.PositionState",name:"state",type:"uint8"}],internalType:"struct OptionToken.OptionPosition[]",name:"",type:"tuple[]"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPartialCollatParams",outputs:[{components:[{internalType:"uint256",name:"penaltyRatio",type:"uint256"},{internalType:"uint256",name:"liquidatorFeeRatio",type:"uint256"},{internalType:"uint256",name:"smFeeRatio",type:"uint256"},{internalType:"uint256",name:"minLiquidationFee",type:"uint256"}],internalType:"struct OptionToken.PartialCollateralParameters",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"positionId",type:"uint256"}],name:"getPositionState",outputs:[{internalType:"enum OptionToken.PositionState",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"positionId",type:"uint256"}],name:"getPositionWithOwner",outputs:[{components:[{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"uint256",name:"strikeId",type:"uint256"},{internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"collateral",type:"uint256"},{internalType:"enum OptionToken.PositionState",name:"state",type:"uint8"},{internalType:"address",name:"owner",type:"address"}],internalType:"struct OptionToken.PositionWithOwner",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256[]",name:"positionIds",type:"uint256[]"}],name:"getPositionsWithOwner",outputs:[{components:[{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"uint256",name:"strikeId",type:"uint256"},{internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"collateral",type:"uint256"},{internalType:"enum OptionToken.PositionState",name:"state",type:"uint8"},{internalType:"address",name:"owner",type:"address"}],internalType:"struct OptionToken.PositionWithOwner[]",name:"",type:"tuple[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract OptionMarket",name:"_optionMarket",type:"address"},{internalType:"contract OptionGreekCache",name:"_greekCache",type:"address"},{internalType:"address",name:"_shortCollateral",type:"address"},{internalType:"contract SynthetixAdapter",name:"_synthetixAdapter",type:"address"}],name:"init",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"operator",type:"address"}],name:"isApprovedForAll",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"positionId",type:"uint256"},{components:[{internalType:"bool",name:"isBuy",type:"bool"},{internalType:"bool",name:"isForceClose",type:"bool"},{internalType:"enum OptionMarket.TradeDirection",name:"tradeDirection",type:"uint8"},{internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"strikePrice",type:"uint256"},{components:[{internalType:"uint256",name:"freeLiquidity",type:"uint256"},{internalType:"uint256",name:"burnableLiquidity",type:"uint256"},{internalType:"uint256",name:"usedCollatLiquidity",type:"uint256"},{internalType:"uint256",name:"pendingDeltaLiquidity",type:"uint256"},{internalType:"uint256",name:"usedDeltaLiquidity",type:"uint256"},{internalType:"uint256",name:"NAV",type:"uint256"}],internalType:"struct LiquidityPool.Liquidity",name:"liquidity",type:"tuple"},{components:[{internalType:"uint256",name:"spotPrice",type:"uint256"},{internalType:"bytes32",name:"quoteKey",type:"bytes32"},{internalType:"bytes32",name:"baseKey",type:"bytes32"},{internalType:"uint256",name:"quoteBaseFeeRate",type:"uint256"},{internalType:"uint256",name:"baseQuoteFeeRate",type:"uint256"}],internalType:"struct SynthetixAdapter.ExchangeParams",name:"exchangeParams",type:"tuple"}],internalType:"struct OptionMarket.TradeParameters",name:"trade",type:"tuple"},{internalType:"uint256",name:"totalCost",type:"uint256"}],name:"liquidate",outputs:[{components:[{internalType:"uint256",name:"returnCollateral",type:"uint256"},{internalType:"uint256",name:"lpPremiums",type:"uint256"},{internalType:"uint256",name:"lpFee",type:"uint256"},{internalType:"uint256",name:"liquidatorFee",type:"uint256"},{internalType:"uint256",name:"smFee",type:"uint256"},{internalType:"uint256",name:"insolventAmount",type:"uint256"}],internalType:"struct OptionToken.LiquidationFees",name:"liquidationFees",type:"tuple"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256[]",name:"positionIds",type:"uint256[]"}],name:"merge",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"nextId",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_owner",type:"address"}],name:"nominateNewOwner",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"nominatedOwner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"ownerOf",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"partialCollatParams",outputs:[{internalType:"uint256",name:"penaltyRatio",type:"uint256"},{internalType:"uint256",name:"liquidatorFeeRatio",type:"uint256"},{internalType:"uint256",name:"smFeeRatio",type:"uint256"},{internalType:"uint256",name:"minLiquidationFee",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"positions",outputs:[{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"uint256",name:"strikeId",type:"uint256"},{internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"collateral",type:"uint256"},{internalType:"enum OptionToken.PositionState",name:"state",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"safeTransferFrom",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"},{internalType:"bytes",name:"_data",type:"bytes"}],name:"safeTransferFrom",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"operator",type:"address"},{internalType:"bool",name:"approved",type:"bool"}],name:"setApprovalForAll",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"uint256",name:"penaltyRatio",type:"uint256"},{internalType:"uint256",name:"liquidatorFeeRatio",type:"uint256"},{internalType:"uint256",name:"smFeeRatio",type:"uint256"},{internalType:"uint256",name:"minLiquidationFee",type:"uint256"}],internalType:"struct OptionToken.PartialCollateralParameters",name:"_partialCollatParams",type:"tuple"}],name:"setPartialCollateralParams",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"string",name:"newURI",type:"string"}],name:"setURI",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256[]",name:"positionIds",type:"uint256[]"}],name:"settlePositions",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"uint256",name:"newAmount",type:"uint256"},{internalType:"uint256",name:"newCollateral",type:"uint256"},{internalType:"address",name:"recipient",type:"address"}],name:"split",outputs:[{internalType:"uint256",name:"newPositionId",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes4",name:"interfaceId",type:"bytes4"}],name:"supportsInterface",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"index",type:"uint256"}],name:"tokenByIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"uint256",name:"index",type:"uint256"}],name:"tokenOfOwnerByIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"tokenURI",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"transferFrom",outputs:[],stateMutability:"nonpayable",type:"function"}],Ia=[{inputs:[],stateMutability:"nonpayable",type:"constructor"},{inputs:[{internalType:"address",name:"thrower",type:"address"}],name:"AlreadyInitialised",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"BaseTransferFailed",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{components:[{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"uint256",name:"strikeId",type:"uint256"},{internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"collateral",type:"uint256"},{internalType:"enum OptionToken.PositionState",name:"state",type:"uint8"},{internalType:"address",name:"owner",type:"address"}],internalType:"struct OptionToken.PositionWithOwner",name:"position",type:"tuple"}],name:"BoardMustBeSettled",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"nominatedOwner",type:"address"}],name:"OnlyNominatedOwner",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"optionMarket",type:"address"}],name:"OnlyOptionMarket",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"owner",type:"address"}],name:"OnlyOwner",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"balance",type:"uint256"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"OutOfBaseCollateralForExchangeAndTransfer",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"balance",type:"uint256"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"OutOfBaseCollateralForTransfer",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"balance",type:"uint256"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"OutOfQuoteCollateralForTransfer",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"QuoteTransferFailed",type:"error"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"recipient",type:"address"},{indexed:!1,internalType:"uint256",name:"amountBase",type:"uint256"},{indexed:!1,internalType:"uint256",name:"quoteReceived",type:"uint256"}],name:"BaseExchangedAndQuoteSent",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"receiver",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"BaseSent",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"amountBaseSent",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amountQuoteSent",type:"uint256"},{indexed:!1,internalType:"uint256",name:"lpBaseInsolvency",type:"uint256"},{indexed:!1,internalType:"uint256",name:"lpQuoteInsolvency",type:"uint256"},{indexed:!1,internalType:"uint256",name:"LPBaseExcess",type:"uint256"},{indexed:!1,internalType:"uint256",name:"LPQuoteExcess",type:"uint256"}],name:"BoardSettlementCollateralSent",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"oldOwner",type:"address"},{indexed:!1,internalType:"address",name:"newOwner",type:"address"}],name:"OwnerChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"newOwner",type:"address"}],name:"OwnerNominated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"positionId",type:"uint256"},{indexed:!0,internalType:"address",name:"settler",type:"address"},{indexed:!0,internalType:"address",name:"optionOwner",type:"address"},{indexed:!1,internalType:"uint256",name:"strikePrice",type:"uint256"},{indexed:!1,internalType:"uint256",name:"priceAtExpiry",type:"uint256"},{indexed:!1,internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"settlementAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"insolventAmount",type:"uint256"}],name:"PositionSettled",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"receiver",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"QuoteSent",type:"event"},{inputs:[],name:"LPBaseExcess",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"LPQuoteExcess",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"acceptOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"amountBase",type:"uint256"},{internalType:"uint256",name:"amountQuote",type:"uint256"}],name:"boardSettlement",outputs:[{internalType:"uint256",name:"lpBaseInsolvency",type:"uint256"},{internalType:"uint256",name:"lpQuoteInsolvency",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract OptionMarket",name:"_optionMarket",type:"address"},{internalType:"contract LiquidityPool",name:"_liquidityPool",type:"address"},{internalType:"contract OptionToken",name:"_optionToken",type:"address"},{internalType:"contract SynthetixAdapter",name:"_synthetixAdapter",type:"address"},{internalType:"contract ERC20",name:"_quoteAsset",type:"address"},{internalType:"contract ERC20",name:"_baseAsset",type:"address"}],name:"init",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_owner",type:"address"}],name:"nominateNewOwner",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"nominatedOwner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"trader",type:"address"},{internalType:"address",name:"liquidator",type:"address"},{internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"},{components:[{internalType:"uint256",name:"returnCollateral",type:"uint256"},{internalType:"uint256",name:"lpPremiums",type:"uint256"},{internalType:"uint256",name:"lpFee",type:"uint256"},{internalType:"uint256",name:"liquidatorFee",type:"uint256"},{internalType:"uint256",name:"smFee",type:"uint256"},{internalType:"uint256",name:"insolventAmount",type:"uint256"}],internalType:"struct OptionToken.LiquidationFees",name:"liquidationFees",type:"tuple"}],name:"routeLiquidationFunds",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"sendBaseCollateral",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"sendQuoteCollateral",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256[]",name:"positionIds",type:"uint256[]"}],name:"settleOptions",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"updateDelegateApproval",outputs:[],stateMutability:"nonpayable",type:"function"}],Aa=[{inputs:[],stateMutability:"nonpayable",type:"constructor"},{inputs:[{internalType:"address",name:"thrower",type:"address"}],name:"AlreadyInitialised",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"lastInteraction",type:"uint256"},{internalType:"uint256",name:"interactionDelta",type:"uint256"},{internalType:"uint256",name:"currentTime",type:"uint256"}],name:"InteractionDelayNotExpired",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"newShortBuffer",type:"uint256"}],name:"InvalidShortBuffer",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"quoteReceived",type:"uint256"},{internalType:"uint256",name:"minCollateral",type:"uint256"}],name:"NotEnoughQuoteForMinCollateral",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"liquidityPool",type:"address"}],name:"OnlyLiquidityPool",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"nominatedOwner",type:"address"}],name:"OnlyNominatedOwner",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"owner",type:"address"}],name:"OnlyOwner",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"approvee",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"QuoteApprovalFailure",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"QuoteTransferFailed",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"shortId",type:"uint256"}],name:"ShortAccountAlreadyOpen",type:"error"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"oldAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newAmount",type:"uint256"}],name:"LongSetTo",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"shortId",type:"uint256"}],name:"OpenedShortAccount",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"oldOwner",type:"address"},{indexed:!1,internalType:"address",name:"newOwner",type:"address"}],name:"OwnerChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"newOwner",type:"address"}],name:"OwnerNominated",type:"event"},{anonymous:!1,inputs:[{components:[{internalType:"uint256",name:"interactionDelay",type:"uint256"},{internalType:"uint256",name:"hedgeCap",type:"uint256"}],indexed:!1,internalType:"struct PoolHedger.PoolHedgerParameters",name:"poolHedgerParams",type:"tuple"}],name:"PoolHedgerParametersSet",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"int256",name:"oldNetDelta",type:"int256"},{indexed:!1,internalType:"int256",name:"currentNetDelta",type:"int256"},{indexed:!1,internalType:"int256",name:"expectedNetDelta",type:"int256"}],name:"PositionUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"amountQuote",type:"uint256"}],name:"QuoteReturnedToLP",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"newShortBuffer",type:"uint256"}],name:"ShortBufferSet",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"contract ICollateralShort",name:"collateralShort",type:"address"}],name:"ShortCollateralSet",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"oldShort",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newShort",type:"uint256"},{indexed:!1,internalType:"uint256",name:"oldCollateral",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newCollateral",type:"uint256"}],name:"ShortSetTo",type:"event"},{inputs:[],name:"acceptOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"collateralShort",outputs:[{internalType:"contract ICollateralShort",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getCappedExpectedHedge",outputs:[{internalType:"int256",name:"cappedExpectedHedge",type:"int256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getCurrentHedgedNetDelta",outputs:[{internalType:"int256",name:"",type:"int256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"spotPrice",type:"uint256"}],name:"getHedgingLiquidity",outputs:[{internalType:"uint256",name:"pendingDeltaLiquidity",type:"uint256"},{internalType:"uint256",name:"usedDeltaLiquidity",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPoolHedgerParams",outputs:[{components:[{internalType:"uint256",name:"interactionDelay",type:"uint256"},{internalType:"uint256",name:"hedgeCap",type:"uint256"}],internalType:"struct PoolHedger.PoolHedgerParameters",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPoolHedgerSettings",outputs:[{components:[{internalType:"uint256",name:"interactionDelay",type:"uint256"},{internalType:"uint256",name:"hedgeCap",type:"uint256"}],internalType:"struct PoolHedger.PoolHedgerParameters",name:"_poolHedgerParams",type:"tuple"},{internalType:"uint256",name:"_shortBuffer",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getShortPosition",outputs:[{internalType:"uint256",name:"shortBalance",type:"uint256"},{internalType:"uint256",name:"collateral",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"hedgeDelta",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract SynthetixAdapter",name:"_synthetixAdapter",type:"address"},{internalType:"contract OptionMarket",name:"_optionMarket",type:"address"},{internalType:"contract OptionGreekCache",name:"_optionGreekCache",type:"address"},{internalType:"contract LiquidityPool",name:"_liquidityPool",type:"address"},{internalType:"contract ERC20",name:"_quoteAsset",type:"address"},{internalType:"contract ERC20",name:"_baseAsset",type:"address"}],name:"init",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"lastInteraction",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_owner",type:"address"}],name:"nominateNewOwner",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"nominatedOwner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"openShortAccount",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"resetInteractionDelay",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"uint256",name:"interactionDelay",type:"uint256"},{internalType:"uint256",name:"hedgeCap",type:"uint256"}],internalType:"struct PoolHedger.PoolHedgerParameters",name:"_poolHedgerParams",type:"tuple"}],name:"setPoolHedgerParams",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"_shortBuffer",type:"uint256"}],name:"setShortBuffer",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"shortBuffer",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"shortId",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"updateCollateral",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"updateCollateralShortAddress",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"updateDelegateApproval",outputs:[],stateMutability:"nonpayable",type:"function"}],Va=[{inputs:[],stateMutability:"nonpayable",type:"constructor"},{inputs:[{internalType:"address",name:"thrower",type:"address"}],name:"AlreadyInitialised",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"contract IERC20Decimals",name:"asset",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"address",name:"recipient",type:"address"}],name:"AssetTransferFailed",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"}],name:"CancellationDelayNotPassed",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"}],name:"CannotRecoverRestrictedToken",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"balance",type:"uint256"}],name:"EthTransferFailure",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"finalCollat",type:"uint256"},{components:[{internalType:"uint256",name:"size",type:"uint256"},{internalType:"uint256",name:"collateral",type:"uint256"},{internalType:"uint256",name:"averagePrice",type:"uint256"},{internalType:"uint256",name:"entryFundingRate",type:"uint256"},{internalType:"int256",name:"unrealisedPnl",type:"int256"},{internalType:"uint256",name:"lastIncreasedTime",type:"uint256"},{internalType:"bool",name:"isLong",type:"bool"}],internalType:"struct GMXFuturesPoolHedger.PositionDetails",name:"currentPos",type:"tuple"},{internalType:"uint256",name:"minCollateralUpdate",type:"uint256"}],name:"FinalCollateralTooLow",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"}],name:"GetGMXVaultError",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"lastInteraction",type:"uint256"},{internalType:"uint256",name:"interactionDelta",type:"uint256"},{internalType:"uint256",name:"currentTime",type:"uint256"}],name:"InteractionDelayNotExpired",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{components:[{internalType:"uint256",name:"acceptableSpotSlippage",type:"uint256"},{internalType:"uint256",name:"deltaThreshold",type:"uint256"},{internalType:"uint256",name:"marketDepthBuffer",type:"uint256"},{internalType:"uint256",name:"targetLeverage",type:"uint256"},{internalType:"uint256",name:"maxLeverage",type:"uint256"},{internalType:"uint256",name:"minCancelDelay",type:"uint256"},{internalType:"uint256",name:"minCollateralUpdate",type:"uint256"},{internalType:"bool",name:"vaultLiquidityCheckEnabled",type:"bool"}],internalType:"struct GMXFuturesPoolHedger.FuturesPoolHedgerParameters",name:"futuresPoolHedgerParams",type:"tuple"}],name:"InvalidFuturesPoolHedgerParams",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"finalSize",type:"uint256"},{internalType:"uint256",name:"finalCollat",type:"uint256"},{components:[{internalType:"uint256",name:"size",type:"uint256"},{internalType:"uint256",name:"collateral",type:"uint256"},{internalType:"uint256",name:"averagePrice",type:"uint256"},{internalType:"uint256",name:"entryFundingRate",type:"uint256"},{internalType:"int256",name:"unrealisedPnl",type:"int256"},{internalType:"uint256",name:"lastIncreasedTime",type:"uint256"},{internalType:"bool",name:"isLong",type:"bool"}],internalType:"struct GMXFuturesPoolHedger.PositionDetails",name:"currentPos",type:"tuple"}],name:"MaxLeverageThresholdCrossed",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"}],name:"NoQuoteReceivedFromLP",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"quoteReceived",type:"uint256"},{internalType:"uint256",name:"minCollateral",type:"uint256"}],name:"NotEnoughQuoteForMinCollateral",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"liquidityPool",type:"address"}],name:"OnlyLiquidityPool",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"nominatedOwner",type:"address"}],name:"OnlyNominatedOwner",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"owner",type:"address"}],name:"OnlyOwner",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"bytes32",name:"pendingOrderKey",type:"bytes32"}],name:"OrderCancellationFailure",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"bytes32",name:"key",type:"bytes32"}],name:"PositionRequestPending",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"approvee",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"QuoteApprovalFailure",type:"error"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"amountBase",type:"uint256"}],name:"BaseReturnedToLP",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bytes32",name:"positionKey",type:"bytes32"},{indexed:!1,internalType:"bool",name:"isLong",type:"bool"},{indexed:!1,internalType:"int256",name:"collateralDelta",type:"int256"}],name:"CollateralOrderPosted",type:"event"},{anonymous:!1,inputs:[{components:[{internalType:"uint256",name:"acceptableSpotSlippage",type:"uint256"},{internalType:"uint256",name:"deltaThreshold",type:"uint256"},{internalType:"uint256",name:"marketDepthBuffer",type:"uint256"},{internalType:"uint256",name:"targetLeverage",type:"uint256"},{internalType:"uint256",name:"maxLeverage",type:"uint256"},{internalType:"uint256",name:"minCancelDelay",type:"uint256"},{internalType:"uint256",name:"minCollateralUpdate",type:"uint256"},{internalType:"bool",name:"vaultLiquidityCheckEnabled",type:"bool"}],indexed:!1,internalType:"struct GMXFuturesPoolHedger.FuturesPoolHedgerParameters",name:"futuresPoolHedgerParams",type:"tuple"}],name:"FuturesPoolHedgerParamsSet",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bytes32",name:"positionKey",type:"bytes32"},{indexed:!1,internalType:"bool",name:"isExecuted",type:"bool"},{indexed:!1,internalType:"bool",name:"isIncrease",type:"bool"},{components:[{components:[{internalType:"uint256",name:"size",type:"uint256"},{internalType:"uint256",name:"collateral",type:"uint256"},{internalType:"uint256",name:"averagePrice",type:"uint256"},{internalType:"uint256",name:"entryFundingRate",type:"uint256"},{internalType:"int256",name:"unrealisedPnl",type:"int256"},{internalType:"uint256",name:"lastIncreasedTime",type:"uint256"},{internalType:"bool",name:"isLong",type:"bool"}],internalType:"struct GMXFuturesPoolHedger.PositionDetails",name:"longPosition",type:"tuple"},{components:[{internalType:"uint256",name:"size",type:"uint256"},{internalType:"uint256",name:"collateral",type:"uint256"},{internalType:"uint256",name:"averagePrice",type:"uint256"},{internalType:"uint256",name:"entryFundingRate",type:"uint256"},{internalType:"int256",name:"unrealisedPnl",type:"int256"},{internalType:"uint256",name:"lastIncreasedTime",type:"uint256"},{internalType:"bool",name:"isLong",type:"bool"}],internalType:"struct GMXFuturesPoolHedger.PositionDetails",name:"shortPosition",type:"tuple"},{internalType:"uint256",name:"amountOpen",type:"uint256"},{internalType:"bool",name:"isLong",type:"bool"}],indexed:!1,internalType:"struct GMXFuturesPoolHedger.CurrentPositions",name:"positions",type:"tuple"}],name:"GMXPositionCallback",type:"event"},{anonymous:!1,inputs:[{components:[{components:[{internalType:"uint256",name:"size",type:"uint256"},{internalType:"uint256",name:"collateral",type:"uint256"},{internalType:"uint256",name:"averagePrice",type:"uint256"},{internalType:"uint256",name:"entryFundingRate",type:"uint256"},{internalType:"int256",name:"unrealisedPnl",type:"int256"},{internalType:"uint256",name:"lastIncreasedTime",type:"uint256"},{internalType:"bool",name:"isLong",type:"bool"}],internalType:"struct GMXFuturesPoolHedger.PositionDetails",name:"longPosition",type:"tuple"},{components:[{internalType:"uint256",name:"size",type:"uint256"},{internalType:"uint256",name:"collateral",type:"uint256"},{internalType:"uint256",name:"averagePrice",type:"uint256"},{internalType:"uint256",name:"entryFundingRate",type:"uint256"},{internalType:"int256",name:"unrealisedPnl",type:"int256"},{internalType:"uint256",name:"lastIncreasedTime",type:"uint256"},{internalType:"bool",name:"isLong",type:"bool"}],internalType:"struct GMXFuturesPoolHedger.PositionDetails",name:"shortPosition",type:"tuple"},{internalType:"uint256",name:"amountOpen",type:"uint256"},{internalType:"bool",name:"isLong",type:"bool"}],indexed:!1,internalType:"struct GMXFuturesPoolHedger.CurrentPositions",name:"position",type:"tuple"}],name:"HedgerPosition",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bytes32",name:"pendingOrderKey",type:"bytes32"},{indexed:!1,internalType:"bool",name:"success",type:"bool"}],name:"OrderCanceled",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bytes32",name:"positionKey",type:"bytes32"},{indexed:!1,internalType:"uint256",name:"collateralDelta",type:"uint256"},{indexed:!1,internalType:"uint256",name:"sizeDelta",type:"uint256"},{indexed:!1,internalType:"bool",name:"isLong",type:"bool"},{indexed:!1,internalType:"bool",name:"isIncrease",type:"bool"}],name:"OrderPosted",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"oldOwner",type:"address"},{indexed:!1,internalType:"address",name:"newOwner",type:"address"}],name:"OwnerChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"newOwner",type:"address"}],name:"OwnerNominated",type:"event"},{anonymous:!1,inputs:[{components:[{internalType:"uint256",name:"interactionDelay",type:"uint256"},{internalType:"uint256",name:"hedgeCap",type:"uint256"}],indexed:!1,internalType:"struct PoolHedger.PoolHedgerParameters",name:"poolHedgerParams",type:"tuple"}],name:"PoolHedgerParametersSet",type:"event"},{anonymous:!1,inputs:[{components:[{internalType:"uint256",name:"size",type:"uint256"},{internalType:"uint256",name:"collateral",type:"uint256"},{internalType:"uint256",name:"averagePrice",type:"uint256"},{internalType:"uint256",name:"entryFundingRate",type:"uint256"},{internalType:"int256",name:"unrealisedPnl",type:"int256"},{internalType:"uint256",name:"lastIncreasedTime",type:"uint256"},{internalType:"bool",name:"isLong",type:"bool"}],indexed:!1,internalType:"struct GMXFuturesPoolHedger.PositionDetails",name:"currentPos",type:"tuple"}],name:"PositionNotUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"contract IPositionRouter",name:"positionRouter",type:"address"}],name:"PositionRouterSet",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"int256",name:"currentNetDelta",type:"int256"},{indexed:!1,internalType:"int256",name:"expectedNetDelta",type:"int256"},{indexed:!1,internalType:"uint256",name:"modifiedDelta",type:"uint256"},{indexed:!1,internalType:"bool",name:"isIncrease",type:"bool"}],name:"PositionUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"amountQuote",type:"uint256"}],name:"QuoteReturnedToLP",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"amountWeth",type:"uint256"},{indexed:!1,internalType:"uint256",name:"quoteReceived",type:"uint256"}],name:"WETHSold",type:"event"},{inputs:[],name:"BASIS_POINTS_DIVISOR",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"GMX_PRICE_PRECISION",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"acceptOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"baseAsset",outputs:[{internalType:"contract IERC20Decimals",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"",type:"uint256"},{internalType:"bool",name:"increasesPoolDelta",type:"bool"},{internalType:"uint256",name:"",type:"uint256"}],name:"canHedge",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"cancelPendingOrder",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"exchangeAdapter",outputs:[{internalType:"contract BaseExchangeAdapter",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"futuresPoolHedgerParams",outputs:[{internalType:"uint256",name:"acceptableSpotSlippage",type:"uint256"},{internalType:"uint256",name:"deltaThreshold",type:"uint256"},{internalType:"uint256",name:"marketDepthBuffer",type:"uint256"},{internalType:"uint256",name:"targetLeverage",type:"uint256"},{internalType:"uint256",name:"maxLeverage",type:"uint256"},{internalType:"uint256",name:"minCancelDelay",type:"uint256"},{internalType:"uint256",name:"minCollateralUpdate",type:"uint256"},{internalType:"bool",name:"vaultLiquidityCheckEnabled",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"getAllPositionsValue",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getCappedExpectedHedge",outputs:[{internalType:"int256",name:"",type:"int256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getCurrentHedgedNetDelta",outputs:[{internalType:"int256",name:"",type:"int256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getCurrentLeverage",outputs:[{internalType:"uint256",name:"leverage",type:"uint256"},{internalType:"bool",name:"isLong",type:"bool"},{internalType:"bool",name:"needUpdate",type:"bool"},{internalType:"int256",name:"collateralDelta",type:"int256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getHedgerState",outputs:[{components:[{components:[{components:[{internalType:"uint256",name:"size",type:"uint256"},{internalType:"uint256",name:"collateral",type:"uint256"},{internalType:"uint256",name:"averagePrice",type:"uint256"},{internalType:"uint256",name:"entryFundingRate",type:"uint256"},{internalType:"int256",name:"unrealisedPnl",type:"int256"},{internalType:"uint256",name:"lastIncreasedTime",type:"uint256"},{internalType:"bool",name:"isLong",type:"bool"}],internalType:"struct GMXFuturesPoolHedger.PositionDetails",name:"longPosition",type:"tuple"},{components:[{internalType:"uint256",name:"size",type:"uint256"},{internalType:"uint256",name:"collateral",type:"uint256"},{internalType:"uint256",name:"averagePrice",type:"uint256"},{internalType:"uint256",name:"entryFundingRate",type:"uint256"},{internalType:"int256",name:"unrealisedPnl",type:"int256"},{internalType:"uint256",name:"lastIncreasedTime",type:"uint256"},{internalType:"bool",name:"isLong",type:"bool"}],internalType:"struct GMXFuturesPoolHedger.PositionDetails",name:"shortPosition",type:"tuple"},{internalType:"uint256",name:"amountOpen",type:"uint256"},{internalType:"bool",name:"isLong",type:"bool"}],internalType:"struct GMXFuturesPoolHedger.CurrentPositions",name:"currentPositions",type:"tuple"},{components:[{internalType:"uint256",name:"acceptableSpotSlippage",type:"uint256"},{internalType:"uint256",name:"deltaThreshold",type:"uint256"},{internalType:"uint256",name:"marketDepthBuffer",type:"uint256"},{internalType:"uint256",name:"targetLeverage",type:"uint256"},{internalType:"uint256",name:"maxLeverage",type:"uint256"},{internalType:"uint256",name:"minCancelDelay",type:"uint256"},{internalType:"uint256",name:"minCollateralUpdate",type:"uint256"},{internalType:"bool",name:"vaultLiquidityCheckEnabled",type:"bool"}],internalType:"struct GMXFuturesPoolHedger.FuturesPoolHedgerParameters",name:"futuresPoolHedgerParams",type:"tuple"},{components:[{internalType:"contract IRouter",name:"router",type:"address"},{internalType:"contract IPositionRouter",name:"positionRouter",type:"address"},{internalType:"contract IVault",name:"vault",type:"address"},{internalType:"contract IERC20Decimals",name:"quoteAsset",type:"address"},{internalType:"contract IERC20Decimals",name:"baseAsset",type:"address"},{internalType:"contract IERC20Decimals",name:"weth",type:"address"}],internalType:"struct GMXFuturesPoolHedger.HedgerAddresses",name:"hedgerAddresses",type:"tuple"},{components:[{internalType:"uint256",name:"basePoolAmount",type:"uint256"},{internalType:"uint256",name:"baseReservedAmount",type:"uint256"},{internalType:"uint256",name:"quotePoolAmount",type:"uint256"},{internalType:"uint256",name:"quoteReservedAmount",type:"uint256"},{internalType:"uint256",name:"maxGlobalLongSize",type:"uint256"},{internalType:"uint256",name:"guaranteedUSD",type:"uint256"},{internalType:"uint256",name:"maxGlobalShortSize",type:"uint256"},{internalType:"uint256",name:"shortSize",type:"uint256"},{internalType:"uint256",name:"minExecutionFee",type:"uint256"},{internalType:"uint256",name:"remainingLongDollars",type:"uint256"},{internalType:"uint256",name:"remainingShortDollars",type:"uint256"}],internalType:"struct GMXFuturesPoolHedger.GMXView",name:"gmxView",type:"tuple"},{internalType:"bytes32",name:"referralCode",type:"bytes32"},{internalType:"bytes32",name:"pendingOrderKey",type:"bytes32"},{internalType:"uint256",name:"lastOrderTimestamp",type:"uint256"},{internalType:"uint256",name:"spotPrice",type:"uint256"},{internalType:"int256",name:"expectedHedge",type:"int256"},{internalType:"int256",name:"currentHedge",type:"int256"},{internalType:"uint256",name:"currentLeverage",type:"uint256"},{internalType:"int256",name:"pendingCollateralDelta",type:"int256"},{internalType:"uint256",name:"baseBal",type:"uint256"},{internalType:"uint256",name:"quoteBal",type:"uint256"},{internalType:"uint256",name:"wethBal",type:"uint256"}],internalType:"struct GMXFuturesPoolHedger.GMXFuturesPoolHedgerView",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"spotPrice",type:"uint256"}],name:"getHedgingLiquidity",outputs:[{internalType:"uint256",name:"pendingDeltaLiquidity",type:"uint256"},{internalType:"uint256",name:"usedDeltaLiquidity",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPoolHedgerParams",outputs:[{components:[{internalType:"uint256",name:"interactionDelay",type:"uint256"},{internalType:"uint256",name:"hedgeCap",type:"uint256"}],internalType:"struct PoolHedger.PoolHedgerParameters",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPositions",outputs:[{components:[{components:[{internalType:"uint256",name:"size",type:"uint256"},{internalType:"uint256",name:"collateral",type:"uint256"},{internalType:"uint256",name:"averagePrice",type:"uint256"},{internalType:"uint256",name:"entryFundingRate",type:"uint256"},{internalType:"int256",name:"unrealisedPnl",type:"int256"},{internalType:"uint256",name:"lastIncreasedTime",type:"uint256"},{internalType:"bool",name:"isLong",type:"bool"}],internalType:"struct GMXFuturesPoolHedger.PositionDetails",name:"longPosition",type:"tuple"},{components:[{internalType:"uint256",name:"size",type:"uint256"},{internalType:"uint256",name:"collateral",type:"uint256"},{internalType:"uint256",name:"averagePrice",type:"uint256"},{internalType:"uint256",name:"entryFundingRate",type:"uint256"},{internalType:"int256",name:"unrealisedPnl",type:"int256"},{internalType:"uint256",name:"lastIncreasedTime",type:"uint256"},{internalType:"bool",name:"isLong",type:"bool"}],internalType:"struct GMXFuturesPoolHedger.PositionDetails",name:"shortPosition",type:"tuple"},{internalType:"uint256",name:"amountOpen",type:"uint256"},{internalType:"bool",name:"isLong",type:"bool"}],internalType:"struct GMXFuturesPoolHedger.CurrentPositions",name:"positions",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"spotPrice",type:"uint256"}],name:"getRemainingLongLiquidityDollars",outputs:[{internalType:"uint256",name:"remainingDollars",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getRemainingShortLiquidityDollars",outputs:[{internalType:"uint256",name:"remainingDollars",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bool",name:"isLong",type:"bool"},{internalType:"bool",name:"isIncrease",type:"bool"},{internalType:"uint256",name:"amountIn18",type:"uint256"}],name:"getSwapFeeBP",outputs:[{internalType:"uint256",name:"feeBP",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"positionKey",type:"bytes32"},{internalType:"bool",name:"isExecuted",type:"bool"},{internalType:"bool",name:"isIncrease",type:"bool"}],name:"gmxPositionCallback",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"greekCache",outputs:[{internalType:"contract OptionGreekCache",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"hasPendingDecrease",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"hasPendingIncrease",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"hedgeDelta",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract LiquidityPool",name:"_liquidityPool",type:"address"},{internalType:"address",name:"_optionMarket",type:"address"},{internalType:"contract OptionGreekCache",name:"_greekCache",type:"address"},{internalType:"contract BaseExchangeAdapter",name:"_exchangeAdapter",type:"address"},{internalType:"contract IPositionRouter",name:"_positionRouter",type:"address"},{internalType:"contract IRouter",name:"_router",type:"address"},{internalType:"contract IERC20Decimals",name:"_quoteAsset",type:"address"},{internalType:"contract IERC20Decimals",name:"_baseAsset",type:"address"},{internalType:"contract IERC20Decimals",name:"_weth",type:"address"}],name:"init",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"lastInteraction",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"lastOrderTimestamp",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_owner",type:"address"}],name:"nominateNewOwner",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"nominatedOwner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"optionMarket",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"pendingOrderKey",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"positionRouter",outputs:[{internalType:"contract IPositionRouter",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"quoteAsset",outputs:[{internalType:"contract IERC20Decimals",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address payable",name:"receiver",type:"address"}],name:"recoverEth",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract IERC20Decimals",name:"token",type:"address"},{internalType:"address",name:"recipient",type:"address"}],name:"recoverFunds",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"referralCode",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"resetInteractionDelay",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"router",outputs:[{internalType:"contract IRouter",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"sendAllFundsToLP",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"uint256",name:"acceptableSpotSlippage",type:"uint256"},{internalType:"uint256",name:"deltaThreshold",type:"uint256"},{internalType:"uint256",name:"marketDepthBuffer",type:"uint256"},{internalType:"uint256",name:"targetLeverage",type:"uint256"},{internalType:"uint256",name:"maxLeverage",type:"uint256"},{internalType:"uint256",name:"minCancelDelay",type:"uint256"},{internalType:"uint256",name:"minCollateralUpdate",type:"uint256"},{internalType:"bool",name:"vaultLiquidityCheckEnabled",type:"bool"}],internalType:"struct GMXFuturesPoolHedger.FuturesPoolHedgerParameters",name:"_futuresPoolHedgerParams",type:"tuple"}],name:"setFuturesPoolHedgerParams",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"uint256",name:"interactionDelay",type:"uint256"},{internalType:"uint256",name:"hedgeCap",type:"uint256"}],internalType:"struct PoolHedger.PoolHedgerParameters",name:"_poolHedgerParams",type:"tuple"}],name:"setPoolHedgerParams",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract IPositionRouter",name:"_positionRouter",type:"address"}],name:"setPositionRouter",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"_referralCode",type:"bytes32"}],name:"setReferralCode",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"updateCollateral",outputs:[],stateMutability:"payable",type:"function"},{inputs:[],name:"vault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"weth",outputs:[{internalType:"contract IERC20Decimals",name:"",type:"address"}],stateMutability:"view",type:"function"},{stateMutability:"payable",type:"receive"}],qa=[{inputs:[],stateMutability:"nonpayable",type:"constructor"},{inputs:[{internalType:"address",name:"thrower",type:"address"}],name:"AlreadyInitialised",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"approvee",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"BaseApprovalFailure",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"realAmount",type:"uint256"}],name:"BaseTransferFailed",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"}],name:"CannotRecoverQuoteBase",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"beneficiary",type:"address"}],name:"InvalidBeneficiaryAddress",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{components:[{internalType:"uint256",name:"liquidityCBThreshold",type:"uint256"},{internalType:"uint256",name:"liquidityCBTimeout",type:"uint256"},{internalType:"uint256",name:"ivVarianceCBThreshold",type:"uint256"},{internalType:"uint256",name:"skewVarianceCBThreshold",type:"uint256"},{internalType:"uint256",name:"ivVarianceCBTimeout",type:"uint256"},{internalType:"uint256",name:"skewVarianceCBTimeout",type:"uint256"},{internalType:"uint256",name:"boardSettlementCBTimeout",type:"uint256"},{internalType:"uint256",name:"contractAdjustmentCBTimeout",type:"uint256"}],internalType:"struct LiquidityPool.CircuitBreakerParameters",name:"cbParams",type:"tuple"}],name:"InvalidCircuitBreakerParameters",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{components:[{internalType:"uint256",name:"minDepositWithdraw",type:"uint256"},{internalType:"uint256",name:"depositDelay",type:"uint256"},{internalType:"uint256",name:"withdrawalDelay",type:"uint256"},{internalType:"uint256",name:"withdrawalFee",type:"uint256"},{internalType:"address",name:"guardianMultisig",type:"address"},{internalType:"uint256",name:"guardianDelay",type:"uint256"},{internalType:"uint256",name:"adjustmentNetScalingFactor",type:"uint256"},{internalType:"uint256",name:"callCollatScalingFactor",type:"uint256"},{internalType:"uint256",name:"putCollatScalingFactor",type:"uint256"}],internalType:"struct LiquidityPool.LiquidityPoolParameters",name:"lpParams",type:"tuple"}],name:"InvalidLiquidityPoolParameters",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"quoteToLock",type:"uint256"},{internalType:"uint256",name:"freeLiquidity",type:"uint256"},{components:[{internalType:"uint256",name:"quote",type:"uint256"},{internalType:"uint256",name:"base",type:"uint256"}],internalType:"struct LiquidityPool.Collateral",name:"lockedCollateral",type:"tuple"}],name:"LockingMoreQuoteThanIsFree",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"amountQuote",type:"uint256"},{internalType:"uint256",name:"minDeposit",type:"uint256"}],name:"MinimumDepositNotMet",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"amountQuote",type:"uint256"},{internalType:"uint256",name:"minWithdraw",type:"uint256"}],name:"MinimumWithdrawNotMet",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"int256",name:"totalAssetValue",type:"int256"}],name:"NegativeTotalAssetValue",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"amountQuote",type:"uint256"},{components:[{internalType:"uint256",name:"freeLiquidity",type:"uint256"},{internalType:"uint256",name:"burnableLiquidity",type:"uint256"},{internalType:"uint256",name:"reservedCollatLiquidity",type:"uint256"},{internalType:"uint256",name:"pendingDeltaLiquidity",type:"uint256"},{internalType:"uint256",name:"usedDeltaLiquidity",type:"uint256"},{internalType:"uint256",name:"NAV",type:"uint256"},{internalType:"uint256",name:"longScaleFactor",type:"uint256"}],internalType:"struct LiquidityPool.Liquidity",name:"liquidity",type:"tuple"}],name:"NotEnoughFreeToReclaimInsolvency",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"nominatedOwner",type:"address"}],name:"OnlyNominatedOwner",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"optionMarket",type:"address"}],name:"OnlyOptionMarket",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"owner",type:"address"}],name:"OnlyOwner",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"poolHedger",type:"address"}],name:"OnlyPoolHedger",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"poolHedger",type:"address"}],name:"OnlyShortCollateral",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"int256",name:"totalAssetValue",type:"int256"},{internalType:"int256",name:"optionValueDebt",type:"int256"}],name:"OptionValueDebtExceedsTotalAssets",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"approvee",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"QuoteApprovalFailure",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"realAmount",type:"uint256"}],name:"QuoteTransferFailed",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"premium",type:"uint256"},{internalType:"uint256",name:"reservedFee",type:"uint256"},{internalType:"uint256",name:"freeLiquidity",type:"uint256"}],name:"SendPremiumNotEnoughCollateral",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"amountOptions",type:"uint256"},{internalType:"bool",name:"increasesDelta",type:"bool"},{internalType:"uint256",name:"strikeId",type:"uint256"}],name:"UnableToHedgeDelta",type:"error"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"quoteSpent",type:"uint256"},{indexed:!1,internalType:"uint256",name:"baseReceived",type:"uint256"}],name:"BasePurchased",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"amountBase",type:"uint256"},{indexed:!1,internalType:"uint256",name:"quoteReceived",type:"uint256"}],name:"BaseSold",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"insolventSettlementAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amountQuoteReserved",type:"uint256"},{indexed:!1,internalType:"uint256",name:"totalOutstandingSettlements",type:"uint256"}],name:"BoardSettlement",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"newTimestamp",type:"uint256"}],name:"BoardSettlementCircuitBreakerUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"baseFreed",type:"uint256"},{indexed:!1,internalType:"uint256",name:"lockedCollateralBase",type:"uint256"}],name:"CallCollateralFreed",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"baseLocked",type:"uint256"},{indexed:!1,internalType:"uint256",name:"lockedCollateralBase",type:"uint256"}],name:"CallCollateralLocked",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"entryId",type:"uint256"},{indexed:!1,internalType:"bool",name:"boardNotStale",type:"bool"},{indexed:!1,internalType:"bool",name:"validEntry",type:"bool"},{indexed:!1,internalType:"bool",name:"guardianBypass",type:"bool"},{indexed:!1,internalType:"bool",name:"delaysExpired",type:"bool"}],name:"CheckingCanProcess",type:"event"},{anonymous:!1,inputs:[{components:[{internalType:"uint256",name:"liquidityCBThreshold",type:"uint256"},{internalType:"uint256",name:"liquidityCBTimeout",type:"uint256"},{internalType:"uint256",name:"ivVarianceCBThreshold",type:"uint256"},{internalType:"uint256",name:"skewVarianceCBThreshold",type:"uint256"},{internalType:"uint256",name:"ivVarianceCBTimeout",type:"uint256"},{internalType:"uint256",name:"skewVarianceCBTimeout",type:"uint256"},{internalType:"uint256",name:"boardSettlementCBTimeout",type:"uint256"},{internalType:"uint256",name:"contractAdjustmentCBTimeout",type:"uint256"}],indexed:!1,internalType:"struct LiquidityPool.CircuitBreakerParameters",name:"cbParams",type:"tuple"}],name:"CircuitBreakerParametersUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"newTimestamp",type:"uint256"},{indexed:!1,internalType:"bool",name:"ivVarianceThresholdCrossed",type:"bool"},{indexed:!1,internalType:"bool",name:"skewVarianceThresholdCrossed",type:"bool"},{indexed:!1,internalType:"bool",name:"liquidityThresholdCrossed",type:"bool"},{indexed:!1,internalType:"bool",name:"contractAdjustmentEvent",type:"bool"}],name:"CircuitBreakerUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"caller",type:"address"},{indexed:!0,internalType:"address",name:"beneficiary",type:"address"},{indexed:!0,internalType:"uint256",name:"depositQueueId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amountDeposited",type:"uint256"},{indexed:!1,internalType:"uint256",name:"tokenPrice",type:"uint256"},{indexed:!1,internalType:"uint256",name:"tokensReceived",type:"uint256"},{indexed:!1,internalType:"uint256",name:"timestamp",type:"uint256"}],name:"DepositProcessed",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"depositor",type:"address"},{indexed:!0,internalType:"address",name:"beneficiary",type:"address"},{indexed:!0,internalType:"uint256",name:"depositQueueId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amountDeposited",type:"uint256"},{indexed:!1,internalType:"uint256",name:"totalQueuedDeposits",type:"uint256"},{indexed:!1,internalType:"uint256",name:"timestamp",type:"uint256"}],name:"DepositQueued",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"amountQuoteAdded",type:"uint256"},{indexed:!1,internalType:"uint256",name:"totalInsolventSettlementAmount",type:"uint256"}],name:"InsolventSettlementAmountUpdated",type:"event"},{anonymous:!1,inputs:[{components:[{internalType:"uint256",name:"minDepositWithdraw",type:"uint256"},{internalType:"uint256",name:"depositDelay",type:"uint256"},{internalType:"uint256",name:"withdrawalDelay",type:"uint256"},{internalType:"uint256",name:"withdrawalFee",type:"uint256"},{internalType:"address",name:"guardianMultisig",type:"address"},{internalType:"uint256",name:"guardianDelay",type:"uint256"},{internalType:"uint256",name:"adjustmentNetScalingFactor",type:"uint256"},{internalType:"uint256",name:"callCollatScalingFactor",type:"uint256"},{internalType:"uint256",name:"putCollatScalingFactor",type:"uint256"}],indexed:!1,internalType:"struct LiquidityPool.LiquidityPoolParameters",name:"lpParams",type:"tuple"}],name:"LiquidityPoolParametersUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"user",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"totalOutstandingSettlements",type:"uint256"}],name:"OutstandingSettlementSent",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"oldOwner",type:"address"},{indexed:!1,internalType:"address",name:"newOwner",type:"address"}],name:"OwnerChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"newOwner",type:"address"}],name:"OwnerNominated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"contract PoolHedger",name:"poolHedger",type:"address"}],name:"PoolHedgerUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"recipient",type:"address"},{indexed:!1,internalType:"uint256",name:"recipientPortion",type:"uint256"},{indexed:!1,internalType:"uint256",name:"optionMarketPortion",type:"uint256"}],name:"PremiumTransferred",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"quoteFreed",type:"uint256"},{indexed:!1,internalType:"uint256",name:"lockedCollateralQuote",type:"uint256"}],name:"PutCollateralFreed",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"quoteLocked",type:"uint256"},{indexed:!1,internalType:"uint256",name:"lockedCollateralQuote",type:"uint256"}],name:"PutCollateralLocked",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"amountQuote",type:"uint256"}],name:"QuoteTransferredToPoolHedger",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"caller",type:"address"},{indexed:!0,internalType:"address",name:"beneficiary",type:"address"},{indexed:!0,internalType:"uint256",name:"withdrawalQueueId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amountWithdrawn",type:"uint256"},{indexed:!1,internalType:"uint256",name:"tokenPrice",type:"uint256"},{indexed:!1,internalType:"uint256",name:"quoteReceived",type:"uint256"},{indexed:!1,internalType:"uint256",name:"totalQueuedWithdrawals",type:"uint256"},{indexed:!1,internalType:"uint256",name:"timestamp",type:"uint256"}],name:"WithdrawPartiallyProcessed",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"caller",type:"address"},{indexed:!0,internalType:"address",name:"beneficiary",type:"address"},{indexed:!0,internalType:"uint256",name:"withdrawalQueueId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amountWithdrawn",type:"uint256"},{indexed:!1,internalType:"uint256",name:"tokenPrice",type:"uint256"},{indexed:!1,internalType:"uint256",name:"quoteReceived",type:"uint256"},{indexed:!1,internalType:"uint256",name:"totalQueuedWithdrawals",type:"uint256"},{indexed:!1,internalType:"uint256",name:"timestamp",type:"uint256"}],name:"WithdrawProcessed",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"withdrawer",type:"address"},{indexed:!0,internalType:"address",name:"beneficiary",type:"address"},{indexed:!0,internalType:"uint256",name:"withdrawalQueueId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amountWithdrawn",type:"uint256"},{indexed:!1,internalType:"uint256",name:"totalQueuedWithdrawals",type:"uint256"},{indexed:!1,internalType:"uint256",name:"timestamp",type:"uint256"}],name:"WithdrawQueued",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"caller",type:"address"},{indexed:!0,internalType:"address",name:"beneficiary",type:"address"},{indexed:!0,internalType:"uint256",name:"withdrawalQueueId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"tokenPrice",type:"uint256"},{indexed:!1,internalType:"uint256",name:"totalQueuedWithdrawals",type:"uint256"},{indexed:!1,internalType:"uint256",name:"timestamp",type:"uint256"},{indexed:!1,internalType:"uint256",name:"tokensReturned",type:"uint256"}],name:"WithdrawReverted",type:"event"},{inputs:[],name:"CBTimestamp",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"acceptOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"insolventSettlements",type:"uint256"},{internalType:"uint256",name:"amountQuoteFreed",type:"uint256"},{internalType:"uint256",name:"amountQuoteReserved",type:"uint256"},{internalType:"uint256",name:"amountBaseFreed",type:"uint256"}],name:"boardSettlement",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"cbParams",outputs:[{internalType:"uint256",name:"liquidityCBThreshold",type:"uint256"},{internalType:"uint256",name:"liquidityCBTimeout",type:"uint256"},{internalType:"uint256",name:"ivVarianceCBThreshold",type:"uint256"},{internalType:"uint256",name:"skewVarianceCBThreshold",type:"uint256"},{internalType:"uint256",name:"ivVarianceCBTimeout",type:"uint256"},{internalType:"uint256",name:"skewVarianceCBTimeout",type:"uint256"},{internalType:"uint256",name:"boardSettlementCBTimeout",type:"uint256"},{internalType:"uint256",name:"contractAdjustmentCBTimeout",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"exchangeBase",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"amountBase",type:"uint256"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"totalCost",type:"uint256"},{internalType:"uint256",name:"reservedFee",type:"uint256"},{internalType:"uint256",name:"longScaleFactor",type:"uint256"}],name:"freeCallCollateralAndSendPremium",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"amountQuoteFreed",type:"uint256"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"totalCost",type:"uint256"},{internalType:"uint256",name:"reservedFee",type:"uint256"},{internalType:"uint256",name:"longScaleFactor",type:"uint256"}],name:"freePutCollateralAndSendPremium",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"getCBParams",outputs:[{components:[{internalType:"uint256",name:"liquidityCBThreshold",type:"uint256"},{internalType:"uint256",name:"liquidityCBTimeout",type:"uint256"},{internalType:"uint256",name:"ivVarianceCBThreshold",type:"uint256"},{internalType:"uint256",name:"skewVarianceCBThreshold",type:"uint256"},{internalType:"uint256",name:"ivVarianceCBTimeout",type:"uint256"},{internalType:"uint256",name:"skewVarianceCBTimeout",type:"uint256"},{internalType:"uint256",name:"boardSettlementCBTimeout",type:"uint256"},{internalType:"uint256",name:"contractAdjustmentCBTimeout",type:"uint256"}],internalType:"struct LiquidityPool.CircuitBreakerParameters",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[],name:"getLiquidity",outputs:[{components:[{internalType:"uint256",name:"freeLiquidity",type:"uint256"},{internalType:"uint256",name:"burnableLiquidity",type:"uint256"},{internalType:"uint256",name:"reservedCollatLiquidity",type:"uint256"},{internalType:"uint256",name:"pendingDeltaLiquidity",type:"uint256"},{internalType:"uint256",name:"usedDeltaLiquidity",type:"uint256"},{internalType:"uint256",name:"NAV",type:"uint256"},{internalType:"uint256",name:"longScaleFactor",type:"uint256"}],internalType:"struct LiquidityPool.Liquidity",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[],name:"getLpParams",outputs:[{components:[{internalType:"uint256",name:"minDepositWithdraw",type:"uint256"},{internalType:"uint256",name:"depositDelay",type:"uint256"},{internalType:"uint256",name:"withdrawalDelay",type:"uint256"},{internalType:"uint256",name:"withdrawalFee",type:"uint256"},{internalType:"address",name:"guardianMultisig",type:"address"},{internalType:"uint256",name:"guardianDelay",type:"uint256"},{internalType:"uint256",name:"adjustmentNetScalingFactor",type:"uint256"},{internalType:"uint256",name:"callCollatScalingFactor",type:"uint256"},{internalType:"uint256",name:"putCollatScalingFactor",type:"uint256"}],internalType:"struct LiquidityPool.LiquidityPoolParameters",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[],name:"getTokenPrice",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getTokenPriceWithCheck",outputs:[{internalType:"uint256",name:"tokenPrice",type:"uint256"},{internalType:"bool",name:"isStale",type:"bool"},{internalType:"uint256",name:"circuitBreakerExpiry",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getTotalPoolValueQuote",outputs:[{internalType:"uint256",name:"totalPoolValue",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getTotalTokenSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract BaseExchangeAdapter",name:"_exchangeAdapter",type:"address"},{internalType:"contract OptionMarket",name:"_optionMarket",type:"address"},{internalType:"contract LiquidityToken",name:"_liquidityToken",type:"address"},{internalType:"contract OptionGreekCache",name:"_greekCache",type:"address"},{internalType:"contract PoolHedger",name:"_poolHedger",type:"address"},{internalType:"contract ShortCollateral",name:"_shortCollateral",type:"address"},{internalType:"contract IERC20Decimals",name:"_quoteAsset",type:"address"},{internalType:"contract IERC20Decimals",name:"_baseAsset",type:"address"}],name:"init",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"beneficiary",type:"address"},{internalType:"uint256",name:"amountQuote",type:"uint256"}],name:"initiateDeposit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"beneficiary",type:"address"},{internalType:"uint256",name:"amountLiquidityToken",type:"uint256"}],name:"initiateWithdraw",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"insolventSettlementAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"liquidationInsolventAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"spotPrice",type:"uint256"},{internalType:"uint256",name:"freeLiquidity",type:"uint256"},{internalType:"uint256",name:"strikeId",type:"uint256"}],name:"lockCallCollateral",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"freeLiquidity",type:"uint256"},{internalType:"uint256",name:"strikeId",type:"uint256"}],name:"lockPutCollateral",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"lockedCollateral",outputs:[{internalType:"uint256",name:"quote",type:"uint256"},{internalType:"uint256",name:"base",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"lpParams",outputs:[{internalType:"uint256",name:"minDepositWithdraw",type:"uint256"},{internalType:"uint256",name:"depositDelay",type:"uint256"},{internalType:"uint256",name:"withdrawalDelay",type:"uint256"},{internalType:"uint256",name:"withdrawalFee",type:"uint256"},{internalType:"address",name:"guardianMultisig",type:"address"},{internalType:"uint256",name:"guardianDelay",type:"uint256"},{internalType:"uint256",name:"adjustmentNetScalingFactor",type:"uint256"},{internalType:"uint256",name:"callCollatScalingFactor",type:"uint256"},{internalType:"uint256",name:"putCollatScalingFactor",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"nextQueuedDepositId",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"nextQueuedWithdrawalId",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_owner",type:"address"}],name:"nominateNewOwner",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"nominatedOwner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"poolHedger",outputs:[{internalType:"contract PoolHedger",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"limit",type:"uint256"}],name:"processDepositQueue",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"limit",type:"uint256"}],name:"processWithdrawalQueue",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"protectedQuote",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"queuedDepositHead",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"queuedDeposits",outputs:[{internalType:"uint256",name:"id",type:"uint256"},{internalType:"address",name:"beneficiary",type:"address"},{internalType:"uint256",name:"amountLiquidity",type:"uint256"},{internalType:"uint256",name:"mintedTokens",type:"uint256"},{internalType:"uint256",name:"depositInitiatedTime",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"queuedWithdrawalHead",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"queuedWithdrawals",outputs:[{internalType:"uint256",name:"id",type:"uint256"},{internalType:"address",name:"beneficiary",type:"address"},{internalType:"uint256",name:"amountTokens",type:"uint256"},{internalType:"uint256",name:"quoteSent",type:"uint256"},{internalType:"uint256",name:"withdrawInitiatedTime",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"quoteAsset",outputs:[{internalType:"contract IERC20Decimals",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"amountBase",type:"uint256"}],name:"reclaimInsolventBase",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"amountQuote",type:"uint256"}],name:"reclaimInsolventQuote",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract IERC20Decimals",name:"token",type:"address"},{internalType:"address",name:"recipient",type:"address"}],name:"recoverFunds",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"user",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"sendSettlementValue",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amountContracts",type:"uint256"},{internalType:"uint256",name:"premium",type:"uint256"},{internalType:"uint256",name:"freeLiquidity",type:"uint256"},{internalType:"uint256",name:"reservedFee",type:"uint256"},{internalType:"bool",name:"isCall",type:"bool"},{internalType:"uint256",name:"strikeId",type:"uint256"}],name:"sendShortPremium",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"uint256",name:"liquidityCBThreshold",type:"uint256"},{internalType:"uint256",name:"liquidityCBTimeout",type:"uint256"},{internalType:"uint256",name:"ivVarianceCBThreshold",type:"uint256"},{internalType:"uint256",name:"skewVarianceCBThreshold",type:"uint256"},{internalType:"uint256",name:"ivVarianceCBTimeout",type:"uint256"},{internalType:"uint256",name:"skewVarianceCBTimeout",type:"uint256"},{internalType:"uint256",name:"boardSettlementCBTimeout",type:"uint256"},{internalType:"uint256",name:"contractAdjustmentCBTimeout",type:"uint256"}],internalType:"struct LiquidityPool.CircuitBreakerParameters",name:"_cbParams",type:"tuple"}],name:"setCircuitBreakerParameters",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"uint256",name:"minDepositWithdraw",type:"uint256"},{internalType:"uint256",name:"depositDelay",type:"uint256"},{internalType:"uint256",name:"withdrawalDelay",type:"uint256"},{internalType:"uint256",name:"withdrawalFee",type:"uint256"},{internalType:"address",name:"guardianMultisig",type:"address"},{internalType:"uint256",name:"guardianDelay",type:"uint256"},{internalType:"uint256",name:"adjustmentNetScalingFactor",type:"uint256"},{internalType:"uint256",name:"callCollatScalingFactor",type:"uint256"},{internalType:"uint256",name:"putCollatScalingFactor",type:"uint256"}],internalType:"struct LiquidityPool.LiquidityPoolParameters",name:"_lpParams",type:"tuple"}],name:"setLiquidityPoolParameters",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract PoolHedger",name:"newPoolHedger",type:"address"}],name:"setPoolHedger",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"totalOutstandingSettlements",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalQueuedDeposits",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalQueuedWithdrawals",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferQuoteToHedge",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"updateCBs",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"insolvencyAmountInQuote",type:"uint256"}],name:"updateLiquidationInsolvency",outputs:[],stateMutability:"nonpayable",type:"function"}],Fa=[{inputs:[{internalType:"string",name:"name_",type:"string"},{internalType:"string",name:"symbol_",type:"string"}],stateMutability:"nonpayable",type:"constructor"},{inputs:[{internalType:"address",name:"thrower",type:"address"}],name:"AlreadyInitialised",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"liquidityPool",type:"address"}],name:"OnlyLiquidityPool",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"nominatedOwner",type:"address"}],name:"OnlyNominatedOwner",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"owner",type:"address"}],name:"OnlyOwner",type:"error"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"contract ILiquidityTracker",name:"liquidityTracker",type:"address"}],name:"LiquidityTrackerSet",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"oldOwner",type:"address"},{indexed:!1,internalType:"address",name:"newOwner",type:"address"}],name:"OwnerChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"newOwner",type:"address"}],name:"OwnerNominated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"},{inputs:[],name:"acceptOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"tokenAmount",type:"uint256"}],name:"burn",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"subtractedValue",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_liquidityPool",type:"address"}],name:"init",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"liquidityPool",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"liquidityTracker",outputs:[{internalType:"contract ILiquidityTracker",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"tokenAmount",type:"uint256"}],name:"mint",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_owner",type:"address"}],name:"nominateNewOwner",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"nominatedOwner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract ILiquidityTracker",name:"_liquidityTracker",type:"address"}],name:"setLiquidityTracker",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"}],Ba=[{inputs:[],stateMutability:"nonpayable",type:"constructor"},{inputs:[{internalType:"address",name:"thrower",type:"address"}],name:"AlreadyInitialised",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"boardId",type:"uint256"},{internalType:"uint256",name:"newStrikesLength",type:"uint256"},{internalType:"uint256",name:"maxStrikesPerBoard",type:"uint256"}],name:"BoardStrikeLimitExceeded",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"boardId",type:"uint256"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"currentTimestamp",type:"uint256"}],name:"CannotUpdateExpiredBoard",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"timestamp",type:"uint256"},{internalType:"uint256",name:"lastObservedTimestamp",type:"uint256"}],name:"InvalidBlockTimestamp",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"boardId",type:"uint256"}],name:"InvalidBoardId",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{components:[{internalType:"uint256",name:"ivGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"skewGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"shortVolShock",type:"uint256"},{internalType:"uint256",name:"shortPostCutoffVolShock",type:"uint256"},{internalType:"uint256",name:"longVolShock",type:"uint256"},{internalType:"uint256",name:"longPostCutoffVolShock",type:"uint256"},{internalType:"uint256",name:"liquidateVolShock",type:"uint256"},{internalType:"uint256",name:"liquidatePostCutoffVolShock",type:"uint256"},{internalType:"uint256",name:"shortSpotMin",type:"uint256"},{internalType:"uint256",name:"liquidateSpotMin",type:"uint256"}],internalType:"struct OptionGreekCache.ForceCloseParameters",name:"forceCloseParams",type:"tuple"}],name:"InvalidForceCloseParameters",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{components:[{internalType:"uint256",name:"maxStrikesPerBoard",type:"uint256"},{internalType:"uint256",name:"acceptableSpotPricePercentMove",type:"uint256"},{internalType:"uint256",name:"staleUpdateDuration",type:"uint256"},{internalType:"uint256",name:"varianceIvGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"varianceSkewGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"optionValueIvGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"optionValueSkewGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"gwavSkewFloor",type:"uint256"},{internalType:"uint256",name:"gwavSkewCap",type:"uint256"}],internalType:"struct OptionGreekCache.GreekCacheParameters",name:"greekCacheParams",type:"tuple"}],name:"InvalidGreekCacheParameters",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{components:[{internalType:"uint256",name:"minStaticQuoteCollateral",type:"uint256"},{internalType:"uint256",name:"minStaticBaseCollateral",type:"uint256"},{internalType:"uint256",name:"shockVolA",type:"uint256"},{internalType:"uint256",name:"shockVolPointA",type:"uint256"},{internalType:"uint256",name:"shockVolB",type:"uint256"},{internalType:"uint256",name:"shockVolPointB",type:"uint256"},{internalType:"uint256",name:"callSpotPriceShock",type:"uint256"},{internalType:"uint256",name:"putSpotPriceShock",type:"uint256"}],internalType:"struct OptionGreekCache.MinCollateralParameters",name:"minCollatParams",type:"tuple"}],name:"InvalidMinCollatParams",type:"error"},{inputs:[],name:"LnNegativeUndefined",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"nominatedOwner",type:"address"}],name:"OnlyNominatedOwner",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"optionMarket",type:"address"}],name:"OnlyOptionMarket",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"optionMarketPricer",type:"address"}],name:"OnlyOptionMarketPricer",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"owner",type:"address"}],name:"OnlyOwner",type:"error"},{inputs:[],name:"Overflow",type:"error"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"boardId",type:"uint256"}],name:"BoardCacheRemoved",type:"event"},{anonymous:!1,inputs:[{components:[{internalType:"uint256",name:"id",type:"uint256"},{internalType:"uint256[]",name:"strikes",type:"uint256[]"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"iv",type:"uint256"},{components:[{internalType:"int256",name:"netDelta",type:"int256"},{internalType:"int256",name:"netStdVega",type:"int256"},{internalType:"int256",name:"netOptionValue",type:"int256"}],internalType:"struct OptionGreekCache.NetGreeks",name:"netGreeks",type:"tuple"},{internalType:"uint256",name:"updatedAt",type:"uint256"},{internalType:"uint256",name:"updatedAtPrice",type:"uint256"},{internalType:"uint256",name:"maxSkewVariance",type:"uint256"},{internalType:"uint256",name:"ivVariance",type:"uint256"}],indexed:!1,internalType:"struct OptionGreekCache.OptionBoardCache",name:"boardCache",type:"tuple"}],name:"BoardCacheUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"boardId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newIv",type:"uint256"},{indexed:!1,internalType:"uint256",name:"globalMaxIvVariance",type:"uint256"}],name:"BoardIvUpdated",type:"event"},{anonymous:!1,inputs:[{components:[{internalType:"uint256",name:"ivGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"skewGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"shortVolShock",type:"uint256"},{internalType:"uint256",name:"shortPostCutoffVolShock",type:"uint256"},{internalType:"uint256",name:"longVolShock",type:"uint256"},{internalType:"uint256",name:"longPostCutoffVolShock",type:"uint256"},{internalType:"uint256",name:"liquidateVolShock",type:"uint256"},{internalType:"uint256",name:"liquidatePostCutoffVolShock",type:"uint256"},{internalType:"uint256",name:"shortSpotMin",type:"uint256"},{internalType:"uint256",name:"liquidateSpotMin",type:"uint256"}],indexed:!1,internalType:"struct OptionGreekCache.ForceCloseParameters",name:"params",type:"tuple"}],name:"ForceCloseParametersSet",type:"event"},{anonymous:!1,inputs:[{components:[{internalType:"uint256",name:"minUpdatedAt",type:"uint256"},{internalType:"uint256",name:"minUpdatedAtPrice",type:"uint256"},{internalType:"uint256",name:"maxUpdatedAtPrice",type:"uint256"},{internalType:"uint256",name:"maxSkewVariance",type:"uint256"},{internalType:"uint256",name:"maxIvVariance",type:"uint256"},{components:[{internalType:"int256",name:"netDelta",type:"int256"},{internalType:"int256",name:"netStdVega",type:"int256"},{internalType:"int256",name:"netOptionValue",type:"int256"}],internalType:"struct OptionGreekCache.NetGreeks",name:"netGreeks",type:"tuple"}],indexed:!1,internalType:"struct OptionGreekCache.GlobalCache",name:"globalCache",type:"tuple"}],name:"GlobalCacheUpdated",type:"event"},{anonymous:!1,inputs:[{components:[{internalType:"uint256",name:"maxStrikesPerBoard",type:"uint256"},{internalType:"uint256",name:"acceptableSpotPricePercentMove",type:"uint256"},{internalType:"uint256",name:"staleUpdateDuration",type:"uint256"},{internalType:"uint256",name:"varianceIvGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"varianceSkewGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"optionValueIvGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"optionValueSkewGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"gwavSkewFloor",type:"uint256"},{internalType:"uint256",name:"gwavSkewCap",type:"uint256"}],indexed:!1,internalType:"struct OptionGreekCache.GreekCacheParameters",name:"params",type:"tuple"}],name:"GreekCacheParametersSet",type:"event"},{anonymous:!1,inputs:[{components:[{internalType:"uint256",name:"minStaticQuoteCollateral",type:"uint256"},{internalType:"uint256",name:"minStaticBaseCollateral",type:"uint256"},{internalType:"uint256",name:"shockVolA",type:"uint256"},{internalType:"uint256",name:"shockVolPointA",type:"uint256"},{internalType:"uint256",name:"shockVolB",type:"uint256"},{internalType:"uint256",name:"shockVolPointB",type:"uint256"},{internalType:"uint256",name:"callSpotPriceShock",type:"uint256"},{internalType:"uint256",name:"putSpotPriceShock",type:"uint256"}],indexed:!1,internalType:"struct OptionGreekCache.MinCollateralParameters",name:"params",type:"tuple"}],name:"MinCollateralParametersSet",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"oldOwner",type:"address"},{indexed:!1,internalType:"address",name:"newOwner",type:"address"}],name:"OwnerChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"newOwner",type:"address"}],name:"OwnerNominated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"strikeId",type:"uint256"}],name:"StrikeCacheRemoved",type:"event"},{anonymous:!1,inputs:[{components:[{internalType:"uint256",name:"id",type:"uint256"},{internalType:"uint256",name:"boardId",type:"uint256"},{internalType:"uint256",name:"strikePrice",type:"uint256"},{internalType:"uint256",name:"skew",type:"uint256"},{components:[{internalType:"int256",name:"callDelta",type:"int256"},{internalType:"int256",name:"putDelta",type:"int256"},{internalType:"uint256",name:"stdVega",type:"uint256"},{internalType:"uint256",name:"callPrice",type:"uint256"},{internalType:"uint256",name:"putPrice",type:"uint256"}],internalType:"struct OptionGreekCache.StrikeGreeks",name:"greeks",type:"tuple"},{internalType:"int256",name:"callExposure",type:"int256"},{internalType:"int256",name:"putExposure",type:"int256"},{internalType:"uint256",name:"skewVariance",type:"uint256"}],indexed:!1,internalType:"struct OptionGreekCache.StrikeCache",name:"strikeCache",type:"tuple"}],name:"StrikeCacheUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"strikeId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newSkew",type:"uint256"},{indexed:!1,internalType:"uint256",name:"globalMaxSkewVariance",type:"uint256"}],name:"StrikeSkewUpdated",type:"event"},{inputs:[],name:"acceptOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"uint256",name:"id",type:"uint256"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"iv",type:"uint256"},{internalType:"bool",name:"frozen",type:"bool"},{internalType:"uint256[]",name:"strikeIds",type:"uint256[]"}],internalType:"struct OptionMarket.OptionBoard",name:"board",type:"tuple"},{components:[{internalType:"uint256",name:"id",type:"uint256"},{internalType:"uint256",name:"strikePrice",type:"uint256"},{internalType:"uint256",name:"skew",type:"uint256"},{internalType:"uint256",name:"longCall",type:"uint256"},{internalType:"uint256",name:"shortCallBase",type:"uint256"},{internalType:"uint256",name:"shortCallQuote",type:"uint256"},{internalType:"uint256",name:"longPut",type:"uint256"},{internalType:"uint256",name:"shortPut",type:"uint256"},{internalType:"uint256",name:"boardId",type:"uint256"}],internalType:"struct OptionMarket.Strike[]",name:"strikes",type:"tuple[]"}],name:"addBoard",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"boardId",type:"uint256"},{internalType:"uint256",name:"strikeId",type:"uint256"},{internalType:"uint256",name:"strikePrice",type:"uint256"},{internalType:"uint256",name:"skew",type:"uint256"}],name:"addStrikeToBoard",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"boardId",type:"uint256"}],name:"getBoardGreeksView",outputs:[{components:[{components:[{internalType:"int256",name:"netDelta",type:"int256"},{internalType:"int256",name:"netStdVega",type:"int256"},{internalType:"int256",name:"netOptionValue",type:"int256"}],internalType:"struct OptionGreekCache.NetGreeks",name:"boardGreeks",type:"tuple"},{internalType:"uint256",name:"ivGWAV",type:"uint256"},{components:[{internalType:"int256",name:"callDelta",type:"int256"},{internalType:"int256",name:"putDelta",type:"int256"},{internalType:"uint256",name:"stdVega",type:"uint256"},{internalType:"uint256",name:"callPrice",type:"uint256"},{internalType:"uint256",name:"putPrice",type:"uint256"}],internalType:"struct OptionGreekCache.StrikeGreeks[]",name:"strikeGreeks",type:"tuple[]"},{internalType:"uint256[]",name:"skewGWAVs",type:"uint256[]"}],internalType:"struct OptionGreekCache.BoardGreeksView",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[],name:"getForceCloseParams",outputs:[{components:[{internalType:"uint256",name:"ivGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"skewGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"shortVolShock",type:"uint256"},{internalType:"uint256",name:"shortPostCutoffVolShock",type:"uint256"},{internalType:"uint256",name:"longVolShock",type:"uint256"},{internalType:"uint256",name:"longPostCutoffVolShock",type:"uint256"},{internalType:"uint256",name:"liquidateVolShock",type:"uint256"},{internalType:"uint256",name:"liquidatePostCutoffVolShock",type:"uint256"},{internalType:"uint256",name:"shortSpotMin",type:"uint256"},{internalType:"uint256",name:"liquidateSpotMin",type:"uint256"}],internalType:"struct OptionGreekCache.ForceCloseParameters",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[],name:"getGlobalCache",outputs:[{components:[{internalType:"uint256",name:"minUpdatedAt",type:"uint256"},{internalType:"uint256",name:"minUpdatedAtPrice",type:"uint256"},{internalType:"uint256",name:"maxUpdatedAtPrice",type:"uint256"},{internalType:"uint256",name:"maxSkewVariance",type:"uint256"},{internalType:"uint256",name:"maxIvVariance",type:"uint256"},{components:[{internalType:"int256",name:"netDelta",type:"int256"},{internalType:"int256",name:"netStdVega",type:"int256"},{internalType:"int256",name:"netOptionValue",type:"int256"}],internalType:"struct OptionGreekCache.NetGreeks",name:"netGreeks",type:"tuple"}],internalType:"struct OptionGreekCache.GlobalCache",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[],name:"getGlobalNetDelta",outputs:[{internalType:"int256",name:"",type:"int256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getGlobalOptionValue",outputs:[{internalType:"int256",name:"",type:"int256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getGreekCacheParams",outputs:[{components:[{internalType:"uint256",name:"maxStrikesPerBoard",type:"uint256"},{internalType:"uint256",name:"acceptableSpotPricePercentMove",type:"uint256"},{internalType:"uint256",name:"staleUpdateDuration",type:"uint256"},{internalType:"uint256",name:"varianceIvGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"varianceSkewGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"optionValueIvGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"optionValueSkewGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"gwavSkewFloor",type:"uint256"},{internalType:"uint256",name:"gwavSkewCap",type:"uint256"}],internalType:"struct OptionGreekCache.GreekCacheParameters",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"boardId",type:"uint256"},{internalType:"uint256",name:"secondsAgo",type:"uint256"}],name:"getIvGWAV",outputs:[{internalType:"uint256",name:"ivGWAV",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getMinCollatParams",outputs:[{components:[{internalType:"uint256",name:"minStaticQuoteCollateral",type:"uint256"},{internalType:"uint256",name:"minStaticBaseCollateral",type:"uint256"},{internalType:"uint256",name:"shockVolA",type:"uint256"},{internalType:"uint256",name:"shockVolPointA",type:"uint256"},{internalType:"uint256",name:"shockVolB",type:"uint256"},{internalType:"uint256",name:"shockVolPointB",type:"uint256"},{internalType:"uint256",name:"callSpotPriceShock",type:"uint256"},{internalType:"uint256",name:"putSpotPriceShock",type:"uint256"}],internalType:"struct OptionGreekCache.MinCollateralParameters",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"},{internalType:"uint256",name:"strikePrice",type:"uint256"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"spotPrice",type:"uint256"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"getMinCollateral",outputs:[{internalType:"uint256",name:"minCollateral",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"boardId",type:"uint256"}],name:"getOptionBoardCache",outputs:[{components:[{internalType:"uint256",name:"id",type:"uint256"},{internalType:"uint256[]",name:"strikes",type:"uint256[]"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"iv",type:"uint256"},{components:[{internalType:"int256",name:"netDelta",type:"int256"},{internalType:"int256",name:"netStdVega",type:"int256"},{internalType:"int256",name:"netOptionValue",type:"int256"}],internalType:"struct OptionGreekCache.NetGreeks",name:"netGreeks",type:"tuple"},{internalType:"uint256",name:"updatedAt",type:"uint256"},{internalType:"uint256",name:"updatedAtPrice",type:"uint256"},{internalType:"uint256",name:"maxSkewVariance",type:"uint256"},{internalType:"uint256",name:"ivVariance",type:"uint256"}],internalType:"struct OptionGreekCache.OptionBoardCache",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{components:[{internalType:"bool",name:"isBuy",type:"bool"},{internalType:"bool",name:"isForceClose",type:"bool"},{internalType:"enum OptionMarket.TradeDirection",name:"tradeDirection",type:"uint8"},{internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"strikePrice",type:"uint256"},{internalType:"uint256",name:"spotPrice",type:"uint256"},{components:[{internalType:"uint256",name:"freeLiquidity",type:"uint256"},{internalType:"uint256",name:"burnableLiquidity",type:"uint256"},{internalType:"uint256",name:"reservedCollatLiquidity",type:"uint256"},{internalType:"uint256",name:"pendingDeltaLiquidity",type:"uint256"},{internalType:"uint256",name:"usedDeltaLiquidity",type:"uint256"},{internalType:"uint256",name:"NAV",type:"uint256"},{internalType:"uint256",name:"longScaleFactor",type:"uint256"}],internalType:"struct LiquidityPool.Liquidity",name:"liquidity",type:"tuple"}],internalType:"struct OptionMarket.TradeParameters",name:"trade",type:"tuple"},{components:[{internalType:"uint256",name:"id",type:"uint256"},{internalType:"uint256",name:"strikePrice",type:"uint256"},{internalType:"uint256",name:"skew",type:"uint256"},{internalType:"uint256",name:"longCall",type:"uint256"},{internalType:"uint256",name:"shortCallBase",type:"uint256"},{internalType:"uint256",name:"shortCallQuote",type:"uint256"},{internalType:"uint256",name:"longPut",type:"uint256"},{internalType:"uint256",name:"shortPut",type:"uint256"},{internalType:"uint256",name:"boardId",type:"uint256"}],internalType:"struct OptionMarket.Strike",name:"strike",type:"tuple"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"newVol",type:"uint256"},{internalType:"bool",name:"isPostCutoff",type:"bool"}],name:"getPriceForForceClose",outputs:[{internalType:"uint256",name:"optionPrice",type:"uint256"},{internalType:"uint256",name:"forceCloseVol",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"timeToMaturity",type:"uint256"}],name:"getShockVol",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"strikeId",type:"uint256"},{internalType:"uint256",name:"secondsAgo",type:"uint256"}],name:"getSkewGWAV",outputs:[{internalType:"uint256",name:"skewGWAV",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"strikeId",type:"uint256"}],name:"getStrikeCache",outputs:[{components:[{internalType:"uint256",name:"id",type:"uint256"},{internalType:"uint256",name:"boardId",type:"uint256"},{internalType:"uint256",name:"strikePrice",type:"uint256"},{internalType:"uint256",name:"skew",type:"uint256"},{components:[{internalType:"int256",name:"callDelta",type:"int256"},{internalType:"int256",name:"putDelta",type:"int256"},{internalType:"uint256",name:"stdVega",type:"uint256"},{internalType:"uint256",name:"callPrice",type:"uint256"},{internalType:"uint256",name:"putPrice",type:"uint256"}],internalType:"struct OptionGreekCache.StrikeGreeks",name:"greeks",type:"tuple"},{internalType:"int256",name:"callExposure",type:"int256"},{internalType:"int256",name:"putExposure",type:"int256"},{internalType:"uint256",name:"skewVariance",type:"uint256"}],internalType:"struct OptionGreekCache.StrikeCache",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract BaseExchangeAdapter",name:"_exchangeAdapter",type:"address"},{internalType:"contract OptionMarket",name:"_optionMarket",type:"address"},{internalType:"address",name:"_optionMarketPricer",type:"address"}],name:"init",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"boardId",type:"uint256"}],name:"isBoardCacheStale",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"spotPrice",type:"uint256"}],name:"isGlobalCacheStale",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_owner",type:"address"}],name:"nominateNewOwner",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"nominatedOwner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"boardId",type:"uint256"}],name:"removeBoard",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"boardId",type:"uint256"},{internalType:"uint256",name:"newBaseIv",type:"uint256"}],name:"setBoardIv",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"uint256",name:"ivGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"skewGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"shortVolShock",type:"uint256"},{internalType:"uint256",name:"shortPostCutoffVolShock",type:"uint256"},{internalType:"uint256",name:"longVolShock",type:"uint256"},{internalType:"uint256",name:"longPostCutoffVolShock",type:"uint256"},{internalType:"uint256",name:"liquidateVolShock",type:"uint256"},{internalType:"uint256",name:"liquidatePostCutoffVolShock",type:"uint256"},{internalType:"uint256",name:"shortSpotMin",type:"uint256"},{internalType:"uint256",name:"liquidateSpotMin",type:"uint256"}],internalType:"struct OptionGreekCache.ForceCloseParameters",name:"_forceCloseParams",type:"tuple"}],name:"setForceCloseParameters",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"uint256",name:"maxStrikesPerBoard",type:"uint256"},{internalType:"uint256",name:"acceptableSpotPricePercentMove",type:"uint256"},{internalType:"uint256",name:"staleUpdateDuration",type:"uint256"},{internalType:"uint256",name:"varianceIvGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"varianceSkewGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"optionValueIvGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"optionValueSkewGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"gwavSkewFloor",type:"uint256"},{internalType:"uint256",name:"gwavSkewCap",type:"uint256"}],internalType:"struct OptionGreekCache.GreekCacheParameters",name:"_greekCacheParams",type:"tuple"}],name:"setGreekCacheParameters",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"uint256",name:"minStaticQuoteCollateral",type:"uint256"},{internalType:"uint256",name:"minStaticBaseCollateral",type:"uint256"},{internalType:"uint256",name:"shockVolA",type:"uint256"},{internalType:"uint256",name:"shockVolPointA",type:"uint256"},{internalType:"uint256",name:"shockVolB",type:"uint256"},{internalType:"uint256",name:"shockVolPointB",type:"uint256"},{internalType:"uint256",name:"callSpotPriceShock",type:"uint256"},{internalType:"uint256",name:"putSpotPriceShock",type:"uint256"}],internalType:"struct OptionGreekCache.MinCollateralParameters",name:"_minCollatParams",type:"tuple"}],name:"setMinCollateralParameters",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"strikeId",type:"uint256"},{internalType:"uint256",name:"newSkew",type:"uint256"}],name:"setStrikeSkew",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"boardId",type:"uint256"}],name:"updateBoardCachedGreeks",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"uint256",name:"id",type:"uint256"},{internalType:"uint256",name:"strikePrice",type:"uint256"},{internalType:"uint256",name:"skew",type:"uint256"},{internalType:"uint256",name:"longCall",type:"uint256"},{internalType:"uint256",name:"shortCallBase",type:"uint256"},{internalType:"uint256",name:"shortCallQuote",type:"uint256"},{internalType:"uint256",name:"longPut",type:"uint256"},{internalType:"uint256",name:"shortPut",type:"uint256"},{internalType:"uint256",name:"boardId",type:"uint256"}],internalType:"struct OptionMarket.Strike",name:"strike",type:"tuple"},{components:[{internalType:"bool",name:"isBuy",type:"bool"},{internalType:"bool",name:"isForceClose",type:"bool"},{internalType:"enum OptionMarket.TradeDirection",name:"tradeDirection",type:"uint8"},{internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"strikePrice",type:"uint256"},{internalType:"uint256",name:"spotPrice",type:"uint256"},{components:[{internalType:"uint256",name:"freeLiquidity",type:"uint256"},{internalType:"uint256",name:"burnableLiquidity",type:"uint256"},{internalType:"uint256",name:"reservedCollatLiquidity",type:"uint256"},{internalType:"uint256",name:"pendingDeltaLiquidity",type:"uint256"},{internalType:"uint256",name:"usedDeltaLiquidity",type:"uint256"},{internalType:"uint256",name:"NAV",type:"uint256"},{internalType:"uint256",name:"longScaleFactor",type:"uint256"}],internalType:"struct LiquidityPool.Liquidity",name:"liquidity",type:"tuple"}],internalType:"struct OptionMarket.TradeParameters",name:"trade",type:"tuple"},{internalType:"uint256",name:"iv",type:"uint256"},{internalType:"uint256",name:"skew",type:"uint256"},{internalType:"bool",name:"isPostCutoff",type:"bool"}],name:"updateStrikeExposureAndGetPrice",outputs:[{components:[{internalType:"uint256",name:"optionPrice",type:"uint256"},{internalType:"int256",name:"preTradeAmmNetStdVega",type:"int256"},{internalType:"int256",name:"postTradeAmmNetStdVega",type:"int256"},{internalType:"int256",name:"callDelta",type:"int256"},{internalType:"uint256",name:"volTraded",type:"uint256"},{internalType:"uint256",name:"ivVariance",type:"uint256"},{internalType:"uint256",name:"vega",type:"uint256"}],internalType:"struct OptionGreekCache.TradePricing",name:"pricing",type:"tuple"}],stateMutability:"nonpayable",type:"function"}],La=[{inputs:[],stateMutability:"nonpayable",type:"constructor"},{inputs:[{internalType:"address",name:"thrower",type:"address"}],name:"AlreadyInitialised",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"int256",name:"strikeCallDelta",type:"int256"},{internalType:"int256",name:"minDelta",type:"int256"},{internalType:"int256",name:"maxDelta",type:"int256"}],name:"ForceCloseDeltaOutOfRange",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"bool",name:"isBuy",type:"bool"},{internalType:"uint256",name:"newSkew",type:"uint256"},{internalType:"uint256",name:"minSkew",type:"uint256"},{internalType:"uint256",name:"maxSkew",type:"uint256"}],name:"ForceCloseSkewOutOfRange",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{components:[{internalType:"uint256",name:"optionPriceFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"optionPriceFee1xPoint",type:"uint256"},{internalType:"uint256",name:"optionPriceFee2xPoint",type:"uint256"},{internalType:"uint256",name:"spotPriceFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"spotPriceFee1xPoint",type:"uint256"},{internalType:"uint256",name:"spotPriceFee2xPoint",type:"uint256"},{internalType:"uint256",name:"vegaFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"standardSize",type:"uint256"},{internalType:"uint256",name:"skewAdjustmentFactor",type:"uint256"}],internalType:"struct OptionMarketPricer.PricingParameters",name:"pricingParams",type:"tuple"}],name:"InvalidPricingParameters",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{components:[{internalType:"int256",name:"minDelta",type:"int256"},{internalType:"int256",name:"minForceCloseDelta",type:"int256"},{internalType:"uint256",name:"tradingCutoff",type:"uint256"},{internalType:"uint256",name:"minBaseIV",type:"uint256"},{internalType:"uint256",name:"maxBaseIV",type:"uint256"},{internalType:"uint256",name:"minSkew",type:"uint256"},{internalType:"uint256",name:"maxSkew",type:"uint256"},{internalType:"uint256",name:"minVol",type:"uint256"},{internalType:"uint256",name:"maxVol",type:"uint256"},{internalType:"uint256",name:"absMinSkew",type:"uint256"},{internalType:"uint256",name:"absMaxSkew",type:"uint256"},{internalType:"bool",name:"capSkewsToAbs",type:"bool"}],internalType:"struct OptionMarketPricer.TradeLimitParameters",name:"tradeLimitParams",type:"tuple"}],name:"InvalidTradeLimitParameters",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"nominatedOwner",type:"address"}],name:"OnlyNominatedOwner",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"optionMarket",type:"address"}],name:"OnlyOptionMarket",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"owner",type:"address"}],name:"OnlyOwner",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"int256",name:"strikeCallDelta",type:"int256"},{internalType:"int256",name:"minDelta",type:"int256"},{internalType:"int256",name:"maxDelta",type:"int256"}],name:"TradeDeltaOutOfRange",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"tradingCutoff",type:"uint256"},{internalType:"uint256",name:"boardExpiry",type:"uint256"},{internalType:"uint256",name:"currentTime",type:"uint256"}],name:"TradingCutoffReached",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"bool",name:"isBuy",type:"bool"},{components:[{internalType:"uint256",name:"vol",type:"uint256"},{internalType:"uint256",name:"baseIv",type:"uint256"},{internalType:"uint256",name:"skew",type:"uint256"}],internalType:"struct OptionMarketPricer.VolComponents",name:"currentVol",type:"tuple"},{components:[{internalType:"uint256",name:"vol",type:"uint256"},{internalType:"uint256",name:"baseIv",type:"uint256"},{internalType:"uint256",name:"skew",type:"uint256"}],internalType:"struct OptionMarketPricer.VolComponents",name:"newVol",type:"tuple"},{components:[{internalType:"uint256",name:"vol",type:"uint256"},{internalType:"uint256",name:"baseIv",type:"uint256"},{internalType:"uint256",name:"skew",type:"uint256"}],internalType:"struct OptionMarketPricer.VolComponents",name:"tradeBounds",type:"tuple"}],name:"VolSkewOrBaseIvOutsideOfTradingBounds",type:"error"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"oldOwner",type:"address"},{indexed:!1,internalType:"address",name:"newOwner",type:"address"}],name:"OwnerChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"newOwner",type:"address"}],name:"OwnerNominated",type:"event"},{anonymous:!1,inputs:[{components:[{internalType:"uint256",name:"optionPriceFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"optionPriceFee1xPoint",type:"uint256"},{internalType:"uint256",name:"optionPriceFee2xPoint",type:"uint256"},{internalType:"uint256",name:"spotPriceFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"spotPriceFee1xPoint",type:"uint256"},{internalType:"uint256",name:"spotPriceFee2xPoint",type:"uint256"},{internalType:"uint256",name:"vegaFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"standardSize",type:"uint256"},{internalType:"uint256",name:"skewAdjustmentFactor",type:"uint256"}],indexed:!1,internalType:"struct OptionMarketPricer.PricingParameters",name:"pricingParams",type:"tuple"}],name:"PricingParametersSet",type:"event"},{anonymous:!1,inputs:[{components:[{internalType:"int256",name:"minDelta",type:"int256"},{internalType:"int256",name:"minForceCloseDelta",type:"int256"},{internalType:"uint256",name:"tradingCutoff",type:"uint256"},{internalType:"uint256",name:"minBaseIV",type:"uint256"},{internalType:"uint256",name:"maxBaseIV",type:"uint256"},{internalType:"uint256",name:"minSkew",type:"uint256"},{internalType:"uint256",name:"maxSkew",type:"uint256"},{internalType:"uint256",name:"minVol",type:"uint256"},{internalType:"uint256",name:"maxVol",type:"uint256"},{internalType:"uint256",name:"absMinSkew",type:"uint256"},{internalType:"uint256",name:"absMaxSkew",type:"uint256"},{internalType:"bool",name:"capSkewsToAbs",type:"bool"}],indexed:!1,internalType:"struct OptionMarketPricer.TradeLimitParameters",name:"tradeLimitParams",type:"tuple"}],name:"TradeLimitParametersSet",type:"event"},{anonymous:!1,inputs:[{components:[{internalType:"uint256",name:"defaultVarianceFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"forceCloseVarianceFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"skewAdjustmentCoefficient",type:"uint256"},{internalType:"uint256",name:"referenceSkew",type:"uint256"},{internalType:"uint256",name:"minimumStaticSkewAdjustment",type:"uint256"},{internalType:"uint256",name:"vegaCoefficient",type:"uint256"},{internalType:"uint256",name:"minimumStaticVega",type:"uint256"},{internalType:"uint256",name:"ivVarianceCoefficient",type:"uint256"},{internalType:"uint256",name:"minimumStaticIvVariance",type:"uint256"}],indexed:!1,internalType:"struct OptionMarketPricer.VarianceFeeParameters",name:"varianceFeeParams",type:"tuple"}],name:"VarianceFeeParametersSet",type:"event"},{inputs:[],name:"acceptOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"getPricingParams",outputs:[{components:[{internalType:"uint256",name:"optionPriceFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"optionPriceFee1xPoint",type:"uint256"},{internalType:"uint256",name:"optionPriceFee2xPoint",type:"uint256"},{internalType:"uint256",name:"spotPriceFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"spotPriceFee1xPoint",type:"uint256"},{internalType:"uint256",name:"spotPriceFee2xPoint",type:"uint256"},{internalType:"uint256",name:"vegaFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"standardSize",type:"uint256"},{internalType:"uint256",name:"skewAdjustmentFactor",type:"uint256"}],internalType:"struct OptionMarketPricer.PricingParameters",name:"pricingParameters",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"pointA",type:"uint256"},{internalType:"uint256",name:"pointB",type:"uint256"},{internalType:"uint256",name:"coefficient",type:"uint256"}],name:"getTimeWeightedFee",outputs:[{internalType:"uint256",name:"timeWeightedFee",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getTradeLimitParams",outputs:[{components:[{internalType:"int256",name:"minDelta",type:"int256"},{internalType:"int256",name:"minForceCloseDelta",type:"int256"},{internalType:"uint256",name:"tradingCutoff",type:"uint256"},{internalType:"uint256",name:"minBaseIV",type:"uint256"},{internalType:"uint256",name:"maxBaseIV",type:"uint256"},{internalType:"uint256",name:"minSkew",type:"uint256"},{internalType:"uint256",name:"maxSkew",type:"uint256"},{internalType:"uint256",name:"minVol",type:"uint256"},{internalType:"uint256",name:"maxVol",type:"uint256"},{internalType:"uint256",name:"absMinSkew",type:"uint256"},{internalType:"uint256",name:"absMaxSkew",type:"uint256"},{internalType:"bool",name:"capSkewsToAbs",type:"bool"}],internalType:"struct OptionMarketPricer.TradeLimitParameters",name:"tradeLimitParameters",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{components:[{internalType:"bool",name:"isBuy",type:"bool"},{internalType:"bool",name:"isForceClose",type:"bool"},{internalType:"enum OptionMarket.TradeDirection",name:"tradeDirection",type:"uint8"},{internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"strikePrice",type:"uint256"},{internalType:"uint256",name:"spotPrice",type:"uint256"},{components:[{internalType:"uint256",name:"freeLiquidity",type:"uint256"},{internalType:"uint256",name:"burnableLiquidity",type:"uint256"},{internalType:"uint256",name:"reservedCollatLiquidity",type:"uint256"},{internalType:"uint256",name:"pendingDeltaLiquidity",type:"uint256"},{internalType:"uint256",name:"usedDeltaLiquidity",type:"uint256"},{internalType:"uint256",name:"NAV",type:"uint256"},{internalType:"uint256",name:"longScaleFactor",type:"uint256"}],internalType:"struct LiquidityPool.Liquidity",name:"liquidity",type:"tuple"}],internalType:"struct OptionMarket.TradeParameters",name:"trade",type:"tuple"},{components:[{internalType:"uint256",name:"optionPrice",type:"uint256"},{internalType:"int256",name:"preTradeAmmNetStdVega",type:"int256"},{internalType:"int256",name:"postTradeAmmNetStdVega",type:"int256"},{internalType:"int256",name:"callDelta",type:"int256"},{internalType:"uint256",name:"volTraded",type:"uint256"},{internalType:"uint256",name:"ivVariance",type:"uint256"},{internalType:"uint256",name:"vega",type:"uint256"}],internalType:"struct OptionGreekCache.TradePricing",name:"pricing",type:"tuple"},{internalType:"uint256",name:"newBaseIv",type:"uint256"},{internalType:"uint256",name:"newSkew",type:"uint256"}],name:"getTradeResult",outputs:[{components:[{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"premium",type:"uint256"},{internalType:"uint256",name:"optionPriceFee",type:"uint256"},{internalType:"uint256",name:"spotPriceFee",type:"uint256"},{components:[{internalType:"int256",name:"preTradeAmmNetStdVega",type:"int256"},{internalType:"int256",name:"postTradeAmmNetStdVega",type:"int256"},{internalType:"uint256",name:"vegaUtil",type:"uint256"},{internalType:"uint256",name:"volTraded",type:"uint256"},{internalType:"uint256",name:"NAV",type:"uint256"},{internalType:"uint256",name:"vegaUtilFee",type:"uint256"}],internalType:"struct OptionMarketPricer.VegaUtilFeeComponents",name:"vegaUtilFee",type:"tuple"},{components:[{internalType:"uint256",name:"varianceFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"vega",type:"uint256"},{internalType:"uint256",name:"vegaCoefficient",type:"uint256"},{internalType:"uint256",name:"skew",type:"uint256"},{internalType:"uint256",name:"skewCoefficient",type:"uint256"},{internalType:"uint256",name:"ivVariance",type:"uint256"},{internalType:"uint256",name:"ivVarianceCoefficient",type:"uint256"},{internalType:"uint256",name:"varianceFee",type:"uint256"}],internalType:"struct OptionMarketPricer.VarianceFeeComponents",name:"varianceFee",type:"tuple"},{internalType:"uint256",name:"totalFee",type:"uint256"},{internalType:"uint256",name:"totalCost",type:"uint256"},{internalType:"uint256",name:"volTraded",type:"uint256"},{internalType:"uint256",name:"newBaseIv",type:"uint256"},{internalType:"uint256",name:"newSkew",type:"uint256"}],internalType:"struct OptionMarketPricer.TradeResult",name:"tradeResult",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{components:[{internalType:"bool",name:"isBuy",type:"bool"},{internalType:"bool",name:"isForceClose",type:"bool"},{internalType:"enum OptionMarket.TradeDirection",name:"tradeDirection",type:"uint8"},{internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"strikePrice",type:"uint256"},{internalType:"uint256",name:"spotPrice",type:"uint256"},{components:[{internalType:"uint256",name:"freeLiquidity",type:"uint256"},{internalType:"uint256",name:"burnableLiquidity",type:"uint256"},{internalType:"uint256",name:"reservedCollatLiquidity",type:"uint256"},{internalType:"uint256",name:"pendingDeltaLiquidity",type:"uint256"},{internalType:"uint256",name:"usedDeltaLiquidity",type:"uint256"},{internalType:"uint256",name:"NAV",type:"uint256"},{internalType:"uint256",name:"longScaleFactor",type:"uint256"}],internalType:"struct LiquidityPool.Liquidity",name:"liquidity",type:"tuple"}],internalType:"struct OptionMarket.TradeParameters",name:"trade",type:"tuple"},{components:[{internalType:"uint256",name:"optionPrice",type:"uint256"},{internalType:"int256",name:"preTradeAmmNetStdVega",type:"int256"},{internalType:"int256",name:"postTradeAmmNetStdVega",type:"int256"},{internalType:"int256",name:"callDelta",type:"int256"},{internalType:"uint256",name:"volTraded",type:"uint256"},{internalType:"uint256",name:"ivVariance",type:"uint256"},{internalType:"uint256",name:"vega",type:"uint256"}],internalType:"struct OptionGreekCache.TradePricing",name:"pricing",type:"tuple"},{internalType:"uint256",name:"skew",type:"uint256"}],name:"getVarianceFee",outputs:[{components:[{internalType:"uint256",name:"varianceFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"vega",type:"uint256"},{internalType:"uint256",name:"vegaCoefficient",type:"uint256"},{internalType:"uint256",name:"skew",type:"uint256"},{internalType:"uint256",name:"skewCoefficient",type:"uint256"},{internalType:"uint256",name:"ivVariance",type:"uint256"},{internalType:"uint256",name:"ivVarianceCoefficient",type:"uint256"},{internalType:"uint256",name:"varianceFee",type:"uint256"}],internalType:"struct OptionMarketPricer.VarianceFeeComponents",name:"varianceFeeComponents",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVarianceFeeParams",outputs:[{components:[{internalType:"uint256",name:"defaultVarianceFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"forceCloseVarianceFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"skewAdjustmentCoefficient",type:"uint256"},{internalType:"uint256",name:"referenceSkew",type:"uint256"},{internalType:"uint256",name:"minimumStaticSkewAdjustment",type:"uint256"},{internalType:"uint256",name:"vegaCoefficient",type:"uint256"},{internalType:"uint256",name:"minimumStaticVega",type:"uint256"},{internalType:"uint256",name:"ivVarianceCoefficient",type:"uint256"},{internalType:"uint256",name:"minimumStaticIvVariance",type:"uint256"}],internalType:"struct OptionMarketPricer.VarianceFeeParameters",name:"varianceFeeParameters",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{components:[{internalType:"bool",name:"isBuy",type:"bool"},{internalType:"bool",name:"isForceClose",type:"bool"},{internalType:"enum OptionMarket.TradeDirection",name:"tradeDirection",type:"uint8"},{internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"strikePrice",type:"uint256"},{internalType:"uint256",name:"spotPrice",type:"uint256"},{components:[{internalType:"uint256",name:"freeLiquidity",type:"uint256"},{internalType:"uint256",name:"burnableLiquidity",type:"uint256"},{internalType:"uint256",name:"reservedCollatLiquidity",type:"uint256"},{internalType:"uint256",name:"pendingDeltaLiquidity",type:"uint256"},{internalType:"uint256",name:"usedDeltaLiquidity",type:"uint256"},{internalType:"uint256",name:"NAV",type:"uint256"},{internalType:"uint256",name:"longScaleFactor",type:"uint256"}],internalType:"struct LiquidityPool.Liquidity",name:"liquidity",type:"tuple"}],internalType:"struct OptionMarket.TradeParameters",name:"trade",type:"tuple"},{components:[{internalType:"uint256",name:"optionPrice",type:"uint256"},{internalType:"int256",name:"preTradeAmmNetStdVega",type:"int256"},{internalType:"int256",name:"postTradeAmmNetStdVega",type:"int256"},{internalType:"int256",name:"callDelta",type:"int256"},{internalType:"uint256",name:"volTraded",type:"uint256"},{internalType:"uint256",name:"ivVariance",type:"uint256"},{internalType:"uint256",name:"vega",type:"uint256"}],internalType:"struct OptionGreekCache.TradePricing",name:"pricing",type:"tuple"}],name:"getVegaUtilFee",outputs:[{components:[{internalType:"int256",name:"preTradeAmmNetStdVega",type:"int256"},{internalType:"int256",name:"postTradeAmmNetStdVega",type:"int256"},{internalType:"uint256",name:"vegaUtil",type:"uint256"},{internalType:"uint256",name:"volTraded",type:"uint256"},{internalType:"uint256",name:"NAV",type:"uint256"},{internalType:"uint256",name:"vegaUtilFee",type:"uint256"}],internalType:"struct OptionMarketPricer.VegaUtilFeeComponents",name:"vegaUtilFeeComponents",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_optionMarket",type:"address"},{internalType:"contract OptionGreekCache",name:"_greekCache",type:"address"}],name:"init",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"bool",name:"isBuy",type:"bool"},{internalType:"bool",name:"isForceClose",type:"bool"},{internalType:"enum OptionMarket.TradeDirection",name:"tradeDirection",type:"uint8"},{internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"strikePrice",type:"uint256"},{internalType:"uint256",name:"spotPrice",type:"uint256"},{components:[{internalType:"uint256",name:"freeLiquidity",type:"uint256"},{internalType:"uint256",name:"burnableLiquidity",type:"uint256"},{internalType:"uint256",name:"reservedCollatLiquidity",type:"uint256"},{internalType:"uint256",name:"pendingDeltaLiquidity",type:"uint256"},{internalType:"uint256",name:"usedDeltaLiquidity",type:"uint256"},{internalType:"uint256",name:"NAV",type:"uint256"},{internalType:"uint256",name:"longScaleFactor",type:"uint256"}],internalType:"struct LiquidityPool.Liquidity",name:"liquidity",type:"tuple"}],internalType:"struct OptionMarket.TradeParameters",name:"trade",type:"tuple"},{internalType:"uint256",name:"boardBaseIv",type:"uint256"},{internalType:"uint256",name:"strikeSkew",type:"uint256"}],name:"ivImpactForTrade",outputs:[{internalType:"uint256",name:"newBaseIv",type:"uint256"},{internalType:"uint256",name:"newSkew",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_owner",type:"address"}],name:"nominateNewOwner",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"nominatedOwner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"pricingParams",outputs:[{internalType:"uint256",name:"optionPriceFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"optionPriceFee1xPoint",type:"uint256"},{internalType:"uint256",name:"optionPriceFee2xPoint",type:"uint256"},{internalType:"uint256",name:"spotPriceFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"spotPriceFee1xPoint",type:"uint256"},{internalType:"uint256",name:"spotPriceFee2xPoint",type:"uint256"},{internalType:"uint256",name:"vegaFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"standardSize",type:"uint256"},{internalType:"uint256",name:"skewAdjustmentFactor",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{components:[{internalType:"uint256",name:"optionPriceFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"optionPriceFee1xPoint",type:"uint256"},{internalType:"uint256",name:"optionPriceFee2xPoint",type:"uint256"},{internalType:"uint256",name:"spotPriceFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"spotPriceFee1xPoint",type:"uint256"},{internalType:"uint256",name:"spotPriceFee2xPoint",type:"uint256"},{internalType:"uint256",name:"vegaFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"standardSize",type:"uint256"},{internalType:"uint256",name:"skewAdjustmentFactor",type:"uint256"}],internalType:"struct OptionMarketPricer.PricingParameters",name:"_pricingParams",type:"tuple"}],name:"setPricingParams",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"int256",name:"minDelta",type:"int256"},{internalType:"int256",name:"minForceCloseDelta",type:"int256"},{internalType:"uint256",name:"tradingCutoff",type:"uint256"},{internalType:"uint256",name:"minBaseIV",type:"uint256"},{internalType:"uint256",name:"maxBaseIV",type:"uint256"},{internalType:"uint256",name:"minSkew",type:"uint256"},{internalType:"uint256",name:"maxSkew",type:"uint256"},{internalType:"uint256",name:"minVol",type:"uint256"},{internalType:"uint256",name:"maxVol",type:"uint256"},{internalType:"uint256",name:"absMinSkew",type:"uint256"},{internalType:"uint256",name:"absMaxSkew",type:"uint256"},{internalType:"bool",name:"capSkewsToAbs",type:"bool"}],internalType:"struct OptionMarketPricer.TradeLimitParameters",name:"_tradeLimitParams",type:"tuple"}],name:"setTradeLimitParams",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"uint256",name:"defaultVarianceFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"forceCloseVarianceFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"skewAdjustmentCoefficient",type:"uint256"},{internalType:"uint256",name:"referenceSkew",type:"uint256"},{internalType:"uint256",name:"minimumStaticSkewAdjustment",type:"uint256"},{internalType:"uint256",name:"vegaCoefficient",type:"uint256"},{internalType:"uint256",name:"minimumStaticVega",type:"uint256"},{internalType:"uint256",name:"ivVarianceCoefficient",type:"uint256"},{internalType:"uint256",name:"minimumStaticIvVariance",type:"uint256"}],internalType:"struct OptionMarketPricer.VarianceFeeParameters",name:"_varianceFeeParams",type:"tuple"}],name:"setVarianceFeeParams",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"tradeLimitParams",outputs:[{internalType:"int256",name:"minDelta",type:"int256"},{internalType:"int256",name:"minForceCloseDelta",type:"int256"},{internalType:"uint256",name:"tradingCutoff",type:"uint256"},{internalType:"uint256",name:"minBaseIV",type:"uint256"},{internalType:"uint256",name:"maxBaseIV",type:"uint256"},{internalType:"uint256",name:"minSkew",type:"uint256"},{internalType:"uint256",name:"maxSkew",type:"uint256"},{internalType:"uint256",name:"minVol",type:"uint256"},{internalType:"uint256",name:"maxVol",type:"uint256"},{internalType:"uint256",name:"absMinSkew",type:"uint256"},{internalType:"uint256",name:"absMaxSkew",type:"uint256"},{internalType:"bool",name:"capSkewsToAbs",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{components:[{internalType:"uint256",name:"id",type:"uint256"},{internalType:"uint256",name:"strikePrice",type:"uint256"},{internalType:"uint256",name:"skew",type:"uint256"},{internalType:"uint256",name:"longCall",type:"uint256"},{internalType:"uint256",name:"shortCallBase",type:"uint256"},{internalType:"uint256",name:"shortCallQuote",type:"uint256"},{internalType:"uint256",name:"longPut",type:"uint256"},{internalType:"uint256",name:"shortPut",type:"uint256"},{internalType:"uint256",name:"boardId",type:"uint256"}],internalType:"struct OptionMarket.Strike",name:"strike",type:"tuple"},{components:[{internalType:"bool",name:"isBuy",type:"bool"},{internalType:"bool",name:"isForceClose",type:"bool"},{internalType:"enum OptionMarket.TradeDirection",name:"tradeDirection",type:"uint8"},{internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"strikePrice",type:"uint256"},{internalType:"uint256",name:"spotPrice",type:"uint256"},{components:[{internalType:"uint256",name:"freeLiquidity",type:"uint256"},{internalType:"uint256",name:"burnableLiquidity",type:"uint256"},{internalType:"uint256",name:"reservedCollatLiquidity",type:"uint256"},{internalType:"uint256",name:"pendingDeltaLiquidity",type:"uint256"},{internalType:"uint256",name:"usedDeltaLiquidity",type:"uint256"},{internalType:"uint256",name:"NAV",type:"uint256"},{internalType:"uint256",name:"longScaleFactor",type:"uint256"}],internalType:"struct LiquidityPool.Liquidity",name:"liquidity",type:"tuple"}],internalType:"struct OptionMarket.TradeParameters",name:"trade",type:"tuple"},{internalType:"uint256",name:"boardBaseIv",type:"uint256"},{internalType:"uint256",name:"boardExpiry",type:"uint256"}],name:"updateCacheAndGetTradeResult",outputs:[{components:[{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"premium",type:"uint256"},{internalType:"uint256",name:"optionPriceFee",type:"uint256"},{internalType:"uint256",name:"spotPriceFee",type:"uint256"},{components:[{internalType:"int256",name:"preTradeAmmNetStdVega",type:"int256"},{internalType:"int256",name:"postTradeAmmNetStdVega",type:"int256"},{internalType:"uint256",name:"vegaUtil",type:"uint256"},{internalType:"uint256",name:"volTraded",type:"uint256"},{internalType:"uint256",name:"NAV",type:"uint256"},{internalType:"uint256",name:"vegaUtilFee",type:"uint256"}],internalType:"struct OptionMarketPricer.VegaUtilFeeComponents",name:"vegaUtilFee",type:"tuple"},{components:[{internalType:"uint256",name:"varianceFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"vega",type:"uint256"},{internalType:"uint256",name:"vegaCoefficient",type:"uint256"},{internalType:"uint256",name:"skew",type:"uint256"},{internalType:"uint256",name:"skewCoefficient",type:"uint256"},{internalType:"uint256",name:"ivVariance",type:"uint256"},{internalType:"uint256",name:"ivVarianceCoefficient",type:"uint256"},{internalType:"uint256",name:"varianceFee",type:"uint256"}],internalType:"struct OptionMarketPricer.VarianceFeeComponents",name:"varianceFee",type:"tuple"},{internalType:"uint256",name:"totalFee",type:"uint256"},{internalType:"uint256",name:"totalCost",type:"uint256"},{internalType:"uint256",name:"volTraded",type:"uint256"},{internalType:"uint256",name:"newBaseIv",type:"uint256"},{internalType:"uint256",name:"newSkew",type:"uint256"}],internalType:"struct OptionMarketPricer.TradeResult",name:"tradeResult",type:"tuple"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"varianceFeeParams",outputs:[{internalType:"uint256",name:"defaultVarianceFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"forceCloseVarianceFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"skewAdjustmentCoefficient",type:"uint256"},{internalType:"uint256",name:"referenceSkew",type:"uint256"},{internalType:"uint256",name:"minimumStaticSkewAdjustment",type:"uint256"},{internalType:"uint256",name:"vegaCoefficient",type:"uint256"},{internalType:"uint256",name:"minimumStaticVega",type:"uint256"},{internalType:"uint256",name:"ivVarianceCoefficient",type:"uint256"},{internalType:"uint256",name:"minimumStaticIvVariance",type:"uint256"}],stateMutability:"view",type:"function"}],Da=[{inputs:[{internalType:"string",name:"name_",type:"string"},{internalType:"string",name:"symbol_",type:"string"}],stateMutability:"nonpayable",type:"constructor"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"bool",name:"invalidPositionId",type:"bool"},{internalType:"bool",name:"positionInactive",type:"bool"},{internalType:"bool",name:"isShort",type:"bool"}],name:"AddingCollateralToInvalidPosition",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{components:[{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"uint256",name:"strikeId",type:"uint256"},{internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"collateral",type:"uint256"},{internalType:"enum OptionToken.PositionState",name:"state",type:"uint8"}],internalType:"struct OptionToken.OptionPosition",name:"position",type:"tuple"},{internalType:"uint256",name:"spotPrice",type:"uint256"}],name:"AdjustmentResultsInMinimumCollateralNotBeingMet",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"}],name:"AlreadyInitialised",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"bool",name:"invalidPositionId",type:"bool"},{internalType:"bool",name:"positionInactive",type:"bool"},{internalType:"bool",name:"strikeMismatch",type:"bool"},{internalType:"bool",name:"optionTypeMismatch",type:"bool"}],name:"CannotAdjustInvalidPosition",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"}],name:"CannotClosePositionZero",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"}],name:"CannotOpenZeroAmount",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"uint256",name:"setCollateralTo",type:"uint256"}],name:"FullyClosingWithNonZeroSetCollateral",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{components:[{internalType:"uint256",name:"penaltyRatio",type:"uint256"},{internalType:"uint256",name:"liquidatorFeeRatio",type:"uint256"},{internalType:"uint256",name:"smFeeRatio",type:"uint256"},{internalType:"uint256",name:"minLiquidationFee",type:"uint256"}],internalType:"struct OptionToken.PartialCollateralParameters",name:"partialCollatParams",type:"tuple"}],name:"InvalidPartialCollateralParameters",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"originalPositionAmount",type:"uint256"},{internalType:"uint256",name:"splitAmount",type:"uint256"}],name:"InvalidSplitAmount",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"uint256",name:"positionId",type:"uint256"}],name:"MergingUnapprovedPosition",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"}],name:"MustMergeTwoOrMorePositions",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"nominatedOwner",type:"address"}],name:"OnlyNominatedOwner",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"optionMarket",type:"address"}],name:"OnlyOptionMarket",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"owner",type:"address"}],name:"OnlyOwner",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"address",name:"trader",type:"address"},{internalType:"address",name:"owner",type:"address"}],name:"OnlyOwnerCanAdjustPosition",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"shortCollateral",type:"address"}],name:"OnlyShortCollateral",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{components:[{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"uint256",name:"strikeId",type:"uint256"},{internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"collateral",type:"uint256"},{internalType:"enum OptionToken.PositionState",name:"state",type:"uint8"}],internalType:"struct OptionToken.OptionPosition",name:"firstPosition",type:"tuple"},{components:[{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"uint256",name:"strikeId",type:"uint256"},{internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"collateral",type:"uint256"},{internalType:"enum OptionToken.PositionState",name:"state",type:"uint8"}],internalType:"struct OptionToken.OptionPosition",name:"nextPosition",type:"tuple"},{internalType:"bool",name:"ownerMismatch",type:"bool"},{internalType:"bool",name:"strikeMismatch",type:"bool"},{internalType:"bool",name:"optionTypeMismatch",type:"bool"},{internalType:"bool",name:"duplicatePositionId",type:"bool"}],name:"PositionMismatchWhenMerging",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{components:[{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"uint256",name:"strikeId",type:"uint256"},{internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"collateral",type:"uint256"},{internalType:"enum OptionToken.PositionState",name:"state",type:"uint8"}],internalType:"struct OptionToken.OptionPosition",name:"position",type:"tuple"},{internalType:"uint256",name:"spotPrice",type:"uint256"}],name:"PositionNotLiquidatable",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{components:[{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"uint256",name:"strikeId",type:"uint256"},{internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"collateral",type:"uint256"},{internalType:"enum OptionToken.PositionState",name:"state",type:"uint8"}],internalType:"struct OptionToken.OptionPosition",name:"position",type:"tuple"},{internalType:"uint256",name:"spotPrice",type:"uint256"}],name:"ResultingNewPositionLiquidatable",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{components:[{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"uint256",name:"strikeId",type:"uint256"},{internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"collateral",type:"uint256"},{internalType:"enum OptionToken.PositionState",name:"state",type:"uint8"}],internalType:"struct OptionToken.OptionPosition",name:"position",type:"tuple"},{internalType:"uint256",name:"spotPrice",type:"uint256"}],name:"ResultingOriginalPositionLiquidatable",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"uint256",name:"positionId",type:"uint256"}],name:"SplittingUnapprovedPosition",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"strikeId",type:"uint256"}],name:"StrikeIsSettled",type:"error"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"approved",type:"address"},{indexed:!0,internalType:"uint256",name:"tokenId",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"operator",type:"address"},{indexed:!1,internalType:"bool",name:"approved",type:"bool"}],name:"ApprovalForAll",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"oldOwner",type:"address"},{indexed:!1,internalType:"address",name:"newOwner",type:"address"}],name:"OwnerChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"newOwner",type:"address"}],name:"OwnerNominated",type:"event"},{anonymous:!1,inputs:[{components:[{internalType:"uint256",name:"penaltyRatio",type:"uint256"},{internalType:"uint256",name:"liquidatorFeeRatio",type:"uint256"},{internalType:"uint256",name:"smFeeRatio",type:"uint256"},{internalType:"uint256",name:"minLiquidationFee",type:"uint256"}],indexed:!1,internalType:"struct OptionToken.PartialCollateralParameters",name:"partialCollateralParams",type:"tuple"}],name:"PartialCollateralParamsSet",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"positionId",type:"uint256"},{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"enum OptionToken.PositionUpdatedType",name:"updatedType",type:"uint8"},{components:[{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"uint256",name:"strikeId",type:"uint256"},{internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"collateral",type:"uint256"},{internalType:"enum OptionToken.PositionState",name:"state",type:"uint8"}],indexed:!1,internalType:"struct OptionToken.OptionPosition",name:"position",type:"tuple"},{indexed:!1,internalType:"uint256",name:"timestamp",type:"uint256"}],name:"PositionUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!0,internalType:"uint256",name:"tokenId",type:"uint256"}],name:"Transfer",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"string",name:"URI",type:"string"}],name:"URISet",type:"event"},{inputs:[],name:"acceptOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"uint256",name:"amountCollateral",type:"uint256"}],name:"addCollateral",outputs:[{internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"bool",name:"isBuy",type:"bool"},{internalType:"bool",name:"isForceClose",type:"bool"},{internalType:"enum OptionMarket.TradeDirection",name:"tradeDirection",type:"uint8"},{internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"strikePrice",type:"uint256"},{internalType:"uint256",name:"spotPrice",type:"uint256"},{components:[{internalType:"uint256",name:"freeLiquidity",type:"uint256"},{internalType:"uint256",name:"burnableLiquidity",type:"uint256"},{internalType:"uint256",name:"reservedCollatLiquidity",type:"uint256"},{internalType:"uint256",name:"pendingDeltaLiquidity",type:"uint256"},{internalType:"uint256",name:"usedDeltaLiquidity",type:"uint256"},{internalType:"uint256",name:"NAV",type:"uint256"},{internalType:"uint256",name:"longScaleFactor",type:"uint256"}],internalType:"struct LiquidityPool.Liquidity",name:"liquidity",type:"tuple"}],internalType:"struct OptionMarket.TradeParameters",name:"trade",type:"tuple"},{internalType:"uint256",name:"strikeId",type:"uint256"},{internalType:"address",name:"trader",type:"address"},{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"uint256",name:"optionCost",type:"uint256"},{internalType:"uint256",name:"setCollateralTo",type:"uint256"},{internalType:"bool",name:"isOpen",type:"bool"}],name:"adjustPosition",outputs:[{internalType:"uint256",name:"",type:"uint256"},{internalType:"int256",name:"pendingCollateral",type:"int256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"approve",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"baseURI",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{components:[{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"uint256",name:"strikeId",type:"uint256"},{internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"collateral",type:"uint256"},{internalType:"enum OptionToken.PositionState",name:"state",type:"uint8"}],internalType:"struct OptionToken.OptionPosition",name:"position",type:"tuple"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"strikePrice",type:"uint256"},{internalType:"uint256",name:"spotPrice",type:"uint256"}],name:"canLiquidate",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"getApproved",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"gwavPremium",type:"uint256"},{internalType:"uint256",name:"userPositionCollateral",type:"uint256"},{internalType:"uint256",name:"convertedMinLiquidationFee",type:"uint256"},{internalType:"uint256",name:"insolvencyMultiplier",type:"uint256"}],name:"getLiquidationFees",outputs:[{components:[{internalType:"uint256",name:"returnCollateral",type:"uint256"},{internalType:"uint256",name:"lpPremiums",type:"uint256"},{internalType:"uint256",name:"lpFee",type:"uint256"},{internalType:"uint256",name:"liquidatorFee",type:"uint256"},{internalType:"uint256",name:"smFee",type:"uint256"},{internalType:"uint256",name:"insolventAmount",type:"uint256"}],internalType:"struct OptionToken.LiquidationFees",name:"liquidationFees",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"positionId",type:"uint256"}],name:"getOptionPosition",outputs:[{components:[{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"uint256",name:"strikeId",type:"uint256"},{internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"collateral",type:"uint256"},{internalType:"enum OptionToken.PositionState",name:"state",type:"uint8"}],internalType:"struct OptionToken.OptionPosition",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256[]",name:"positionIds",type:"uint256[]"}],name:"getOptionPositions",outputs:[{components:[{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"uint256",name:"strikeId",type:"uint256"},{internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"collateral",type:"uint256"},{internalType:"enum OptionToken.PositionState",name:"state",type:"uint8"}],internalType:"struct OptionToken.OptionPosition[]",name:"",type:"tuple[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"target",type:"address"}],name:"getOwnerPositions",outputs:[{components:[{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"uint256",name:"strikeId",type:"uint256"},{internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"collateral",type:"uint256"},{internalType:"enum OptionToken.PositionState",name:"state",type:"uint8"}],internalType:"struct OptionToken.OptionPosition[]",name:"",type:"tuple[]"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPartialCollatParams",outputs:[{components:[{internalType:"uint256",name:"penaltyRatio",type:"uint256"},{internalType:"uint256",name:"liquidatorFeeRatio",type:"uint256"},{internalType:"uint256",name:"smFeeRatio",type:"uint256"},{internalType:"uint256",name:"minLiquidationFee",type:"uint256"}],internalType:"struct OptionToken.PartialCollateralParameters",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"positionId",type:"uint256"}],name:"getPositionState",outputs:[{internalType:"enum OptionToken.PositionState",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"positionId",type:"uint256"}],name:"getPositionWithOwner",outputs:[{components:[{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"uint256",name:"strikeId",type:"uint256"},{internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"collateral",type:"uint256"},{internalType:"enum OptionToken.PositionState",name:"state",type:"uint8"},{internalType:"address",name:"owner",type:"address"}],internalType:"struct OptionToken.PositionWithOwner",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256[]",name:"positionIds",type:"uint256[]"}],name:"getPositionsWithOwner",outputs:[{components:[{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"uint256",name:"strikeId",type:"uint256"},{internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"collateral",type:"uint256"},{internalType:"enum OptionToken.PositionState",name:"state",type:"uint8"},{internalType:"address",name:"owner",type:"address"}],internalType:"struct OptionToken.PositionWithOwner[]",name:"",type:"tuple[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract OptionMarket",name:"_optionMarket",type:"address"},{internalType:"contract OptionGreekCache",name:"_greekCache",type:"address"},{internalType:"address",name:"_shortCollateral",type:"address"},{internalType:"contract BaseExchangeAdapter",name:"_exchangeAdapter",type:"address"}],name:"init",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"operator",type:"address"}],name:"isApprovedForAll",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"positionId",type:"uint256"},{components:[{internalType:"bool",name:"isBuy",type:"bool"},{internalType:"bool",name:"isForceClose",type:"bool"},{internalType:"enum OptionMarket.TradeDirection",name:"tradeDirection",type:"uint8"},{internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"strikePrice",type:"uint256"},{internalType:"uint256",name:"spotPrice",type:"uint256"},{components:[{internalType:"uint256",name:"freeLiquidity",type:"uint256"},{internalType:"uint256",name:"burnableLiquidity",type:"uint256"},{internalType:"uint256",name:"reservedCollatLiquidity",type:"uint256"},{internalType:"uint256",name:"pendingDeltaLiquidity",type:"uint256"},{internalType:"uint256",name:"usedDeltaLiquidity",type:"uint256"},{internalType:"uint256",name:"NAV",type:"uint256"},{internalType:"uint256",name:"longScaleFactor",type:"uint256"}],internalType:"struct LiquidityPool.Liquidity",name:"liquidity",type:"tuple"}],internalType:"struct OptionMarket.TradeParameters",name:"trade",type:"tuple"},{internalType:"uint256",name:"totalCost",type:"uint256"}],name:"liquidate",outputs:[{components:[{internalType:"uint256",name:"returnCollateral",type:"uint256"},{internalType:"uint256",name:"lpPremiums",type:"uint256"},{internalType:"uint256",name:"lpFee",type:"uint256"},{internalType:"uint256",name:"liquidatorFee",type:"uint256"},{internalType:"uint256",name:"smFee",type:"uint256"},{internalType:"uint256",name:"insolventAmount",type:"uint256"}],internalType:"struct OptionToken.LiquidationFees",name:"liquidationFees",type:"tuple"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256[]",name:"positionIds",type:"uint256[]"}],name:"merge",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"nextId",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_owner",type:"address"}],name:"nominateNewOwner",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"nominatedOwner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"ownerOf",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"partialCollatParams",outputs:[{internalType:"uint256",name:"penaltyRatio",type:"uint256"},{internalType:"uint256",name:"liquidatorFeeRatio",type:"uint256"},{internalType:"uint256",name:"smFeeRatio",type:"uint256"},{internalType:"uint256",name:"minLiquidationFee",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"positions",outputs:[{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"uint256",name:"strikeId",type:"uint256"},{internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"collateral",type:"uint256"},{internalType:"enum OptionToken.PositionState",name:"state",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"safeTransferFrom",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"},{internalType:"bytes",name:"_data",type:"bytes"}],name:"safeTransferFrom",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"operator",type:"address"},{internalType:"bool",name:"approved",type:"bool"}],name:"setApprovalForAll",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"uint256",name:"penaltyRatio",type:"uint256"},{internalType:"uint256",name:"liquidatorFeeRatio",type:"uint256"},{internalType:"uint256",name:"smFeeRatio",type:"uint256"},{internalType:"uint256",name:"minLiquidationFee",type:"uint256"}],internalType:"struct OptionToken.PartialCollateralParameters",name:"_partialCollatParams",type:"tuple"}],name:"setPartialCollateralParams",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"string",name:"newURI",type:"string"}],name:"setURI",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256[]",name:"positionIds",type:"uint256[]"}],name:"settlePositions",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"uint256",name:"newAmount",type:"uint256"},{internalType:"uint256",name:"newCollateral",type:"uint256"},{internalType:"address",name:"recipient",type:"address"}],name:"split",outputs:[{internalType:"uint256",name:"newPositionId",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes4",name:"interfaceId",type:"bytes4"}],name:"supportsInterface",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"index",type:"uint256"}],name:"tokenByIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"uint256",name:"index",type:"uint256"}],name:"tokenOfOwnerByIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"tokenURI",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"transferFrom",outputs:[],stateMutability:"nonpayable",type:"function"}],Ea=[{inputs:[],stateMutability:"nonpayable",type:"constructor"},{inputs:[{internalType:"address",name:"thrower",type:"address"}],name:"AlreadyInitialised",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"BaseTransferFailed",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{components:[{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"uint256",name:"strikeId",type:"uint256"},{internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"collateral",type:"uint256"},{internalType:"enum OptionToken.PositionState",name:"state",type:"uint8"},{internalType:"address",name:"owner",type:"address"}],internalType:"struct OptionToken.PositionWithOwner",name:"position",type:"tuple"}],name:"BoardMustBeSettled",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"nominatedOwner",type:"address"}],name:"OnlyNominatedOwner",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"optionMarket",type:"address"}],name:"OnlyOptionMarket",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"owner",type:"address"}],name:"OnlyOwner",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"balance",type:"uint256"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"OutOfBaseCollateralForTransfer",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"balance",type:"uint256"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"OutOfQuoteCollateralForTransfer",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"QuoteTransferFailed",type:"error"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"receiver",type:"address"},{indexed:!1,internalType:"uint256",name:"nativeAmount",type:"uint256"}],name:"BaseSent",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"amountBaseSent",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amountQuoteSent",type:"uint256"},{indexed:!1,internalType:"uint256",name:"lpBaseInsolvency",type:"uint256"},{indexed:!1,internalType:"uint256",name:"lpQuoteInsolvency",type:"uint256"},{indexed:!1,internalType:"uint256",name:"LPBaseExcess",type:"uint256"},{indexed:!1,internalType:"uint256",name:"LPQuoteExcess",type:"uint256"}],name:"BoardSettlementCollateralSent",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"oldOwner",type:"address"},{indexed:!1,internalType:"address",name:"newOwner",type:"address"}],name:"OwnerChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"newOwner",type:"address"}],name:"OwnerNominated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"positionId",type:"uint256"},{indexed:!0,internalType:"address",name:"settler",type:"address"},{indexed:!0,internalType:"address",name:"optionOwner",type:"address"},{indexed:!1,internalType:"uint256",name:"strikePrice",type:"uint256"},{indexed:!1,internalType:"uint256",name:"priceAtExpiry",type:"uint256"},{indexed:!1,internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"settlementAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"insolventAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"longScaleFactor",type:"uint256"}],name:"PositionSettled",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"receiver",type:"address"},{indexed:!1,internalType:"uint256",name:"nativeAmount",type:"uint256"}],name:"QuoteSent",type:"event"},{inputs:[],name:"LPBaseExcess",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"LPQuoteExcess",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"acceptOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"amountBase",type:"uint256"},{internalType:"uint256",name:"amountQuote",type:"uint256"}],name:"boardSettlement",outputs:[{internalType:"uint256",name:"lpBaseInsolvency",type:"uint256"},{internalType:"uint256",name:"lpQuoteInsolvency",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract OptionMarket",name:"_optionMarket",type:"address"},{internalType:"contract LiquidityPool",name:"_liquidityPool",type:"address"},{internalType:"contract OptionToken",name:"_optionToken",type:"address"},{internalType:"contract BaseExchangeAdapter",name:"_exchangeAdapter",type:"address"},{internalType:"contract IERC20Decimals",name:"_quoteAsset",type:"address"},{internalType:"contract IERC20Decimals",name:"_baseAsset",type:"address"}],name:"init",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_owner",type:"address"}],name:"nominateNewOwner",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"nominatedOwner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"trader",type:"address"},{internalType:"address",name:"liquidator",type:"address"},{internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"},{components:[{internalType:"uint256",name:"returnCollateral",type:"uint256"},{internalType:"uint256",name:"lpPremiums",type:"uint256"},{internalType:"uint256",name:"lpFee",type:"uint256"},{internalType:"uint256",name:"liquidatorFee",type:"uint256"},{internalType:"uint256",name:"smFee",type:"uint256"},{internalType:"uint256",name:"insolventAmount",type:"uint256"}],internalType:"struct OptionToken.LiquidationFees",name:"liquidationFees",type:"tuple"}],name:"routeLiquidationFunds",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"sendBaseCollateral",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"sendQuoteCollateral",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256[]",name:"positionIds",type:"uint256[]"}],name:"settleOptions",outputs:[],stateMutability:"nonpayable",type:"function"}],_a=[{inputs:[],stateMutability:"nonpayable",type:"constructor"},{inputs:[{internalType:"address",name:"thrower",type:"address"}],name:"AlreadyInitialised",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"lastInteraction",type:"uint256"},{internalType:"uint256",name:"interactionDelta",type:"uint256"},{internalType:"uint256",name:"currentTime",type:"uint256"}],name:"InteractionDelayNotExpired",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{components:[{internalType:"uint256",name:"targetLeverage",type:"uint256"},{internalType:"uint256",name:"maximumFundingRate",type:"uint256"},{internalType:"uint256",name:"deltaThreshold",type:"uint256"},{internalType:"uint256",name:"marketDepthBuffer",type:"uint256"},{internalType:"uint256",name:"priceDeltaBuffer",type:"uint256"},{internalType:"uint256",name:"worstStableRate",type:"uint256"},{internalType:"uint256",name:"maxOrderCap",type:"uint256"}],internalType:"struct SNXPerpsV2PoolHedger.SNXPerpsV2PoolHedgerParameters",name:"params",type:"tuple"}],name:"InvalidFuturesPoolHedgerParams",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"liquidityPool",type:"address"}],name:"OnlyLiquidityPool",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"nominatedOwner",type:"address"}],name:"OnlyNominatedOwner",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"owner",type:"address"}],name:"OnlyOwner",type:"error"},{inputs:[{internalType:"int256",name:"pendingDelta",type:"int256"}],name:"PendingOrderDeltaError",type:"error"},{inputs:[],name:"PerpMarketReturnedInvalid",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"QuoteTransferFailed",type:"error"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"oldCollat",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newCollat",type:"uint256"}],name:"CollateralUpdated",type:"event"},{anonymous:!1,inputs:[{components:[{internalType:"uint256",name:"targetLeverage",type:"uint256"},{internalType:"uint256",name:"maximumFundingRate",type:"uint256"},{internalType:"uint256",name:"deltaThreshold",type:"uint256"},{internalType:"uint256",name:"marketDepthBuffer",type:"uint256"},{internalType:"uint256",name:"priceDeltaBuffer",type:"uint256"},{internalType:"uint256",name:"worstStableRate",type:"uint256"},{internalType:"uint256",name:"maxOrderCap",type:"uint256"}],indexed:!1,internalType:"struct SNXPerpsV2PoolHedger.SNXPerpsV2PoolHedgerParameters",name:"params",type:"tuple"}],name:"FuturesPoolHedgerParamsSet",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"oldOwner",type:"address"},{indexed:!1,internalType:"address",name:"newOwner",type:"address"}],name:"OwnerChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"newOwner",type:"address"}],name:"OwnerNominated",type:"event"},{anonymous:!1,inputs:[{components:[{internalType:"uint256",name:"interactionDelay",type:"uint256"},{internalType:"uint256",name:"hedgeCap",type:"uint256"}],indexed:!1,internalType:"struct PoolHedger.PoolHedgerParameters",name:"poolHedgerParams",type:"tuple"}],name:"PoolHedgerParametersSet",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"int256",name:"oldNetDelta",type:"int256"},{indexed:!1,internalType:"int256",name:"currentNetDelta",type:"int256"},{indexed:!1,internalType:"int256",name:"expectedNetDelta",type:"int256"}],name:"PositionUpdateSubmitted",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"amountQuote",type:"uint256"}],name:"QuoteReturnedToLP",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"quoteAsset",type:"address"},{indexed:!1,internalType:"address",name:"sUSD",type:"address"},{indexed:!1,internalType:"uint256",name:"curve_rate",type:"uint256"},{indexed:!1,internalType:"uint256",name:"maxSlippage",type:"uint256"}],name:"SlippageOutOfBounds",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bytes32",name:"trackingCode",type:"bytes32"}],name:"TrackingCodeSet",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"quoteAsset",type:"address"},{indexed:!1,internalType:"address",name:"sUSD",type:"address"},{indexed:!1,internalType:"uint256",name:"amountIn",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amountOut",type:"uint256"}],name:"USDCCollateralSwapForMargin",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"quoteAsset",type:"address"},{indexed:!1,internalType:"address",name:"sUSD",type:"address"},{indexed:!1,internalType:"uint256",name:"amountIn",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amountOut",type:"uint256"}],name:"sUSDCollateralSwap",type:"event"},{inputs:[],name:"acceptOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"addressResolver",outputs:[{internalType:"contract IAddressResolver",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"",type:"uint256"},{internalType:"bool",name:"deltaIncrease",type:"bool"},{internalType:"uint256",name:"",type:"uint256"}],name:"canHedge",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"curveSwap",outputs:[{internalType:"contract ICurve",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"exchangeAdapter",outputs:[{internalType:"contract BaseExchangeAdapter",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"futuresPoolHedgerParams",outputs:[{internalType:"uint256",name:"targetLeverage",type:"uint256"},{internalType:"uint256",name:"maximumFundingRate",type:"uint256"},{internalType:"uint256",name:"deltaThreshold",type:"uint256"},{internalType:"uint256",name:"marketDepthBuffer",type:"uint256"},{internalType:"uint256",name:"priceDeltaBuffer",type:"uint256"},{internalType:"uint256",name:"worstStableRate",type:"uint256"},{internalType:"uint256",name:"maxOrderCap",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getCappedExpectedHedge",outputs:[{internalType:"int256",name:"",type:"int256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getCurrentHedgedNetDelta",outputs:[{internalType:"int256",name:"",type:"int256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getCurrentPositionMargin",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getHedgerState",outputs:[{components:[{internalType:"uint256",name:"lastInteraction",type:"uint256"},{internalType:"int256",name:"hedgedDelta",type:"int256"},{internalType:"uint256",name:"margin",type:"uint256"},{internalType:"uint256",name:"leverage",type:"uint256"},{internalType:"uint256",name:"hedgerQuoteBalance",type:"uint256"},{internalType:"uint256",name:"hedgerMarginQuoteBalance",type:"uint256"},{internalType:"bool",name:"canHedgeDeltaIncrease",type:"bool"},{internalType:"bool",name:"canHedgeDeltaDecrease",type:"bool"},{internalType:"int256",name:"cappedExpectedHedge",type:"int256"},{internalType:"bool",name:"snxHasEnoughMarketDepth",type:"bool"},{internalType:"bool",name:"marketSuspended",type:"bool"},{internalType:"bool",name:"curveRateStable",type:"bool"},{internalType:"uint256",name:"pendingDeltaLiquidity",type:"uint256"},{internalType:"uint256",name:"usedDeltaLiquidity",type:"uint256"},{internalType:"int256",name:"pendingDelta",type:"int256"},{internalType:"uint256",name:"longInterest",type:"uint256"},{internalType:"uint256",name:"shortInterest",type:"uint256"},{internalType:"uint256",name:"maxTotalMarketSize",type:"uint256"},{internalType:"uint256",name:"pendingMargin",type:"uint256"},{internalType:"int256",name:"fundingRate",type:"int256"},{internalType:"bytes32",name:"trackingCode",type:"bytes32"},{internalType:"address",name:"optionMarket",type:"address"},{internalType:"address",name:"perpsMarket",type:"address"},{internalType:"address",name:"curveSwap",type:"address"},{internalType:"address",name:"quoteAsset",type:"address"},{components:[{internalType:"uint256",name:"targetLeverage",type:"uint256"},{internalType:"uint256",name:"maximumFundingRate",type:"uint256"},{internalType:"uint256",name:"deltaThreshold",type:"uint256"},{internalType:"uint256",name:"marketDepthBuffer",type:"uint256"},{internalType:"uint256",name:"priceDeltaBuffer",type:"uint256"},{internalType:"uint256",name:"worstStableRate",type:"uint256"},{internalType:"uint256",name:"maxOrderCap",type:"uint256"}],internalType:"struct SNXPerpsV2PoolHedger.SNXPerpsV2PoolHedgerParameters",name:"futuresPoolHedgerParams",type:"tuple"},{components:[{internalType:"uint256",name:"interactionDelay",type:"uint256"},{internalType:"uint256",name:"hedgeCap",type:"uint256"}],internalType:"struct PoolHedger.PoolHedgerParameters",name:"poolHedgerParams",type:"tuple"}],internalType:"struct SNXPerpsV2PoolHedger.HedgerState",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"spotPrice",type:"uint256"}],name:"getHedgingLiquidity",outputs:[{internalType:"uint256",name:"pendingDeltaLiquidity",type:"uint256"},{internalType:"uint256",name:"usedDeltaLiquidity",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPoolHedgerParams",outputs:[{components:[{internalType:"uint256",name:"interactionDelay",type:"uint256"},{internalType:"uint256",name:"hedgeCap",type:"uint256"}],internalType:"struct PoolHedger.PoolHedgerParameters",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[],name:"hedgeDelta",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IAddressResolver",name:"_addressResolver",type:"address"},{internalType:"contract BaseExchangeAdapter",name:"_exchangeAdapter",type:"address"},{internalType:"contract OptionMarket",name:"_optionMarket",type:"address"},{internalType:"contract OptionGreekCache",name:"_optionGreekCache",type:"address"},{internalType:"contract LiquidityPool",name:"_liquidityPool",type:"address"},{internalType:"contract IPerpsV2MarketConsolidated",name:"_perpMarketProxy",type:"address"},{internalType:"contract ERC20",name:"_quoteAsset",type:"address"},{internalType:"contract ERC20",name:"_sUSD",type:"address"},{internalType:"contract ICurve",name:"_curveSwap",type:"address"},{internalType:"bytes32",name:"_marketKey",type:"bytes32"}],name:"init",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"lastInteraction",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"marketKey",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_owner",type:"address"}],name:"nominateNewOwner",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"nominatedOwner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"perpsMarket",outputs:[{internalType:"contract IPerpsV2MarketConsolidated",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"resetInteractionDelay",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"uint256",name:"targetLeverage",type:"uint256"},{internalType:"uint256",name:"maximumFundingRate",type:"uint256"},{internalType:"uint256",name:"deltaThreshold",type:"uint256"},{internalType:"uint256",name:"marketDepthBuffer",type:"uint256"},{internalType:"uint256",name:"priceDeltaBuffer",type:"uint256"},{internalType:"uint256",name:"worstStableRate",type:"uint256"},{internalType:"uint256",name:"maxOrderCap",type:"uint256"}],internalType:"struct SNXPerpsV2PoolHedger.SNXPerpsV2PoolHedgerParameters",name:"_futuresPoolHedgerParams",type:"tuple"}],name:"setFuturesPoolHedgerParams",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"uint256",name:"interactionDelay",type:"uint256"},{internalType:"uint256",name:"hedgeCap",type:"uint256"}],internalType:"struct PoolHedger.PoolHedgerParameters",name:"_poolHedgerParams",type:"tuple"}],name:"setPoolHedgerParams",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"_trackingCode",type:"bytes32"}],name:"setTrackingCode",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"trackingCode",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"updateCollateral",outputs:[],stateMutability:"payable",type:"function"}],Ra=[{inputs:[],stateMutability:"nonpayable",type:"constructor"},{inputs:[{internalType:"address",name:"thrower",type:"address"}],name:"AlreadyInitialised",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"BaseTransferFailed",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"boardId",type:"uint256"}],name:"BoardAlreadySettled",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"boardId",type:"uint256"},{internalType:"uint256",name:"boardExpiry",type:"uint256"},{internalType:"uint256",name:"currentTime",type:"uint256"}],name:"BoardExpired",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"boardId",type:"uint256"}],name:"BoardIsFrozen",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"boardId",type:"uint256"}],name:"BoardNotExpired",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"boardId",type:"uint256"}],name:"BoardNotFrozen",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"}],name:"CannotRecoverQuote",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"enum OptionMarket.NonZeroValues",name:"valueType",type:"uint8"}],name:"ExpectedNonZeroValue",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"boardId",type:"uint256"}],name:"InvalidBoardId",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"currentTime",type:"uint256"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"maxBoardExpiry",type:"uint256"}],name:"InvalidExpiryTimestamp",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{components:[{internalType:"uint256",name:"maxBoardExpiry",type:"uint256"},{internalType:"address",name:"securityModule",type:"address"},{internalType:"uint256",name:"feePortionReserved",type:"uint256"},{internalType:"uint256",name:"staticBaseSettlementFee",type:"uint256"}],internalType:"struct OptionMarket.OptionMarketParameters",name:"optionMarketParams",type:"tuple"}],name:"InvalidOptionMarketParams",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"strikeId",type:"uint256"}],name:"InvalidStrikeId",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"nominatedOwner",type:"address"}],name:"OnlyNominatedOwner",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"owner",type:"address"}],name:"OnlyOwner",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"securityModule",type:"address"}],name:"OnlySecurityModule",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"QuoteTransferFailed",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"strikesLength",type:"uint256"},{internalType:"uint256",name:"skewsLength",type:"uint256"}],name:"StrikeSkewLengthMismatch",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"totalCost",type:"uint256"},{internalType:"uint256",name:"minCost",type:"uint256"},{internalType:"uint256",name:"maxCost",type:"uint256"}],name:"TotalCostOutsideOfSpecifiedBounds",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"iterations",type:"uint256"},{internalType:"uint256",name:"expectedAmount",type:"uint256"},{internalType:"uint256",name:"tradeAmount",type:"uint256"},{internalType:"uint256",name:"totalAmount",type:"uint256"}],name:"TradeIterationsHasRemainder",type:"error"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"boardId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"baseIv",type:"uint256"}],name:"BoardBaseIvSet",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"boardId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"expiry",type:"uint256"},{indexed:!1,internalType:"uint256",name:"baseIv",type:"uint256"},{indexed:!1,internalType:"bool",name:"frozen",type:"bool"}],name:"BoardCreated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"boardId",type:"uint256"},{indexed:!1,internalType:"bool",name:"frozen",type:"bool"}],name:"BoardFrozen",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"boardId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"spotPriceAtExpiry",type:"uint256"},{indexed:!1,internalType:"uint256",name:"totalUserLongProfitQuote",type:"uint256"},{indexed:!1,internalType:"uint256",name:"totalBoardLongCallCollateral",type:"uint256"},{indexed:!1,internalType:"uint256",name:"totalBoardLongPutCollateral",type:"uint256"},{indexed:!1,internalType:"uint256",name:"totalAMMShortCallProfitBase",type:"uint256"},{indexed:!1,internalType:"uint256",name:"totalAMMShortCallProfitQuote",type:"uint256"},{indexed:!1,internalType:"uint256",name:"totalAMMShortPutProfitQuote",type:"uint256"},{indexed:!1,internalType:"uint256",name:"longScaleFactor",type:"uint256"}],name:"BoardSettled",type:"event"},{anonymous:!1,inputs:[{components:[{internalType:"uint256",name:"maxBoardExpiry",type:"uint256"},{internalType:"address",name:"securityModule",type:"address"},{internalType:"uint256",name:"feePortionReserved",type:"uint256"},{internalType:"uint256",name:"staticBaseSettlementFee",type:"uint256"}],indexed:!1,internalType:"struct OptionMarket.OptionMarketParameters",name:"optionMarketParams",type:"tuple"}],name:"OptionMarketParamsSet",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"oldOwner",type:"address"},{indexed:!1,internalType:"address",name:"newOwner",type:"address"}],name:"OwnerChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"newOwner",type:"address"}],name:"OwnerNominated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"securityModule",type:"address"},{indexed:!1,internalType:"uint256",name:"quoteAmount",type:"uint256"}],name:"SMClaimed",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"boardId",type:"uint256"},{indexed:!0,internalType:"uint256",name:"strikeId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"strikePrice",type:"uint256"},{indexed:!1,internalType:"uint256",name:"skew",type:"uint256"}],name:"StrikeAdded",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"strikeId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"skew",type:"uint256"}],name:"StrikeSkewSet",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"trader",type:"address"},{indexed:!0,internalType:"uint256",name:"positionId",type:"uint256"},{indexed:!0,internalType:"address",name:"referrer",type:"address"},{components:[{internalType:"uint256",name:"strikeId",type:"uint256"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"strikePrice",type:"uint256"},{internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"},{internalType:"enum OptionMarket.TradeDirection",name:"tradeDirection",type:"uint8"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"setCollateralTo",type:"uint256"},{internalType:"bool",name:"isForceClose",type:"bool"},{internalType:"uint256",name:"spotPrice",type:"uint256"},{internalType:"uint256",name:"reservedFee",type:"uint256"},{internalType:"uint256",name:"totalCost",type:"uint256"}],indexed:!1,internalType:"struct OptionMarket.TradeEventData",name:"trade",type:"tuple"},{components:[{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"premium",type:"uint256"},{internalType:"uint256",name:"optionPriceFee",type:"uint256"},{internalType:"uint256",name:"spotPriceFee",type:"uint256"},{components:[{internalType:"int256",name:"preTradeAmmNetStdVega",type:"int256"},{internalType:"int256",name:"postTradeAmmNetStdVega",type:"int256"},{internalType:"uint256",name:"vegaUtil",type:"uint256"},{internalType:"uint256",name:"volTraded",type:"uint256"},{internalType:"uint256",name:"NAV",type:"uint256"},{internalType:"uint256",name:"vegaUtilFee",type:"uint256"}],internalType:"struct OptionMarketPricer.VegaUtilFeeComponents",name:"vegaUtilFee",type:"tuple"},{components:[{internalType:"uint256",name:"varianceFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"vega",type:"uint256"},{internalType:"uint256",name:"vegaCoefficient",type:"uint256"},{internalType:"uint256",name:"skew",type:"uint256"},{internalType:"uint256",name:"skewCoefficient",type:"uint256"},{internalType:"uint256",name:"ivVariance",type:"uint256"},{internalType:"uint256",name:"ivVarianceCoefficient",type:"uint256"},{internalType:"uint256",name:"varianceFee",type:"uint256"}],internalType:"struct OptionMarketPricer.VarianceFeeComponents",name:"varianceFee",type:"tuple"},{internalType:"uint256",name:"totalFee",type:"uint256"},{internalType:"uint256",name:"totalCost",type:"uint256"},{internalType:"uint256",name:"volTraded",type:"uint256"},{internalType:"uint256",name:"newBaseIv",type:"uint256"},{internalType:"uint256",name:"newSkew",type:"uint256"}],indexed:!1,internalType:"struct OptionMarketPricer.TradeResult[]",name:"tradeResults",type:"tuple[]"},{components:[{internalType:"address",name:"rewardBeneficiary",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"uint256",name:"returnCollateral",type:"uint256"},{internalType:"uint256",name:"lpPremiums",type:"uint256"},{internalType:"uint256",name:"lpFee",type:"uint256"},{internalType:"uint256",name:"liquidatorFee",type:"uint256"},{internalType:"uint256",name:"smFee",type:"uint256"},{internalType:"uint256",name:"insolventAmount",type:"uint256"}],indexed:!1,internalType:"struct OptionMarket.LiquidationEventData",name:"liquidation",type:"tuple"},{indexed:!1,internalType:"uint256",name:"longScaleFactor",type:"uint256"},{indexed:!1,internalType:"uint256",name:"timestamp",type:"uint256"}],name:"Trade",type:"event"},{inputs:[],name:"acceptOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"uint256",name:"amountCollateral",type:"uint256"}],name:"addCollateral",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"boardId",type:"uint256"},{internalType:"uint256",name:"strikePrice",type:"uint256"},{internalType:"uint256",name:"skew",type:"uint256"}],name:"addStrikeToBoard",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"baseAsset",outputs:[{internalType:"contract IERC20Decimals",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"boardToPriceAtExpiry",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{components:[{internalType:"uint256",name:"strikeId",type:"uint256"},{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"uint256",name:"iterations",type:"uint256"},{internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"setCollateralTo",type:"uint256"},{internalType:"uint256",name:"minTotalCost",type:"uint256"},{internalType:"uint256",name:"maxTotalCost",type:"uint256"},{internalType:"address",name:"referrer",type:"address"}],internalType:"struct OptionMarket.TradeInputParameters",name:"params",type:"tuple"}],name:"closePosition",outputs:[{components:[{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"uint256",name:"totalCost",type:"uint256"},{internalType:"uint256",name:"totalFee",type:"uint256"}],internalType:"struct OptionMarket.Result",name:"result",type:"tuple"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"baseIV",type:"uint256"},{internalType:"uint256[]",name:"strikePrices",type:"uint256[]"},{internalType:"uint256[]",name:"skews",type:"uint256[]"},{internalType:"bool",name:"frozen",type:"bool"}],name:"createOptionBoard",outputs:[{internalType:"uint256",name:"boardId",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"uint256",name:"strikeId",type:"uint256"},{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"uint256",name:"iterations",type:"uint256"},{internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"setCollateralTo",type:"uint256"},{internalType:"uint256",name:"minTotalCost",type:"uint256"},{internalType:"uint256",name:"maxTotalCost",type:"uint256"},{internalType:"address",name:"referrer",type:"address"}],internalType:"struct OptionMarket.TradeInputParameters",name:"params",type:"tuple"}],name:"forceClosePosition",outputs:[{components:[{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"uint256",name:"totalCost",type:"uint256"},{internalType:"uint256",name:"totalFee",type:"uint256"}],internalType:"struct OptionMarket.Result",name:"result",type:"tuple"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"boardId",type:"uint256"}],name:"forceSettleBoard",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"boardId",type:"uint256"}],name:"getBoardAndStrikeDetails",outputs:[{components:[{internalType:"uint256",name:"id",type:"uint256"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"iv",type:"uint256"},{internalType:"bool",name:"frozen",type:"bool"},{internalType:"uint256[]",name:"strikeIds",type:"uint256[]"}],internalType:"struct OptionMarket.OptionBoard",name:"",type:"tuple"},{components:[{internalType:"uint256",name:"id",type:"uint256"},{internalType:"uint256",name:"strikePrice",type:"uint256"},{internalType:"uint256",name:"skew",type:"uint256"},{internalType:"uint256",name:"longCall",type:"uint256"},{internalType:"uint256",name:"shortCallBase",type:"uint256"},{internalType:"uint256",name:"shortCallQuote",type:"uint256"},{internalType:"uint256",name:"longPut",type:"uint256"},{internalType:"uint256",name:"shortPut",type:"uint256"},{internalType:"uint256",name:"boardId",type:"uint256"}],internalType:"struct OptionMarket.Strike[]",name:"",type:"tuple[]"},{internalType:"uint256[]",name:"",type:"uint256[]"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"boardId",type:"uint256"}],name:"getBoardStrikes",outputs:[{internalType:"uint256[]",name:"strikeIds",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[],name:"getLiveBoards",outputs:[{internalType:"uint256[]",name:"_liveBoards",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[],name:"getNumLiveBoards",outputs:[{internalType:"uint256",name:"numLiveBoards",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"boardId",type:"uint256"}],name:"getOptionBoard",outputs:[{components:[{internalType:"uint256",name:"id",type:"uint256"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"iv",type:"uint256"},{internalType:"bool",name:"frozen",type:"bool"},{internalType:"uint256[]",name:"strikeIds",type:"uint256[]"}],internalType:"struct OptionMarket.OptionBoard",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[],name:"getOptionMarketParams",outputs:[{components:[{internalType:"uint256",name:"maxBoardExpiry",type:"uint256"},{internalType:"address",name:"securityModule",type:"address"},{internalType:"uint256",name:"feePortionReserved",type:"uint256"},{internalType:"uint256",name:"staticBaseSettlementFee",type:"uint256"}],internalType:"struct OptionMarket.OptionMarketParameters",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"strikeId",type:"uint256"}],name:"getSettlementParameters",outputs:[{internalType:"uint256",name:"strikePrice",type:"uint256"},{internalType:"uint256",name:"priceAtExpiry",type:"uint256"},{internalType:"uint256",name:"strikeToBaseReturned",type:"uint256"},{internalType:"uint256",name:"longScaleFactor",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"strikeId",type:"uint256"}],name:"getStrike",outputs:[{components:[{internalType:"uint256",name:"id",type:"uint256"},{internalType:"uint256",name:"strikePrice",type:"uint256"},{internalType:"uint256",name:"skew",type:"uint256"},{internalType:"uint256",name:"longCall",type:"uint256"},{internalType:"uint256",name:"shortCallBase",type:"uint256"},{internalType:"uint256",name:"shortCallQuote",type:"uint256"},{internalType:"uint256",name:"longPut",type:"uint256"},{internalType:"uint256",name:"shortPut",type:"uint256"},{internalType:"uint256",name:"boardId",type:"uint256"}],internalType:"struct OptionMarket.Strike",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"strikeId",type:"uint256"}],name:"getStrikeAndBoard",outputs:[{components:[{internalType:"uint256",name:"id",type:"uint256"},{internalType:"uint256",name:"strikePrice",type:"uint256"},{internalType:"uint256",name:"skew",type:"uint256"},{internalType:"uint256",name:"longCall",type:"uint256"},{internalType:"uint256",name:"shortCallBase",type:"uint256"},{internalType:"uint256",name:"shortCallQuote",type:"uint256"},{internalType:"uint256",name:"longPut",type:"uint256"},{internalType:"uint256",name:"shortPut",type:"uint256"},{internalType:"uint256",name:"boardId",type:"uint256"}],internalType:"struct OptionMarket.Strike",name:"",type:"tuple"},{components:[{internalType:"uint256",name:"id",type:"uint256"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"iv",type:"uint256"},{internalType:"bool",name:"frozen",type:"bool"},{internalType:"uint256[]",name:"strikeIds",type:"uint256[]"}],internalType:"struct OptionMarket.OptionBoard",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"strikeId",type:"uint256"}],name:"getStrikeAndExpiry",outputs:[{internalType:"uint256",name:"strikePrice",type:"uint256"},{internalType:"uint256",name:"expiry",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract BaseExchangeAdapter",name:"_exchangeAdapter",type:"address"},{internalType:"contract LiquidityPool",name:"_liquidityPool",type:"address"},{internalType:"contract OptionMarketPricer",name:"_optionPricer",type:"address"},{internalType:"contract OptionGreekCache",name:"_greekCache",type:"address"},{internalType:"contract ShortCollateral",name:"_shortCollateral",type:"address"},{internalType:"contract OptionToken",name:"_optionToken",type:"address"},{internalType:"contract IERC20Decimals",name:"_quoteAsset",type:"address"},{internalType:"contract IERC20Decimals",name:"_baseAsset",type:"address"}],name:"init",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"address",name:"rewardBeneficiary",type:"address"}],name:"liquidatePosition",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_owner",type:"address"}],name:"nominateNewOwner",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"nominatedOwner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{components:[{internalType:"uint256",name:"strikeId",type:"uint256"},{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"uint256",name:"iterations",type:"uint256"},{internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"setCollateralTo",type:"uint256"},{internalType:"uint256",name:"minTotalCost",type:"uint256"},{internalType:"uint256",name:"maxTotalCost",type:"uint256"},{internalType:"address",name:"referrer",type:"address"}],internalType:"struct OptionMarket.TradeInputParameters",name:"params",type:"tuple"}],name:"openPosition",outputs:[{components:[{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"uint256",name:"totalCost",type:"uint256"},{internalType:"uint256",name:"totalFee",type:"uint256"}],internalType:"struct OptionMarket.Result",name:"result",type:"tuple"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"quoteAsset",outputs:[{internalType:"contract IERC20Decimals",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract IERC20Decimals",name:"token",type:"address"},{internalType:"address",name:"recipient",type:"address"}],name:"recoverFunds",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"scaledLongsForBoard",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"boardId",type:"uint256"},{internalType:"uint256",name:"baseIv",type:"uint256"}],name:"setBoardBaseIv",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"boardId",type:"uint256"},{internalType:"bool",name:"frozen",type:"bool"}],name:"setBoardFrozen",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"uint256",name:"maxBoardExpiry",type:"uint256"},{internalType:"address",name:"securityModule",type:"address"},{internalType:"uint256",name:"feePortionReserved",type:"uint256"},{internalType:"uint256",name:"staticBaseSettlementFee",type:"uint256"}],internalType:"struct OptionMarket.OptionMarketParameters",name:"_optionMarketParams",type:"tuple"}],name:"setOptionMarketParams",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"strikeId",type:"uint256"},{internalType:"uint256",name:"skew",type:"uint256"}],name:"setStrikeSkew",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"boardId",type:"uint256"}],name:"settleExpiredBoard",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"smClaim",outputs:[],stateMutability:"nonpayable",type:"function"}],Na=[{inputs:[],stateMutability:"nonpayable",type:"constructor"},{inputs:[{internalType:"address",name:"thrower",type:"address"}],name:"AlreadyInitialised",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"trader",type:"address"},{internalType:"address",name:"shortCollateral",type:"address"},{internalType:"uint256",name:"shortCollateralBalance",type:"uint256"},{internalType:"uint256",name:"pendingCollateral",type:"uint256"}],name:"BaseLimitExceeded",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"BaseTransferFailed",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"boardId",type:"uint256"}],name:"BoardAlreadySettled",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"boardId",type:"uint256"},{internalType:"uint256",name:"boardExpiry",type:"uint256"},{internalType:"uint256",name:"currentTime",type:"uint256"}],name:"BoardExpired",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"boardId",type:"uint256"}],name:"BoardIsFrozen",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"boardId",type:"uint256"}],name:"BoardNotExpired",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"boardId",type:"uint256"}],name:"BoardNotFrozen",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"}],name:"CannotRecoverQuote",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"enum OptionMarket.NonZeroValues",name:"valueType",type:"uint8"}],name:"ExpectedNonZeroValue",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"boardId",type:"uint256"}],name:"InvalidBoardId",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"currentTime",type:"uint256"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"maxBoardExpiry",type:"uint256"}],name:"InvalidExpiryTimestamp",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{components:[{internalType:"uint256",name:"maxBoardExpiry",type:"uint256"},{internalType:"address",name:"securityModule",type:"address"},{internalType:"uint256",name:"feePortionReserved",type:"uint256"},{internalType:"uint256",name:"staticBaseSettlementFee",type:"uint256"}],internalType:"struct OptionMarket.OptionMarketParameters",name:"optionMarketParams",type:"tuple"}],name:"InvalidOptionMarketParams",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"strikeId",type:"uint256"}],name:"InvalidStrikeId",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"nominatedOwner",type:"address"}],name:"OnlyNominatedOwner",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"owner",type:"address"}],name:"OnlyOwner",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"securityModule",type:"address"}],name:"OnlySecurityModule",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"QuoteTransferFailed",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"strikesLength",type:"uint256"},{internalType:"uint256",name:"skewsLength",type:"uint256"}],name:"StrikeSkewLengthMismatch",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"totalCost",type:"uint256"},{internalType:"uint256",name:"minCost",type:"uint256"},{internalType:"uint256",name:"maxCost",type:"uint256"}],name:"TotalCostOutsideOfSpecifiedBounds",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"iterations",type:"uint256"},{internalType:"uint256",name:"expectedAmount",type:"uint256"},{internalType:"uint256",name:"tradeAmount",type:"uint256"},{internalType:"uint256",name:"totalAmount",type:"uint256"}],name:"TradeIterationsHasRemainder",type:"error"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"baseLimit",type:"uint256"}],name:"BaseLimitSet",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"boardId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"baseIv",type:"uint256"}],name:"BoardBaseIvSet",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"boardId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"expiry",type:"uint256"},{indexed:!1,internalType:"uint256",name:"baseIv",type:"uint256"},{indexed:!1,internalType:"bool",name:"frozen",type:"bool"}],name:"BoardCreated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"boardId",type:"uint256"},{indexed:!1,internalType:"bool",name:"frozen",type:"bool"}],name:"BoardFrozen",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"boardId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"spotPriceAtExpiry",type:"uint256"},{indexed:!1,internalType:"uint256",name:"totalUserLongProfitQuote",type:"uint256"},{indexed:!1,internalType:"uint256",name:"totalBoardLongCallCollateral",type:"uint256"},{indexed:!1,internalType:"uint256",name:"totalBoardLongPutCollateral",type:"uint256"},{indexed:!1,internalType:"uint256",name:"totalAMMShortCallProfitBase",type:"uint256"},{indexed:!1,internalType:"uint256",name:"totalAMMShortCallProfitQuote",type:"uint256"},{indexed:!1,internalType:"uint256",name:"totalAMMShortPutProfitQuote",type:"uint256"},{indexed:!1,internalType:"uint256",name:"longScaleFactor",type:"uint256"}],name:"BoardSettled",type:"event"},{anonymous:!1,inputs:[{components:[{internalType:"uint256",name:"maxBoardExpiry",type:"uint256"},{internalType:"address",name:"securityModule",type:"address"},{internalType:"uint256",name:"feePortionReserved",type:"uint256"},{internalType:"uint256",name:"staticBaseSettlementFee",type:"uint256"}],indexed:!1,internalType:"struct OptionMarket.OptionMarketParameters",name:"optionMarketParams",type:"tuple"}],name:"OptionMarketParamsSet",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"oldOwner",type:"address"},{indexed:!1,internalType:"address",name:"newOwner",type:"address"}],name:"OwnerChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"newOwner",type:"address"}],name:"OwnerNominated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"securityModule",type:"address"},{indexed:!1,internalType:"uint256",name:"quoteAmount",type:"uint256"}],name:"SMClaimed",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"boardId",type:"uint256"},{indexed:!0,internalType:"uint256",name:"strikeId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"strikePrice",type:"uint256"},{indexed:!1,internalType:"uint256",name:"skew",type:"uint256"}],name:"StrikeAdded",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"strikeId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"skew",type:"uint256"}],name:"StrikeSkewSet",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"trader",type:"address"},{indexed:!0,internalType:"uint256",name:"positionId",type:"uint256"},{indexed:!0,internalType:"address",name:"referrer",type:"address"},{components:[{internalType:"uint256",name:"strikeId",type:"uint256"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"strikePrice",type:"uint256"},{internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"},{internalType:"enum OptionMarket.TradeDirection",name:"tradeDirection",type:"uint8"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"setCollateralTo",type:"uint256"},{internalType:"bool",name:"isForceClose",type:"bool"},{internalType:"uint256",name:"spotPrice",type:"uint256"},{internalType:"uint256",name:"reservedFee",type:"uint256"},{internalType:"uint256",name:"totalCost",type:"uint256"}],indexed:!1,internalType:"struct OptionMarket.TradeEventData",name:"trade",type:"tuple"},{components:[{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"premium",type:"uint256"},{internalType:"uint256",name:"optionPriceFee",type:"uint256"},{internalType:"uint256",name:"spotPriceFee",type:"uint256"},{components:[{internalType:"int256",name:"preTradeAmmNetStdVega",type:"int256"},{internalType:"int256",name:"postTradeAmmNetStdVega",type:"int256"},{internalType:"uint256",name:"vegaUtil",type:"uint256"},{internalType:"uint256",name:"volTraded",type:"uint256"},{internalType:"uint256",name:"NAV",type:"uint256"},{internalType:"uint256",name:"vegaUtilFee",type:"uint256"}],internalType:"struct OptionMarketPricer.VegaUtilFeeComponents",name:"vegaUtilFee",type:"tuple"},{components:[{internalType:"uint256",name:"varianceFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"vega",type:"uint256"},{internalType:"uint256",name:"vegaCoefficient",type:"uint256"},{internalType:"uint256",name:"skew",type:"uint256"},{internalType:"uint256",name:"skewCoefficient",type:"uint256"},{internalType:"uint256",name:"ivVariance",type:"uint256"},{internalType:"uint256",name:"ivVarianceCoefficient",type:"uint256"},{internalType:"uint256",name:"varianceFee",type:"uint256"}],internalType:"struct OptionMarketPricer.VarianceFeeComponents",name:"varianceFee",type:"tuple"},{internalType:"uint256",name:"totalFee",type:"uint256"},{internalType:"uint256",name:"totalCost",type:"uint256"},{internalType:"uint256",name:"volTraded",type:"uint256"},{internalType:"uint256",name:"newBaseIv",type:"uint256"},{internalType:"uint256",name:"newSkew",type:"uint256"}],indexed:!1,internalType:"struct OptionMarketPricer.TradeResult[]",name:"tradeResults",type:"tuple[]"},{components:[{internalType:"address",name:"rewardBeneficiary",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"uint256",name:"returnCollateral",type:"uint256"},{internalType:"uint256",name:"lpPremiums",type:"uint256"},{internalType:"uint256",name:"lpFee",type:"uint256"},{internalType:"uint256",name:"liquidatorFee",type:"uint256"},{internalType:"uint256",name:"smFee",type:"uint256"},{internalType:"uint256",name:"insolventAmount",type:"uint256"}],indexed:!1,internalType:"struct OptionMarket.LiquidationEventData",name:"liquidation",type:"tuple"},{indexed:!1,internalType:"uint256",name:"longScaleFactor",type:"uint256"},{indexed:!1,internalType:"uint256",name:"timestamp",type:"uint256"}],name:"Trade",type:"event"},{inputs:[],name:"acceptOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"uint256",name:"amountCollateral",type:"uint256"}],name:"addCollateral",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"boardId",type:"uint256"},{internalType:"uint256",name:"strikePrice",type:"uint256"},{internalType:"uint256",name:"skew",type:"uint256"}],name:"addStrikeToBoard",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"baseAsset",outputs:[{internalType:"contract IERC20Decimals",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"baseLimit",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"boardToPriceAtExpiry",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{components:[{internalType:"uint256",name:"strikeId",type:"uint256"},{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"uint256",name:"iterations",type:"uint256"},{internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"setCollateralTo",type:"uint256"},{internalType:"uint256",name:"minTotalCost",type:"uint256"},{internalType:"uint256",name:"maxTotalCost",type:"uint256"},{internalType:"address",name:"referrer",type:"address"}],internalType:"struct OptionMarket.TradeInputParameters",name:"params",type:"tuple"}],name:"closePosition",outputs:[{components:[{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"uint256",name:"totalCost",type:"uint256"},{internalType:"uint256",name:"totalFee",type:"uint256"}],internalType:"struct OptionMarket.Result",name:"result",type:"tuple"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"baseIV",type:"uint256"},{internalType:"uint256[]",name:"strikePrices",type:"uint256[]"},{internalType:"uint256[]",name:"skews",type:"uint256[]"},{internalType:"bool",name:"frozen",type:"bool"}],name:"createOptionBoard",outputs:[{internalType:"uint256",name:"boardId",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"uint256",name:"strikeId",type:"uint256"},{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"uint256",name:"iterations",type:"uint256"},{internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"setCollateralTo",type:"uint256"},{internalType:"uint256",name:"minTotalCost",type:"uint256"},{internalType:"uint256",name:"maxTotalCost",type:"uint256"},{internalType:"address",name:"referrer",type:"address"}],internalType:"struct OptionMarket.TradeInputParameters",name:"params",type:"tuple"}],name:"forceClosePosition",outputs:[{components:[{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"uint256",name:"totalCost",type:"uint256"},{internalType:"uint256",name:"totalFee",type:"uint256"}],internalType:"struct OptionMarket.Result",name:"result",type:"tuple"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"boardId",type:"uint256"}],name:"forceSettleBoard",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"boardId",type:"uint256"}],name:"getBoardAndStrikeDetails",outputs:[{components:[{internalType:"uint256",name:"id",type:"uint256"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"iv",type:"uint256"},{internalType:"bool",name:"frozen",type:"bool"},{internalType:"uint256[]",name:"strikeIds",type:"uint256[]"}],internalType:"struct OptionMarket.OptionBoard",name:"",type:"tuple"},{components:[{internalType:"uint256",name:"id",type:"uint256"},{internalType:"uint256",name:"strikePrice",type:"uint256"},{internalType:"uint256",name:"skew",type:"uint256"},{internalType:"uint256",name:"longCall",type:"uint256"},{internalType:"uint256",name:"shortCallBase",type:"uint256"},{internalType:"uint256",name:"shortCallQuote",type:"uint256"},{internalType:"uint256",name:"longPut",type:"uint256"},{internalType:"uint256",name:"shortPut",type:"uint256"},{internalType:"uint256",name:"boardId",type:"uint256"}],internalType:"struct OptionMarket.Strike[]",name:"",type:"tuple[]"},{internalType:"uint256[]",name:"",type:"uint256[]"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"boardId",type:"uint256"}],name:"getBoardStrikes",outputs:[{internalType:"uint256[]",name:"strikeIds",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[],name:"getLiveBoards",outputs:[{internalType:"uint256[]",name:"_liveBoards",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[],name:"getNumLiveBoards",outputs:[{internalType:"uint256",name:"numLiveBoards",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"boardId",type:"uint256"}],name:"getOptionBoard",outputs:[{components:[{internalType:"uint256",name:"id",type:"uint256"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"iv",type:"uint256"},{internalType:"bool",name:"frozen",type:"bool"},{internalType:"uint256[]",name:"strikeIds",type:"uint256[]"}],internalType:"struct OptionMarket.OptionBoard",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[],name:"getOptionMarketParams",outputs:[{components:[{internalType:"uint256",name:"maxBoardExpiry",type:"uint256"},{internalType:"address",name:"securityModule",type:"address"},{internalType:"uint256",name:"feePortionReserved",type:"uint256"},{internalType:"uint256",name:"staticBaseSettlementFee",type:"uint256"}],internalType:"struct OptionMarket.OptionMarketParameters",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"strikeId",type:"uint256"}],name:"getSettlementParameters",outputs:[{internalType:"uint256",name:"strikePrice",type:"uint256"},{internalType:"uint256",name:"priceAtExpiry",type:"uint256"},{internalType:"uint256",name:"strikeToBaseReturned",type:"uint256"},{internalType:"uint256",name:"longScaleFactor",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"strikeId",type:"uint256"}],name:"getStrike",outputs:[{components:[{internalType:"uint256",name:"id",type:"uint256"},{internalType:"uint256",name:"strikePrice",type:"uint256"},{internalType:"uint256",name:"skew",type:"uint256"},{internalType:"uint256",name:"longCall",type:"uint256"},{internalType:"uint256",name:"shortCallBase",type:"uint256"},{internalType:"uint256",name:"shortCallQuote",type:"uint256"},{internalType:"uint256",name:"longPut",type:"uint256"},{internalType:"uint256",name:"shortPut",type:"uint256"},{internalType:"uint256",name:"boardId",type:"uint256"}],internalType:"struct OptionMarket.Strike",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"strikeId",type:"uint256"}],name:"getStrikeAndBoard",outputs:[{components:[{internalType:"uint256",name:"id",type:"uint256"},{internalType:"uint256",name:"strikePrice",type:"uint256"},{internalType:"uint256",name:"skew",type:"uint256"},{internalType:"uint256",name:"longCall",type:"uint256"},{internalType:"uint256",name:"shortCallBase",type:"uint256"},{internalType:"uint256",name:"shortCallQuote",type:"uint256"},{internalType:"uint256",name:"longPut",type:"uint256"},{internalType:"uint256",name:"shortPut",type:"uint256"},{internalType:"uint256",name:"boardId",type:"uint256"}],internalType:"struct OptionMarket.Strike",name:"",type:"tuple"},{components:[{internalType:"uint256",name:"id",type:"uint256"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"iv",type:"uint256"},{internalType:"bool",name:"frozen",type:"bool"},{internalType:"uint256[]",name:"strikeIds",type:"uint256[]"}],internalType:"struct OptionMarket.OptionBoard",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"strikeId",type:"uint256"}],name:"getStrikeAndExpiry",outputs:[{internalType:"uint256",name:"strikePrice",type:"uint256"},{internalType:"uint256",name:"expiry",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract BaseExchangeAdapter",name:"_exchangeAdapter",type:"address"},{internalType:"contract LiquidityPool",name:"_liquidityPool",type:"address"},{internalType:"contract OptionMarketPricer",name:"_optionPricer",type:"address"},{internalType:"contract OptionGreekCache",name:"_greekCache",type:"address"},{internalType:"contract ShortCollateral",name:"_shortCollateral",type:"address"},{internalType:"contract OptionToken",name:"_optionToken",type:"address"},{internalType:"contract IERC20Decimals",name:"_quoteAsset",type:"address"},{internalType:"contract IERC20Decimals",name:"_baseAsset",type:"address"}],name:"init",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"address",name:"rewardBeneficiary",type:"address"}],name:"liquidatePosition",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_owner",type:"address"}],name:"nominateNewOwner",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"nominatedOwner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{components:[{internalType:"uint256",name:"strikeId",type:"uint256"},{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"uint256",name:"iterations",type:"uint256"},{internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"setCollateralTo",type:"uint256"},{internalType:"uint256",name:"minTotalCost",type:"uint256"},{internalType:"uint256",name:"maxTotalCost",type:"uint256"},{internalType:"address",name:"referrer",type:"address"}],internalType:"struct OptionMarket.TradeInputParameters",name:"params",type:"tuple"}],name:"openPosition",outputs:[{components:[{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"uint256",name:"totalCost",type:"uint256"},{internalType:"uint256",name:"totalFee",type:"uint256"}],internalType:"struct OptionMarket.Result",name:"result",type:"tuple"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"quoteAsset",outputs:[{internalType:"contract IERC20Decimals",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract IERC20Decimals",name:"token",type:"address"},{internalType:"address",name:"recipient",type:"address"}],name:"recoverFunds",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"scaledLongsForBoard",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_baseLimit",type:"uint256"}],name:"setBaseLimit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"boardId",type:"uint256"},{internalType:"uint256",name:"baseIv",type:"uint256"}],name:"setBoardBaseIv",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"boardId",type:"uint256"},{internalType:"bool",name:"frozen",type:"bool"}],name:"setBoardFrozen",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"uint256",name:"maxBoardExpiry",type:"uint256"},{internalType:"address",name:"securityModule",type:"address"},{internalType:"uint256",name:"feePortionReserved",type:"uint256"},{internalType:"uint256",name:"staticBaseSettlementFee",type:"uint256"}],internalType:"struct OptionMarket.OptionMarketParameters",name:"_optionMarketParams",type:"tuple"}],name:"setOptionMarketParams",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"strikeId",type:"uint256"},{internalType:"uint256",name:"skew",type:"uint256"}],name:"setStrikeSkew",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"boardId",type:"uint256"}],name:"settleExpiredBoard",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"smClaim",outputs:[],stateMutability:"nonpayable",type:"function"}],nt=(n,e,t)=>{switch(e){case C.LiquidityPool:switch(n){case v.Avalon:return va;case v.Newport:return qa}case C.LiquidityToken:switch(n){case v.Avalon:return Ca;case v.Newport:return Fa}case C.OptionGreekCache:switch(n){case v.Avalon:return Ma;case v.Newport:return Ba}case C.OptionMarket:switch(n){case v.Avalon:return Oa;case v.Newport:switch(t){case U.Arbitrum:return Ra;case U.Optimism:return Na}}case C.OptionMarketPricer:switch(n){case v.Avalon:return Sa;case v.Newport:return La}case C.OptionToken:switch(n){case v.Avalon:return xa;case v.Newport:return Da}case C.PoolHedger:switch(n){case v.Avalon:return Aa;case v.Newport:switch(t){case U.Arbitrum:return Va;case U.Optimism:return _a}}case C.ShortCollateral:switch(n){case v.Avalon:return Ia;case v.Newport:return Ea}}},Ga=(n,e)=>{switch(e){case C.LiquidityPool:return n.liquidityPool;case C.LiquidityToken:return n.liquidityToken;case C.OptionGreekCache:return n.greekCache;case C.OptionMarket:return n.optionMarket;case C.OptionMarketPricer:return n.optionMarketPricer;case C.OptionToken:return n.optionToken;case C.PoolHedger:return n.poolHedger;case C.ShortCollateral:return n.shortCollateral}};function q(n,e,t,a){const{provider:i}=n,r=Ga(e,a),p=nt(t,a,n.network);return new xe(r,p,i)}const Ha=[{inputs:[{components:[{internalType:"address",name:"target",type:"address"},{internalType:"bytes",name:"callData",type:"bytes"}],internalType:"struct Multicall3.Call[]",name:"calls",type:"tuple[]"}],name:"aggregate",outputs:[{internalType:"uint256",name:"blockNumber",type:"uint256"},{internalType:"bytes[]",name:"returnData",type:"bytes[]"}],stateMutability:"payable",type:"function"},{inputs:[{components:[{internalType:"address",name:"target",type:"address"},{internalType:"bool",name:"allowFailure",type:"bool"},{internalType:"bytes",name:"callData",type:"bytes"}],internalType:"struct Multicall3.Call3[]",name:"calls",type:"tuple[]"}],name:"aggregate3",outputs:[{components:[{internalType:"bool",name:"success",type:"bool"},{internalType:"bytes",name:"returnData",type:"bytes"}],internalType:"struct Multicall3.Result[]",name:"returnData",type:"tuple[]"}],stateMutability:"payable",type:"function"},{inputs:[{components:[{internalType:"address",name:"target",type:"address"},{internalType:"bool",name:"allowFailure",type:"bool"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bytes",name:"callData",type:"bytes"}],internalType:"struct Multicall3.Call3Value[]",name:"calls",type:"tuple[]"}],name:"aggregate3Value",outputs:[{components:[{internalType:"bool",name:"success",type:"bool"},{internalType:"bytes",name:"returnData",type:"bytes"}],internalType:"struct Multicall3.Result[]",name:"returnData",type:"tuple[]"}],stateMutability:"payable",type:"function"},{inputs:[{components:[{internalType:"address",name:"target",type:"address"},{internalType:"bytes",name:"callData",type:"bytes"}],internalType:"struct Multicall3.Call[]",name:"calls",type:"tuple[]"}],name:"blockAndAggregate",outputs:[{internalType:"uint256",name:"blockNumber",type:"uint256"},{internalType:"bytes32",name:"blockHash",type:"bytes32"},{components:[{internalType:"bool",name:"success",type:"bool"},{internalType:"bytes",name:"returnData",type:"bytes"}],internalType:"struct Multicall3.Result[]",name:"returnData",type:"tuple[]"}],stateMutability:"payable",type:"function"},{inputs:[],name:"getBasefee",outputs:[{internalType:"uint256",name:"basefee",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"blockNumber",type:"uint256"}],name:"getBlockHash",outputs:[{internalType:"bytes32",name:"blockHash",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getBlockNumber",outputs:[{internalType:"uint256",name:"blockNumber",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getChainId",outputs:[{internalType:"uint256",name:"chainid",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getCurrentBlockCoinbase",outputs:[{internalType:"address",name:"coinbase",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getCurrentBlockDifficulty",outputs:[{internalType:"uint256",name:"difficulty",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getCurrentBlockGasLimit",outputs:[{internalType:"uint256",name:"gaslimit",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getCurrentBlockTimestamp",outputs:[{internalType:"uint256",name:"timestamp",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"addr",type:"address"}],name:"getEthBalance",outputs:[{internalType:"uint256",name:"balance",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getLastBlockHash",outputs:[{internalType:"bytes32",name:"blockHash",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bool",name:"requireSuccess",type:"bool"},{components:[{internalType:"address",name:"target",type:"address"},{internalType:"bytes",name:"callData",type:"bytes"}],internalType:"struct Multicall3.Call[]",name:"calls",type:"tuple[]"}],name:"tryAggregate",outputs:[{components:[{internalType:"bool",name:"success",type:"bool"},{internalType:"bytes",name:"returnData",type:"bytes"}],internalType:"struct Multicall3.Result[]",name:"returnData",type:"tuple[]"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"bool",name:"requireSuccess",type:"bool"},{components:[{internalType:"address",name:"target",type:"address"},{internalType:"bytes",name:"callData",type:"bytes"}],internalType:"struct Multicall3.Call[]",name:"calls",type:"tuple[]"}],name:"tryBlockAndAggregate",outputs:[{internalType:"uint256",name:"blockNumber",type:"uint256"},{internalType:"bytes32",name:"blockHash",type:"bytes32"},{components:[{internalType:"bool",name:"success",type:"bool"},{internalType:"bytes",name:"returnData",type:"bytes"}],internalType:"struct Multicall3.Result[]",name:"returnData",type:"tuple[]"}],stateMutability:"payable",type:"function"}],Ua=[{anonymous:!1,inputs:[{indexed:!0,internalType:"contract IERC20",name:"rewardToken",type:"address"},{indexed:!0,internalType:"address",name:"claimer",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!0,internalType:"uint256",name:"epochTimestamp",type:"uint256"},{indexed:!1,internalType:"string",name:"tag",type:"string"}],name:"ClaimAdded",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"contract IERC20",name:"rewardToken",type:"address"},{indexed:!0,internalType:"address",name:"claimer",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"Claimed",type:"event"},{inputs:[{internalType:"contract IERC20[]",name:"tokens",type:"address[]"}],name:"claim",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"},{internalType:"contract IERC20",name:"",type:"address"}],name:"claimableBalances",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"}],Qa="0xcA11bde05977b3631167028862bE2a173976CA11",Wa="0xecB73D4621Cabbf199e778CAEBc74bE27f2EcEe1",$a={Multicall3:Qa,MultiDistributor:Wa},za="0xcA11bde05977b3631167028862bE2a173976CA11",Ka={Multicall3:za},ja="0xcA11bde05977b3631167028862bE2a173976CA11",Xa="0x019F0233C0277B9422FCDb1213B09C86f5f27D87",Ya={Multicall3:ja,MultiDistributor:Xa},Za="0xcA11bde05977b3631167028862bE2a173976CA11",Ja={Multicall3:Za},ei=(n,e)=>{switch(n.chain){case A.Arbitrum:return $a[e];case A.ArbitrumGoerli:return Ka[e];case A.Optimism:return Ya[e];case A.OptimismGoerli:return Ja[e]}},ti=n=>{switch(n){case Oe.MultiDistributor:return Ua;case Oe.Multicall3:return Ha}};function Ye(n,e){const{provider:t}=n,a=ei(n,e);if(!a)throw new Error("Contract does not exist for specified chain");const i=ti(e);return new xe(a,i,t)}async function Se(n,e){const t=Ye(n,Oe.Multicall3),a=e.map(s=>({target:s.contract.address,callData:s.contract.interface.encodeFunctionData(s.function,s.args)})),{returnData:i,blockNumber:r}=await t.callStatic.aggregate(a);return{returnData:e.map((s,u)=>s.contract.interface.decodeFunctionResult(s.function,i[u])[0]),blockNumber:r.toNumber()}}async function ni(n,e){const t=await n.markets();return await Promise.all(t.map(async a=>{const i=Re(n.provider,a.quoteToken.address),r=Re(n.provider,a.baseToken.address),p=q(n,a.contractAddresses,n.version,C.OptionMarket),s=q(n,a.contractAddresses,n.version,C.LiquidityPool),u=q(n,a.contractAddresses,n.version,C.LiquidityToken),{returnData:[y,l,m,c,f,T,d,k,w,g]}=await Se(n,[{contract:i,function:"symbol",args:[]},{contract:i,function:"decimals",args:[]},{contract:i,function:"balanceOf",args:[e]},{contract:i,function:"allowance",args:[e,p.address]},{contract:i,function:"allowance",args:[e,s.address]},{contract:r,function:"symbol",args:[]},{contract:r,function:"decimals",args:[]},{contract:r,function:"balanceOf",args:[e]},{contract:r,function:"allowance",args:[e,p.address]},{contract:u,function:"balanceOf",args:[e]}]);return{owner:e,market:a,marketAddress:a.address,marketName:a.name,quoteAsset:{address:i.address,balance:m,symbol:y,decimals:l,tradeAllowance:c,depositAllowance:f},baseAsset:{address:r.address,symbol:T,decimals:d,balance:k,tradeAllowance:w},liquidityToken:{address:u.address,symbol:`${a.baseToken.symbol}LP`,balance:g,decimals:18}}}))}class Ze{constructor(e,t){this.lyra=e,this.address=t}static get(e,t){return new Ze(e,t)}async balances(){return await ni(this.lyra,this.address)}async marketBalances(e){const[t,a]=await Promise.all([this.lyra.market(e),this.balances()]),i=a.find(r=>r.marketAddress.toLowerCase()===t.address.toLowerCase());if(!i)throw new Error("No balances exist for market");return i}drip(){if(this.lyra.deployment!==ae.Testnet)throw new Error("Faucet is only supported on testnet contracts");const e=W(this.lyra,this.lyra.version,D.TestFaucet),t=e.interface.encodeFunctionData("drip");return L(this.lyra.provider,this.lyra.provider.network.chainId,e.address,this.address,t)}}const ai=.005,_e=60*60,Ie=24*_e,je=Ie*7,dt=je*4,ii=dt*6,ri=365.25*Ie,ze={},pi=10*1e3;async function si(n){return await(await mt(n)).json()}async function Wt(n){const e=Date.now();return(!ze[n]||e>ze[n].lastUpdated+pi)&&(ze[n]={fetch:si(n),lastUpdated:e}),ze[n].fetch}const ui=[];async function oi(n){return n.deployment!==ae.Mainnet?ui:Wt(`${n.apiUri}/rewards/global?network=${n.network}&version=${n.version}`)}function kt(n,e){const[t]=e.split("-");if(n.version===v.Avalon)switch(t.toLowerCase()){case"eth":case"seth":return"sETH";case"btc":case"sbtc":return"sBTC";case"sol":case"ssol":return"sSOL";default:return t}else switch(t.toLowerCase()){case"eth":case"weth":return"WETH";case"btc":case"wbtc":return"WBTC";case"lyarb":case"arb":return"LyARB";default:return t.toUpperCase()}}function ht(n,e){return ft(e)?n.address===ee(e):n.baseToken.symbol.toLowerCase()===kt(n.lyra,e).toLowerCase()}function $t(n,e){const t=Object.values(n).find(a=>ht(a,e));return t??null}function ke(n,e){const t=$t(n,e);if(!t)throw new Error("Failed to find market");return t}function M(n,e=18){return parseFloat(Vn(n.toString(),e))}function yi(n,e,t,a,i){return a>0?Math.min(i*n+(1-i)*t/a*e,n):n}function li(n,e,t){return t===0||e===0?0:n*(e/t)}function Ae(n,e){return n.filter((t,a,i)=>i.findIndex(r=>e(r)===e(t))===a)}class at{constructor(e,t,a,i,r,p){var s,u,y,l,m;this.lyra=e,this.id=t,this.epoch=a,this.markets=i,this.marketsLiquidity=r,this.tradingBoostTiers=(u=(s=a.tradingRewardConfig)===null||s===void 0?void 0:s.boostRateTable)===null||u===void 0?void 0:u.map(T=>({stakingCutoff:T.stakingCutoff,tradingCutoff:T.tradingCutoff,isReferred:T.isReferred,label:T.label,boost:T.boostRate})),this.blockTimestamp=p.timestamp,this.startTimestamp=a.startTimestamp,this.lastUpdatedTimestamp=a.lastUpdated,this.endTimestamp=a.endTimestamp,this.distributionTimestamp=(y=a.distributionTimestamp)!==null&&y!==void 0?y:a.endTimestamp,this.isDepositPeriod=a.isDepositPeriod,this.startEarningTimestamp=a.startEarningTimestamp,this.isCurrent=this.blockTimestamp>=this.startTimestamp&&this.blockTimestamp<=this.endTimestamp,this.isComplete=this.blockTimestamp>this.endTimestamp;const c=Math.max(0,this.endTimestamp-this.startTimestamp),f=c-Math.max(0,this.endTimestamp-this.blockTimestamp);this.duration=c,this.progressDays=f/Ie,this.totalAverageStakedLyra=this.progressDays?a.totalStkLyraDays/this.progressDays:0,this.tradingRewardsCap=a.tradingRewardConfig.tokens.map(T=>({address:T.address,symbol:T.symbol,decimals:T.decimals,amount:T.cap})),this.tradingRewardTokens=Ae(a.tradingRewardConfig.tokens.filter(T=>T.cap>0),T=>T.address.toLowerCase()),this.vaultRewardTokens=Ae(Object.values(a.MMVConfig).flatMap(T=>T.tokens).filter(T=>T.amount>0),T=>T.address.toLowerCase()),this.rewardTokens=Ae([...this.tradingRewardTokens,...this.vaultRewardTokens],T=>T.address),this.tokenPriceMap=(m=(l=a.tokenPrices)===null||l===void 0?void 0:l.reduce((T,d)=>({...T,[d.address]:d}),{}))!==null&&m!==void 0?m:{}}static async getAll(e){if(e.deployment!==ae.Mainnet)return[];const[t,a,i]=await Promise.all([oi(e),e.markets(),e.provider.getBlock("latest")]),r=await Promise.all(a.map(p=>p.liquidity()));return t.map((p,s)=>new at(e,s+1,p,a,r,i)).sort((p,s)=>p.endTimestamp-s.endTimestamp)}static async getLatest(e){var t;if(e.deployment!==ae.Mainnet)return null;const a=await this.getAll(e),i=(t=a.find(r=>!r.isComplete))!==null&&t!==void 0?t:a[a.length-1];return i??null}static async getByStartTimestamp(e,t){if(e.deployment!==ae.Mainnet)return null;const i=(await this.getAll(e)).find(r=>r.startTimestamp===t);return i??null}vaultApy(e,t,a){const i=this.markets.findIndex(g=>ht(g,e)),p=this.markets[i].baseToken.symbol,s=this.totalAverageVaultTokens(e),u=this.epoch.MMVConfig[p],y=this.epoch.scaledStkLyraDays[p];if(!u)return[];const l=this.progressDays?y/this.progressDays:0,c=yi(a,s,t,l,u.x)/a*2,f=M(this.marketsLiquidity[i].tokenPrice),T=f>0?M(this.marketsLiquidity[i].pendingDeposits)/f:0,d=s+T,k=f>0?1/f:0,w=d>0?k/d:0;return u.tokens.map(g=>{var S,P;const x=g.amount,O=this.duration>0?w*x/this.duration:0,V=(P=(S=this.tokenPriceMap[g.address])===null||S===void 0?void 0:S.price)!==null&&P!==void 0?P:0;return{amount:O*V*ri*c,address:g.address,decimals:g.decimals,symbol:g.symbol}})}vaultApyTotal(e,t,a){return this.vaultApy(e,t,a).reduce((i,r)=>i+r.amount,0)}vaultMaxBoost(e,t){const i=ke(this.markets,e).baseToken.symbol,r=this.totalAverageVaultTokens(e),p=this.epoch.scaledStkLyraDays[i],s=this.progressDays?p/this.progressDays:0;return li(s,t,r)}vaultApyMultiplier(e,t,a){const i=this.vaultApyTotal(e,0,a),r=this.vaultApyTotal(e,t,a);return i>0?r/i:0}minVaultApy(e){return this.vaultApy(e,0,1e4)}maxVaultApy(e){const a=ke(this.markets,e).baseToken.symbol,i=this.epoch.scaledStkLyraDays[a];if(!i)return[];const r=this.progressDays?i/this.progressDays:0;return this.vaultApy(e,r,1e4)}totalVaultRewards(e){var t;const i=ke(this.markets,e).baseToken.symbol;return(t=this.epoch.globalMMVRewards[i])!==null&&t!==void 0?t:[]}totalAverageVaultTokens(e){const t=ke(this.markets,e);return t.baseToken.symbol,M(t.params.NAV)}totalAverageBoostedVaultTokens(e){var t;const i=ke(this.markets,e).baseToken.symbol;return this.progressDays?((t=this.epoch.totalBoostedLpTokenDays[i])!==null&&t!==void 0?t:0)/this.progressDays:0}async accountRewardEpoch(e){const a=(await qe.getByOwner(this.lyra,e)).find(i=>i.globalEpoch.startTimestamp===this.startTimestamp&&i.globalEpoch.endTimestamp===this.endTimestamp);return a??null}}async function mi(n,e){return n.deployment!==ae.Mainnet?[]:Wt(`${n.apiUri}/rewards/account?network=${n.network}&account=${e}&version=${n.version}`)}const zt=0,Kt=2147483647,bt=1e3,jt=`
timestamp
blockNumber
transactionHash
trader
size
isOpen
isBuy
spotPrice
premium
spotPriceFee
optionPriceFee
vegaUtilFee
varianceFee
externalSwapFees
setCollateralTo
newIv
newBaseIv
newSkew
volTraded
isForceClose
isLiquidation
strike {
  strikeId
  strikePrice
}
board {
  expiryTimestamp
}
market {
  name
  id
}
option {
  isCall
}
position {
  positionId
  isLong
  isBaseCollateral
}
`,Xt=`
timestamp
trader
blockNumber
transactionHash
amount
isBaseCollateral
spotPrice
strike {
  strikeId
  strikePrice
}
board {
  expiryTimestamp
}
market {
  name
  id
}
option {
  isCall
}
position {
  positionId
  isLong
  isBaseCollateral
}
`,Yt=`
id
blockNumber
profit
size
spotPriceAtExpiry
timestamp
transactionHash
owner
settleAmount
position {
  positionId
  isBaseCollateral
  isLong
  strike {
    strikeId
    strikePrice
  }
  board {
    expiryTimestamp
  }
  market {
    name
    id
    latestSpotPrice
  }
  option {
    isCall
  }
}
`,Zt=`
  oldOwner
  newOwner
  transactionHash
  blockNumber
  position {
    id
    positionId
  }
`,ct=`
id
positionId
owner
size
isLong
collateral
isBaseCollateral
state
openTimestamp
closeTimestamp
strike {
  strikeId
  strikePrice
}
board {
  boardId
  expiryTimestamp
  spotPriceAtExpiry
}
market {
  name
  id
  latestSpotPrice
}
option {
  isCall
  latestOptionPriceAndGreeks {
    optionPrice
  }
}
trades(orderBy: timestamp, orderDirection: asc) {
  ${jt}
}
collateralUpdates(orderBy: timestamp, orderDirection: asc) {
  ${Xt}
}
transfers(orderBy: timestamp, orderDirection: asc) {
  ${Zt}
}
settle {
  ${Yt}
}
`,Jt=`
  id
  period
  timestamp
  tokenPrice
  freeLiquidity
  burnableLiquidity
  usedCollatLiquidity
  pendingDeltaLiquidity
  usedDeltaLiquidity
  NAV
  netOptionValue
  pendingDeposits
  pendingWithdrawals
`,en=`
  id
  period
  timestamp
  netDelta
  poolNetDelta
  hedgerNetDelta
  netStdVega
`,di=`
  id
  timestamp
  period
  premiumVolume
  notionalVolume
  totalPremiumVolume
  totalNotionalVolume
  spotPriceFees
  optionPriceFees
  vegaFees
  varianceFees
  deltaCutoffFees
  liquidatorFees
  smLiquidationFees
  lpLiquidationFees
  totalShortPutOpenInterestUSD
  totalShortCallOpenInterestUSD
`,ci=`
  timestamp
  spotPrice
  open
  high
  low
  close
  blockNumber
  period
`,Ti=`
  timestamp
  blockTimestamp
  optionPrice
  id
  blockNumber
  option {
    id
  }
`,fi=`
  notionalVolume
  premiumVolume
  timestamp
`,ki=`
  timestamp
  iv
`,hi=`
  pool {
    market {
      id
    }
    cbEvents(first:1, orderBy:cbTimestamp, orderDirection:desc) {
      cbTimestamp
      ivVarianceCrossed
      skewVarianceCrossed
      liquidityVarianceCrossed
    }
  }
  user
  pendingDepositsAndWithdrawals(where: {
    isDeposit: true
  }) {
    id
    queueID
    pendingAmount
    processedAmount
    timestamp
    transactionHash
  }
  depositsAndWithdrawals(where: {
    isDeposit: true
  }) {
    id
    queueID
    quoteAmount
    tokenAmount
    tokenPrice
    timestamp
    transactionHash
  }
`,bi=`
  pool {
    market {
      id
    }
  }
  user
  pendingDepositsAndWithdrawals(where: {
    isDeposit: false
  }) {
    id
    queueID
    pendingAmount
    processedAmount
    timestamp
    transactionHash
  }
  depositsAndWithdrawals(where: {
    isDeposit: false
  }) {
    id
    queueID
    quoteAmount
    tokenAmount
    tokenPrice
    timestamp
    transactionHash
  }
`,wi=`
  amount
  blockNumber
  claimer
  epochTimestamp
  rewardToken
  tag
  timestamp
`,Pi=`
  amount
  blockNumber
  claimer
  rewardToken
  timestamp
`,tn=`
  cbTimestamp
  ivVarianceCrossed
  skewVarianceCrossed
  liquidityVarianceCrossed
`;var Y;(function(n){n[n.FifteenMinutes=900]="FifteenMinutes",n[n.OneHour=3600]="OneHour",n[n.FourHours=14400]="FourHours",n[n.EightHours=28800]="EightHours",n[n.OneDay=86400]="OneDay",n[n.SevenDays=604800]="SevenDays"})(Y||(Y={}));async function me(n,e){return n.query({...e,errorPolicy:"all"})}const gi=z`
  query claimAddeds($user: String!) {
    claimAddeds(where: { 
      claimer: $user
    }) {
      ${wi}
    }
  }
`;async function vi(n,e){var t;const{data:a}=await me(n.govSubgraphClient,{query:gi,variables:{user:e.toLowerCase()}});return(t=a==null?void 0:a.claimAddeds.map(i=>({amount:h.from(i.amount),blockNumber:i.blockNumber,claimer:i.claimer,epochTimestamp:parseInt(i.epochTimestamp),rewardToken:i.rewardToken,timestamp:i.timestamp,tag:i.tag})).filter(i=>i.rewardToken.toLowerCase()!=="0xCb9f85730f57732fc899fb158164b9Ed60c77D49".toLowerCase()))!==null&&t!==void 0?t:[]}const Ci=z`
  query claims($user: String!) {
    claims(where: { 
      claimer: $user
    }) {
      ${Pi}
    }
  }
`;async function Mi(n,e){var t;const{data:a}=await me(n.govSubgraphClient,{query:Ci,variables:{user:e.toLowerCase()}});return(t=a==null?void 0:a.claims.map(i=>({amount:h.from(i.amount),blockNumber:i.blockNumber,claimer:i.claimer,rewardToken:i.rewardToken,timestamp:i.timestamp})))!==null&&t!==void 0?t:[]}const Oi="TRADING";function Si(n,e){const t=e.filter(a=>a.tag.split("-").includes(Oi)&&a.epochTimestamp===n.startTimestamp).reduce((a,i)=>{const r=n.tradingRewardTokens.find(p=>p.address.toLowerCase()===i.rewardToken.toLowerCase());return r?(a[r.address]&&(a[r.address].amount+=M(i.amount,r.decimals)),{...a,[r.address]:{...r,amount:M(i.amount,r.decimals)}}):a},{});return Object.values(t)}const xi="MMV";function Ii(n,e,t){const a=t.filter(i=>{const p=i.tag.split("-").map(s=>s.toUpperCase());return p.includes(xi)&&p.includes(n.baseToken.symbol.toUpperCase())&&n.baseToken.symbol.toUpperCase()!=="OP"&&i.epochTimestamp===e.startTimestamp}).reduce((i,r)=>{const p=e.vaultRewardTokens.find(s=>s.address.toLowerCase()===r.rewardToken.toLowerCase());return p?(i[p.address]&&(i[p.address].amount+=M(r.amount,p.decimals)),{...i,[p.address]:{...p,amount:M(r.amount,p.decimals)}}):i},{});return Object.values(a)}const Ai="TRADING";function Vi(n,e,t){const a=e.filter(i=>i.tag.split("-").includes(Ai)).reduce((i,r)=>{if(t.some(u=>u.timestamp>r.timestamp&&u.rewardToken===r.rewardToken))return i;const s=n.find(u=>u.address.toLowerCase()===r.rewardToken.toLowerCase());return s?(i[s.address]&&(i[s.address].amount+=M(r.amount,s.decimals)),{...i,[s.address]:{...s,amount:M(r.amount,s.decimals)}}):(console.warn("Missing token info in global epoch config",r.rewardToken),i)},{});return Object.values(a).filter(i=>i.amount>0)}const qi="MMV";function Fi(n,e,t,a){const i=t.filter(r=>{const s=r.tag.split("-").map(u=>u.toUpperCase());return s.includes(qi)&&n.baseToken.symbol.toUpperCase()!=="OP"&&s.includes(n.baseToken.symbol.toUpperCase())}).reduce((r,p)=>{if(a.some(y=>y.timestamp>p.timestamp&&y.rewardToken===p.rewardToken))return r;const u=e.find(y=>y.address.toLowerCase()===p.rewardToken.toLowerCase());return u?(r[u.address]&&(r[u.address].amount+=M(p.amount,u.decimals)),{...r,[u.address]:{...u,amount:M(p.amount,u.decimals)}}):(console.warn("Missing token info in global epoch config",p.rewardToken),r)},{});return Object.values(i).filter(r=>r.amount>0)}class qe{constructor(e,t,a,i,r,p,s,u){var y,l,m,c,f,T;this.lyra=e,this.account=t,this.globalEpoch=i,this.accountEpoch=a;const d=!!a.tradingRewards.newRewards,k=(m=(l=(y=a.tradingRewards)===null||y===void 0?void 0:y.rewards)===null||l===void 0?void 0:l.trading)!==null&&m!==void 0?m:[],w=(T=(f=(c=a==null?void 0:a.tradingRewards)===null||c===void 0?void 0:c.newRewards)===null||f===void 0?void 0:f.tokens)!==null&&T!==void 0?T:[],g=d?w:k,S=Si(i,r);this.isTradingRewardsDistributed=!!S.find(P=>P.amount>0),this.tradingRewards=this.isTradingRewardsDistributed?S:g,this.totalClaimableRewards=u,this.totalClaimableTradingRewards=Vi(s,r,p),this.totalClaimableVaultRewardsMap=i.markets.reduce((P,x)=>({...P,[x.baseToken.symbol]:Fi(x,s,r,p)}),{}),this.distributedVaultRewardsMap=i.markets.reduce((P,x)=>({...P,[x.baseToken.symbol]:Ii(x,i,r)}),{}),this.calculatedVaultRewardsMap=i.markets.reduce((P,x)=>{const O=x.baseToken.symbol,V=a.mmvRewards?a.mmvRewards[O]:null,B=!!(V!=null&&V.isIgnored);return{...P,[x.baseToken.symbol]:V&&!B?V.rewards.filter(I=>I.amount>ai):[]}},{}),this.isVaultRewardsDistributedMap=i.markets.reduce((P,x)=>{var O;return{...P,[x.baseToken.symbol]:!!(!((O=this.distributedVaultRewardsMap[x.baseToken.symbol])===null||O===void 0)&&O.find(V=>V.amount>0))}},{})}static async getByOwner(e,t){if(e.deployment!==ae.Mainnet)return[];const[a,i,r,p]=await Promise.all([mi(e,t),at.getAll(e),vi(e,t),Mi(e,t)]),s=Ae(i.flatMap(m=>m.rewardTokens),m=>m.address),u=Ye(e,Oe.MultiDistributor),{returnData:y}=await Se(e,s.map(({address:m})=>({contract:u,function:"claimableBalances",args:[t,m]}))),l=y.map((m,c)=>({...s[c],amount:M(m,s[c].decimals)})).filter(({amount:m})=>m>0);return a.map(m=>{const c=i.find(f=>f.startTimestamp===m.startTimestamp&&f.endTimestamp===m.endTimestamp);if(!c)throw new Error("Missing corresponding global epoch for account epoch");return new qe(e,t,m,c,r,p,s,l)}).sort((m,c)=>m.globalEpoch.endTimestamp-c.globalEpoch.endTimestamp)}static async getByStartTimestamp(e,t,a){if(e.deployment!==ae.Mainnet)return null;const r=(await qe.getByOwner(e,t)).find(p=>p.globalEpoch.startTimestamp===a);return r??null}static claim(e,t,a){const i=Ye(e,Oe.MultiDistributor),r=i.interface.encodeFunctionData("claim",[a]);return L(e.provider,e.provider.network.chainId,i.address,t,r)}vaultRewards(e){const a=ke(this.globalEpoch.markets,e).baseToken.symbol;return this.isVaultRewardsDistributed(e)?this.distributedVaultRewardsMap[a]:this.calculatedVaultRewardsMap[a]}totalClaimableVaultRewards(e){const a=ke(this.globalEpoch.markets,e).baseToken.symbol;return this.totalClaimableVaultRewardsMap[a]}isVaultRewardsDistributed(e){const a=ke(this.globalEpoch.markets,e).baseToken.symbol;return this.isVaultRewardsDistributedMap[a]}}async function Bi(n){return await W(n,n.version,D.ExchangeAdapter).owner()}function Li(n,e,t,a){const i=Object.entries(t).find(([s,u])=>isNaN(parseInt(s))&&u===a);if(!i)return null;const[r]=i;let p;switch(r){case"optionMarketPricer":p=C.OptionMarketPricer;break;case"liquidityPool":p=C.LiquidityPool;break;case"liquidityToken":p=C.LiquidityToken;break;case"greekCache":p=C.OptionGreekCache;break;case"optionMarket":p=C.OptionMarket;break;case"optionToken":p=C.OptionToken;break;case"shortCollateral":p=C.ShortCollateral;break;case"poolHedger":p=C.PoolHedger;break}return p?{contractId:p,contract:q(n,t,e,p)}:null}const N=h.from(1e7);class wt{constructor(e){this.lyra=e}static get(e){return new wt(e)}contract(e,t){return W(this.lyra,e,t)}marketContract(e,t,a){return q(this.lyra,e,t,a)}globalContract(e){return Ye(this.lyra,e)}getMarketContractForAddress(e,t,a){return Li(this.lyra,t,e,a)}async owner(){return await Bi(this.lyra)}async isMarketPaused(e){return await this.contract(this.lyra.version,D.ExchangeAdapter).isMarketPaused(e)}async isGlobalPaused(){return await this.contract(this.lyra.version,D.ExchangeAdapter).isGlobalPaused()}async getMarketGlobalCache(e){const t=await this.lyra.market(e),a=q(this.lyra,t.contractAddresses,this.lyra.version,C.OptionGreekCache),[i,r]=await Promise.all([a.isGlobalCacheStale(t.spotPrice),a.getGlobalCache()]);return{...r,isGlobalCacheStale:i}}async setGlobalPaused(e){const t=this.contract(this.lyra.version,D.ExchangeAdapter),a=await t.owner(),i=t.interface.encodeFunctionData("setGlobalPaused",[e]);return{...L(this.lyra.provider,this.lyra.provider.network.chainId,t.address,a,i),gasLimit:N}}async setMarketPaused(e,t){const a=this.contract(this.lyra.version,D.ExchangeAdapter),[i,r]=await Promise.all([a.owner(),this.lyra.market(e)]),p=a.interface.encodeFunctionData("setMarketPaused",[r.address,t]);return{...L(this.lyra.provider,this.lyra.provider.network.chainId,a.address,i,p),gasLimit:N}}async addMarketToViewer(e){const t=this.contract(this.lyra.version,D.OptionMarketViewer),a=await t.owner(),i=t.interface.encodeFunctionData("addMarket",[e]);return{...L(this.lyra.provider,this.lyra.provider.network.chainId,t.address,a,i),gasLimit:N}}async addMarketToRegistry(e){const t=this.contract(this.lyra.version,D.LyraRegistry),a=await t.owner(),i=t.interface.encodeFunctionData("addMarket",[e]);return{...L(this.lyra.provider,this.lyra.provider.network.chainId,t.address,a,i),gasLimit:N}}async addBoard(e,t,a,i,r,p=!1){const s=await this.lyra.market(e),u=await s.owner(),y=q(this.lyra,s.contractAddresses,this.lyra.version,C.OptionMarket),l=y.interface.encodeFunctionData("createOptionBoard",[t,a,i,r,p]),m=L(this.lyra.provider,this.lyra.provider.network.chainId,y.address,u,l);return m.gasLimit=N,{tx:m,board:{expiry:t,baseIV:a,strikePrices:i,skews:r,frozen:p}}}async addStrikeToBoard(e,t,a,i){const r=await this.lyra.market(e),p=await r.owner(),s=q(this.lyra,r.contractAddresses,this.lyra.version,C.OptionMarket),u=s.interface.encodeFunctionData("addStrikeToBoard",[t,a,i]),y=L(this.lyra.provider,this.lyra.provider.network.chainId,s.address,p,u);return y.gasLimit=N,{tx:y,strike:{boardId:t,strikePrice:a,skew:i}}}async setBoardPaused(e,t,a){const i=await this.lyra.market(e),r=q(this.lyra,i.contractAddresses,this.lyra.version,C.OptionMarket),p=await r.owner(),s=r.interface.encodeFunctionData("setBoardFrozen",[t,a]);return{...L(this.lyra.provider,this.lyra.provider.network.chainId,r.address,p,s),gasLimit:N}}async setBoardBaseIv(e,t,a){const i=await this.lyra.market(e),r=q(this.lyra,i.contractAddresses,this.lyra.version,C.OptionMarket),p=await r.owner(),s=r.interface.encodeFunctionData("setBoardBaseIv",[t,a]);return{...L(this.lyra.provider,this.lyra.provider.network.chainId,r.address,p,s),gasLimit:N}}async setStrikeSkew(e,t,a){const i=await this.lyra.market(e),r=q(this.lyra,i.contractAddresses,this.lyra.version,C.OptionMarket),p=await r.owner(),s=r.interface.encodeFunctionData("setStrikeSkew",[t,a]);return{...L(this.lyra.provider,this.lyra.provider.network.chainId,r.address,p,s),gasLimit:N}}async setGreekCacheParams(e,t,a){const i=await this.lyra.market(t);if(e===v.Avalon){const r={...i.__data.marketParameters.greekCacheParams,...a},p=q(this.lyra,i.contractAddresses,v.Avalon,C.OptionGreekCache),s=await p.owner(),u=p.interface.encodeFunctionData("setGreekCacheParameters",[r]),y=L(this.lyra.provider,this.lyra.provider.network.chainId,p.address,s,u);return y.gasLimit=N,{params:r,tx:y}}else{const r={...i.__data.marketParameters.greekCacheParams,...a},p=q(this.lyra,i.contractAddresses,v.Newport,C.OptionGreekCache),s=await p.owner(),u=p.interface.encodeFunctionData("setGreekCacheParameters",[r]),y=L(this.lyra.provider,this.lyra.provider.network.chainId,p.address,s,u);return y.gasLimit=N,{params:r,tx:y}}}async setForceCloseParams(e,t){const a=await this.lyra.market(e),i={...a.__data.marketParameters.forceCloseParams,...t},r=q(this.lyra,a.contractAddresses,this.lyra.version,C.OptionGreekCache),p=await r.owner(),s=r.interface.encodeFunctionData("setForceCloseParameters",[i]),u=L(this.lyra.provider,this.lyra.provider.network.chainId,r.address,p,s);return u.gasLimit=N,{params:i,tx:u}}async setMinCollateralParams(e,t){const a=await this.lyra.market(e),i={...a.__data.marketParameters.minCollatParams,...t},r=q(this.lyra,a.contractAddresses,this.lyra.version,C.OptionGreekCache),p=await r.owner(),s=r.interface.encodeFunctionData("setMinCollateralParameters",[i]),u=L(this.lyra.provider,this.lyra.provider.network.chainId,r.address,p,s);return u.gasLimit=N,{params:i,tx:u}}async setLiquidityPoolParams(e,t,a){const i=await this.lyra.market(t);if(e===v.Avalon){const r={...i.__data.marketParameters.lpParams,...a},p=q(this.lyra,i.contractAddresses,v.Avalon,C.LiquidityPool),s=await p.owner(),u=p.interface.encodeFunctionData("setLiquidityPoolParameters",[r]),y=L(this.lyra.provider,this.lyra.provider.network.chainId,p.address,s,u);return y.gasLimit=N,{params:r,tx:y}}else{const r={...i.__data.marketParameters.lpParams,...a},p=q(this.lyra,i.contractAddresses,v.Newport,C.LiquidityPool),s=await p.owner(),u=p.interface.encodeFunctionData("setLiquidityPoolParameters",[r]),y=L(this.lyra.provider,this.lyra.provider.network.chainId,p.address,s,u);return y.gasLimit=N,{params:r,tx:y}}}async setPricingParams(e,t){const a=await this.lyra.market(e),i={...a.__data.marketParameters.pricingParams,...t},r=q(this.lyra,a.contractAddresses,this.lyra.version,C.OptionMarketPricer),p=await r.owner(),s=r.interface.encodeFunctionData("setPricingParams",[i]),u=L(this.lyra.provider,this.lyra.provider.network.chainId,r.address,p,s);return u.gasLimit=N,{params:i,tx:u}}async setTradeLimitParams(e,t){const a=await this.lyra.market(e),i={...a.__data.marketParameters.tradeLimitParams,...t},r=q(this.lyra,a.contractAddresses,this.lyra.version,C.OptionMarketPricer),p=await r.owner(),s=r.interface.encodeFunctionData("setTradeLimitParams",[i]),u=L(this.lyra.provider,this.lyra.provider.network.chainId,r.address,p,s);return u.gasLimit=N,{params:i,tx:u}}async setVarianceFeeParams(e,t){const a=await this.lyra.market(e),i={...a.__data.marketParameters.varianceFeeParams,...t},r=q(this.lyra,a.contractAddresses,this.lyra.version,C.OptionMarketPricer),p=await r.owner(),s=r.interface.encodeFunctionData("setVarianceFeeParams",[i]),u=L(this.lyra.provider,this.lyra.provider.network.chainId,r.address,p,s);return u.gasLimit=N,{params:i,tx:u}}async setPartialCollatParams(e,t){const a=await this.lyra.market(e),i={...a.__data.marketParameters.partialCollatParams,...t},r=q(this.lyra,a.contractAddresses,this.lyra.version,C.OptionToken),p=await r.owner(),s=r.interface.encodeFunctionData("setPartialCollateralParams",[i]),u=L(this.lyra.provider,this.lyra.provider.network.chainId,r.address,p,s);return u.gasLimit=N,{params:i,tx:u}}async setOptionMarketParams(e,t){const a=await this.lyra.market(e),i={...a.__data.marketParameters.optionMarketParams,...t},r=q(this.lyra,a.contractAddresses,this.lyra.version,C.OptionMarket),p=await r.owner(),s=r.interface.encodeFunctionData("setOptionMarketParams",[i]),u=L(this.lyra.provider,this.lyra.provider.network.chainId,r.address,p,s);return u.gasLimit=N,{params:i,tx:u}}async setAdapterMarketPricingParams(e,t){const a=await this.lyra.market(e);if(!a.params.adapterView)throw new Error("Adapter market pricing parameters not supported on this market");const i={...a.params.adapterView.marketPricingParams,...t},r=W(this.lyra,v.Newport,D.ExchangeAdapter),p=await r.owner(),s=r.interface.encodeFunctionData("setMarketPricingParams",[a.address,i]),u=L(this.lyra.provider,this.lyra.provider.network.chainId,r.address,p,s);return u.gasLimit=N,{params:i,tx:u}}async setAdapterMarketConfigurationParams(e,t){const a=await this.lyra.market(e);if(!a.params.adapterView)throw new Error("Adapter market configuration parameters not supported on this market");const i=a.params.adapterView.config,p={...{snxPerpV2MarketAddress:i.snxPerpV2MarketAddress,staticEstimationDiscount:i.staticEstimationDiscount,pool:i.uniswapInfo.pool,feeTier:i.uniswapInfo.feeTier},...t},s=W(this.lyra,v.Newport,D.ExchangeAdapter),u=await s.owner(),y=s.interface.encodeFunctionData("setMarketAdapterConfiguration",[a.address,p.staticEstimationDiscount,p.snxPerpV2MarketAddress,p.pool,p.feeTier]),l=L(this.lyra.provider,this.lyra.provider.network.chainId,s.address,u,y);return l.gasLimit=N,{params:p,tx:l}}async setPoolHedgerParams(e,t){const a=await this.lyra.market(e),i=q(this.lyra,a.contractAddresses,a.lyra.version,C.PoolHedger),p={...await i.getPoolHedgerParams(),...t},s=await a.owner(),u=i.interface.encodeFunctionData("setPoolHedgerParams",[p]),y=L(this.lyra.provider,this.lyra.provider.network.chainId,i.address,s,u);return y.gasLimit=h.from(1e7),{params:p,tx:y}}async setFuturesPoolHedgerParams(e,t){const a=await this.lyra.market(e);if(a.lyra.version!==v.Newport||!a.params.hedgerView)throw new Error("Parameters not supported on version");const i=q(this.lyra,a.contractAddresses,a.lyra.version,C.PoolHedger),r={...a.params.hedgerView.futuresPoolHedgerParams,...t},p=a.lyra.network===U.Optimism?i.interface.encodeFunctionData("setFuturesPoolHedgerParams",[r]):i.interface.encodeFunctionData("setFuturesPoolHedgerParams",[r]),s=L(this.lyra.provider,this.lyra.provider.network.chainId,i.address,a.params.owner,p);return s.gasLimit=h.from(1e7),{params:r,tx:s}}async setCircuitBreakerParams(e,t){const a=await this.lyra.market(e);if(a.lyra.version!==v.Newport||!("cbParams"in a.__data.marketParameters))throw new Error("Parameters not supported on version");const i={...a.__data.marketParameters.cbParams,...t},r=q(this.lyra,a.contractAddresses,a.lyra.version,C.LiquidityPool),p=await a.owner(),s=r.interface.encodeFunctionData("setCircuitBreakerParameters",[i]),u=L(this.lyra.provider,this.lyra.provider.network.chainId,r.address,p,s);return u.gasLimit=h.from(1e7),{params:i,tx:u}}async processDepositQueue(e,t){const a=await this.lyra.market(e),i=q(this.lyra,a.contractAddresses,this.lyra.version,C.LiquidityPool),r=await i.owner(),p=i.interface.encodeFunctionData("processDepositQueue",[t]),s=L(this.lyra.provider,this.lyra.provider.network.chainId,i.address,r,p);return s.gasLimit=N,s}async processWithdrawalQueue(e,t){const a=await this.lyra.market(e),i=q(this.lyra,a.contractAddresses,this.lyra.version,C.LiquidityPool),r=await i.owner(),p=i.interface.encodeFunctionData("processWithdrawalQueue",[t]),s=L(this.lyra.provider,this.lyra.provider.network.chainId,i.address,r,p);return s.gasLimit=N,s}}const o=h.from(0),b=h.from(10).pow(18),it=h.from(1).mul(b),Ue=h.from(2).pow(256).sub(1),oe="0x0000000000000000000000000000000000000000";var U;(function(n){n.Arbitrum="arbitrum",n.Optimism="optimism"})(U||(U={}));const Di=z`
  query lpuserLiquidities($user: String!, $pool: String!) {
    lpuserLiquidities(where: { 
      user: $user,
      pool: $pool
    }) {
      ${hi}
    }
    circuitBreakers(first: 1, where: {
      pool: $pool
    }) {
      ${tn}
    }
  }
`;async function Ei(n,e,t){var a,i;const{data:r}=await me(n.subgraphClient,{query:Di,variables:{user:e.toLowerCase(),pool:t.contractAddresses.liquidityPool.toLowerCase()}}),p=r==null?void 0:r.lpuserLiquidities[0],s=r==null?void 0:r.circuitBreakers[0],u=s?{timestamp:s.cbTimestamp,reason:s.ivVarianceCrossed||s.skewVarianceCrossed?be.Volatility:s.liquidityVarianceCrossed?be.Liquidity:be.Keeper}:null;if(!p)return{circuitBreaker:u,events:[]};const y=(a=p.pendingDepositsAndWithdrawals.map(d=>({depositor:e,beneficiary:e,queueId:parseInt(d.queueID,10),amountDeposited:h.from(d.pendingAmount),totalQueuedDeposits:o,timestamp:d.timestamp,transactionHash:d.transactionHash})))!==null&&a!==void 0?a:[],l=(i=p.depositsAndWithdrawals.map(d=>({caller:e,beneficiary:e,queueId:parseInt(d.queueID,10),amountDeposited:h.from(d.quoteAmount),tokenPrice:h.from(d.tokenPrice),tokensReceived:h.from(d.tokenAmount),timestamp:d.timestamp,transactionHash:d.transactionHash})))!==null&&i!==void 0?i:[],m=y.reduce((d,k)=>({...d,[k.queueId]:k}),{}),c=l.reduce((d,k)=>k.queueId===0?d:{...d,[k.queueId]:k},{}),f=l.map(d=>({processed:d,isProcessed:!0,isInstant:!0})),T=Object.entries(m).map(([d,k])=>{const w=c[parseInt(d,10)];return w?{queued:k,processed:w,isProcessed:!0,isInstant:!1}:{queued:k,isProcessed:!1,isInstant:!1}});return{events:f.concat(T).sort((d,k)=>{const w=k.isProcessed?k.processed.timestamp:k.queued.timestamp,g=d.isProcessed?d.processed.timestamp:d.queued.timestamp;return w-g}),circuitBreaker:u}}var be;(function(n){n.Liquidity="Liquidity",n.Volatility="Volatility",n.Keeper="Keeper"})(be||(be={}));class Ve{constructor(e,t){this.lyra=e,this.__market=t.market,this.__events=t.events;const a=t.events.isInstant?null:t.events.queued,i=t.events.isProcessed?t.events.processed:null,r=t.events.isInstant?i:t.events.queued;this.transactionHash=r.transactionHash,this.queueId=r.queueId,this.beneficiary=r.beneficiary,this.value=r.amountDeposited,this.tokenPriceAtDeposit=i==null?void 0:i.tokenPrice,this.balance=i==null?void 0:i.tokensReceived,this.isPending=!i,this.depositRequestedTimestamp=r.timestamp,this.depositTimestamp=i?i.timestamp:a?a.timestamp+t.market.params.depositDelay:0,this.timeToDeposit=Math.max(0,this.depositTimestamp-t.market.block.timestamp),this.delayReason=this.timeToDeposit===0&&this.isPending&&t.circuitBreaker&&t.circuitBreaker.timestamp>t.market.block.timestamp?t.circuitBreaker.reason:null}static async getByOwner(e,t,a){const[{events:i,circuitBreaker:r},p]=await Promise.all([Ei(e,a,t),t.liquidity()]);return i.map(u=>new Ve(e,{market:t,events:u,circuitBreaker:r,marketLiquidity:p}))}static approve(e,t,a){const i=q(e.lyra,e.contractAddresses,e.lyra.version,C.LiquidityPool),r=Re(e.lyra.provider,e.quoteToken.address),p=r.interface.encodeFunctionData("approve",[i.address,a]);return L(e.lyra.provider,e.lyra.provider.network.chainId,r.address,t,p)}static initiateDeposit(e,t,a){const i=q(e.lyra,e.contractAddresses,e.lyra.version,C.LiquidityPool),r=i.interface.encodeFunctionData("initiateDeposit",[t,a]);return L(e.lyra.provider,e.lyra.provider.network.chainId,i.address,t,r)}market(){return this.__market}}const _i=z`
  query lpuserLiquidities($user: String!, $pool: String!) {
    lpuserLiquidities(where: { 
      user: $user,
      pool: $pool
    }) {
      ${bi}
    }
    circuitBreakers(first: 1, where: {
      pool: $pool
    }) {
      ${tn}
    }
  }
`;async function Ri(n,e,t){var a,i;const{data:r}=await me(n.subgraphClient,{query:_i,variables:{user:e.toLowerCase(),pool:t.contractAddresses.liquidityPool.toLowerCase()}}),p=r==null?void 0:r.lpuserLiquidities[0],s=r==null?void 0:r.circuitBreakers[0],u=s?{timestamp:s.cbTimestamp,reason:s.ivVarianceCrossed||s.skewVarianceCrossed?be.Volatility:s.liquidityVarianceCrossed?be.Liquidity:be.Keeper}:null;if(!p)return{circuitBreaker:u,events:[]};const y=(a=p.pendingDepositsAndWithdrawals.map(d=>({withdrawer:e,beneficiary:e,queueId:parseInt(d.queueID,10),amountWithdrawn:h.from(d.pendingAmount),totalQueuedWithdrawals:o,timestamp:d.timestamp,transactionHash:d.transactionHash})))!==null&&a!==void 0?a:[],l=(i=p.depositsAndWithdrawals.map(d=>({caller:e,beneficiary:e,queueId:parseInt(d.queueID,10),amountWithdrawn:h.from(d.quoteAmount),tokenPrice:h.from(d.tokenPrice),quoteReceived:h.from(d.tokenAmount),totalQueuedWithdrawals:o,timestamp:d.timestamp,transactionHash:d.transactionHash})))!==null&&i!==void 0?i:[],m=y.reduce((d,k)=>({...d,[k.queueId]:k}),{}),c=l.reduce((d,k)=>k.queueId===0?d:{...d,[k.queueId]:k},{}),f=l.map(d=>({processed:d,isProcessed:!0,isInstant:!0})),T=Object.entries(m).map(([d,k])=>{const w=c[parseInt(d,10)];return w?{queued:k,processed:w,isProcessed:!0,isInstant:!1}:{queued:k,isProcessed:!1,isInstant:!1}});return{events:f.concat(T).sort((d,k)=>{const w=k.isProcessed?k.processed.timestamp:k.queued.timestamp,g=d.isProcessed?d.processed.timestamp:d.queued.timestamp;return w-g}),circuitBreaker:u}}class Ne{constructor(e,t){var a;this.lyra=e,this.__market=t.market;const i=t.events.isInstant?null:t.events.queued,r=t.events.isProcessed?t.events.processed:null,p=i??r;if(!p)throw new Error("No queued or processed event for LiquidityWithdrawal");this.queueId=p.queueId,this.beneficiary=p.beneficiary,this.balance=(a=i==null?void 0:i.amountWithdrawn)!==null&&a!==void 0?a:o,this.tokenPriceAtWithdraw=r==null?void 0:r.tokenPrice,this.value=r==null?void 0:r.amountWithdrawn,this.isPending=!r,this.withdrawalRequestedTimestamp=p.timestamp,this.withdrawalTimestamp=r?r.timestamp:i?i.timestamp+t.market.params.withdrawalDelay:0,this.timeToWithdrawal=Math.max(0,this.withdrawalTimestamp-t.market.block.timestamp),this.delayReason=this.timeToWithdrawal===0&&this.isPending&&t.circuitBreaker&&t.circuitBreaker.timestamp>t.market.block.timestamp?t.circuitBreaker.reason:null}static async getByOwner(e,t,a){const[{events:i,circuitBreaker:r},p]=await Promise.all([Ri(e,a,t),t.liquidity()]);return i.map(u=>new Ne(e,{market:t,events:u,circuitBreaker:r,marketLiquidity:p}))}static initiateWithdraw(e,t,a){const i=q(e.lyra,e.contractAddresses,e.lyra.version,C.LiquidityPool),r=i.interface.encodeFunctionData("initiateWithdraw",[t,a]);return L(e.lyra.provider,e.lyra.provider.network.chainId,i.address,t,r)}market(){return this.__market}}function Ni(n){const e=.254829592,t=-.284496736,a=1.421413741,i=-1.453152027,r=1.061405429,p=.3275911;let s=1;n<0&&(s=-1),n=Math.abs(n);const u=1/(1+p*n),y=1-((((r*u+i)*u+a)*u+t)*u+e)*u*Math.exp(-n*n);return s*y}function fe(n){return(1-Ni(-n/Math.sqrt(2)))/2}function Je(n){return Math.exp(-n*n/2)/Math.sqrt(2*Math.PI)}function we(n,e,t,a,i){return(Math.log(t/a)+(i+e*e/2)*n)/(e*Math.sqrt(n))}function Fe(n,e,t,a,i){return we(n,e,t,a,i)-e*Math.sqrt(n)}function nn(n,e,t){return n*Math.exp(-e*t)}function Gi(n,e,t,a,i){return fe(we(n,e,t,a,i))*t-fe(Fe(n,e,t,a,i))*nn(a,i,n)}function Hi(n,e,t,a,i){return fe(-Fe(n,e,t,a,i))*nn(a,i,n)-fe(-we(n,e,t,a,i))*t}function rt(n,e,t,a,i,r){return r?Gi(n,e,t,a,i):Hi(n,e,t,a,i)}function an(n,e,t,a,i){return fe(we(n,e,t,a,i))}function Ui(n,e,t,a,i){return an(n,e,t,a,i)-1}function Qe(n,e,t,a,i,r){return r?an(n,e,t,a,i):Ui(n,e,t,a,i)}function Pt(n,e,t,a,i){return t*Je(we(n,e,t,a,i))*Math.sqrt(n)/100}function rn(n,e,t,a,i){return Je(we(n,e,t,a,i))/(t*e*Math.sqrt(n))}function pn(n,e,t,a,i,r){return r?(-t*Je(we(n,e,t,a,i))*e/(2*Math.sqrt(n))-i*a*Math.exp(-i*n)*fe(Fe(n,e,t,a,i)))/365:(-t*Je(we(n,e,t,a,i))*e/(2*Math.sqrt(n))+i*a*Math.exp(-i*n)*fe(-Fe(n,e,t,a,i)))/365}function sn(n,e,t,a,i,r){return r?a*n*Math.exp(-i*n)*fe(Fe(n,e,t,a,i))/100:-a*n*Math.exp(-i*n)*fe(-Fe(n,e,t,a,i))/100}function gt(n,e,t,a){return n&&!a?e.add(t):e.sub(t)}function et(n,e){return n.mul(b).div(e).sub(b).abs()}var Z;(function(n){n[n.MIN_PRICE=0]="MIN_PRICE",n[n.MAX_PRICE=1]="MAX_PRICE",n[n.REFERENCE=2]="REFERENCE",n[n.FORCE_MIN=3]="FORCE_MIN",n[n.FORCE_MAX=4]="FORCE_MAX"})(Z||(Z={}));function un(n,e){const t=n.params.referenceSpotPrice;if(n.lyra.version===v.Avalon||!n.params.adapterView||e===Z.REFERENCE||n.lyra.network===U.Optimism)return t;const a=n.params.adapterView;if(!a)throw new Error("Mismatching adapter view and getQuoteSpotPrice");const{gmxMaxPrice:i,gmxMinPrice:r,marketPricingParams:p}=a,{gmxUsageThreshold:s}=p,u=et(r,t),y=et(i,t);let l=!1;return(u.gt(s)||y.gt(s))&&(l=!0),e==Z.FORCE_MIN||e==Z.MIN_PRICE?l&&r.gt(t)?t:r:l&&i.lt(t)?t:i}function Qi(n,e,t,a){return t&&n||!t&&!n?a?Z.MAX_PRICE:e?Z.FORCE_MIN:Z.MIN_PRICE:a?Z.MIN_PRICE:e?Z.FORCE_MAX:Z.MAX_PRICE}function ve(n){return n.timeToExpiry/(60*60*24*365)}function H(n,e=18){if(isNaN(n))throw new Error("Passed NaN to BigNumber converter");return qn(n.toFixed(18),e)}function on(n,e,t,a,i){const r=a.hedgeCap,p=e.mul(n.delta).div(b).mul(i?1:-1),s=t.add(p);return s.abs().gt(r)?s.lt(0)?r.mul(-1):r:s}function Wi(n,e,t,a,i,r,p){const{currentHedge:s,gmxView:u,futuresPoolHedgerParams:y}=r;if(!y.vaultLiquidityCheckEnabled)return!0;const l=on(t,a,e,p,i),m=l.abs(),c=s.abs();if(!y||m.lte(c)||i&&l.gte(0)||!i&&l.lte(0))return!0;let f;if(l.gt(0)){const{remainingLongDollars:k}=u;f=k}else{const{remainingShortDollars:k}=u;f=k}const T=f.div(n).mul(b),d=m.sub(c);return!T.lt(d.mul(y.marketDepthBuffer).div(b))}const Rt=(n,e,t,a,i)=>(n.lt(0)?a:i).add(n.abs().mul(t).div(b)).lt(e);function $i(n,e,t,a,i,r,p){const{marketSuspended:s,hedgedDelta:u,futuresPoolHedgerParams:y,fundingRate:l,shortInterest:m,longInterest:c,maxTotalMarketSize:f,curveRateStable:T}=r;if(s)return!1;const d=on(t,a,e,p,i),k=d.abs(),w=u.abs();if(k.lte(w)&&d.mul(u).gte(0)||i&&d.gte(0)||!i&&d.lte(0))return!0;if(!T)return!1;if(k.gt(u.abs())){const S=y.maximumFundingRate;if(l.abs().gt(S))return!1}const g=y.marketDepthBuffer;if(d.mul(u).gt(0)){const S=d.sub(u);if(!Rt(S,f,g,m,c))return!1}else if(!Rt(d,f,g,m,c))return!1;return!0}function zi(n,e,t,a,i,r,p,s){switch(s){case U.Arbitrum:return Wi(n,e,t,a,i,r,p);case U.Optimism:return $i(n,e,t,a,i,r,p)}}function re(n){switch(n.chain){case A.Arbitrum:case A.Optimism:return!1;case A.ArbitrumGoerli:case A.OptimismGoerli:return!0}}function Ki(n,e,t,a,i,r,p,s,u,y,l,m){const c=n.market(),f=n.board(),T=n.strike(),d=ve(f);if(d==0)return _.Expired;if(t.lte(0))return _.EmptySize;if(f.block.timestamp+c.params.tradingCutoff>f.expiryTimestamp&&!u)return _.TradingCutoff;const w=T.strikePrice,g=c.params.rateAndCarry,S=H(Qe(d,M(i),M(e),M(w),M(g),!0)),P=u?c.params.minForceCloseDelta:c.params.minDelta;if(!u&&(S.lte(P)||S.gte(it.sub(P))))return _.DeltaOutOfRange;const x=u?c.params.absMinSkew:c.params.minSkew,O=u?c.params.absMaxSkew:c.params.maxSkew;if(s){if(p.gt(c.params.maxBaseIv))return _.IVTooHigh;if(r.gt(O))return _.SkewTooHigh;if(i.gt(c.params.maxVol))return _.VolTooHigh}else{if(p.lt(c.params.minBaseIv))return _.IVTooLow;if(r.lt(x))return _.SkewTooLow;if(i.lt(c.params.minVol))return _.VolTooLow}const{freeLiquidity:V}=c.params;if(!u&&l&&(s?n.isCall?V.lt(t.mul(e).div(b)):V.lt(t.mul(w).div(b)):V.lt(a)))return _.InsufficientLiquidity;const B=n.market().params.hedgerView,I=n.market().params.poolHedgerParams,F=n.delta.lt(0)&&s||n.delta.gt(0)&&!s;if(B&&I&&l&&!re(n.lyra)&&!zi(un(c,y),c.params.netDelta,n,t,F,B,I,m))return _.UnableToHedgeDelta;if(c.lyra.network===U.Arbitrum){const{adapterView:G}=n.market().params,R=G;if(R&&!u&&(y===Z.MAX_PRICE||y===Z.MIN_PRICE)){const{gmxMaxPrice:te,gmxMinPrice:ne}=R,pe=et(ne,c.params.referenceSpotPrice),se=et(te,c.params.referenceSpotPrice),E=R.marketPricingParams.priceVarianceCBPercent;if(pe.gt(E)||se.gt(E))return _.PriceVarianceTooHigh}}return null}function yn(n,e,t,a){const i=ve(n.board()),r=n.market().params.rateAndCarry,p=t.mul(a).div(b),s=n.strike().strikePrice;return{price:H(rt(i,M(p),M(e),M(s),M(r),n.isCall)),volTraded:p}}const ji=(n,e)=>{const t=n.isCall?e.sub(n.strike().strikePrice):n.strike().strikePrice.sub(e);return t.gt(0)?t:o};function Xi(n,e,t,a,i){const r=a.mul(i).div(b),p=ve(n.board()),s=n.market(),u=s.params.rateAndCarry,y=n.block.timestamp+s.params.tradingCutoff>n.board().expiryTimestamp,l=n.board().params.forceCloseGwavIv,m=n.strike().params.forceCloseSkew,c=n.strike().strikePrice,f=H(Qe(p,M(r),M(t),M(c),M(u),!0)),T=s.params.minForceCloseDelta,d=f.lte(T)||f.gte(it.sub(T));if(y||d){let k=l.mul(m).div(b);e?(k=k.gt(r)?k:r,k=y?k.mul(s.params.shortPostCutoffVolShock).div(b):k.mul(s.params.shortVolShock).div(b)):(k=k.lt(r)?k:r,k=y?k.mul(s.params.longPostCutoffVolShock).div(b):k.mul(s.params.longVolShock).div(b));let w=H(rt(p,M(k),M(t),M(c),M(u),n.isCall));if(e){const g=ji(n,t),S=t.mul(s.params.shortSpotMin).div(b),P=g.add(S);w=w.gt(P)?w:P}return{volTraded:k,price:w}}else return yn(n,t,a,i)}function Yi(n,e,t,a,i){const r=n.market(),s=a.mul(b).div(r.params.standardSize).div(100),u=s.mul(r.params.skewAdjustmentFactor).div(b),y=i?e.add(s):e.sub(s),l=i?t.add(u):t.sub(u);return{newBaseIv:y,newSkew:l}}function ln(n,e,t,a){if(n<=e)return a;{const i=H(n-e).mul(b).div(t-e).div(b);return a.mul(b.add(i)).div(b)}}function Zi(n,e,t){const a=n.market();return ln(n.timeToExpiry,a.params.optionPriceFee1xPoint,a.params.optionPriceFee2xPoint,a.params.optionPriceFeeCoefficient).mul(t).div(b).mul(e).div(b)}function Ji(n,e,t){const a=n.market();return ln(n.timeToExpiry,a.params.spotPriceFee1xPoint,a.params.spotPriceFee2xPoint,a.params.spotPriceFeeCoefficient).mul(e).div(b).mul(t).div(b)}function er(n,e,t,a,i,r,p){const s=n.market(),u=p?s.params.forceCloseVarianceFeeCoefficient:s.params.defaultVarianceFeeCoefficient,l=n.board().params.varianceGwavIv.sub(i).abs(),m=n.market().params.rateAndCarry,c=ve(n.board()),f=H(Pt(c,M(t),M(e),M(n.strike().strikePrice),M(m))*100);if(u.isZero())return{varianceFeeCoefficient:o,vega:f,vegaCoefficient:o,skew:a,skewCoefficient:o,ivVariance:l,ivVarianceCoefficient:o,varianceFee:o};const T=s.params.minimumStaticVega.add(f.mul(s.params.vegaCoefficient).div(b)),d=a.sub(s.params.referenceSkew).abs(),k=s.params.minimumStaticSkewAdjustment.add(d.mul(s.params.skewAdjustmentCoefficient).div(b)),w=s.params.minimumStaticIvVariance.add(l.mul(s.params.ivVarianceCoefficient).div(b)),g=u.mul(T).div(b).mul(k).div(b).mul(w).div(b).mul(r).div(b);return{varianceFeeCoefficient:u,vega:f,vegaCoefficient:T,skew:a,skewCoefficient:k,ivVariance:l,ivVarianceCoefficient:w,varianceFee:g}}function tr(n,e,t,a,i){const r=n.params.NAV;if(e.abs().gte(t.abs()))return{preTradeAmmNetStdVega:e,postTradeAmmNetStdVega:t,vegaUtil:o,volTraded:a,NAV:r,vegaUtilFee:o};const p=r.gt(0)?a.mul(t.abs()).div(r):o,s=n.params.vegaFeeCoefficient.mul(p).div(b).mul(i).div(b),u=s.lt(0)?o:s;return{preTradeAmmNetStdVega:e,postTradeAmmNetStdVega:t,vegaUtil:p,volTraded:a,NAV:r,vegaUtilFee:u}}function nr({option:n,isBuy:e,size:t,spotPrice:a,baseIv:i,skew:r,netStdVega:p,preTradeAmmNetStdVega:s,isForceClose:u}){const{newBaseIv:y,newSkew:l}=Yi(n,i,r,t,e),m=yn(n,a,y,l),{price:c,volTraded:f}=u?Xi(n,e,a,y,l):m,T=m.price,d=c.sub(T).mul(t).div(b).mul(e?1:-1),k=Zi(n.board(),c,t),w=Ji(n.board(),t,a),g=p.mul(t).mul(e?1:-1).div(b),S=s.add(g),P=tr(n.market(),s,S,f,t),x=u?i:y,O=er(n,a,f,l,x,t,u),V=k.add(w).add(P.vegaUtilFee).add(O.varianceFee),B=c.mul(t).div(b);return{premium:e?B.add(V):V.lt(B)?B.sub(V):o,optionPriceFee:k,spotPriceFee:w,vegaUtilFee:P,varianceFee:O,forceClosePenalty:d,postTradeAmmNetStdVega:S,volTraded:f,newSkew:l,newBaseIv:x,spotPrice:a}}var _;(function(n){n.EmptySize="EmptySize",n.Expired="Expired",n.TradingCutoff="TradingCutoff",n.InsufficientLiquidity="InsufficientLiquidity",n.DeltaOutOfRange="DeltaOutOfRange",n.VolTooHigh="VolTooHigh",n.VolTooLow="VolTooLow",n.IVTooHigh="IVTooHigh",n.IVTooLow="IVTooLow",n.SkewTooHigh="SkewTooHigh",n.SkewTooLow="SkewTooLow",n.UnableToHedgeDelta="UnableToHedgeDelta",n.PriceVarianceTooHigh="PriceVarianceTooHigh"})(_||(_={}));class Be{constructor(e,t,a,i,r){this.__source=X.ContractCall,this.lyra=e,this.__option=t,this.isBuy=a,this.size=i,this.marketName=t.market().name,this.marketAddress=t.market().address,this.expiryTimestamp=t.board().expiryTimestamp,this.boardId=t.board().id,this.strikePrice=t.strike().strikePrice,this.strikeId=t.strike().id,this.isCall=t.isCall;const p=this.getFields(t,a,i,r);this.pricePerOption=p.pricePerOption,this.premium=p.premium,this.fee=p.fee,this.feeComponents=p.feeComponents,this.iv=p.iv,this.fairIv=p.fairIv,this.greeks=p.greeks,this.forceClosePenalty=p.forceClosePenalty,this.isForceClose=p.isForceClose,this.isDisabled=!!p.disabledReason,this.disabledReason=p.disabledReason,this.breakEven=p.breakEven,this.toBreakEven=p.toBreakEven,this.spotPrice=p.spotPrice,this.iterations=p.iterations}getDisabledFields(e,t,a){const i=e.strike().skew,r=e.board().baseIv,p=i.mul(r).div(b);return{pricePerOption:o,premium:o,iv:p,fairIv:p,fee:o,feeComponents:{optionPriceFee:o,spotPriceFee:o,vegaUtilFee:o,varianceFee:o},greeks:{delta:e.delta,vega:e.strike().vega,gamma:e.strike().gamma,theta:e.theta,rho:e.rho},isForceClose:!1,forceClosePenalty:o,isDisabled:!!a,disabledReason:a,breakEven:o,toBreakEven:o,spotPrice:t,iterations:[]}}getFields(e,t,a,i){var r,p,s,u;const y=(r=i==null?void 0:i.iterations)!==null&&r!==void 0?r:Qt;if(y<1)throw new Error("Iterations must be greater than or equal to 1");const l=(p=i==null?void 0:i.isForceClose)!==null&&p!==void 0?p:!1,m=(s=i==null?void 0:i.isOpen)!==null&&s!==void 0?s:!0,c=e.board(),f=e.strike(),T=e.market(),d=e.isCall,k=(u=i==null?void 0:i.isLong)!==null&&u!==void 0?u:t;let w=c.baseIv,g=f.skew,S=T.params.netStdVega.mul(-1);const P=ve(e.board());if(P===0)return this.getDisabledFields(e,T.spotPrice,_.Expired);const x=a.div(y),O=[],V=f.params.cachedStdVega.mul(-1),B=Qi(d,l,k,m),I=un(T,B);for(let j=0;j<y;j++){const $=nr({option:e,isBuy:t,size:x,spotPrice:I,baseIv:w,skew:g,netStdVega:V,preTradeAmmNetStdVega:S,isForceClose:l});O.push($),w=$.newBaseIv,g=$.newSkew,S=$.postTradeAmmNetStdVega}const F=w.mul(g).div(b),G=e.strike().strikePrice,R=e.market().params.rateAndCarry,te=H(Qe(P,M(F),M(I),M(G),M(R),d)),ne=H(Pt(P,M(F),M(I),M(G),M(R))),pe=F.gt(0)&&I.gt(0)?H(rn(P,M(F),M(I),M(G),M(R))):o,se=F.gt(0)&&I.gt(0)?H(pn(P,M(F),M(I),M(G),M(R),d)):o,E=F.gt(0)&&I.gt(0)?H(sn(P,M(F),M(I),M(G),M(R),d)):o,de=O.reduce((j,$)=>j.add($.premium),o),ue=Ki(e,I,a,de,F,g,w,t,l,B,m,this.lyra.network);if(ue)switch(ue){case _.EmptySize:case _.Expired:case _.IVTooHigh:case _.IVTooLow:case _.SkewTooHigh:case _.SkewTooLow:case _.VolTooHigh:case _.VolTooLow:return this.getDisabledFields(e,I,ue)}const Ee=de.mul(b).div(a),Ce=gt(e.isCall,f.strikePrice,de.mul(b).div(a)),xt=Ce.sub(I),xn=this.isCall?I.gt(Ce)?o:xt:I.lt(Ce)?o:xt,In=O.reduce((j,$)=>j.add($.forceClosePenalty),o),It=O.reduce((j,$)=>j.add($.optionPriceFee),o),At=O.reduce((j,$)=>j.add($.spotPriceFee),o),Vt=O.reduce((j,$)=>j.add($.vegaUtilFee.vegaUtilFee),o),qt=O.reduce((j,$)=>j.add($.varianceFee.varianceFee),o),st=It.add(At).add(Vt).add(qt),Ft=st.gt(0)&&ne.gt(0)?st.mul(b).div(ne).div(100):o,An=t?F.add(Ft):F.sub(Ft);return{pricePerOption:Ee,premium:de,fee:st,iv:An,fairIv:F,feeComponents:{optionPriceFee:It,spotPriceFee:At,vegaUtilFee:Vt,varianceFee:qt},greeks:{delta:te,vega:ne,gamma:pe,rho:E,theta:se},isForceClose:l,forceClosePenalty:In,isDisabled:!!ue,disabledReason:ue,breakEven:Ce,toBreakEven:xn,spotPrice:I,iterations:O}}static async get(e,t,a,i,r,p,s){const u=await e.option(t,a,i);return Be.getSync(e,u,r,p,s)}static getSync(e,t,a,i,r){return new Be(e,t,a,i,r)}market(){return this.__option.market()}board(){return this.__option.board()}strike(){return this.__option.strike()}option(){return this.__option}}function mn(n,e,t){const a=Math.max(e-n,0);for(;t.length>1;){const i=t.shift();if(!(Math.ceil(a/i)>bt))return i}return t[0]}const ar=2147483647;async function dn(n,e,t,a,i){var r;let p=!1,s=[],u=t.min;const y=(r=t.limit)!==null&&r!==void 0?r:bt;for(;!p;){const l=[];if(i){const{batch:f,increment:T}=i;for(let d=0;d<f;d++)l.push({...t,min:u,max:Math.min(u+T-1,ar)}),u+=T}else l.push({...t,limit:y,min:u});const m=(await Promise.all(l.map(async f=>{const{data:T}=await me(n.subgraphClient,{query:e,variables:f});return T}))).filter(f=>f!=null).map(f=>Object.values(f)[0]),c=m[m.length-1];s=[...s,...m.flat()],!c||!c.length||c.length<y?p=!0:u=c[c.length-1][a]+1}return s}async function Le(n,e,t,a){var i,r,p;const s=(i=a==null?void 0:a.startTimestamp)!==null&&i!==void 0?i:zt,u=(r=a==null?void 0:a.endTimestamp)!==null&&r!==void 0?r:Kt,y=(p=a==null?void 0:a.period)!==null&&p!==void 0?p:mn(s,u,[Y.OneHour,Y.OneDay]);return dn(n,e,{...t,min:s,max:u,period:y},"timestamp")}const ir=z`
  query optionPriceAndGreeksSnapshots($optionId: String!, $min: Int!, $max: Int!, $period: Int!) {
    optionPriceAndGreeksSnapshots(
      first: 1000
      orderBy: timestamp
      orderDirection: asc
      where: { option: $optionId, timestamp_gte: $min, timestamp_lte: $max, period_gte: $period }
    ) {
      ${Ti}
    }
  }
`;async function rr(n,e,t){var a;const i=e.board(),r=e.block.timestamp,p=Math.min(i.expiryTimestamp,(a=t==null?void 0:t.endTimestamp)!==null&&a!==void 0?a:r),u=(await Le(n,ir,{optionId:`${e.market().address.toLowerCase()}-${e.strike().id}-${e.isCall?"call":"put"}`},{...t,endTimestamp:p})).map(l=>({optionPrice:h.from(l.optionPrice),blockNumber:l.blockNumber,timestamp:l.timestamp})),y={optionPrice:e.price,blockNumber:e.block.number,timestamp:p};return[...u,y].filter(l=>l.optionPrice.gt(0))}const pr=z`
  query optionVolumeQuery($optionId: String!, $min: Int!, $max: Int!, $period: Int!) {
    optionVolumeSnapshots(
      first: 1000
      orderBy: timestamp
      orderDirection: asc
      where: { option: $optionId, timestamp_gte: $min, timestamp_lte: $max, period: $period }
    ) {
      ${fi}
    }
  }
`;async function sr(n,e,t){var a;const i=e.board(),r=Math.min(i.expiryTimestamp,(a=t==null?void 0:t.endTimestamp)!==null&&a!==void 0?a:Kt),p=`${e.market().address.toLowerCase()}-${e.strike().id}-${e.isCall?"call":"put"}`;return(await Le(n,pr,{optionId:p},{...t,period:Y.OneHour,endTimestamp:r})).map(u=>({notionalVolume:h.from(u.notionalVolume),premiumVolume:h.from(u.premiumVolume),timestamp:u.timestamp}))}class Pe{constructor(e,t,a,i){this.__source=X.ContractCall,this.lyra=e,this.__strike=t,this.block=i,this.isCall=a;const r=Pe.getFields(t,a);this.price=r.price,this.longOpenInterest=r.longOpenInterest,this.shortOpenInterest=r.shortOpenInterest,this.delta=r.delta,this.rho=r.rho,this.theta=r.theta,this.isInTheMoney=r.isInTheMoney}static getFields(e,t){var a;const i=e.market(),r=ve(e.board()),p=(a=e.board().spotPriceAtExpiry)!==null&&a!==void 0?a:i.spotPrice,s=t?p.gt(e.strikePrice):p.lt(e.strikePrice);if(r===0)return{longOpenInterest:o,shortOpenInterest:o,price:o,delta:o,theta:o,rho:o,isInTheMoney:s};{const u=t?e.longCallOpenInterest:e.longPutOpenInterest,y=t?e.shortCallOpenInterest:e.shortPutOpenInterest,l=M(p),m=M(e.strikePrice),c=M(i.params.rateAndCarry),f=M(e.iv),T=H(rt(r,f,l,m,c,t)),d=f>0?H(Qe(r,f,l,m,c,t)):o,k=f>0?H(pn(r,f,l,m,c,t)):o,w=f>0?H(sn(r,f,l,m,c,t)):o;return{longOpenInterest:u,shortOpenInterest:y,price:T,delta:d,theta:k,rho:w,isInTheMoney:s}}}static async get(e,t,a,i){return await(await Q.get(e,t)).option(a,i)}async refresh(){return Pe.get(this.lyra,this.market().address,this.strike().id,this.isCall)}market(){return this.__strike.market()}board(){return this.__strike.board()}strike(){return this.__strike}async quote(e,t,a){return(await this.refresh()).quoteSync(e,t,a)}quoteSync(e,t,a){return Be.getSync(this.lyra,this,e,t,a)}async quoteAll(e,t){return(await this.refresh()).quoteAllSync(e,t)}quoteAllSync(e,t){return{option:this,bid:this.quoteSync(!1,e,t),ask:this.quoteSync(!0,e,t)}}async tradingVolumeHistory(e){return await sr(this.lyra,this,e)}async priceHistory(e){return await rr(this.lyra,this,e)}}function ur(n,e){const t=Math.max(0,e-n);return t>ii?je:t>dt*3?Ie*2:t>dt?Ie:t>je*2?_e*12:t>je?_e*6:t>Ie*4?_e*3:_e}function or(n,e,t,a){if(!n.length)return[];const i=a??ur(e,t);let r=0;const p=[];let s=e;for(;s<t+i;s+=i){for(;r<n.length-1&&n[r].timestamp<=s;)r++;p.push({...n[r],timestamp:Math.min(s,t)})}return p}const yr=z`
  query strikeIVAndGreeksSnapshots($strikeId: String!, $min: Int!, $max: Int!, $period: Int!) {
    strikeIVAndGreeksSnapshots(
      first: 1000
      orderBy: timestamp
      orderDirection: asc
      where: { strike: $strikeId, timestamp_gte: $min, timestamp_lte: $max, period_gte: $period }
    ) {
      ${ki}
    }
  }
`;async function lr(n,e,t){var a;const i=e.board(),r=e.block.timestamp,p=Math.min(i.expiryTimestamp,(a=t==null?void 0:t.endTimestamp)!==null&&a!==void 0?a:r),s=`${e.market().address.toLowerCase()}-${e.id}`,u=await Le(n,yr,{strikeId:s},{...t,endTimestamp:p}),y=or(u.map(m=>({iv:M(h.from(m.iv)),timestamp:m.timestamp})),u[0].timestamp,p),l={iv:M(e.iv),timestamp:e.block.timestamp};return[...y,l].filter(m=>m.iv>0)}class ge{constructor(e,t,a,i){this.__source=X.ContractCall,this.lyra=e,this.__board=t;const r=ge.getFields(t,a);this.block=i,this.id=r.id,this.strikePrice=r.strikePrice,this.skew=r.skew,this.iv=r.iv,this.vega=r.vega,this.gamma=r.gamma,this.isDeltaInRange=r.isDeltaInRange,this.openInterest=r.openInterest,this.longCallOpenInterest=r.longCallOpenInterest,this.shortCallOpenInterest=r.shortCallOpenInterest,this.longPutOpenInterest=r.longPutOpenInterest,this.shortPutOpenInterest=r.shortPutOpenInterest,this.params=r.params}static getFields(e,t){const a=t.strikeId.toNumber(),i=t.strikePrice,r=ve(e),p=t.skew,s=e.baseIv.mul(t.skew).div(b),u={forceCloseSkew:t.forceCloseSkew,cachedStdVega:t.cachedGreeks.stdVega};if(r===0)return{id:a,strikePrice:i,skew:o,iv:o,vega:o,gamma:o,openInterest:o,longCallOpenInterest:o,shortCallOpenInterest:o,longPutOpenInterest:o,shortPutOpenInterest:o,isDeltaInRange:!1,params:u};{const y=M(s),l=M(e.market().spotPrice),m=M(i),c=M(e.market().params.rateAndCarry),f=y>0&&l>0?H(Pt(r,y,l,m,c)):o,T=y>0&&l>0?H(rn(r,y,l,m,c)):o,d=y>0&&l>0?H(Qe(r,y,l,m,c,!0)):o,k=e.market().params.minDelta,w=d.gte(k)&&d.lte(it.sub(k)),g=t.longCallOpenInterest,S=t.shortCallBaseOpenInterest.add(t.shortCallQuoteOpenInterest),P=t.longPutOpenInterest,x=t.shortPutOpenInterest,O=g.add(S).add(P).add(x);return{id:a,strikePrice:i,skew:p,iv:s,vega:f,gamma:T,isDeltaInRange:w,openInterest:O,longCallOpenInterest:g,shortCallOpenInterest:S,longPutOpenInterest:P,shortPutOpenInterest:x,params:u}}}static async get(e,t,a){return await(await Q.get(e,t)).strike(a)}async refresh(){return ge.get(this.lyra,this.market().address,this.id)}async ivHistory(e,t){return await lr(e,this,t)}market(){return this.__board.market()}board(){return this.__board}call(){return new Pe(this.lyra,this,!0,this.block)}put(){return new Pe(this.lyra,this,!1,this.block)}option(e){return e?this.call():this.put()}async quote(e,t,a,i){return(await this.refresh()).quoteSync(e,t,a,i)}quoteSync(e,t,a,i){return this.option(e).quoteSync(t,a,i)}async quoteAll(e,t){return(await this.refresh()).quoteAllSync(e,t)}quoteAllSync(e,t){const{bid:a,ask:i}=this.option(!0).quoteAllSync(e,t),{bid:r,ask:p}=this.option(!1).quoteAllSync(e,t);return{strike:this,callBid:a,callAsk:i,putBid:r,putAsk:p}}}class cn{constructor(e,t){this.lyra=e,this.__transferData=t,this.__source=t.source,this.transactionHash=t.transactionHash,this.blockNumber=t.blockNumber,this.from=t.from,this.to=t.to,this.marketAddress=t.marketAddress,this.positionId=t.positionId}static async getByHash(e,t){const{transfers:a}=await We(e,t);return a}}function vt(n){const e=h.from(n.amount),t=h.from(n.spotPrice),a=n.isBaseCollateral,i=a?e.mul(t).div(b):e,r=h.from(n.strike.strikePrice),p=parseInt(n.strike.strikeId),s=n.market.name.substring(1);return{owner:ee(n.trader),source:X.Subgraph,timestamp:n.timestamp,amount:e,value:i,positionId:n.position.positionId,blockNumber:n.blockNumber,isBaseCollateral:a,marketName:s,marketAddress:ee(n.market.id),isCall:n.option.isCall,strikeId:p,strikePrice:r,spotPrice:t,expiryTimestamp:n.board.expiryTimestamp,transactionHash:n.transactionHash,swap:n.externalSwapFees?{address:n.externalSwapAddress}:void 0}}function Ct(n){const e=h.from(n.spotPriceAtExpiry),t=h.from(n.position.strike.strikePrice),a=n.position.board.expiryTimestamp,i=h.from(n.size),r=n.position.isLong,p=n.position.isBaseCollateral,s=h.from(n.settleAmount),u=r?s:o,y=r?o:s,l=p?y.mul(e).div(b):y,c=n.position.option.isCall?e.gt(t):e.lt(t);return{source:X.Subgraph,blockNumber:n.blockNumber,positionId:n.position.positionId,timestamp:n.timestamp,size:i,spotPriceAtExpiry:e,transactionHash:n.transactionHash,owner:ee(n.owner),marketName:n.position.market.name.substring(1),marketAddress:ee(n.position.market.id),expiryTimestamp:a,isCall:n.position.option.isCall,strikePrice:t,isBaseCollateral:n.position.isBaseCollateral,isLong:n.position.isLong,settlement:u,isInTheMoney:c,returnedCollateralAmount:y,returnedCollateralValue:l}}function Mt(n){var e;const t=h.from(n.size),a=h.from(n.spotPrice),i=h.from(n.premium),r=h.from(n.spotPriceFee),p=h.from(n.optionPriceFee),s=h.from(n.vegaUtilFee),u=h.from(n.varianceFee),y=h.from((e=n.externalSwapFees)!==null&&e!==void 0?e:0),l=h.from(n.strike.strikePrice),m=n.position.isLong?void 0:n.setCollateralTo?h.from(n.setCollateralTo):o,c=n.position.isLong?void 0:n.position.isBaseCollateral,f=m?c?m.mul(a).div(b):m:void 0;return{timestamp:n.timestamp,source:X.Subgraph,positionId:n.position.positionId,blockNumber:n.blockNumber,marketName:n.market.name.substring(1),marketAddress:ee(n.market.id),isCall:n.option.isCall,strikeId:parseInt(n.strike.strikeId),strikePrice:l,expiryTimestamp:n.board.expiryTimestamp,transactionHash:n.transactionHash,trader:ee(n.trader),size:t,isOpen:n.isOpen,isBuy:n.isBuy,isLong:n.position.isLong,spotPrice:a,pricePerOption:i.mul(b).div(t),premium:i,fee:r.add(p).add(s).add(u).add(y),feeComponents:{spotPriceFee:r,optionPriceFee:p,vegaUtilFee:s,varianceFee:u},iv:h.from(n.newIv),baseIv:h.from(n.newBaseIv),skew:h.from(n.newSkew),volTraded:h.from(n.volTraded),collateralAmount:m,collateralValue:f,isBaseCollateral:c,isForceClose:n.isForceClose,isLiquidation:n.isLiquidation,swap:n.externalSwapFees?{fee:h.from(n.externalSwapFees),address:n.externalSwapAddress}:void 0}}function Ot(n){return{source:X.Subgraph,from:ee(n.oldOwner),to:ee(n.newOwner),transactionHash:n.transactionHash,blockNumber:n.blockNumber,positionId:n.position.positionId,marketAddress:ee(n.position.id.split("-")[0])}}const mr=z`
  query positionEvents($positionIds: [String!]!) {
    trades(first: 1000, orderBy: timestamp, orderDirection: asc, where: { position_in: $positionIds }) {
      ${jt}
    }
    collateralUpdates(first: 1000, orderBy: timestamp, orderDirection: asc, where: { position_in: $positionIds }) {
      ${Xt}
    }
    settles(first: 1000, orderBy: timestamp, orderDirection: asc, where: { position_in: $positionIds }) {
      ${Yt}
    }
    optionTransfers(first: 1000, orderBy: timestamp, orderDirection: asc, where: { position_in: $positionIds }) {
      ${Zt}
    }
  }
`;async function Tn(n,e){var t,a,i,r,p,s,u,y;const l=await me(n.subgraphClient,{query:mr,variables:{positionIds:e.map(({positionId:k,marketAddress:w})=>`${w.toLowerCase()}-${k}`)}}),m=e.reduce((k,{positionId:w,marketAddress:g})=>({...k,[g]:{[w]:{trades:[],collateralUpdates:[],transfers:[],settle:null},...k[g]}}),{}),c=(a=(t=l.data)===null||t===void 0?void 0:t.trades.map(Mt))!==null&&a!==void 0?a:[],f=(r=(i=l.data)===null||i===void 0?void 0:i.collateralUpdates.map(vt))!==null&&r!==void 0?r:[],T=(s=(p=l.data)===null||p===void 0?void 0:p.optionTransfers.map(Ot))!==null&&s!==void 0?s:[],d=(y=(u=l.data)===null||u===void 0?void 0:u.settles.map(Ct))!==null&&y!==void 0?y:[];return c.forEach(k=>{m[k.marketAddress][k.positionId].trades.push(k)}),f.forEach(k=>{m[k.marketAddress][k.positionId].collateralUpdates.push(k)}),T.forEach(k=>{m[k.marketAddress][k.positionId].transfers.push(k)}),d.forEach(k=>{m[k.marketAddress][k.positionId].settle=k}),m}function Me(n){return n.filter(e=>e!=null)}function fn(n,e){const t=new xe(oe,nt(v.Newport,C.OptionToken,e));return Me(n.map(i=>{try{const r=t.interface.parseLog(i);return r.name===Xe.PositionUpdated?{address:i.address,blockNumber:i.blockNumber,transactionHash:i.transactionHash,logIndex:i.logIndex,args:r.args}:null}catch{return null}}))}function kn(n,e){const t=new xe(oe,nt(v.Newport,C.OptionMarket,e));return Me(n.map(i=>{try{const r=t.interface.parseLog(i);return r.name===Xe.Trade&&r.args.tradeResults.length>0?{address:i.address,blockNumber:i.blockNumber,transactionHash:i.transactionHash,logIndex:i.logIndex,args:r.args}:null}catch{return null}}))}async function We(n,e){const t=typeof e=="string"?await n.provider.getTransactionReceipt(e):e,a=t.transactionHash,i=kn(t.logs,n.network),r=fn(t.logs,n.network);let p=null;if(i.length)p=i[0].address;else if(r.length){const T=await n.contractAddresses(),d=r[0].address,k=T.find(w=>w.optionToken===d);k&&(p=k.optionMarket)}if(!p)return{trades:[],collateralUpdates:[],transfers:[],settles:[]};const s=Array.from(new Set([...i.map(T=>T.args.positionId.toNumber()),...r.map(T=>T.args.positionId.toNumber())])),u=(await Tn(n,s.map(T=>({positionId:T,marketAddress:p}))))[p],y=Object.values(u).map(({trades:T,collateralUpdates:d,transfers:k,settle:w})=>{const g=T.find(F=>F.transactionHash===a),S=d.find(F=>F.transactionHash===a),P=k.find(F=>F.transactionHash===a),x=(w==null?void 0:w.transactionHash)===a?w:null,O=g?new De(n,g,S):null,V=S?new ce(n,S,g):null,B=P?new cn(n,P):null,I=x?new wn(n,x):null;return{trade:O,collateralUpdate:V,transfer:B,settle:I}}),l=Me(y.map(({trade:T})=>T)),m=Me(y.map(({collateralUpdate:T})=>T)),c=Me(y.map(({transfer:T})=>T)),f=Me(y.map(({settle:T})=>T));return{trades:l,collateralUpdates:m,transfers:c,settles:f}}async function $e(n){return await(await W(n,n.version,D.OptionMarketViewer)).getMarketAddresses()}const dr=10*1e3;function cr(n,e,t){var a,i;const r=(a=t==null?void 0:t.pollInterval)!==null&&a!==void 0?a:dr,p=(i=t==null?void 0:t.startBlockNumber)!==null&&i!==void 0?i:"latest";let s;const u=new xe(oe,nt(n.version,C.OptionMarket,n.network));return Promise.all([$e(n),n.provider.getBlock(p)]).then(async([y,l])=>{console.debug(`Polling from block ${l.number} every ${r}ms`);let m=l;const c=async()=>{var f;const T=await n.provider.getBlock("latest"),d=m.number+1,k=T.number;if(d>=k){setTimeout(c,r);return}console.debug(`Querying block range: ${d} to ${k} (${k-d} blocks)`);const w=await n.provider.send("eth_getLogs",[{address:y.map(g=>g.optionMarket),fromBlock:h.from(d).toHexString(),toBlock:h.from(k).toHexString(),topics:[[((f=u.filters.Trade().topics)!==null&&f!==void 0?f:[])[0]]]}]);w.length>0&&console.debug(`Found ${w.length} new trades`),await Promise.all(w.map(async g=>{(await De.getByHash(n,g.transactionHash)).map(P=>e(P))})),m=T,setTimeout(c,r)};s=setTimeout(c,r)}),{off:()=>{s&&clearTimeout(s)}}}function Ge(n){if(n.length===0)return o;let e=n[0].size,t=n[0].pricePerOption;for(const a of n.slice(1)){const i=e,{size:r,premium:p,isOpen:s}=a;e=s?e.add(r):e.sub(r),s&&e.gt(0)&&(t=t.mul(i).div(b).add(p).mul(b).div(e))}return t}function Tt(n,e){const t=n.trades();if(!t.length)return[];const a=t.findIndex(i=>i.transactionHash===e.transactionHash);if(a===-1)throw new Error("TradeEvent does not exist for position");return t.slice(0,a)}function hn(n,e){if(e.isOpen)return o;const t=e.size,a=e.isLong,i=e.pricePerOption,r=e instanceof De?e.prevAverageCostPerOption(n):e.prevAverageCostPerOption();return(a?i.sub(r):r.sub(i)).mul(t).div(b)}function bn(n,e){return Tt(n,e).reduce((i,r)=>r.isOpen?i.add(r.size):i.sub(r.size),o)}function Tr(n,e){const t=bn(n,e);return e.isOpen?t.add(e.size):t.sub(e.size)}class De{constructor(e,t,a){this.lyra=e,this.__tradeData=t,!t.isLong&&a&&(this.__collateralUpdateData=a),this.__source=t.source,this.positionId=t.positionId,this.marketName=t.marketName,this.marketAddress=t.marketAddress,this.timestamp=t.timestamp,this.blockNumber=t.blockNumber,this.transactionHash=t.transactionHash,this.trader=t.trader,this.size=t.size,this.isCall=t.isCall,this.isOpen=t.isOpen,this.isBuy=t.isBuy,this.isLong=t.isLong,this.strikeId=t.strikeId,this.strikePrice=t.strikePrice,this.expiryTimestamp=t.expiryTimestamp,this.spotPrice=t.spotPrice,this.pricePerOption=t.pricePerOption,this.premium=t.premium,this.fee=t.fee,this.feeComponents=t.feeComponents,this.swap=t.swap,this.iv=t.iv,this.skew=t.skew,this.baseIv=t.baseIv,this.volTraded=t.volTraded,this.collateralAmount=t.collateralAmount,this.collateralValue=t.collateralValue,this.isBaseCollateral=t.isBaseCollateral,this.isForceClose=t.isForceClose,this.isLiquidation=t.isLiquidation,this.liquidation=t.liquidation}static async getByHash(e,t){const{trades:a}=await We(e,t);return a}pnl(e){return hn(e,this)}newAverageCostPerOption(e){return Ge(Tt(e,this).concat([this]))}prevAverageCostPerOption(e){return Ge(Tt(e,this))}newSize(e){return Tr(e,this)}prevSize(e){return bn(e,this)}collateralUpdate(){return this.__collateralUpdateData?new ce(this.lyra,this.__collateralUpdateData,this.__tradeData):null}async position(){return await le.get(this.lyra,this.marketAddress,this.positionId)}async option(){return await Pe.get(this.lyra,this.marketAddress,this.strikeId,this.isCall)}async strike(){return await ge.get(this.lyra,this.marketAddress,this.strikeId)}async board(){return(await this.strike()).board()}async market(){return await Q.get(this.lyra,this.marketAddress)}static on(e,t,a){return cr(e,t,a)}}function He(n,e){var t,a,i,r;if(n.isLong||!n.collateral||!e.length)return o;if(!n.collateral.isBase)return it;const p=e[0],s=p instanceof ce?p.amount:(a=(t=p.collateral)===null||t===void 0?void 0:t.amount)!==null&&a!==void 0?a:o,u=p instanceof ce?p.spotPrice:p.market().spotPrice;let y=s,l=u;for(const m of e.slice(1)){const c=y;y=m instanceof ce?m.amount:(r=(i=m.collateral)===null||i===void 0?void 0:i.amount)!==null&&r!==void 0?r:o;const f=y.sub(c);if(f.gt(0)){const T=l.mul(c).div(b),d=m instanceof ce?m.spotPrice:m.market().spotPrice,k=f.mul(d).div(b);l=T.add(k).mul(b).div(y)}}return l}function fr(n,e){var t;const a=e instanceof ce?e.changeAmount(n):e.collateralChangeAmount();if(!(e instanceof ce?e.isBaseCollateral:!!(!((t=e.collateral)===null||t===void 0)&&t.isBase))||a.gt(0))return o;const r=e.prevAverageCollateralSpotPrice(n);return n.market().spotPrice.sub(r).mul(a).div(b)}class ce{constructor(e,t,a){this.lyra=e,this.__collateralUpdateData=t,this.__tradeData=a,this.__source=t.source,this.owner=t.owner,this.timestamp=t.timestamp,this.transactionHash=t.transactionHash,this.positionId=t.positionId,this.blockNumber=t.blockNumber,this.marketAddress=t.marketAddress,this.expiryTimestamp=t.expiryTimestamp,this.amount=t.amount,this.value=t.value,this.marketName=t.marketName,this.strikeId=t.strikeId,this.strikePrice=t.strikePrice,this.isCall=t.isCall,this.isBaseCollateral=t.isBaseCollateral,this.spotPrice=t.spotPrice,this.isAdjustment=!a,this.swap=t.swap}static async getByHash(e,t){const{collateralUpdates:a}=await We(e,t);return a}pnl(e){return fr(e,this)}prevAmount(e){var t;const a=e.collateralUpdates().filter(r=>r.blockNumber<this.blockNumber),i=a.length?a[a.length-1]:null;return(t=i==null?void 0:i.amount)!==null&&t!==void 0?t:o}changeAmount(e){const t=this.prevAmount(e);return this.amount.sub(t)}changeValue(e){const t=this.changeAmount(e);return this.isBaseCollateral?t.mul(this.spotPrice).div(b):t}newAverageCollateralSpotPrice(e){const t=e.collateralUpdates().filter(a=>a.blockNumber<=this.blockNumber);return He(e,t)}prevAverageCollateralSpotPrice(e){const t=e.collateralUpdates().filter(a=>a.blockNumber<this.blockNumber);return He(e,t)}trade(){return this.__tradeData?new De(this.lyra,this.__tradeData,this.__collateralUpdateData):null}async position(){return await le.get(this.lyra,this.marketAddress,this.positionId)}async option(){return await Pe.get(this.lyra,this.marketAddress,this.strikeId,this.isCall)}async strike(){return await ge.get(this.lyra,this.marketAddress,this.strikeId)}async board(){return(await this.strike()).board()}async market(){return await Q.get(this.lyra,this.marketAddress)}}class wn{constructor(e,t){this.lyra=e,this.__settleData=t,this.__source=t.source,this.blockNumber=t.blockNumber,this.positionId=t.positionId,this.spotPriceAtExpiry=t.spotPriceAtExpiry,this.timestamp=t.timestamp,this.transactionHash=t.transactionHash,this.owner=t.owner,this.size=t.size,this.marketName=t.marketName,this.blockNumber=t.blockNumber,this.marketAddress=t.marketAddress,this.expiryTimestamp=t.expiryTimestamp,this.isCall=t.isCall,this.isLong=t.isLong,this.isBaseCollateral=t.isBaseCollateral,this.strikePrice=t.strikePrice,this.settlement=t.settlement,this.returnedCollateralAmount=t.returnedCollateralAmount,this.returnedCollateralValue=t.returnedCollateralValue,this.isInTheMoney=t.isInTheMoney}static async getByHash(e,t){const{settles:a}=await We(e,t);return a}pnl(e){return e.pnl().settlementPnl}async position(){return await this.lyra.position(this.marketAddress,this.positionId)}}function St(n){return[J.LongCall,J.ShortCoveredCall,J.ShortCall].includes(n)}function pt(n,e,t,a){return n?a?t:null:t.mul(e).div(b)}const kr=(n,e,t)=>{if(t)return n.shockVolA;const a=h.from(e);if(a.lte(n.shockVolPointA))return n.shockVolA;if(a.gte(n.shockVolPointB))return n.shockVolB;const i=n.shockVolA.sub(n.shockVolB),r=a.sub(n.shockVolPointA);return n.shockVolA.sub(i.mul(r).div(n.shockVolPointB.sub(n.shockVolPointA)))},hr=(n,e)=>e?n.params.minStaticBaseCollateral:n.params.minStaticQuoteCollateral;function tt(n,e,t,a,i){const r=n.board().timeToExpiry,p=ve(n.board());if(p===0)return o;const s=n.market(),u=n.isCall?t.mul(s.params.callSpotPriceShock).div(b):t.mul(s.params.putSpotPriceShock).div(b),y=n.market().params.rateAndCarry,l=H(rt(p,M(kr(s.params,r,i)),M(u),M(n.strike().strikePrice),M(y),n.isCall));let m,c;const f=hr(n.market(),a);n.isCall?a?(c=l.mul(e).div(u),m=e):(c=l.mul(e).div(b),m=Ue):(c=l.mul(e).div(b),m=n.strike().strikePrice.mul(e).div(b));const T=c.gt(f)?c:f;return T.lt(m)?T:m}const br=20,wr=.001,Pr=(n,e,t)=>e.gt(0)?M(e.sub(n).mul(b).div(e).abs())<=t:n.eq(e);function Pn(n,e,t,a){const r=n.board().timeToExpiry,p=tt(n,e,n.market().spotPrice,a,!0),s=pt(n.isCall,n.strike().strikePrice,e,a),u=n.isCall&&!a,y=n.market().spotPrice;if(r<=0||e.eq(0)||t.eq(0))return null;if(s&&t.gte(s)&&!u)return null;if(t.lt(p))return y;let l=y.div(5),m=y.mul(5),c=0;for(;l.lt(m)&&c<br;){const f=l.add(m).div(2),T=tt(n,e,f,a,!0);if(n.isCall?t.lt(T)?m=f:l=f:t.lt(T)?l=f:m=f,c++,Pr(T,t,wr))return f}return console.warn("Failed to find liquidation price"),l.add(m).div(2)}function gn(n,e,t,a){var i;const r=n.strike(),p=n.board(),s=n.market(),u=p.isExpired?(i=p.spotPriceAtExpiry)!==null&&i!==void 0?i:o:s.spotPrice;return{amount:t,value:a?t.mul(u).div(b):t,min:tt(n,e,u,a),max:pt(n.isCall,r.strikePrice,e,a),isBase:n.isCall?!!a:!1,liquidationPrice:Pn(n,e,t,a)}}function gr(n){return n===J.ShortCoveredCall}function vr(n){return[J.LongCall,J.LongPut].includes(n)}function vn(n,e,t,a,i,r,p){const s=e.positionId.toNumber(),u=e.amount,y=e.optionType,l=St(y),m=vr(y),c=e.state,f=c===ye.Active,T=c===ye.Liquidated,d=c===ye.Settled,k=!m&&l?gr(y):void 0,w=m?void 0:gn(t,u,e.collateral,k),g=t.board().spotPriceAtExpiry,S=t.market().spotPrice,P=g??S,x=t.strike().strikePrice,O=l?P.gt(x):P.lt(x),V=a[0],B=a[a.length-1],I=t.market(),F=t.strike(),G=t.board(),R=V?V.timestamp:t.block.timestamp,te=d&&p?p.timestamp:f?null:B?B.timestamp:null;return{id:s,market:I,source:X.ContractCall,blockNumber:I.block.number,owner:n,marketName:I.name,marketAddress:I.address,strikeId:F.id,strikePrice:F.strikePrice,expiryTimestamp:G.expiryTimestamp,size:u,isCall:l,isLong:m,state:c,isOpen:f,isLiquidated:T,isSettled:d,collateral:w,pricePerOption:t.price,spotPriceAtExpiry:g,isInTheMoney:O,delta:t.delta,openTimestamp:R,closeTimestamp:te,trades:a,collateralUpdates:i,transfers:r,settle:p}}async function Cn(n,e){const t=await W(n,n.version,D.OptionMarketViewer).getOwnerPositions(e),a=t.flatMap(({market:s,positions:u})=>u.map(y=>({positionId:y.positionId.toNumber(),marketAddress:s}))),[i,r]=await Promise.all([Tn(n,a),n.markets()]),p=r.reduce((s,u)=>({...s,[u.address]:u}),{});return t.flatMap(({positions:s,market:u})=>s.map(y=>{const l=y.positionId.toNumber(),m=y.strikeId.toNumber(),c=St(y.optionType),{trades:f,collateralUpdates:T,transfers:d,settle:k}=i[u][l],w=p[u].liveOption(m,c);return vn(e,y,w,f,T,d,k)}))}function Mn(n,e,t,a,i,r,p){var s,u,y;const l=n.positionId,m=parseInt(n.strike.strikeId),c=parseInt(n.board.boardId),f=n.option.isCall,T=n.isLong,d=n.state,k=d===ye.Active,w=d===ye.Liquidated,g=d===ye.Settled,S=[ye.Closed,ye.Liquidated].includes(d)?o:h.from(n.size);let P;try{P=c?e.liveBoard(c).strike(m).option(f):null}catch{P=null}const x=P?P.price:o,O=h.from(n.strike.strikePrice),V=f?!!n.isBaseCollateral:!1,B=n.board.spotPriceAtExpiry?h.from(n.board.spotPriceAtExpiry):void 0,I=e.spotPrice,F=B??I,G=f?F.gt(O):F.lt(O),R=(k||g)&&(u=(s=a[a.length-1])===null||s===void 0?void 0:s.amount)!==null&&u!==void 0?u:o,te=T?void 0:P&&!p?gn(P,S,R,V):{amount:R,value:V?R.mul(I).div(b):R,min:o,max:pt(f,O,S,V),isBase:V,liquidationPrice:null},ne=e.name,pe=ee(e.address),se=ee(n.owner),E=n.board.expiryTimestamp,de=t[0].timestamp,ue=g&&r?r.timestamp:k?null:t[t.length-1].timestamp;return{id:l,market:e,source:X.Subgraph,blockNumber:e.block.number,delta:(y=P==null?void 0:P.delta)!==null&&y!==void 0?y:o,owner:se,marketName:ne,marketAddress:pe,strikeId:m,strikePrice:O,expiryTimestamp:E,isCall:f,isLong:T,state:d,isOpen:k,isLiquidated:w,isSettled:g,size:S,collateral:te,pricePerOption:x,spotPriceAtExpiry:B,isInTheMoney:G,openTimestamp:de,closeTimestamp:ue,trades:t,collateralUpdates:a,transfers:i,settle:r}}const Cr=z`
  query positions($positionId: Int!, $market: String!) {
    positions(first: 1, orderBy: openTimestamp, orderDirection: asc, where: { 
      positionId: $positionId, 
      market: $market,
    }) {
      ${ct}
    }
  }
`;async function Mr(n,e,t){var a,i,r,p;const s=q(n,e.contractAddresses,n.version,C.OptionToken),[u,y]=await Promise.allSettled([s.getPositionWithOwner(t),me(n.subgraphClient,{query:Cr,variables:{positionId:t,market:e.address.toLowerCase()}})]),l=u.status==="fulfilled"?u.value:null,m=y.status==="fulfilled"?y.value:null,c=(a=m==null?void 0:m.data)===null||a===void 0?void 0:a.positions[0],f=(i=c==null?void 0:c.trades.map(Mt))!==null&&i!==void 0?i:[],T=(r=c==null?void 0:c.collateralUpdates.map(vt))!==null&&r!==void 0?r:[],d=(p=c==null?void 0:c.transfers.map(Ot))!==null&&p!==void 0?p:[],k=c!=null&&c.settle?Ct(c.settle):null;if(l){const w=l.strikeId.toNumber(),g=St(l.optionType),S=e.liveOption(w,g);return vn(l.owner,l,S,f,T,d,k)}else{if(c)return Mn(c,e,f,T,d,k);throw new Error("Failed to fetch position")}}const Or=z`
  query positions($owner: String) {
    # Get all positions that have been transferred to $owner
    optionTransfers(first: 1000, where:{newOwner: $owner}) {
      position {
        ${ct}
      }
    }
    # Get all positions that have been traded by $owner
    # This covers any positions a trader opened as well as collateral updates
    trades(first: 1000, where:{trader:$owner}) {
      position {
        ${ct}
      }
    }
  }
`;async function Sr(n,e){var t,a;const[{data:i},r]=await Promise.all([me(n.subgraphClient,{query:Or,variables:{owner:e.toLowerCase()}}),n.markets()]),p=(t=i==null?void 0:i.optionTransfers.map(l=>l.position))!==null&&t!==void 0?t:[],s=(a=i==null?void 0:i.trades.map(l=>l.position))!==null&&a!==void 0?a:[],u=Ae(s.concat(p),l=>l.id),y=r.reduce((l,m)=>({...l,[m.address]:m}),{});return Me(u.map(l=>{const m=y[ee(l.market.id)];if(!m)return null;const c=l.trades.map(Mt),f=l.collateralUpdates.map(vt),T=l.transfers.map(Ot),d=l.settle?Ct(l.settle):null;return Mn(l,m,c,f,T,d)}))}async function xr(n,e){const[t,a]=await Promise.all([Cn(n,e),Sr(n,e)]),i=t.concat(a);return Ae(i,r=>r.id)}function On(n,e,t,a,i,r,p){return n?e?(a.gte(t)?a.sub(t).sub(i):i.mul(-1)).mul(r).div(b):(a.lte(t)?t.sub(a).sub(i):i.mul(-1)).mul(r).div(b):e?(p&&a.gte(p)?i.sub(a):a.lte(t)?i:i.sub(a).add(t)).mul(r).div(b):(p&&a.lte(p)?i.sub(t):a.lte(t)?a.sub(t).add(i):i).mul(r).div(b)}function Ir(n){var e,t;const a=n.trades();if(!a.length)return{totalAverageOpenCost:o,totalAverageCloseCost:o,unrealizedPnl:o,unrealizedPnlPercentage:o,realizedPnl:o,realizedPnlPercentage:o,settlementPnl:o,settlementPnlPercentage:o};const i=a.filter(y=>!y.isOpen),r=n.settle(),p=n.averageCostPerOption().mul(n.size).div(b),s=i.reduce((y,l)=>{const m=l.prevAverageCostPerOption(n).mul(l.size).div(b);return y.add(m)},o),u=i.reduce((y,l)=>y.add(l.premium),o);if(n.isLong){let y=o,l=o;n.isOpen&&(y=n.pricePerOption.mul(n.size).div(b).sub(p),l=p.gt(0)?y.mul(b).div(p):o);const m=u.sub(s),c=s.gt(0)?m.mul(b).div(s):o;let f=o,T=o;return r&&(f=r.settlement.sub(p),T=p.gt(0)?f.mul(b).div(p):o),{totalAverageOpenCost:p,totalAverageCloseCost:s,unrealizedPnl:y,unrealizedPnlPercentage:l,realizedPnl:m,realizedPnlPercentage:c,settlementPnl:f,settlementPnlPercentage:T}}else{let y=o,l=o;if(n.isOpen){const d=n.pricePerOption.mul(n.size).div(b);y=p.sub(d),l=p.gt(0)?y.mul(b).div(p):o}const m=s.sub(u),c=s.gt(0)?m.mul(b).div(s):o;let f=o,T=o;if(r){const d=(t=(e=n.collateral)===null||e===void 0?void 0:e.amount)!==null&&t!==void 0?t:o,k=r.spotPriceAtExpiry,w=r.returnedCollateralAmount,g=d.sub(w),S=r.isBaseCollateral?g.mul(k).div(b):g;f=p.sub(S),T=p.gt(0)?f.mul(b).div(p):o}return{totalAverageOpenCost:p,totalAverageCloseCost:s,unrealizedPnl:y,unrealizedPnlPercentage:l,realizedPnl:m,realizedPnlPercentage:c,settlementPnl:f,settlementPnlPercentage:T}}}class le{constructor(e,t){this.lyra=e,this.__positionData=t,this.__source=t.source,this.owner=t.owner,this.id=t.id,this.strikeId=t.strikeId,this.strikePrice=t.strikePrice,this.expiryTimestamp=t.expiryTimestamp,this.marketName=t.marketName,this.marketAddress=t.marketAddress,this.isCall=t.isCall,this.isLong=t.isLong,this.state=t.state,this.isOpen=t.isOpen,this.size=t.size,this.isLiquidated=t.isLiquidated,this.isSettled=t.isSettled,this.collateral=t.collateral,this.pricePerOption=t.pricePerOption,this.spotPriceAtExpiry=t.spotPriceAtExpiry,this.isInTheMoney=t.isInTheMoney,this.delta=t.delta,this.openTimestamp=t.openTimestamp,this.closeTimestamp=t.closeTimestamp}static async get(e,t,a){const i=await Q.get(e,t),r=await Mr(e,i,a);return new le(e,r)}static async getOpenByOwner(e,t){return(await Cn(e,t)).map(i=>new le(e,i))}static async getByOwner(e,t){return(await xr(e,t)).map(i=>new le(e,i))}sizeBeforeClose(){const e=this.lastTrade();return!this.isOpen&&this.size.isZero()&&e?e.prevSize(this):this.size}averageCostPerOption(){return Ge(this.trades())}averageCollateralSpotPrice(){return He(this,this.collateralUpdates())}pnl(){return Ir(this)}breakEven(){return gt(this.isCall,this.strikePrice,this.averageCostPerOption())}toBreakEven(){var e,t,a;const i=this.breakEven(),r=this.isOpen?this.market().spotPrice:this.isSettled?(e=this.spotPriceAtExpiry)!==null&&e!==void 0?e:o:(a=(t=this.lastTrade())===null||t===void 0?void 0:t.spotPrice)!==null&&a!==void 0?a:o,p=i.sub(r);return this.isCall?r.gt(i)?o:p:r.lt(i)?o:p}payoff(e){var t;return On(this.isLong,this.isCall,this.strikePrice,e,this.averageCostPerOption(),this.sizeBeforeClose(),(t=this.collateral)===null||t===void 0?void 0:t.liquidationPrice)}trades(){const{trades:e,collateralUpdates:t}=this.__positionData,a=t.reduce((i,r)=>({...i,[r.transactionHash]:r}),{});return e.map(i=>new De(this.lyra,i,a[i.transactionHash]))}firstTrade(){const e=this.trades();return e.length>0?e[0]:null}lastTrade(){const e=this.trades();return e.length>0?e[e.length-1]:null}collateralUpdates(){const{trades:e,collateralUpdates:t}=this.__positionData,a=e.reduce((i,r)=>({...i,[r.transactionHash]:r}),{});return t.map(i=>new ce(this.lyra,i,a[i.transactionHash]))}transfers(){const{transfers:e}=this.__positionData;return e.map(t=>new cn(this.lyra,t))}settle(){const{settle:e}=this.__positionData;return e?new wn(this.lyra,e):null}market(){return this.__positionData.market}async board(){return(await this.strike()).board()}async strike(){return this.market().strike(this.strikeId)}liveStrike(){return this.market().liveStrike(this.strikeId)}async option(){return this.market().option(this.strikeId,this.isCall)}liveOption(){return this.market().liveOption(this.strikeId,this.isCall)}async trade(e,t,a,i){return await Te.get(this.lyra,this.owner,this.marketAddress,this.strikeId,this.isCall,e,t,a,{positionId:this.id,...i})}async open(e,t,a){const i=this.isLong;return await this.trade(i,e,t,a)}async close(e,t,a){const i=!this.isLong;return await this.trade(i,e,t,a)}}function Ke(n,e){return n.div(h.from(10).pow(18-e))}function Ar(n,e,t){return n?e?J.LongCall:t?J.ShortCoveredCall:J.ShortCall:e?J.LongPut:J.ShortPut}function Vr(n){return n.isCall&&n.isBuy?n.premium:n.isCall&&!n.isBuy?Ue:!n.isCall&&n.isBuy?n.premium:n.strikePrice.sub(n.pricePerOption).mul(n.size).div(b)}function qr(n){return n.isCall&&n.isBuy?Ue:n.isCall&&!n.isBuy?n.premium:!n.isCall&&n.isBuy?n.strikePrice.sub(n.pricePerOption).mul(n.size).div(b):n.premium}function Fr({option:n,postTradeSize:e,setToCollateral:t,setToFullCollateral:a,isBaseCollateral:i}){const r=n.isCall?!!i:!1;if(e.isZero())return{amount:o,min:o,max:o,isMin:!1,isMax:!1,liquidationPrice:null,isBase:r};const s=n.market().spotPrice,u=tt(n,e,s,i);let y=pt(n.isCall,n.strike().strikePrice,e,i);y&&u.gt(y)&&(y=u);let l;if(a){if(!y)throw new Error("Cannot fully collateralize a cash-secured short call");l=y}else l=t??o;const m=l.lte(u),c=!!(y&&l.gte(y)),f=Pn(n,e,l,i);return{amount:l,isBase:r,max:y,min:u,isMin:m,isMax:c,liquidationPrice:f}}function Br({isOpen:n,owner:e,size:t,newSize:a,quote:i,position:r,collateral:p,balances:s,quoteTransfer:u,baseTransfer:y}){if(i.disabledReason){const l=i.disabledReason;if(!(l===K.EmptySize&&(r!=null&&r.collateral)&&p&&!p.amount.eq(r.collateral.amount))){if(!(l===K.InsufficientLiquidity&&!n))return l}}if(r&&r.owner!==e||s.owner!==e)return K.IncorrectOwner;if(r)if(r.isOpen){if(!n&&t.gt(r.size))return K.PositionNotLargeEnough;if(!n&&a.isZero()&&p&&!p.amount.isZero())return K.PositionClosedLeftoverCollateral}else return K.PositionClosed;if(u.gt(0)){if(s.quoteAsset.balance.lt(u))return K.InsufficientQuoteBalance;if(s.quoteAsset.tradeAllowance.lt(u))return K.InsufficientQuoteAllowance}if(y.gt(0)){if(s.baseAsset.balance.lt(y))return K.InsufficientBaseBalance;if(s.baseAsset.tradeAllowance.lt(y))return K.InsufficientBaseAllowance}return(n&&!i.isBuy||r&&!r.isLong)&&(!p||r&&!i.isBuy&&a.isZero()&&p.amount.isZero())?K.EmptyCollateral:a.gt(0)&&p&&p.amount.lt(p.min)?K.NotEnoughCollateral:a.gt(0)&&p&&p.max&&p.amount.gt(p.max)?K.TooMuchCollateral:null}var K;(function(n){n.EmptySize="EmptySize",n.Expired="Expired",n.TradingCutoff="TradingCutoff",n.InsufficientLiquidity="InsufficientLiquidity",n.DeltaOutOfRange="DeltaOutOfRange",n.VolTooHigh="VolTooHigh",n.VolTooLow="VolTooLow",n.IVTooHigh="IVTooHigh",n.IVTooLow="IVTooLow",n.SkewTooHigh="SkewTooHigh",n.SkewTooLow="SkewTooLow",n.NotEnoughCollateral="NotEnoughCollateral",n.TooMuchCollateral="TooMuchCollateral",n.EmptyCollateral="EmptyCollateral",n.IncorrectOwner="IncorrectOwner",n.PositionClosed="PositionClosed",n.PositionNotLargeEnough="PositionNotLargeEnough",n.PositionClosedLeftoverCollateral="PositionClosedLeftoverCollateral",n.InsufficientQuoteAllowance="InsufficientQuoteAllowance",n.InsufficientBaseAllowance="InsufficientBaseAllowance",n.InsufficientQuoteBalance="InsufficientQuoteBalance",n.InsufficientBaseBalance="InsufficientBaseBalance",n.UnableToHedgeDelta="UnableToHedgeDelta",n.PriceVarianceTooHigh="PriceVarianceTooHigh"})(K||(K={}));class Te{constructor(e,t,a,i,r,p,s,u){var y,l,m,c,f,T;this.__source=X.ContractCall;const{position:d,setToCollateral:k=o,setToFullCollateral:w=!1,iterations:g=Qt,isBaseCollateral:S,referrer:P=oe}=u??{};this.__option=a,this.__position=d,this.__balances=s;const x=a.strike(),O=a.market(),V=a.board();this.lyra=e,this.marketName=O.name,this.marketAddress=O.address,this.expiryTimestamp=V.expiryTimestamp,this.boardId=V.id,this.strikePrice=x.strikePrice,this.strikeId=x.id,this.isCall=a.isCall,this.positionId=d==null?void 0:d.id,this.isBuy=i,this.isOpen=d?i&&d.isLong||!i&&!d.isLong:!0,this.owner=t,this.isLong=d?d.isLong:i;const B=d?(y=d.collateral)===null||y===void 0?void 0:y.isBase:S;this.size=r;let I=Be.getSync(e,a,this.isBuy,this.size,{iterations:g,isOpen:this.isOpen,isLong:this.isLong});!this.isOpen&&(I.disabledReason===_.DeltaOutOfRange||I.disabledReason===_.TradingCutoff||I.disabledReason===_.PriceVarianceTooHigh)&&(I=Be.getSync(e,a,this.isBuy,this.size,{iterations:g,isOpen:this.isOpen,isLong:this.isLong,isForceClose:!0})),this.isForceClose=I.isForceClose,this.iv=I.iv,this.fairIv=I.fairIv,this.greeks=I.greeks,this.fee=I.fee,this.feeComponents=I.feeComponents,this.forceClosePenalty=I.forceClosePenalty,this.spotPrice=I.spotPrice,this.iterations=I.iterations,this.quoteToken={...O.quoteToken,transfer:o,receive:o,balance:s.quoteAsset.balance,newBalance:s.quoteAsset.balance},this.baseToken={...O.baseToken,transfer:o,receive:o,balance:s.baseAsset.balance,newBalance:s.baseAsset.balance},this.quoted=I.premium,this.pricePerOption=o,this.premium=o,this.newSize=d?this.isOpen?d.size.add(r):d.size.sub(r):r,this.newSize.lt(0)&&(this.newSize=o),this.prevSize=(l=d==null?void 0:d.size)!==null&&l!==void 0?l:o;const F=I.premium.mul(H(i?1+p:1-p)).div(b);this.slippage=p||(F.gt(0)?1-M(I.premium.mul(b).div(F)):0),this.premium=F,this.pricePerOption=r.gt(0)?this.premium.mul(b).div(r):o;let G=this.quoteToken.transfer,R=this.baseToken.transfer;if(i?G=G.add(this.premium):G=G.sub(this.premium),this.isOpen&&!this.isBuy||d&&!d.isLong){this.collateral=Fr({option:a,postTradeSize:this.newSize,setToCollateral:k,setToFullCollateral:w,isBaseCollateral:B});const Ce=this.collateral.amount.sub((c=(m=d==null?void 0:d.collateral)===null||m===void 0?void 0:m.amount)!==null&&c!==void 0?c:o);this.collateral.isBase?R=R.add(Ce):G=G.add(Ce)}G.gt(0)?this.quoteToken.transfer=Ke(G,this.quoteToken.decimals):this.quoteToken.receive=Ke(G.abs(),this.quoteToken.decimals),R.gt(0)?this.baseToken.transfer=Ke(R,this.baseToken.decimals):this.baseToken.receive=Ke(R.abs(),this.baseToken.decimals),this.quoteToken.newBalance=this.quoteToken.transfer.gt(0)?this.quoteToken.balance.sub(this.quoteToken.transfer):this.quoteToken.balance.add(this.quoteToken.receive),this.baseToken.newBalance=this.baseToken.transfer.gt(0)?this.baseToken.balance.sub(this.baseToken.transfer):this.baseToken.balance.add(this.baseToken.receive),this.isCollateralUpdate=!!(this.collateral&&this.size.isZero()&&this.collateral.amount.gt(0));const te=h.from(x.id),ne=d?h.from(d.id):o,pe=h.from(g),se=r,E=Ar(a.isCall,this.isLong,!!B),de=(T=(f=this.collateral)===null||f===void 0?void 0:f.amount)!==null&&T!==void 0?T:o,ue=!i&&F.gt(o)?F:o,Ee=i?F:Ue;this.contract=q(e,O.contractAddresses,e.version,C.OptionMarket),this.method=this.isOpen||this.isCollateralUpdate?"openPosition":this.isForceClose?"forceClosePosition":"closePosition",e.version===v.Avalon?this.params=[{strikeId:te,positionId:ne,iterations:pe,optionType:E,amount:se,setCollateralTo:de,minTotalCost:ue,maxTotalCost:Ee}]:this.params=[{strikeId:te,positionId:ne,iterations:pe,optionType:E,amount:se,setCollateralTo:de,minTotalCost:ue,maxTotalCost:Ee,referrer:P}],this.data=this.contract.interface.encodeFunctionData(this.method,this.params),this.disabledReason=Br({isOpen:this.isOpen,owner:this.owner,size:this.size,newSize:this.newSize,quote:I,position:d,collateral:this.collateral,balances:s,quoteTransfer:this.quoteToken.transfer,baseTransfer:this.baseToken.transfer}),this.isDisabled=!!this.disabledReason,this.tx=L(this.lyra.provider,this.lyra.provider.network.chainId,q(e,O.contractAddresses,e.version,C.OptionMarket).address,t,this.data)}static async get(e,t,a,i,r,p,s,u,y){const l=async()=>y!=null&&y.positionId?await le.get(e,a,y.positionId):void 0,[m,c]=await Promise.all([l(),e.account(t).marketBalances(a)]),f=c.market.liveOption(i,r);return new Te(e,t,f,p,s,u,c,{...y,position:m})}static getSync(e,t,a,i,r,p,s,u){return new Te(e,t,a,i,r,p,s,u)}static getPositionIdsForLogs(e,t){const a=kn(e,t),i=fn(e,t),r=[...a.map(p=>p.args.positionId.toNumber()),...i.map(p=>p.args.positionId.toNumber())];return Array.from(new Set(r))}static approveQuote(e,t,a){const i=q(e.lyra,e.contractAddresses,e.lyra.version,C.OptionMarket),r=Re(e.lyra.provider,e.quoteToken.address),p=r.interface.encodeFunctionData("approve",[i.address,a]);return L(e.lyra.provider,e.lyra.provider.network.chainId,r.address,t,p)}approveQuote(e){return Te.approveQuote(this.market(),this.owner,e)}static approveBase(e,t,a){const i=q(e.lyra,e.contractAddresses,e.lyra.version,C.OptionMarket),r=Re(e.lyra.provider,e.baseToken.address),p=r.interface.encodeFunctionData("approve",[i.address,a]);return L(e.lyra.provider,e.lyra.provider.network.chainId,r.address,t,p)}approveBase(e){return Te.approveBase(this.market(),this.owner,e)}pnl(){const e=this.__position;return e?hn(e,this):o}newAverageCostPerOption(){const e=this.__position,t=e?e.trades().concat([this]):[this];return Ge(t)}prevAverageCostPerOption(){const e=this.__position;return e?Ge(e.trades()):o}newAverageCollateralSpotPrice(){if(this.isLong)return o;const e=this.__position;if(!e)return this.market().spotPrice;const t=e.collateralUpdates().concat([this]);return He(e,t)}prevAverageCollateralSpotPrice(){const e=this.__position;if(this.isLong||!e)return o;const t=e.collateralUpdates();return e?He(e,t):o}prevCollateralAmount(){var e;if(this.isLong||!this.__position)return o;const t=this.__position.collateralUpdates(),a=t.length?t[t.length-1]:null;return(e=a==null?void 0:a.amount)!==null&&e!==void 0?e:o}collateralChangeAmount(){var e,t,a;if(this.isLong)return o;const i=this.prevCollateralAmount();return((a=(t=(e=this.__position)===null||e===void 0?void 0:e.collateral)===null||t===void 0?void 0:t.amount)!==null&&a!==void 0?a:o).sub(i)}payoff(e){var t;return On(this.isLong,this.option().isCall,this.strike().strikePrice,e,this.newAverageCostPerOption(),this.newSize,(t=this.collateral)===null||t===void 0?void 0:t.liquidationPrice)}breakEven(){var e;return gt(this.isCall,this.strikePrice,this.pricePerOption,!!(!((e=this.collateral)===null||e===void 0)&&e.isBase))}maxProfit(){return qr(this)}maxLoss(){return Vr(this)}market(){return this.__option.market()}board(){return this.__option.board()}strike(){return this.__option.strike()}option(){return this.__option}position(){var e;return(e=this.__position)!==null&&e!==void 0?e:null}balances(){return this.__balances}}function Sn(n){if(n.startsWith("0x"))return n;{const e=n.startsWith("s")&&n.substring(1).toUpperCase()===n.substring(1)?n:n.startsWith("s")?"s"+n.substring(1).toUpperCase():"s"+n.toUpperCase();return Fn(e)}}async function Nt(n,e){const t=W(n,v.Avalon,D.OptionMarketViewer),a=W(n,v.Avalon,D.ExchangeAdapter),i={contract:a,function:"isGlobalPaused",args:[]},r={contract:a,function:"owner",args:[]};if(ft(e)){const{returnData:[p,s,u],blockNumber:y}=await Se(n,[{contract:t,function:"getMarket",args:[e]},i,r]);return{marketView:p,isGlobalPaused:s,owner:u,blockNumber:y}}else{const p=kt(n,e),{returnData:[s,u,y],blockNumber:l}=await Se(n,[{contract:t,function:"getMarketForBaseKey",args:[Sn(p)]},i,r]);return{marketView:s,isGlobalPaused:u,owner:y,blockNumber:l}}}const Lr=z`
  query marketTotalValueSnapshots(
    $market: String!
  ) {
    marketTotalValueSnapshots(
      first: 1, orderBy: timestamp, orderDirection: desc, where: { 
        market: $market, 
        NAV_gt: 0,
        period: ${Y.OneHour}
      }
    ) {
      ${Jt}
    }
  }
`,Dr={tvl:o,freeLiquidity:o,burnableLiquidity:o,utilization:0,reservedCollatLiquidity:o,pendingDeltaLiquidity:o,usedDeltaLiquidity:o,tokenPrice:o,pendingDeposits:o,pendingWithdrawals:o};async function Er(n,e){if(e.liveBoards().length===0)return{tvl:e.params.NAV,freeLiquidity:e.params.NAV,burnableLiquidity:o,utilization:0,reservedCollatLiquidity:o,pendingDeltaLiquidity:o,usedDeltaLiquidity:o,tokenPrice:e.params.tokenPrice,pendingDeposits:o,pendingWithdrawals:o,timestamp:e.block.timestamp};const{data:t}=await me(n.subgraphClient,{query:Lr,variables:{market:e.address.toLowerCase()}});if(!t||t.marketTotalValueSnapshots.length===0)return{...Dr,timestamp:e.block.timestamp};const a=t.marketTotalValueSnapshots[0],i=h.from(a.freeLiquidity),r=h.from(a.burnableLiquidity),p=h.from(a.NAV),s=h.from(a.usedCollatLiquidity),u=h.from(a.pendingDeltaLiquidity),y=h.from(a.usedDeltaLiquidity),l=h.from(a.tokenPrice);return{timestamp:a.timestamp,freeLiquidity:i,burnableLiquidity:r,tvl:p,utilization:p.gt(0)?M(p.sub(i).mul(b).div(p)):0,reservedCollatLiquidity:s,pendingDeltaLiquidity:u,usedDeltaLiquidity:y,tokenPrice:l,pendingDeposits:h.from(a.pendingDeposits),pendingWithdrawals:h.from(a.pendingWithdrawals)}}const _r=z`
  query marketGreeksSnapshots($market: String!) {
    marketGreeksSnapshots(first: 1, orderBy: timestamp, orderDirection: desc, where: 
    { 
      market: $market,
      period: ${Y.OneHour}
    }) {
      ${en}
    }
  }
`,Rr={poolNetDelta:o,hedgerNetDelta:o,netDelta:o,netStdVega:o};async function Nr(n,e){const{data:t}=await me(n.subgraphClient,{query:_r,variables:{market:e.address.toLowerCase()}});if(!t||t.marketGreeksSnapshots.length===0)return{...Rr,timestamp:e.block.timestamp};const a=t.marketGreeksSnapshots[0],i=h.from(a.poolNetDelta),r=h.from(a.hedgerNetDelta),p=h.from(a.netDelta),s=h.from(a.netStdVega);return{poolNetDelta:i,hedgerNetDelta:r,netDelta:p,netStdVega:s,timestamp:a.timestamp}}const Gr=z`
  query marketTotalValueSnapshots(
    $market: String!, $min: Int!, $max: Int! $period: Int!
  ) {
    marketTotalValueSnapshots(
      first: 1000, orderBy: timestamp, orderDirection: asc, where: { 
        market: $market, 
        NAV_gt: 0
        timestamp_gte: $min, 
        timestamp_lte: $max,
        period: $period 
      }
    ) {
      ${Jt}
    }
  }
`,Hr={freeLiquidity:o,burnableLiquidity:o,tvl:o,utilization:0,reservedCollatLiquidity:o,pendingDeltaLiquidity:o,usedDeltaLiquidity:o,tokenPrice:o,pendingDeposits:o,pendingWithdrawals:o};async function Ur(n,e,t){var a;const i=await Le(n,Gr,{market:e.address.toLowerCase()},{...t,endTimestamp:(a=t==null?void 0:t.endTimestamp)!==null&&a!==void 0?a:e.block.timestamp});return i.length===0?[{...Hr,timestamp:e.block.timestamp}]:i.map(p=>{const s=h.from(p.freeLiquidity),u=h.from(p.burnableLiquidity),y=h.from(p.NAV),l=h.from(p.usedCollatLiquidity),m=h.from(p.pendingDeltaLiquidity),c=h.from(p.usedDeltaLiquidity),f=h.from(p.tokenPrice);return{freeLiquidity:s,burnableLiquidity:u,tvl:y,utilization:y.gt(0)?M(y.sub(s).mul(b).div(y)):0,totalWithdrawingDeposits:o,reservedCollatLiquidity:l,pendingDeltaLiquidity:m,usedDeltaLiquidity:c,tokenPrice:f,timestamp:p.timestamp,pendingDeposits:h.from(p.pendingDeposits),pendingWithdrawals:h.from(p.pendingWithdrawals)}})}async function Qr(n,e){return await q(n,e,n.version,C.OptionMarket).owner()}const Wr=z`
  query marketGreeksSnapshots(
    $market: String!, $min: Int!, $max: Int! $period: Int!,
  ) {
    marketGreeksSnapshots(first: ${bt}, orderBy: timestamp, orderDirection: asc, where: { market: $market, 
      timestamp_gte: $min,
      timestamp_lte: $max,
      period_gte: $period
    }) {
      ${en}
    }
  }
`,$r={poolNetDelta:o,hedgerNetDelta:o,netDelta:o,netStdVega:o};async function zr(n,e,t){var a;const i=await Le(n,Wr,{market:e.address.toLowerCase()},{...t,endTimestamp:(a=t==null?void 0:t.endTimestamp)!==null&&a!==void 0?a:e.block.timestamp});return i.length===0?[{...$r,timestamp:e.block.timestamp}]:i.map(r=>{const p=h.from(r.poolNetDelta),s=h.from(r.hedgerNetDelta),u=h.from(r.netDelta),y=h.from(r.netStdVega);return{poolNetDelta:p,hedgerNetDelta:s,netDelta:u,netStdVega:y,timestamp:r.timestamp}})}const Kr={currentPositions:{longPosition:{size:o,collateral:o,averagePrice:o,entryFundingRate:o,unrealisedPnl:o,lastIncreasedTime:o,isLong:!0},shortPosition:{size:o,collateral:o,averagePrice:o,entryFundingRate:o,unrealisedPnl:o,lastIncreasedTime:o,isLong:!1},amountOpen:o,isLong:!0},futuresPoolHedgerParams:{acceptableSpotSlippage:o,deltaThreshold:o,marketDepthBuffer:o,targetLeverage:o,maxLeverage:o,minCancelDelay:o,minCollateralUpdate:o,vaultLiquidityCheckEnabled:!1},hedgerAddresses:{router:oe,positionRouter:oe,vault:oe,quoteAsset:oe,baseAsset:oe,weth:oe},gmxView:{basePoolAmount:o,baseReservedAmount:o,quotePoolAmount:o,quoteReservedAmount:o,maxGlobalLongSize:o,guaranteedUSD:o,maxGlobalShortSize:o,shortSize:o,minExecutionFee:o,remainingLongDollars:o,remainingShortDollars:o},referralCode:"",pendingOrderKey:"",lastOrderTimestamp:o,spotPrice:o,expectedHedge:o,currentHedge:o,currentLeverage:o,pendingCollateralDelta:o,baseBal:o,quoteBal:o,wethBal:o},jr={interactionDelay:o,hedgeCap:o};async function Xr(n){const e=W(n,v.Newport,D.OptionMarketViewer),t=W(n,v.Newport,D.ExchangeAdapter),a={contract:t,function:"owner",args:[]},i=await $e(n),r=re(n)?[]:i.map(P=>({contract:q(n,P,v.Newport,C.PoolHedger),function:"getHedgerState",args:[]})),p=i.map(P=>({contract:t,function:"getAdapterState",args:[P.optionMarket]})),s=re(n)?[]:i.map(P=>({contract:q(n,P,v.Newport,C.PoolHedger),function:"getPoolHedgerParams",args:[]})),u=i.map(P=>({contract:q(n,P,v.Newport,C.LiquidityPool),function:"getTokenPrice",args:[]})),{returnData:[y,l,...m],blockNumber:c}=await Se(n,[a,{contract:e,function:"getMarkets",args:[i.map(P=>P.optionMarket)]},...r,...p,...s,...u]),f=m.slice(0,r.length),T=m.slice(r.length,r.length+p.length),d=m.slice(r.length+p.length,r.length+p.length+s.length),k=m.slice(r.length+p.length+s.length),{isPaused:w,markets:g}=l;return{marketViews:g.map((P,x)=>({marketView:P,hedgerView:re(n)?Kr:f[x],adapterView:T[x],poolHedgerParams:re(n)?jr:d[x],tokenPrice:k[x],baseLimit:null})),isGlobalPaused:w,owner:y,blockNumber:c}}const Yr={interactionDelay:o,hedgeCap:o},Zr={lastInteraction:o,hedgedDelta:o,margin:o,leverage:o,hedgerQuoteBalance:o,hedgerMarginQuoteBalance:o,canHedgeDeltaIncrease:!0,canHedgeDeltaDecrease:!0,cappedExpectedHedge:o,snxHasEnoughMarketDepth:!0,marketSuspended:!1,curveRateStable:!0,pendingDeltaLiquidity:o,usedDeltaLiquidity:o,pendingDelta:o,pendingMargin:o,fundingRate:o,trackingCode:"",optionMarket:"",perpsMarket:"",curveSwap:"",quoteAsset:"",futuresPoolHedgerParams:{targetLeverage:o,maximumFundingRate:o,deltaThreshold:o,marketDepthBuffer:o,priceDeltaBuffer:o,worstStableRate:o,maxOrderCap:o},poolHedgerParams:{interactionDelay:o,hedgeCap:o},longInterest:o,shortInterest:o,maxTotalMarketSize:Ue};async function Jr(n){const e=W(n,v.Newport,D.OptionMarketViewer),t=W(n,v.Newport,D.ExchangeAdapter),a={contract:t,function:"owner",args:[]},i=await $e(n),r=re(n)?[]:i.map(O=>({contract:q(n,O,v.Newport,C.PoolHedger),function:"getHedgerState",args:[]})),p=re(n)?[]:i.map(O=>({contract:t,function:"getAdapterState",args:[O.optionMarket]})),s=re(n)?[]:i.map(O=>({contract:q(n,O,v.Newport,C.PoolHedger),function:"getPoolHedgerParams",args:[]})),u=re(n)?[]:i.map(O=>({contract:q(n,O,v.Newport,C.LiquidityPool),function:"getTokenPrice",args:[]})),y=i.map(O=>({contract:q(n,O,v.Newport,C.OptionMarket),function:"baseLimit",args:[]})),{returnData:[l,m,...c],blockNumber:f}=await Se(n,[a,{contract:e,function:"getMarkets",args:[i.map(O=>O.optionMarket)]},...r,...p,...s,...u]),{returnData:T}=await Se(n,y),d=c.slice(0,r.length),k=c.slice(r.length,r.length+p.length),w=c.slice(r.length+p.length,r.length+p.length+s.length),g=c.slice(r.length+p.length+s.length),{isPaused:S,markets:P}=m;return{marketViews:P.map((O,V)=>({marketView:O,hedgerView:re(n)?Zr:d[V],adapterView:k[V],poolHedgerParams:re(n)?Yr:w[V],tokenPrice:g[V],baseLimit:T[V]})),isGlobalPaused:S,owner:l,blockNumber:f}}const ut=1e4,ep=z`
  query spotPriceSnapshots(
    $market: String!, $min: Int!, $max: Int!, $period: Int!, $limit: Int!
  ) {
    spotPriceSnapshots(first: $limit, orderBy: timestamp, orderDirection: asc, where: { 
      market: $market, 
      timestamp_gte: $min, 
      timestamp_lte: $max,
      period: $period 
    }) {
      ${ci}
    }
  }
`;async function tp(n,e,t){var a,i,r;const p=(a=t==null?void 0:t.startTimestamp)!==null&&a!==void 0?a:zt,s=(i=t==null?void 0:t.endTimestamp)!==null&&i!==void 0?i:e.block.timestamp,u=(r=t==null?void 0:t.period)!==null&&r!==void 0?r:mn(p,s,[Y.FifteenMinutes,Y.OneHour,Y.FourHours,Y.EightHours,Y.OneDay,Y.SevenDays]),y=u>0?(s-p)/u:0,l=Math.ceil(y/ut),m=await dn(n,ep,{min:p,max:s,limit:ut,period:u,market:e.address.toLowerCase()},"timestamp",{increment:ut*u,batch:l});if(m.length===0)return[];const c=m.map(T=>({open:h.from(T.open),high:h.from(T.high),low:h.from(T.low),close:h.from(T.close),startTimestamp:T.timestamp-T.period,endTimestamp:T.timestamp,period:T.period,startBlockNumber:T.blockNumber})),f=c.length?c[c.length-1]:null;return f&&f.endTimestamp>e.block.number&&(f.close=e.spotPrice,e.spotPrice.lt(f.low)&&(f.low=e.spotPrice),e.spotPrice.gt(f.high)&&(f.low=e.spotPrice)),c}const np=z`
  query marketVolumeAndFeesSnapshots(
    $market: String!, $min: Int!, $max: Int!, $period: Int!
  ) {
    marketVolumeAndFeesSnapshots(first: 1000, orderBy: timestamp, orderDirection: asc, where: {
      market: $market, 
      timestamp_gte: $min, 
      timestamp_lte: $max, 
      period: $period
    }) {
      ${di}
    }
  }
`,ap={premiumVolume:o,notionalVolume:o,totalShortOpenInterestUSD:o,vaultFees:o,vaultFeeComponents:{spotPriceFees:o,optionPriceFees:o,vegaUtilFees:o,varianceFees:o,forceCloseFees:o,liquidationFees:o},totalPremiumVolume:o,totalNotionalVolume:o,liquidatorFees:o,smLiquidationFees:o};async function ip(n,e,t){var a;const i=(a=t==null?void 0:t.endTimestamp)!==null&&a!==void 0?a:e.block.timestamp,r=await Le(n,np,{market:e.address.toLowerCase()},{...t,endTimestamp:i});return r.length===0?[{...ap,startTimestamp:e.block.timestamp,endTimestamp:e.block.timestamp}]:r.map(p=>{const s=h.from(p.spotPriceFees),u=h.from(p.optionPriceFees),y=h.from(p.vegaFees),l=h.from(p.varianceFees),m=h.from(p.deltaCutoffFees),c=h.from(p.lpLiquidationFees),f=h.from(p.totalShortPutOpenInterestUSD),T=h.from(p.totalShortCallOpenInterestUSD);return{premiumVolume:h.from(p.premiumVolume),notionalVolume:h.from(p.notionalVolume),totalShortOpenInterestUSD:T.add(f),vaultFees:s.add(u).add(y).add(l).add(m).add(c),vaultFeeComponents:{spotPriceFees:s,optionPriceFees:u,vegaUtilFees:y,varianceFees:l,forceCloseFees:m,liquidationFees:c},totalPremiumVolume:h.from(p.totalPremiumVolume),totalNotionalVolume:h.from(p.totalNotionalVolume),liquidatorFees:h.from(p.liquidatorFees),smLiquidationFees:h.from(p.smLiquidationFees),startTimestamp:p.timestamp-p.period,endTimestamp:p.timestamp}})}async function rp(n,e,t){if(ft(e))return await W(n,n.version,D.OptionMarketViewer).getBoard(e,t);{const a=kt(n,e);switch(n.version){case v.Avalon:return W(n,n.version,D.OptionMarketViewer).getBoardForBaseKey(Sn(a),t);case v.Newport:return W(n,n.version,D.OptionMarketViewer).getBoardForBase(a,t)}}}async function pp(n,e,t){return await W(n,n.version,D.OptionMarketViewer).getBoardForStrikeId(e,t)}function sp(n,e){let t=n;switch(t.toLowerCase()){case"weth":t="ETH";break;case"lyarb":t="ARB";break}return`${t}-${e}`}class Q{constructor(e,t,a,i,r,p,s,u,y,l){this.__source=X.ContractCall,this.lyra=e,this.block=p,this.__data=t;const m=Q.getFields(e.version,e.network,t,a,i,r,s,u,y);this.address=m.address,this.isBaseCollateralEnabled=!l||l.gt(0),this.isPaused=m.isPaused,this.spotPrice=m.spotPrice,this.quoteToken=m.quoteToken,this.baseToken=m.baseToken,this.liquidityToken=m.liquidityToken,this.name=m.name,this.contractAddresses=m.contractAddresses;const c=t.liveBoards;this.openInterest=c.reduce((f,T)=>{const d=T.strikes.reduce((S,P)=>S.add(P.longCallOpenInterest),o),k=T.strikes.reduce((S,P)=>S.add(P.shortCallBaseOpenInterest).add(P.shortCallQuoteOpenInterest),o),w=T.strikes.reduce((S,P)=>S.add(P.longPutOpenInterest),o),g=T.strikes.reduce((S,P)=>S.add(P.shortPutOpenInterest),o);return f.add(d).add(k).add(w).add(g)},o),this.params=m.params,this.liveBoardsMap=c.reduce((f,T)=>({...f,[T.boardId.toNumber()]:T}),{})}static getFields(e,t,a,i,r,p,s,u,y,l){var m;const c=a.marketAddresses.optionMarket,f=(m=a.isPaused)!==null&&m!==void 0?m:i;let T,d,k,w,g,S;const P=a.marketParameters.pricingParams,x=a.marketParameters.tradeLimitParams,O=a.marketParameters.minCollatParams,V=a.marketParameters.forceCloseParams,B=a.marketParameters.varianceFeeParams,I=a.marketParameters.lpParams,F={optionPriceFee1xPoint:P.optionPriceFee1xPoint.toNumber(),optionPriceFee2xPoint:P.optionPriceFee2xPoint.toNumber(),optionPriceFeeCoefficient:P.optionPriceFeeCoefficient,spotPriceFee1xPoint:P.spotPriceFee1xPoint.toNumber(),spotPriceFee2xPoint:P.spotPriceFee2xPoint.toNumber(),spotPriceFeeCoefficient:P.spotPriceFeeCoefficient,vegaFeeCoefficient:P.vegaFeeCoefficient,minDelta:x.minDelta,shockVolA:O.shockVolA,shockVolB:O.shockVolB,shockVolPointA:O.shockVolPointA,shockVolPointB:O.shockVolPointB,minStaticQuoteCollateral:O.minStaticQuoteCollateral,minStaticBaseCollateral:O.minStaticBaseCollateral,callSpotPriceShock:O.callSpotPriceShock,putSpotPriceShock:O.putSpotPriceShock,standardSize:P.standardSize,skewAdjustmentFactor:P.skewAdjustmentFactor,minForceCloseDelta:x.minForceCloseDelta,shortPostCutoffVolShock:V.shortPostCutoffVolShock,shortVolShock:V.shortVolShock,longPostCutoffVolShock:V.longPostCutoffVolShock,longVolShock:V.longVolShock,shortSpotMin:V.shortSpotMin,absMinSkew:x.absMinSkew,absMaxSkew:x.absMaxSkew,minSkew:x.minSkew,maxSkew:x.maxSkew,maxBaseIv:x.maxBaseIV,maxVol:x.maxVol,minBaseIv:x.minBaseIV,minVol:x.minVol,forceCloseVarianceFeeCoefficient:B.forceCloseVarianceFeeCoefficient,defaultVarianceFeeCoefficient:B.defaultVarianceFeeCoefficient,minimumStaticVega:B.minimumStaticVega,vegaCoefficient:B.vegaCoefficient,referenceSkew:B.referenceSkew,minimumStaticSkewAdjustment:B.minimumStaticSkewAdjustment,skewAdjustmentCoefficient:B.skewAdjustmentCoefficient,minimumStaticIvVariance:B.minimumStaticIvVariance,ivVarianceCoefficient:B.ivVarianceCoefficient,withdrawalFee:I.withdrawalFee,withdrawalDelay:I.withdrawalDelay.toNumber(),depositDelay:I.depositDelay.toNumber(),tradingCutoff:x.tradingCutoff.toNumber(),NAV:a.liquidity.NAV,freeLiquidity:a.liquidity.freeLiquidity,tokenPrice:p,netStdVega:a.globalNetGreeks.netStdVega,netDelta:a.globalNetGreeks.netDelta,isGlobalPaused:i,isMarketPaused:a.isPaused,owner:r,poolHedgerParams:y??a.marketParameters.poolHedgerParams,hedgerView:s??null,adapterView:u??null,baseLimit:l};if(e===v.Avalon){const E=a;T=E.exchangeParams.spotPrice,d=Bt(E.exchangeParams.quoteKey),k=Bt(E.exchangeParams.baseKey),w=18,g=18,S={referenceSpotPrice:T,rateAndCarry:E.marketParameters.greekCacheParams.rateAndCarry,...F}}else{let E;switch(t){case U.Arbitrum:if(!u||!s)throw new Error("Adapter or hedger view does not exist");E=a,T=u.gmxMaxPrice,d=E.quoteSymbol,w=E.quoteDecimals.toNumber(),k=E.baseSymbol,g=E.baseDecimals.toNumber(),S={rateAndCarry:u.rateAndCarry,referenceSpotPrice:E.spotPrice,...F};break;case U.Optimism:if(!u)throw new Error("Adapter or hedger view does not exist");E=a,T=E.spotPrice,d=E.quoteSymbol,w=E.quoteDecimals.toNumber(),k=E.baseSymbol,g=E.baseDecimals.toNumber(),S={rateAndCarry:u.riskFreeRate,referenceSpotPrice:T,...F}}}const G=a.marketAddresses.quoteAsset,R=a.marketAddresses.baseAsset,te=sp(k,d),ne=a.marketParameters.tradeLimitParams.tradingCutoff.toNumber(),pe=a.marketParameters.lpParams.depositDelay.toNumber(),se=a.marketParameters.lpParams.withdrawalDelay.toNumber();return{address:c,name:te,isPaused:f,spotPrice:T,tradingCutoff:ne,quoteToken:{address:G,symbol:d,decimals:w},baseToken:{address:R,symbol:k,decimals:g},liquidityToken:{address:a.marketAddresses.liquidityToken,symbol:`${k}LP`,decimals:18},contractAddresses:a.marketAddresses,depositDelay:pe,withdrawalDelay:se,params:S}}static async get(e,t){if(e.version===v.Avalon){const[{marketView:a,isGlobalPaused:i,owner:r},p]=await Promise.all([Nt(e,t),e.provider.getBlock("latest")]);return new Q(e,a,i,r,a.tokenPrice,p)}else{const a=(await Q.getAll(e)).find(i=>i.isEqual(t));if(!a)throw new Error("Market does not exist");return a}}static async getMany(e,t){if(e.version===v.Avalon){const[a,i]=await Promise.all([Promise.all(t.map(r=>Nt(e,r))),e.provider.getBlock("latest")]);return a.map(({marketView:r,isGlobalPaused:p,owner:s})=>new Q(e,r,p,s,r.tokenPrice,i))}else return(await Q.getAll(e)).filter(a=>t.includes(a.address))}static async getAll(e){if(e.version===v.Avalon){const t=await $e(e);return await Q.getMany(e,t.map(a=>a.optionMarket))}else{const[{marketViews:t,isGlobalPaused:a,owner:i},r]=await Promise.all([e.network===U.Arbitrum?Xr(e):Jr(e),e.provider.getBlock("latest")]);return t.map(({marketView:s,hedgerView:u,adapterView:y,poolHedgerParams:l,tokenPrice:m,baseLimit:c})=>new Q(e,s,a,i,m,r,u,y,l,c))}}static find(e,t){return $t(e,t)}async refresh(){return await Q.get(this.lyra,this.address)}isEqual(e){return ht(this,e)}liveBoards(){return Object.values(this.liveBoardsMap).map(e=>new he(this.lyra,this,e,this.block)).filter(e=>this.block.timestamp<e.expiryTimestamp).sort((e,t)=>e.expiryTimestamp-t.expiryTimestamp)}liveBoard(e){const t=this.liveBoardsMap[e];if(!t)throw new Error("Board is expired or does not exist for market");return new he(this.lyra,this,t,this.block)}async board(e){try{return this.liveBoard(e)}catch{const[a,i]=await Promise.all([rp(this.lyra,this.address,e),this.lyra.provider.getBlock("latest")]);return new he(this.lyra,this,a,i)}}liveStrike(e){const t=this.liveBoards().find(i=>i.strikes().find(r=>r.id===e)),a=t==null?void 0:t.strikes().find(i=>i.id===e);if(!a)throw new Error("Strike is expired or does not exist for market");return a}async strike(e){try{return this.liveStrike(e)}catch{const[a,i]=await Promise.all([pp(this.lyra,this.address,e),this.lyra.provider.getBlock("latest")]);return new he(this.lyra,this,a,i).strike(e)}}liveOption(e,t){return this.liveStrike(e).option(t)}async option(e,t){return(await this.strike(e)).option(t)}async quote(e,t,a,i,r){return(await this.refresh()).quoteSync(e,t,a,i,r)}quoteSync(e,t,a,i,r){return this.liveOption(e,t).quoteSync(a,i,r)}async quoteAll(e,t){return(await this.refresh()).quoteAllSync(e,t)}quoteAllSync(e,t){return{boards:this.liveBoards().map(a=>a.quoteAllSync(e,t)),market:this}}contract(e){return q(this.lyra,this.contractAddresses,this.lyra.version,e)}async trade(e,t,a,i,r,p,s){return await Te.get(this.lyra,e,this.address,t,a,i,r,p,{...s})}approveDeposit(e,t){return Ve.approve(this,e,t)}initiateDeposit(e,t){return Ve.initiateDeposit(this,e,t)}initiateWithdraw(e,t){return Ne.initiateWithdraw(this,e,t)}approveTradeQuote(e,t){return Te.approveQuote(this,e,t)}approveTradeBase(e,t){return Te.approveBase(this,e,t)}async liquidity(){return await Er(this.lyra,this)}async netGreeks(){return await Nr(this.lyra,this)}async liquidityHistory(e){return await Ur(this.lyra,this,e)}async netGreeksHistory(e){return await zr(this.lyra,this,e)}async tradingVolumeHistory(e){return await ip(this.lyra,this,e)}async spotPriceHistory(e){return await tp(this.lyra,this,e)}async owner(){return await Qr(this.lyra,this.contractAddresses)}async deposits(e){return await Ve.getByOwner(this.lyra,this,e)}async withdrawals(e){return await Ne.getByOwner(this.lyra,this,e)}}class he{constructor(e,t,a,i){this.__source=X.ContractCall,this.lyra=e,this.block=i,this.__market=t,this.block=i;const r=he.getFields(t,a,i);this.id=r.id,this.expiryTimestamp=r.expiryTimestamp,this.timeToExpiry=r.timeToExpiry,this.isExpired=r.isExpired,this.baseIv=r.baseIv,this.spotPriceAtExpiry=r.spotPriceAtExpiry,this.isPaused=r.isPaused,this.tradingCutoffTimestamp=r.tradingCutoffTimestamp,this.timeToTradingCutoff=r.timeToTradingCutoff,this.isTradingCutoff=r.isTradingCutoff,this.params=r.params,this.liveStrikeMap=a.strikes.reduce((p,s)=>({...p,[s.strikeId.toNumber()]:s}),{})}static getFields(e,t,a){var i;const r=t.boardId.toNumber(),p=t.expiry.toNumber(),s=Math.max(0,p-a.timestamp),u=p-e.params.tradingCutoff,y=Math.max(0,u-a.timestamp),l=t.priceAtExpiry.isZero()?void 0:t.priceAtExpiry,m=!!l&&s===0,c=y===0,f=m?o:t.baseIv,T=(i=t.isPaused)!==null&&i!==void 0?i:e.isPaused;let d,k;if(e.lyra.version===v.Avalon){const w=t;d=w.forceCloseGwavIV,k=w.forceCloseGwavIV}else{const w=t;d=w.varianceGwavIv,k=w.forceCloseGwavIv}return{id:r,expiryTimestamp:p,tradingCutoffTimestamp:u,timeToExpiry:s,timeToTradingCutoff:y,isExpired:m,isTradingCutoff:c,spotPriceAtExpiry:l,baseIv:f,isPaused:T,params:{varianceGwavIv:d,forceCloseGwavIv:k,isBoardPaused:t.isPaused}}}static async get(e,t,a){return await(await Q.get(e,t)).board(a)}async refresh(){return await he.get(this.lyra,this.market().address,this.id)}market(){return this.__market}strikes(){return Object.values(this.liveStrikeMap).map(e=>new ge(this.lyra,this,e,this.block))}strike(e){const t=this.liveStrikeMap[e];if(!t)throw new Error("Strike does not exist for board");return new ge(this.lyra,this,t,this.block)}option(e,t){return this.strike(e).option(t)}async quote(e,t,a,i,r){return(await this.refresh()).quoteSync(e,t,a,i,r)}quoteSync(e,t,a,i,r){return this.option(e,t).quoteSync(a,i,r)}async quoteAll(e,t){return(await this.refresh()).quoteAllSync(e,t)}quoteAllSync(e,t){return{strikes:this.strikes().map(a=>a.quoteAllSync(e,t)),board:this}}}var A;(function(n){n.Optimism="optimism",n.OptimismGoerli="optimism-goerli",n.Arbitrum="arbitrum",n.ArbitrumGoerli="arbitrum-goerli"})(A||(A={}));const Gt="https://api.lyra.finance";function ot(n){switch(n){case A.Arbitrum:case A.ArbitrumGoerli:case A.Optimism:case A.OptimismGoerli:return v.Newport}}const Ht=n=>{switch(n){case 420:return A.OptimismGoerli;case 421613:return A.ArbitrumGoerli;case 10:return A.Optimism;case 42161:return A.Arbitrum;default:throw new Error("Chain ID is not supported by Lyra")}},up=n=>{switch(n){case A.OptimismGoerli:return 420;case A.ArbitrumGoerli:return 421613;case A.Optimism:return 10;case A.Arbitrum:return 42161;default:throw new Error("Chain is not supported by Lyra")}},op=n=>{switch(n){case A.Arbitrum:case A.Optimism:return ae.Mainnet;case A.OptimismGoerli:case A.ArbitrumGoerli:return ae.Testnet}},yp=n=>{switch(n){case A.Optimism:return 10;case A.OptimismGoerli:return 420;case A.Arbitrum:return 42161;case A.ArbitrumGoerli:return 421613}},lp=n=>{switch(n){case A.Optimism:return"https://mainnet.optimism.io";case A.OptimismGoerli:return"https://goerli.optimism.io";case A.Arbitrum:return"https://arb1.arbitrum.io/rpc";case A.ArbitrumGoerli:return"https://goerli-rollup.arbitrum.io/rpc"}},Ut=n=>{const e=lp(n),t=yp(n);return new Bn(e,t)},yt=(n,e)=>{switch(n){case A.Optimism:switch(e){case v.Avalon:return"https://subgraph.satsuma-prod.com/d14de8f7fd46/lyra/optimism-mainnet/api";case v.Newport:default:return"https://subgraph.satsuma-prod.com/d14de8f7fd46/lyra/optimism-mainnet-newport/api"}case A.OptimismGoerli:return"https://subgraph.satsuma-prod.com/d14de8f7fd46/lyra/optimism-goerli/api";case A.Arbitrum:return"https://subgraph.satsuma-prod.com/d14de8f7fd46/lyra/arbitrum-mainnet/api";case A.ArbitrumGoerli:return"https://subgraph.satsuma-prod.com/d14de8f7fd46/lyra/arbitrum-goerli/api"}},lt=n=>{switch(n){case A.Optimism:case A.OptimismGoerli:return"https://subgraph.satsuma-prod.com/d14de8f7fd46/lyra/optimism-governance/api";case A.Arbitrum:case A.ArbitrumGoerli:return"https://subgraph.satsuma-prod.com/d14de8f7fd46/lyra/arbitrum-governance/api"}};function mp(n){switch(n){case A.Arbitrum:case A.ArbitrumGoerli:return U.Arbitrum;case A.Optimism:case A.OptimismGoerli:return U.Optimism}}var v;(function(n){n.Avalon="avalon",n.Newport="newport"})(v||(v={}));class kp{constructor(e=A.Optimism){var t,a,i,r;if(typeof e=="object"){const p=e;this.provider=e.provider,this.chain=Ht(this.provider.network.chainId),this.apiUri=(t=p.apiUri)!==null&&t!==void 0?t:Gt,this.version=(a=e.version)!==null&&a!==void 0?a:ot(this.chain),this.subgraphUri=(i=p==null?void 0:p.subgraphUri)!==null&&i!==void 0?i:yt(this.chain,this.version),this.govSubgraphUri=(r=p==null?void 0:p.govSubgraphUri)!==null&&r!==void 0?r:lt(this.chain)}else typeof e=="number"?(this.chain=Ht(e),this.provider=Ut(this.chain),this.version=ot(this.chain),this.subgraphUri=yt(this.chain,this.version),this.govSubgraphUri=lt(this.chain)):(this.chain=e,this.provider=Ut(this.chain),this.version=ot(this.chain),this.subgraphUri=yt(this.chain,this.version),this.govSubgraphUri=lt(this.chain));this.subgraphClient=new Lt({connectToDevTools:!0,link:new Dt({uri:this.subgraphUri,fetch:mt}),cache:new Et}),this.govSubgraphClient=new Lt({connectToDevTools:!0,link:new Dt({uri:this.govSubgraphUri,fetch:mt}),cache:new Et}),this.network=mp(this.chain),this.apiUri=Gt,this.chainId=up(this.chain),this.deployment=op(this.chain)}async quote(e,t,a,i,r,p){return await(await this.market(e)).quote(t,a,i,r,p)}async quoteOption(e,t,a,i,r){return(await this.option(e,t,a)).quoteAllSync(i,r)}async quoteStrike(e,t,a,i){return(await this.strike(e,t)).quoteAllSync(a,i)}async quoteBoard(e,t,a,i){return(await this.board(e,t)).quoteAllSync(a,i)}async quoteMarket(e,t,a){return(await this.market(e)).quoteAllSync(t,a)}async approveTradeQuote(e,t,a){return(await this.market(e)).approveTradeQuote(t,a)}async approveTradeBase(e,t,a){return(await this.market(e)).approveTradeBase(t,a)}async trade(e,t,a,i,r,p,s,u){return await(await this.market(t)).trade(e,a,i,r,p,s,u)}onTrade(e,t){return De.on(this,e,t)}async markets(){return await Q.getAll(this)}async contractAddresses(){return await $e(this)}async marketAddresses(){return(await this.contractAddresses()).map(({optionMarket:e})=>e)}async market(e){return await Q.get(this,e)}async board(e,t){return await he.get(this,e,t)}async strike(e,t){return await ge.get(this,e,t)}async option(e,t,a){return await Pe.get(this,e,t,a)}async openPositions(e){return await le.getOpenByOwner(this,e)}async positions(e){return await le.getByOwner(this,e)}async position(e,t){return await le.get(this,e,t)}async events(e){return await We(this,e)}account(e){return Ze.get(this,e)}drip(e){return Ze.get(this,e).drip()}async deposits(e,t){const a=await this.market(e);return await Ve.getByOwner(this,a,t)}async approveDeposit(e,t,a){return(await this.market(e)).approveDeposit(t,a)}async initiateDeposit(e,t,a){return(await this.market(e)).initiateDeposit(t,a)}async withdrawals(e,t){const a=await this.market(e);return await Ne.getByOwner(this,a,t)}async initiateWithdraw(e,t,a){return(await this.market(e)).initiateWithdraw(t,a)}admin(){return wt.get(this)}async claimRewards(e,t){return await qe.claim(this,e,t)}async globalRewardEpochs(){return await at.getAll(this)}async accountRewardEpochs(e){return await qe.getByOwner(this,e)}}export{kp as L};
