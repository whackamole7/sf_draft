function g(t){if(!Number.isSafeInteger(t)||t<0)throw new Error(`Wrong positive integer: ${t}`)}function I(t,...e){if(!(t instanceof Uint8Array))throw new Error("Expected Uint8Array");if(e.length>0&&!e.includes(t.length))throw new Error(`Expected Uint8Array of length ${e}, not of length=${t.length}`)}function w(t,e=!0){if(t.destroyed)throw new Error("Hash instance has been destroyed");if(e&&t.finished)throw new Error("Hash#digest() has already been called")}function E(t,e){I(t);const n=e.outputLen;if(t.length<n)throw new Error(`digestInto() expects output buffer of length at least ${n}`)}const p=BigInt(2**32-1),y=BigInt(32);function U(t,e=!1){return e?{h:Number(t&p),l:Number(t>>y&p)}:{h:Number(t>>y&p)|0,l:Number(t&p)|0}}function H(t,e=!1){let n=new Uint32Array(t.length),s=new Uint32Array(t.length);for(let o=0;o<t.length;o++){const{h:i,l:r}=U(t[o],e);[n[o],s[o]]=[i,r]}return[n,s]}const m=(t,e,n)=>t<<n|e>>>32-n,T=(t,e,n)=>e<<n|t>>>32-n,S=(t,e,n)=>e<<n-32|t>>>64-n,N=(t,e,n)=>t<<n-32|e>>>64-n;/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */const $=t=>t instanceof Uint8Array,F=t=>new Uint32Array(t.buffer,t.byteOffset,Math.floor(t.byteLength/4)),X=new Uint8Array(new Uint32Array([287454020]).buffer)[0]===68;if(!X)throw new Error("Non little-endian hardware is not supported");function M(t){if(typeof t!="string")throw new Error(`utf8ToBytes expected string, got ${typeof t}`);return new Uint8Array(new TextEncoder().encode(t))}function A(t){if(typeof t=="string"&&(t=M(t)),!$(t))throw new Error(`expected Uint8Array, got ${typeof t}`);return t}class P{clone(){return this._cloneInto()}}function R(t){const e=s=>t().update(A(s)).digest(),n=t();return e.outputLen=n.outputLen,e.blockLen=n.blockLen,e.create=()=>t(),e}const[b,L,B]=[[],[],[]],j=BigInt(0),f=BigInt(1),q=BigInt(2),v=BigInt(7),K=BigInt(256),W=BigInt(113);for(let t=0,e=f,n=1,s=0;t<24;t++){[n,s]=[s,(2*n+3*s)%5],b.push(2*(5*s+n)),L.push((t+1)*(t+2)/2%64);let o=j;for(let i=0;i<7;i++)e=(e<<f^(e>>v)*W)%K,e&q&&(o^=f<<(f<<BigInt(i))-f);B.push(o)}const[z,C]=H(B,!0),x=(t,e,n)=>n>32?S(t,e,n):m(t,e,n),k=(t,e,n)=>n>32?N(t,e,n):T(t,e,n);function D(t,e=24){const n=new Uint32Array(10);for(let s=24-e;s<24;s++){for(let r=0;r<10;r++)n[r]=t[r]^t[r+10]^t[r+20]^t[r+30]^t[r+40];for(let r=0;r<10;r+=2){const h=(r+8)%10,u=(r+2)%10,l=n[u],c=n[u+1],O=x(l,c,1)^n[h],_=k(l,c,1)^n[h+1];for(let a=0;a<50;a+=10)t[r+a]^=O,t[r+a+1]^=_}let o=t[2],i=t[3];for(let r=0;r<24;r++){const h=L[r],u=x(o,i,h),l=k(o,i,h),c=b[r];o=t[c],i=t[c+1],t[c]=u,t[c+1]=l}for(let r=0;r<50;r+=10){for(let h=0;h<10;h++)n[h]=t[r+h];for(let h=0;h<10;h++)t[r+h]^=~n[(h+2)%10]&n[(h+4)%10]}t[0]^=z[s],t[1]^=C[s]}n.fill(0)}class d extends P{constructor(e,n,s,o=!1,i=24){if(super(),this.blockLen=e,this.suffix=n,this.outputLen=s,this.enableXOF=o,this.rounds=i,this.pos=0,this.posOut=0,this.finished=!1,this.destroyed=!1,g(s),0>=this.blockLen||this.blockLen>=200)throw new Error("Sha3 supports only keccak-f1600 function");this.state=new Uint8Array(200),this.state32=F(this.state)}keccak(){D(this.state32,this.rounds),this.posOut=0,this.pos=0}update(e){w(this);const{blockLen:n,state:s}=this;e=A(e);const o=e.length;for(let i=0;i<o;){const r=Math.min(n-this.pos,o-i);for(let h=0;h<r;h++)s[this.pos++]^=e[i++];this.pos===n&&this.keccak()}return this}finish(){if(this.finished)return;this.finished=!0;const{state:e,suffix:n,pos:s,blockLen:o}=this;e[s]^=n,n&128&&s===o-1&&this.keccak(),e[o-1]^=128,this.keccak()}writeInto(e){w(this,!1),I(e),this.finish();const n=this.state,{blockLen:s}=this;for(let o=0,i=e.length;o<i;){this.posOut>=s&&this.keccak();const r=Math.min(s-this.posOut,i-o);e.set(n.subarray(this.posOut,this.posOut+r),o),this.posOut+=r,o+=r}return e}xofInto(e){if(!this.enableXOF)throw new Error("XOF is not possible for this instance");return this.writeInto(e)}xof(e){return g(e),this.xofInto(new Uint8Array(e))}digestInto(e){if(E(e,this),this.finished)throw new Error("digest() was already called");return this.writeInto(e),this.destroy(),e}digest(){return this.digestInto(new Uint8Array(this.outputLen))}destroy(){this.destroyed=!0,this.state.fill(0)}_cloneInto(e){const{blockLen:n,suffix:s,outputLen:o,rounds:i,enableXOF:r}=this;return e||(e=new d(n,s,o,r,i)),e.state32.set(this.state32),e.pos=this.pos,e.posOut=this.posOut,e.finished=this.finished,e.rounds=i,e.suffix=s,e.outputLen=o,e.enableXOF=r,e.destroyed=this.destroyed,e}}const G=(t,e,n)=>R(()=>new d(e,t,n)),J=G(1,136,256/8);/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */BigInt(0);BigInt(1);BigInt(2);function Q(t,e){if(t.length!==e.length)return!1;for(let n=0;n<t.length;n++)if(t[n]!==e[n])return!1;return!0}export{Q as e,J as k};
