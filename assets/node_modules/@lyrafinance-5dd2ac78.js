import{w as nn,d as ki}from"./optimism-b75d32e9.js";import{i as wt,I as Dr}from"./ts-invariant-d7b1ef22.js";import{f as Ln}from"./cross-fetch-11000567.js";import{C as nt,i as aa,g as Te,f as Lr,B as M,p as Br,a as Er,b as Fa,S as _r}from"./@ethersproject-8d169c9e.js";import{g as re}from"./graphql-tag-51d2f030.js";import{_ as Re,a as w,b as qe,c as Le,d as Be,e as Ge}from"./tslib-c8b1efb7.js";import{g as Rr}from"./vite-plugin-node-polyfills-cb3ca294.js";import{T as Et,e as K,S as Nr}from"./@wry-dfc42599.js";import{v as Qe,B as gi,p as Gr,K as he,i as qa}from"./graphql-6a9502bd.js";import{O as $}from"./zen-observable-ts-47d5f8bb.js";import"./symbol-observable-ea67d9ce.js";var ia="3.8.1";function ke(n){try{return n()}catch{}}const Va=ke(function(){return globalThis})||ke(function(){return window})||ke(function(){return self})||ke(function(){return Rr})||ke(function(){return ke.constructor("return this")()});var Da=new Map;function Bn(n){var e=Da.get(n)||1;return Da.set(n,e+1),"".concat(n,":").concat(e,":").concat(Math.random().toString(36).slice(2))}function wi(n,e){e===void 0&&(e=0);var t=Bn("stringifyForDisplay");return JSON.stringify(n,function(a,i){return i===void 0?t:i},e).split(JSON.stringify(t)).join("<undefined>")}function $t(n){return function(e){for(var t=[],a=1;a<arguments.length;a++)t[a-1]=arguments[a];n.apply(void 0,Re([typeof e=="number"?ra(e):e],t,!1))}}var B=Object.assign(function(e,t){for(var a=[],i=2;i<arguments.length;i++)a[i-2]=arguments[i];e||wt(e,ra(t,a))},{debug:$t(wt.debug),log:$t(wt.log),warn:$t(wt.warn),error:$t(wt.error)});function pe(n){for(var e=[],t=1;t<arguments.length;t++)e[t-1]=arguments[t];return new Dr(ra(n,e))}var La=Symbol.for("ApolloErrorMessageHandler_"+ia);function ra(n,e){if(e===void 0&&(e=[]),!!n){var t=e.map(function(a){return typeof a=="string"?a:wi(a,2).slice(0,1e3)});return Va[La]&&Va[La](n,t)||"An error occured! For more details, see the full error text at https://go.apollo.dev/c/err#".concat(encodeURIComponent(JSON.stringify({version:ia,message:n,args:t})))}}function _t(n,e){var t=n.directives;return!t||!t.length?!0:Ur(t).every(function(a){var i=a.directive,r=a.ifArgument,s=!1;return r.value.kind==="Variable"?(s=e&&e[r.value.name.value],B(s!==void 0,64,i.name.value)):s=r.value.value,i.name.value==="skip"?!s:s})}function At(n,e,t){var a=new Set(n),i=a.size;return Qe(e,{Directive:function(r){if(a.delete(r.name.value)&&(!t||!a.size))return gi}}),t?!a.size:a.size<i}function Qr(n){return n&&At(["client","export"],n,!0)}function Hr(n){var e=n.name.value;return e==="skip"||e==="include"}function Ur(n){var e=[];return n&&n.length&&n.forEach(function(t){if(Hr(t)){var a=t.arguments,i=t.name.value;B(a&&a.length===1,65,i);var r=a[0];B(r.name&&r.name.value==="if",66,i);var s=r.value;B(s&&(s.kind==="Variable"||s.kind==="BooleanValue"),67,i),e.push({directive:t,ifArgument:r})}}),e}var Ve=typeof WeakMap=="function"&&ke(function(){return navigator.product})!=="ReactNative",Pi=typeof WeakSet=="function",Ci=typeof Symbol=="function"&&typeof Symbol.for=="function",yn=Ci&&Symbol.asyncIterator;ke(function(){return window.document.createElement});ke(function(){return navigator.userAgent.indexOf("jsdom")>=0});function j(n){return n!==null&&typeof n=="object"}function Wr(n,e){var t=e,a=[];n.definitions.forEach(function(r){if(r.kind==="OperationDefinition")throw pe(68,r.operation,r.name?" named '".concat(r.name.value,"'"):"");r.kind==="FragmentDefinition"&&a.push(r)}),typeof t>"u"&&(B(a.length===1,69,a.length),t=a[0].name.value);var i=w(w({},n),{definitions:Re([{kind:"OperationDefinition",operation:"query",selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:t}}]}}],n.definitions,!0)});return i}function mn(n){n===void 0&&(n=[]);var e={};return n.forEach(function(t){e[t.name.value]=t}),e}function dn(n,e){switch(n.kind){case"InlineFragment":return n;case"FragmentSpread":{var t=n.name.value;if(typeof e=="function")return e(t);var a=e&&e[t];return B(a,70,t),a||null}default:return null}}function ot(n){return{__ref:String(n)}}function H(n){return!!(n&&typeof n=="object"&&typeof n.__ref=="string")}function jr(n){return j(n)&&n.kind==="Document"&&Array.isArray(n.definitions)}function zr(n){return n.kind==="StringValue"}function $r(n){return n.kind==="BooleanValue"}function Kr(n){return n.kind==="IntValue"}function Xr(n){return n.kind==="FloatValue"}function Yr(n){return n.kind==="Variable"}function Zr(n){return n.kind==="ObjectValue"}function Jr(n){return n.kind==="ListValue"}function es(n){return n.kind==="EnumValue"}function ts(n){return n.kind==="NullValue"}function ct(n,e,t,a){if(Kr(t)||Xr(t))n[e.value]=Number(t.value);else if($r(t)||zr(t))n[e.value]=t.value;else if(Zr(t)){var i={};t.fields.map(function(s){return ct(i,s.name,s.value,a)}),n[e.value]=i}else if(Yr(t)){var r=(a||{})[t.name.value];n[e.value]=r}else if(Jr(t))n[e.value]=t.values.map(function(s){var p={};return ct(p,e,s,a),p[e.value]});else if(es(t))n[e.value]=t.value;else if(ts(t))n[e.value]=null;else throw pe(79,e.value,t.kind)}function ns(n,e){var t=null;n.directives&&(t={},n.directives.forEach(function(i){t[i.name.value]={},i.arguments&&i.arguments.forEach(function(r){var s=r.name,p=r.value;return ct(t[i.name.value],s,p,e)})}));var a=null;return n.arguments&&n.arguments.length&&(a={},n.arguments.forEach(function(i){var r=i.name,s=i.value;return ct(a,r,s,e)})),sa(n.name.value,a,t)}var as=["connection","include","skip","client","rest","export","nonreactive"],sa=Object.assign(function(n,e,t){if(e&&t&&t.connection&&t.connection.key)if(t.connection.filter&&t.connection.filter.length>0){var a=t.connection.filter?t.connection.filter:[];a.sort();var i={};return a.forEach(function(p){i[p]=e[p]}),"".concat(t.connection.key,"(").concat(Pt(i),")")}else return t.connection.key;var r=n;if(e){var s=Pt(e);r+="(".concat(s,")")}return t&&Object.keys(t).forEach(function(p){as.indexOf(p)===-1&&(t[p]&&Object.keys(t[p]).length?r+="@".concat(p,"(").concat(Pt(t[p]),")"):r+="@".concat(p))}),r},{setStringify:function(n){var e=Pt;return Pt=n,e}}),Pt=function(e){return JSON.stringify(e,is)};function is(n,e){return j(e)&&!Array.isArray(e)&&(e=Object.keys(e).sort().reduce(function(t,a){return t[a]=e[a],t},{})),e}function cn(n,e){if(n.arguments&&n.arguments.length){var t={};return n.arguments.forEach(function(a){var i=a.name,r=a.value;return ct(t,i,r,e)}),t}return null}function He(n){return n.alias?n.alias.value:n.name.value}function En(n,e,t){for(var a,i=0,r=e.selections;i<r.length;i++){var s=r[i];if(Ue(s)){if(s.name.value==="__typename")return n[He(s)]}else a?a.push(s):a=[s]}if(typeof n.__typename=="string")return n.__typename;if(a)for(var p=0,o=a;p<o.length;p++){var s=o[p],u=En(n,dn(s,t).selectionSet,t);if(typeof u=="string")return u}}function Ue(n){return n.kind==="Field"}function rs(n){return n.kind==="InlineFragment"}function Rt(n){B(n&&n.kind==="Document",71);var e=n.definitions.filter(function(t){return t.kind!=="FragmentDefinition"}).map(function(t){if(t.kind!=="OperationDefinition")throw pe(72,t.kind);return t});return B(e.length<=1,73,e.length),n}function Nt(n){return Rt(n),n.definitions.filter(function(e){return e.kind==="OperationDefinition"})[0]}function _n(n){return n.definitions.filter(function(e){return e.kind==="OperationDefinition"&&!!e.name}).map(function(e){return e.name.value})[0]||null}function Tn(n){return n.definitions.filter(function(e){return e.kind==="FragmentDefinition"})}function Mi(n){var e=Nt(n);return B(e&&e.operation==="query",74),e}function ss(n){B(n.kind==="Document",75),B(n.definitions.length<=1,76);var e=n.definitions[0];return B(e.kind==="FragmentDefinition",77),e}function Gt(n){Rt(n);for(var e,t=0,a=n.definitions;t<a.length;t++){var i=a[t];if(i.kind==="OperationDefinition"){var r=i.operation;if(r==="query"||r==="mutation"||r==="subscription")return i}i.kind==="FragmentDefinition"&&!e&&(e=i)}if(e)return e;throw pe(78)}function pa(n){var e=Object.create(null),t=n&&n.variableDefinitions;return t&&t.length&&t.forEach(function(a){a.defaultValue&&ct(e,a.variable.name,a.defaultValue)}),e}function ps(n){return n}var Oi=function(){function n(e,t){t===void 0&&(t=Object.create(null)),this.resultCache=Pi?new WeakSet:new Set,this.transform=e,t.getCacheKey&&(this.getCacheKey=t.getCacheKey),t.cache!==!1&&(this.stableCacheKeys=new Et(Ve,function(a){return{key:a}}))}return n.prototype.getCacheKey=function(e){return[e]},n.identity=function(){return new n(ps,{cache:!1})},n.split=function(e,t,a){return a===void 0&&(a=n.identity()),new n(function(i){var r=e(i)?t:a;return r.transformDocument(i)},{cache:!1})},n.prototype.transformDocument=function(e){if(this.resultCache.has(e))return e;var t=this.getStableCacheEntry(e);if(t&&t.value)return t.value;Rt(e);var a=this.transform(e);return this.resultCache.add(a),t&&(t.value=a),a},n.prototype.concat=function(e){var t=this;return new n(function(a){return e.transformDocument(t.transformDocument(a))},{cache:!1})},n.prototype.getStableCacheEntry=function(e){if(this.stableCacheKeys){var t=this.getCacheKey(e);if(t)return B(Array.isArray(t),63),this.stableCacheKeys.lookupArray(t)}},n}(),at=Ve?new WeakMap:void 0,Si=function(n){var e;return e=at==null?void 0:at.get(n),e||(e=Gr(n),at==null||at.set(n,e)),e},X=Array.isArray;function Oe(n){return Array.isArray(n)&&n.length>0}var Ba={kind:he.FIELD,name:{kind:he.NAME,value:"__typename"}};function xi(n,e){return!n||n.selectionSet.selections.every(function(t){return t.kind===he.FRAGMENT_SPREAD&&xi(e[t.name.value],e)})}function os(n){return xi(Nt(n)||ss(n),mn(Tn(n)))?null:n}function us(n){var e=new Map,t=new Map;return n.forEach(function(a){a&&(a.name?e.set(a.name,a):a.test&&t.set(a.test,a))}),function(a){var i=e.get(a.name.value);return!i&&t.size&&t.forEach(function(r,s){s(a)&&(i=r)}),i}}function Ea(n){var e=new Map;return function(a){a===void 0&&(a=n);var i=e.get(a);return i||e.set(a,i={variables:new Set,fragmentSpreads:new Set}),i}}function Ii(n,e){Rt(e);for(var t=Ea(""),a=Ea(""),i=function(v){for(var k=0,b=void 0;k<v.length&&(b=v[k]);++k)if(!X(b)){if(b.kind===he.OPERATION_DEFINITION)return t(b.name&&b.name.value);if(b.kind===he.FRAGMENT_DEFINITION)return a(b.name.value)}return globalThis.__DEV__!==!1&&B.error(80),null},r=0,s=e.definitions.length-1;s>=0;--s)e.definitions[s].kind===he.OPERATION_DEFINITION&&++r;var p=us(n),o=function(v){return Oe(v)&&v.map(p).some(function(k){return k&&k.remove})},u=new Map,l=!1,y={enter:function(v){if(o(v.directives))return l=!0,null}},m=Qe(e,{Field:y,InlineFragment:y,VariableDefinition:{enter:function(){return!1}},Variable:{enter:function(v,k,b,g,C){var P=i(C);P&&P.variables.add(v.name.value)}},FragmentSpread:{enter:function(v,k,b,g,C){if(o(v.directives))return l=!0,null;var P=i(C);P&&P.fragmentSpreads.add(v.name.value)}},FragmentDefinition:{enter:function(v,k,b,g){u.set(JSON.stringify(g),v)},leave:function(v,k,b,g){var C=u.get(JSON.stringify(g));if(v===C)return v;if(r>0&&v.selectionSet.selections.every(function(P){return P.kind===he.FIELD&&P.name.value==="__typename"}))return a(v.name.value).removed=!0,l=!0,null}},Directive:{leave:function(v){if(p(v))return l=!0,null}}});if(!l)return e;var d=function(v){return v.transitiveVars||(v.transitiveVars=new Set(v.variables),v.removed||v.fragmentSpreads.forEach(function(k){d(a(k)).transitiveVars.forEach(function(b){v.transitiveVars.add(b)})})),v},T=new Set;m.definitions.forEach(function(v){v.kind===he.OPERATION_DEFINITION?d(t(v.name&&v.name.value)).fragmentSpreads.forEach(function(k){T.add(k)}):v.kind===he.FRAGMENT_DEFINITION&&r===0&&!a(v.name.value).removed&&T.add(v.name.value)}),T.forEach(function(v){d(a(v)).fragmentSpreads.forEach(function(k){T.add(k)})});var c=function(v){return!!(!T.has(v)||a(v).removed)},h={enter:function(v){if(c(v.name.value))return null}};return os(Qe(m,{FragmentSpread:h,FragmentDefinition:h,OperationDefinition:{leave:function(v){if(v.variableDefinitions){var k=d(t(v.name&&v.name.value)).transitiveVars;if(k.size<v.variableDefinitions.length)return w(w({},v),{variableDefinitions:v.variableDefinitions.filter(function(b){return k.has(b.variable.name.value)})})}}}}))}var oa=Object.assign(function(n){return Qe(n,{SelectionSet:{enter:function(e,t,a){if(!(a&&a.kind===he.OPERATION_DEFINITION)){var i=e.selections;if(i){var r=i.some(function(p){return Ue(p)&&(p.name.value==="__typename"||p.name.value.lastIndexOf("__",0)===0)});if(!r){var s=a;if(!(Ue(s)&&s.directives&&s.directives.some(function(p){return p.name.value==="export"})))return w(w({},e),{selections:Re(Re([],i,!0),[Ba],!1)})}}}}}})},{added:function(n){return n===Ba}});function ls(n){var e=Gt(n),t=e.operation;if(t==="query")return n;var a=Qe(n,{OperationDefinition:{enter:function(i){return w(w({},i),{operation:"query"})}}});return a}function Ai(n){Rt(n);var e=Ii([{test:function(t){return t.name.value==="client"},remove:!0}],n);return e}var ys=Object.prototype.hasOwnProperty;function _a(){for(var n=[],e=0;e<arguments.length;e++)n[e]=arguments[e];return ua(n)}function ua(n){var e=n[0]||{},t=n.length;if(t>1)for(var a=new We,i=1;i<t;++i)e=a.merge(e,n[i]);return e}var ms=function(n,e,t){return this.merge(n[t],e[t])},We=function(){function n(e){e===void 0&&(e=ms),this.reconciler=e,this.isObject=j,this.pastCopies=new Set}return n.prototype.merge=function(e,t){for(var a=this,i=[],r=2;r<arguments.length;r++)i[r-2]=arguments[r];return j(t)&&j(e)?(Object.keys(t).forEach(function(s){if(ys.call(e,s)){var p=e[s];if(t[s]!==p){var o=a.reconciler.apply(a,Re([e,t,s],i,!1));o!==p&&(e=a.shallowCopyForMerge(e),e[s]=o)}}else e=a.shallowCopyForMerge(e),e[s]=t[s]}),e):t},n.prototype.shallowCopyForMerge=function(e){return j(e)&&(this.pastCopies.has(e)||(Array.isArray(e)?e=e.slice(0):e=w({__proto__:Object.getPrototypeOf(e)},e),this.pastCopies.add(e))),e},n}(),Ra=$.prototype,Na="@@observable";Ra[Na]||(Ra[Na]=function(){return this});var ds=Object.prototype.toString;function Fi(n){return Rn(n)}function Rn(n,e){switch(ds.call(n)){case"[object Array]":{if(e=e||new Map,e.has(n))return e.get(n);var t=n.slice(0);return e.set(n,t),t.forEach(function(i,r){t[r]=Rn(i,e)}),t}case"[object Object]":{if(e=e||new Map,e.has(n))return e.get(n);var a=Object.create(Object.getPrototypeOf(n));return e.set(n,a),Object.keys(n).forEach(function(i){a[i]=Rn(n[i],e)}),a}default:return n}}function cs(n){var e=new Set([n]);return e.forEach(function(t){j(t)&&Ts(t)===t&&Object.getOwnPropertyNames(t).forEach(function(a){j(t[a])&&e.add(t[a])})}),n}function Ts(n){if(globalThis.__DEV__!==!1&&!Object.isFrozen(n))try{Object.freeze(n)}catch(e){if(e instanceof TypeError)return null;throw e}return n}function Nn(n){return globalThis.__DEV__!==!1&&cs(n),n}function St(n,e,t){var a=[];n.forEach(function(i){return i[e]&&a.push(i)}),a.forEach(function(i){return i[e](t)})}function wn(n,e,t){return new $(function(a){var i=a.next,r=a.error,s=a.complete,p=0,o=!1,u={then:function(d){return new Promise(function(T){return T(d())})}};function l(d,T){return d?function(c){++p;var h=function(){return d(c)};u=u.then(h,h).then(function(v){--p,i&&i.call(a,v),o&&y.complete()},function(v){throw--p,v}).catch(function(v){r&&r.call(a,v)})}:function(c){return T&&T.call(a,c)}}var y={next:l(e,i),error:l(t,r),complete:function(){o=!0,p||s&&s.call(a)}},m=n.subscribe(y);return function(){return m.unsubscribe()}})}function qi(n){function e(t){Object.defineProperty(n,t,{value:$})}return Ci&&Symbol.species&&e(Symbol.species),e("@@species"),n}function Ga(n){return n&&typeof n.then=="function"}var rt=function(n){qe(e,n);function e(t){var a=n.call(this,function(i){return a.addObserver(i),function(){return a.removeObserver(i)}})||this;return a.observers=new Set,a.promise=new Promise(function(i,r){a.resolve=i,a.reject=r}),a.handlers={next:function(i){a.sub!==null&&(a.latest=["next",i],a.notify("next",i),St(a.observers,"next",i))},error:function(i){var r=a.sub;r!==null&&(r&&setTimeout(function(){return r.unsubscribe()}),a.sub=null,a.latest=["error",i],a.reject(i),a.notify("error",i),St(a.observers,"error",i))},complete:function(){var i=a,r=i.sub,s=i.sources,p=s===void 0?[]:s;if(r!==null){var o=p.shift();o?Ga(o)?o.then(function(u){return a.sub=u.subscribe(a.handlers)}):a.sub=o.subscribe(a.handlers):(r&&setTimeout(function(){return r.unsubscribe()}),a.sub=null,a.latest&&a.latest[0]==="next"?a.resolve(a.latest[1]):a.resolve(),a.notify("complete"),St(a.observers,"complete"))}}},a.nextResultListeners=new Set,a.cancel=function(i){a.reject(i),a.sources=[],a.handlers.complete()},a.promise.catch(function(i){}),typeof t=="function"&&(t=[new $(t)]),Ga(t)?t.then(function(i){return a.start(i)},a.handlers.error):a.start(t),a}return e.prototype.start=function(t){this.sub===void 0&&(this.sources=Array.from(t),this.handlers.complete())},e.prototype.deliverLastMessage=function(t){if(this.latest){var a=this.latest[0],i=t[a];i&&i.call(t,this.latest[1]),this.sub===null&&a==="next"&&t.complete&&t.complete()}},e.prototype.addObserver=function(t){this.observers.has(t)||(this.deliverLastMessage(t),this.observers.add(t))},e.prototype.removeObserver=function(t){this.observers.delete(t)&&this.observers.size<1&&this.handlers.complete()},e.prototype.notify=function(t,a){var i=this.nextResultListeners;i.size&&(this.nextResultListeners=new Set,i.forEach(function(r){return r(t,a)}))},e.prototype.beforeNext=function(t){var a=!1;this.nextResultListeners.add(function(i,r){a||(a=!0,t(i,r))})},e}($);qi(rt);function ut(n){return"incremental"in n}function fs(n){return"hasNext"in n&&"data"in n}function hs(n){return ut(n)||fs(n)}function vs(n){return j(n)&&"payload"in n}function Vi(n,e){var t=n,a=new We;return ut(e)&&Oe(e.incremental)&&e.incremental.forEach(function(i){for(var r=i.data,s=i.path,p=s.length-1;p>=0;--p){var o=s[p],u=!isNaN(+o),l=u?[]:{};l[o]=r,r=l}t=a.merge(t,r)}),t}function Zt(n){var e=Gn(n);return Oe(e)}function Gn(n){var e=Oe(n.errors)?n.errors.slice(0):[];return ut(n)&&Oe(n.incremental)&&n.incremental.forEach(function(t){t.errors&&e.push.apply(e,t.errors)}),e}function Tt(){for(var n=[],e=0;e<arguments.length;e++)n[e]=arguments[e];var t=Object.create(null);return n.forEach(function(a){a&&Object.keys(a).forEach(function(i){var r=a[i];r!==void 0&&(t[i]=r)})}),t}function Pn(n,e){return Tt(n,e,e.variables&&{variables:Tt(w(w({},n&&n.variables),e.variables))})}function Cn(n){return new $(function(e){e.error(n)})}var Qn=function(n,e,t){var a=new Error(t);throw a.name="ServerError",a.response=n,a.statusCode=n.status,a.result=e,a};function bs(n){for(var e=["query","operationName","variables","extensions","context"],t=0,a=Object.keys(n);t<a.length;t++){var i=a[t];if(e.indexOf(i)<0)throw pe(41,i)}return n}function ks(n,e){var t=w({},n),a=function(r){typeof r=="function"?t=w(w({},t),r(t)):t=w(w({},t),r)},i=function(){return w({},t)};return Object.defineProperty(e,"setContext",{enumerable:!1,value:a}),Object.defineProperty(e,"getContext",{enumerable:!1,value:i}),e}function gs(n){var e={variables:n.variables||{},extensions:n.extensions||{},operationName:n.operationName,query:n.query};return e.operationName||(e.operationName=typeof e.query!="string"?_n(e.query)||void 0:""),e}function ws(n,e){var t=w({},n),a=new Set(Object.keys(n));return Qe(e,{Variable:function(i,r,s){s&&s.kind!=="VariableDefinition"&&a.delete(i.name.value)}}),a.forEach(function(i){delete t[i]}),t}function Qa(n,e){return e?e(n):$.of()}function Ct(n){return typeof n=="function"?new Qt(n):n}function Kt(n){return n.request.length<=1}var Qt=function(){function n(e){e&&(this.request=e)}return n.empty=function(){return new n(function(){return $.of()})},n.from=function(e){return e.length===0?n.empty():e.map(Ct).reduce(function(t,a){return t.concat(a)})},n.split=function(e,t,a){var i=Ct(t),r=Ct(a||new n(Qa));return Kt(i)&&Kt(r)?new n(function(s){return e(s)?i.request(s)||$.of():r.request(s)||$.of()}):new n(function(s,p){return e(s)?i.request(s,p)||$.of():r.request(s,p)||$.of()})},n.execute=function(e,t){return e.request(ks(t.context,gs(bs(t))))||$.of()},n.concat=function(e,t){var a=Ct(e);if(Kt(a))return globalThis.__DEV__!==!1&&B.warn(33,a),a;var i=Ct(t);return Kt(i)?new n(function(r){return a.request(r,function(s){return i.request(s)||$.of()})||$.of()}):new n(function(r,s){return a.request(r,function(p){return i.request(p,s)||$.of()})||$.of()})},n.prototype.split=function(e,t,a){return this.concat(n.split(e,t,a||new n(Qa)))},n.prototype.concat=function(e){return n.concat(this,e)},n.prototype.request=function(e,t){throw pe(34)},n.prototype.onError=function(e,t){if(t&&t.error)return t.error(e),!1;throw e},n.prototype.setOnError=function(e){return this.onError=e,this},n}(),Hn=Qt.execute;function Ps(n){var e,t=n[Symbol.asyncIterator]();return e={next:function(){return t.next()}},e[Symbol.asyncIterator]=function(){return this},e}function Cs(n){var e=null,t=null,a=!1,i=[],r=[];function s(y){if(!t){if(r.length){var m=r.shift();if(Array.isArray(m)&&m[0])return m[0]({value:y,done:!1})}i.push(y)}}function p(y){t=y;var m=r.slice();m.forEach(function(d){d[1](y)}),!e||e()}function o(){a=!0;var y=r.slice();y.forEach(function(m){m[0]({value:void 0,done:!0})}),!e||e()}e=function(){e=null,n.removeListener("data",s),n.removeListener("error",p),n.removeListener("end",o),n.removeListener("finish",o),n.removeListener("close",o)},n.on("data",s),n.on("error",p),n.on("end",o),n.on("finish",o),n.on("close",o);function u(){return new Promise(function(y,m){if(t)return m(t);if(i.length)return y({value:i.shift(),done:!1});if(a)return y({value:void 0,done:!0});r.push([y,m])})}var l={next:function(){return u()}};return yn&&(l[Symbol.asyncIterator]=function(){return this}),l}function Ms(n){var e=!1,t={next:function(){return e?Promise.resolve({value:void 0,done:!0}):(e=!0,new Promise(function(a,i){n.then(function(r){a({value:r,done:!1})}).catch(i)}))}};return yn&&(t[Symbol.asyncIterator]=function(){return this}),t}function Ha(n){var e={next:function(){return n.read()}};return yn&&(e[Symbol.asyncIterator]=function(){return this}),e}function Os(n){return!!n.body}function Ss(n){return!!n.getReader}function xs(n){return!!(yn&&n[Symbol.asyncIterator])}function Is(n){return!!n.stream}function As(n){return!!n.arrayBuffer}function Fs(n){return!!n.pipe}function qs(n){var e=n;if(Os(n)&&(e=n.body),xs(e))return Ps(e);if(Ss(e))return Ha(e.getReader());if(Is(e))return Ha(e.stream().getReader());if(As(e))return Ms(e.arrayBuffer());if(Fs(e))return Cs(e);throw new Error("Unknown body type for responseIterator. Please pass a streamable response.")}var la=Symbol();function Vs(n){return n.extensions?Array.isArray(n.extensions[la]):!1}function Ds(n){return n.hasOwnProperty("graphQLErrors")}var Ls=function(n){var e=Re(Re(Re([],n.graphQLErrors,!0),n.clientErrors,!0),n.protocolErrors,!0);return n.networkError&&e.push(n.networkError),e.map(function(t){return j(t)&&t.message||"Error message not found."}).join(`
`)},it=function(n){qe(e,n);function e(t){var a=t.graphQLErrors,i=t.protocolErrors,r=t.clientErrors,s=t.networkError,p=t.errorMessage,o=t.extraInfo,u=n.call(this,p)||this;return u.name="ApolloError",u.graphQLErrors=a||[],u.protocolErrors=i||[],u.clientErrors=r||[],u.networkError=s||null,u.message=p||Ls(u),u.extraInfo=o,u.__proto__=e.prototype,u}return e}(Error),Ua=Object.prototype.hasOwnProperty;function Bs(n,e){var t;return Le(this,void 0,void 0,function(){var a,i,r,s,p,o,u,l,y,m,d,T,c,h,v,k,b,g,C,P,O,x,I;return Be(this,function(V){switch(V.label){case 0:if(TextDecoder===void 0)throw new Error("TextDecoder must be defined in the environment: please import a polyfill.");a=new TextDecoder("utf-8"),i=(t=n.headers)===null||t===void 0?void 0:t.get("content-type"),r="boundary=",s=i!=null&&i.includes(r)?i==null?void 0:i.substring((i==null?void 0:i.indexOf(r))+r.length).replace(/['"]/g,"").replace(/\;(.*)/gm,"").trim():"-",p=`\r
--`.concat(s),o="",u=qs(n),l=!0,V.label=1;case 1:return l?[4,u.next()]:[3,3];case 2:for(y=V.sent(),m=y.value,d=y.done,T=typeof m=="string"?m:a.decode(m),c=o.length-p.length+1,l=!d,o+=T,h=o.indexOf(p,c);h>-1;){if(v=void 0,x=[o.slice(0,h),o.slice(h+p.length)],v=x[0],o=x[1],k=v.indexOf(`\r
\r
`),b=Es(v.slice(0,k)),g=b["content-type"],g&&g.toLowerCase().indexOf("application/json")===-1)throw new Error("Unsupported patch content type: application/json is required.");if(C=v.slice(k),C){if(P=Di(n,C),Object.keys(P).length>1||"data"in P||"incremental"in P||"errors"in P||"payload"in P)vs(P)?(O={},"payload"in P&&(O=w({},P.payload)),"errors"in P&&(O=w(w({},O),{extensions:w(w({},"extensions"in O?O.extensions:null),(I={},I[la]=P.errors,I))})),e(O)):e(P);else if(Object.keys(P).length===1&&"hasNext"in P&&!P.hasNext)return[2]}h=o.indexOf(p)}return[3,1];case 3:return[2]}})})}function Es(n){var e={};return n.split(`
`).forEach(function(t){var a=t.indexOf(":");if(a>-1){var i=t.slice(0,a).trim().toLowerCase(),r=t.slice(a+1).trim();e[i]=r}}),e}function Di(n,e){if(n.status>=300){var t=function(){try{return JSON.parse(e)}catch{return e}};Qn(n,t(),"Response not successful: Received status code ".concat(n.status))}try{return JSON.parse(e)}catch(i){var a=i;throw a.name="ServerParseError",a.response=n,a.statusCode=n.status,a.bodyText=e,a}}function _s(n,e){n.result&&n.result.errors&&n.result.data&&e.next(n.result),e.error(n)}function Rs(n){return function(e){return e.text().then(function(t){return Di(e,t)}).then(function(t){return e.status>=300&&Qn(e,t,"Response not successful: Received status code ".concat(e.status)),!Array.isArray(t)&&!Ua.call(t,"data")&&!Ua.call(t,"errors")&&Qn(e,t,"Server response was missing for query '".concat(Array.isArray(n)?n.map(function(a){return a.operationName}):n.operationName,"'.")),t})}}var Un=function(n,e){var t;try{t=JSON.stringify(n)}catch(i){var a=pe(37,e,i.message);throw a.parseError=i,a}return t},Ns={includeQuery:!0,includeExtensions:!1,preserveHeaderCase:!1},Gs={accept:"*/*","content-type":"application/json"},Qs={method:"POST"},Hs={http:Ns,headers:Gs,options:Qs},Us=function(n,e){return e(n)};function Ws(n,e){for(var t=[],a=2;a<arguments.length;a++)t[a-2]=arguments[a];var i={},r={};t.forEach(function(y){i=w(w(w({},i),y.options),{headers:w(w({},i.headers),y.headers)}),y.credentials&&(i.credentials=y.credentials),r=w(w({},r),y.http)}),i.headers&&(i.headers=js(i.headers,r.preserveHeaderCase));var s=n.operationName,p=n.extensions,o=n.variables,u=n.query,l={operationName:s,variables:o};return r.includeExtensions&&(l.extensions=p),r.includeQuery&&(l.query=e(u,Si)),{options:i,body:l}}function js(n,e){if(!e){var t=Object.create(null);return Object.keys(Object(n)).forEach(function(r){t[r.toLowerCase()]=n[r]}),t}var a=Object.create(null);Object.keys(Object(n)).forEach(function(r){a[r.toLowerCase()]={originalName:r,value:n[r]}});var i=Object.create(null);return Object.keys(a).forEach(function(r){i[a[r].originalName]=a[r].value}),i}var zs=function(n){if(!n&&typeof fetch>"u")throw pe(35)},$s=function(n,e){var t=n.getContext(),a=t.uri;return a||(typeof e=="function"?e(n):e||"/graphql")};function Ks(n,e){var t=[],a=function(y,m){t.push("".concat(y,"=").concat(encodeURIComponent(m)))};if("query"in e&&a("query",e.query),e.operationName&&a("operationName",e.operationName),e.variables){var i=void 0;try{i=Un(e.variables,"Variables map")}catch(y){return{parseError:y}}a("variables",i)}if(e.extensions){var r=void 0;try{r=Un(e.extensions,"Extensions map")}catch(y){return{parseError:y}}a("extensions",r)}var s="",p=n,o=n.indexOf("#");o!==-1&&(s=n.substr(o),p=n.substr(0,o));var u=p.indexOf("?")===-1?"?":"&",l=p+u+t.join("&")+s;return{newURI:l}}var Wa=ke(function(){return fetch}),Xs=function(n){n===void 0&&(n={});var e=n.uri,t=e===void 0?"/graphql":e,a=n.fetch,i=n.print,r=i===void 0?Us:i,s=n.includeExtensions,p=n.preserveHeaderCase,o=n.useGETForQueries,u=n.includeUnusedVariables,l=u===void 0?!1:u,y=Ge(n,["uri","fetch","print","includeExtensions","preserveHeaderCase","useGETForQueries","includeUnusedVariables"]);globalThis.__DEV__!==!1&&zs(a||Wa);var m={http:{includeExtensions:s,preserveHeaderCase:p},options:y.fetchOptions,credentials:y.credentials,headers:y.headers};return new Qt(function(d){var T=$s(d,t),c=d.getContext(),h={};if(c.clientAwareness){var v=c.clientAwareness,k=v.name,b=v.version;k&&(h["apollographql-client-name"]=k),b&&(h["apollographql-client-version"]=b)}var g=w(w({},h),c.headers),C={http:c.http,options:c.fetchOptions,credentials:c.credentials,headers:g};if(At(["client"],d.query)){var P=Ai(d.query);if(!P)return Cn(new Error("HttpLink: Trying to send a client-only query to the server. To send to the server, ensure a non-client field is added to the query or set the `transformOptions.removeClientFields` option to `true`."));d.query=P}var O=Ws(d,r,Hs,m,C),x=O.options,I=O.body;I.variables&&!l&&(I.variables=ws(I.variables,d.query));var V;!x.signal&&typeof AbortController<"u"&&(V=new AbortController,x.signal=V.signal);var L=function(z){return z.kind==="OperationDefinition"&&z.operation==="mutation"},R=function(z){return z.kind==="OperationDefinition"&&z.operation==="subscription"},ne=R(Gt(d.query)),ae=At(["defer"],d.query);if(o&&!d.query.definitions.some(L)&&(x.method="GET"),ae||ne){x.headers=x.headers||{};var oe="multipart/mixed;";ne&&ae&&globalThis.__DEV__!==!1&&B.warn(36),ne?oe+="boundary=graphql;subscriptionSpec=1.0,application/json":ae&&(oe+="deferSpec=20220824,application/json"),x.headers.accept=oe}if(x.method==="GET"){var ye=Ks(T,I),N=ye.newURI,fe=ye.parseError;if(fe)return Cn(fe);T=N}else try{x.body=Un(I,"Payload")}catch(z){return Cn(z)}return new $(function(z){var Ye=a||ke(function(){return fetch})||Wa,we=z.next.bind(z);return Ye(T,x).then(function(xe){var gt;d.setContext({response:xe});var zt=(gt=xe.headers)===null||gt===void 0?void 0:gt.get("content-type");return zt!==null&&/^multipart\/mixed/i.test(zt)?Bs(xe,we):Rs(d)(xe).then(we)}).then(function(){V=void 0,z.complete()}).catch(function(xe){V=void 0,_s(xe,z)}),function(){V&&V.abort()}})})},Wn=function(n){qe(e,n);function e(t){t===void 0&&(t={});var a=n.call(this,Xs(t).request)||this;return a.options=t,a}return e}(Qt),Ys=function(){function n(){this.assumeImmutableResults=!1,this.getFragmentDoc=nn(Wr)}return n.prototype.batch=function(e){var t=this,a=typeof e.optimistic=="string"?e.optimistic:e.optimistic===!1?null:void 0,i;return this.performTransaction(function(){return i=e.update(t)},a),i},n.prototype.recordOptimisticTransaction=function(e,t){this.performTransaction(e,t)},n.prototype.transformDocument=function(e){return e},n.prototype.transformForLink=function(e){return e},n.prototype.identify=function(e){},n.prototype.gc=function(){return[]},n.prototype.modify=function(e){return!1},n.prototype.readQuery=function(e,t){return t===void 0&&(t=!!e.optimistic),this.read(w(w({},e),{rootId:e.id||"ROOT_QUERY",optimistic:t}))},n.prototype.readFragment=function(e,t){return t===void 0&&(t=!!e.optimistic),this.read(w(w({},e),{query:this.getFragmentDoc(e.fragment,e.fragmentName),rootId:e.id,optimistic:t}))},n.prototype.writeQuery=function(e){var t=e.id,a=e.data,i=Ge(e,["id","data"]);return this.write(Object.assign(i,{dataId:t||"ROOT_QUERY",result:a}))},n.prototype.writeFragment=function(e){var t=e.id,a=e.data,i=e.fragment,r=e.fragmentName,s=Ge(e,["id","data","fragment","fragmentName"]);return this.write(Object.assign(s,{query:this.getFragmentDoc(i,r),dataId:t,result:a}))},n.prototype.updateQuery=function(e,t){return this.batch({update:function(a){var i=a.readQuery(e),r=t(i);return r==null?i:(a.writeQuery(w(w({},e),{data:r})),r)}})},n.prototype.updateFragment=function(e,t){return this.batch({update:function(a){var i=a.readFragment(e),r=t(i);return r==null?i:(a.writeFragment(w(w({},e),{data:r})),r)}})},n}(),Li=function(n){qe(e,n);function e(t,a,i,r){var s,p=n.call(this,t)||this;if(p.message=t,p.path=a,p.query=i,p.variables=r,Array.isArray(p.path)){p.missing=p.message;for(var o=p.path.length-1;o>=0;--o)p.missing=(s={},s[p.path[o]]=p.missing,s)}else p.missing=p.path;return p.__proto__=e.prototype,p}return e}(Error),Z=Object.prototype.hasOwnProperty;function Mt(n){return n==null}function Bi(n,e){var t=n.__typename,a=n.id,i=n._id;if(typeof t=="string"&&(e&&(e.keyObject=Mt(a)?Mt(i)?void 0:{_id:i}:{id:a}),Mt(a)&&!Mt(i)&&(a=i),!Mt(a)))return"".concat(t,":").concat(typeof a=="number"||typeof a=="string"?a:JSON.stringify(a))}var Ei={dataIdFromObject:Bi,addTypename:!0,resultCaching:!0,canonizeResults:!1};function Zs(n){return Tt(Ei,n)}function _i(n){var e=n.canonizeResults;return e===void 0?Ei.canonizeResults:e}function Js(n,e){return H(e)?n.get(e.__ref,"__typename"):e&&e.__typename}var Ri=/^[_a-z][_0-9a-z]*/i;function je(n){var e=n.match(Ri);return e?e[0]:n}function jn(n,e,t){return j(e)?X(e)?e.every(function(a){return jn(n,a,t)}):n.selections.every(function(a){if(Ue(a)&&_t(a,t)){var i=He(a);return Z.call(e,i)&&(!a.selectionSet||jn(a.selectionSet,e[i],t))}return!0}):!1}function st(n){return j(n)&&!H(n)&&!X(n)}function ep(){return new We}function Ni(n,e){var t=mn(Tn(n));return{fragmentMap:t,lookupFragment:function(a){var i=t[a];return!i&&e&&(i=e.lookup(a)),i||null}}}var Jt=Object.create(null),Mn=function(){return Jt},ja=Object.create(null),Ft=function(){function n(e,t){var a=this;this.policies=e,this.group=t,this.data=Object.create(null),this.rootIds=Object.create(null),this.refs=Object.create(null),this.getFieldValue=function(i,r){return Nn(H(i)?a.get(i.__ref,r):i&&i[r])},this.canRead=function(i){return H(i)?a.has(i.__ref):typeof i=="object"},this.toReference=function(i,r){if(typeof i=="string")return ot(i);if(H(i))return i;var s=a.policies.identify(i)[0];if(s){var p=ot(s);return r&&a.merge(s,i),p}}}return n.prototype.toObject=function(){return w({},this.data)},n.prototype.has=function(e){return this.lookup(e,!0)!==void 0},n.prototype.get=function(e,t){if(this.group.depend(e,t),Z.call(this.data,e)){var a=this.data[e];if(a&&Z.call(a,t))return a[t]}if(t==="__typename"&&Z.call(this.policies.rootTypenamesById,e))return this.policies.rootTypenamesById[e];if(this instanceof De)return this.parent.get(e,t)},n.prototype.lookup=function(e,t){if(t&&this.group.depend(e,"__exists"),Z.call(this.data,e))return this.data[e];if(this instanceof De)return this.parent.lookup(e,t);if(this.policies.rootTypenamesById[e])return Object.create(null)},n.prototype.merge=function(e,t){var a=this,i;H(e)&&(e=e.__ref),H(t)&&(t=t.__ref);var r=typeof e=="string"?this.lookup(i=e):e,s=typeof t=="string"?this.lookup(i=t):t;if(s){B(typeof i=="string",1);var p=new We(np).merge(r,s);if(this.data[i]=p,p!==r&&(delete this.refs[i],this.group.caching)){var o=Object.create(null);r||(o.__exists=1),Object.keys(s).forEach(function(u){if(!r||r[u]!==p[u]){o[u]=1;var l=je(u);l!==u&&!a.policies.hasKeyArgs(p.__typename,l)&&(o[l]=1),p[u]===void 0&&!(a instanceof De)&&delete p[u]}}),o.__typename&&!(r&&r.__typename)&&this.policies.rootTypenamesById[i]===p.__typename&&delete o.__typename,Object.keys(o).forEach(function(u){return a.group.dirty(i,u)})}}},n.prototype.modify=function(e,t){var a=this,i=this.lookup(e);if(i){var r=Object.create(null),s=!1,p=!0,o={DELETE:Jt,INVALIDATE:ja,isReference:H,toReference:this.toReference,canRead:this.canRead,readField:function(u,l){return a.policies.readField(typeof u=="string"?{fieldName:u,from:l||ot(e)}:u,{store:a})}};if(Object.keys(i).forEach(function(u){var l=je(u),y=i[u];if(y!==void 0){var m=typeof t=="function"?t:t[u]||t[l];if(m){var d=m===Mn?Jt:m(Nn(y),w(w({},o),{fieldName:l,storeFieldName:u,storage:a.getStorage(e,u)}));d===ja?a.group.dirty(e,u):(d===Jt&&(d=void 0),d!==y&&(r[u]=d,s=!0,y=d))}y!==void 0&&(p=!1)}}),s)return this.merge(e,r),p&&(this instanceof De?this.data[e]=void 0:delete this.data[e],this.group.dirty(e,"__exists")),!0}return!1},n.prototype.delete=function(e,t,a){var i,r=this.lookup(e);if(r){var s=this.getFieldValue(r,"__typename"),p=t&&a?this.policies.getStoreFieldName({typename:s,fieldName:t,args:a}):t;return this.modify(e,p?(i={},i[p]=Mn,i):Mn)}return!1},n.prototype.evict=function(e,t){var a=!1;return e.id&&(Z.call(this.data,e.id)&&(a=this.delete(e.id,e.fieldName,e.args)),this instanceof De&&this!==t&&(a=this.parent.evict(e,t)||a),(e.fieldName||a)&&this.group.dirty(e.id,e.fieldName||"__exists")),a},n.prototype.clear=function(){this.replace(null)},n.prototype.extract=function(){var e=this,t=this.toObject(),a=[];return this.getRootIdSet().forEach(function(i){Z.call(e.policies.rootTypenamesById,i)||a.push(i)}),a.length&&(t.__META={extraRootIds:a.sort()}),t},n.prototype.replace=function(e){var t=this;if(Object.keys(this.data).forEach(function(r){e&&Z.call(e,r)||t.delete(r)}),e){var a=e.__META,i=Ge(e,["__META"]);Object.keys(i).forEach(function(r){t.merge(r,i[r])}),a&&a.extraRootIds.forEach(this.retain,this)}},n.prototype.retain=function(e){return this.rootIds[e]=(this.rootIds[e]||0)+1},n.prototype.release=function(e){if(this.rootIds[e]>0){var t=--this.rootIds[e];return t||delete this.rootIds[e],t}return 0},n.prototype.getRootIdSet=function(e){return e===void 0&&(e=new Set),Object.keys(this.rootIds).forEach(e.add,e),this instanceof De?this.parent.getRootIdSet(e):Object.keys(this.policies.rootTypenamesById).forEach(e.add,e),e},n.prototype.gc=function(){var e=this,t=this.getRootIdSet(),a=this.toObject();t.forEach(function(s){Z.call(a,s)&&(Object.keys(e.findChildRefIds(s)).forEach(t.add,t),delete a[s])});var i=Object.keys(a);if(i.length){for(var r=this;r instanceof De;)r=r.parent;i.forEach(function(s){return r.delete(s)})}return i},n.prototype.findChildRefIds=function(e){if(!Z.call(this.refs,e)){var t=this.refs[e]=Object.create(null),a=this.data[e];if(!a)return t;var i=new Set([a]);i.forEach(function(r){H(r)&&(t[r.__ref]=!0),j(r)&&Object.keys(r).forEach(function(s){var p=r[s];j(p)&&i.add(p)})})}return this.refs[e]},n.prototype.makeCacheKey=function(){return this.group.keyMaker.lookupArray(arguments)},n}(),Gi=function(){function n(e,t){t===void 0&&(t=null),this.caching=e,this.parent=t,this.d=null,this.resetCaching()}return n.prototype.resetCaching=function(){this.d=this.caching?ki():null,this.keyMaker=new Et(Ve)},n.prototype.depend=function(e,t){if(this.d){this.d(On(e,t));var a=je(t);a!==t&&this.d(On(e,a)),this.parent&&this.parent.depend(e,t)}},n.prototype.dirty=function(e,t){this.d&&this.d.dirty(On(e,t),t==="__exists"?"forget":"setDirty")},n}();function On(n,e){return e+"#"+n}function za(n,e){xt(n)&&n.group.depend(e,"__exists")}(function(n){var e=function(t){qe(a,t);function a(i){var r=i.policies,s=i.resultCaching,p=s===void 0?!0:s,o=i.seed,u=t.call(this,r,new Gi(p))||this;return u.stump=new tp(u),u.storageTrie=new Et(Ve),o&&u.replace(o),u}return a.prototype.addLayer=function(i,r){return this.stump.addLayer(i,r)},a.prototype.removeLayer=function(){return this},a.prototype.getStorage=function(){return this.storageTrie.lookupArray(arguments)},a}(n);n.Root=e})(Ft||(Ft={}));var De=function(n){qe(e,n);function e(t,a,i,r){var s=n.call(this,a.policies,r)||this;return s.id=t,s.parent=a,s.replay=i,s.group=r,i(s),s}return e.prototype.addLayer=function(t,a){return new e(t,this,a,this.group)},e.prototype.removeLayer=function(t){var a=this,i=this.parent.removeLayer(t);return t===this.id?(this.group.caching&&Object.keys(this.data).forEach(function(r){var s=a.data[r],p=i.lookup(r);p?s?s!==p&&Object.keys(s).forEach(function(o){K(s[o],p[o])||a.group.dirty(r,o)}):(a.group.dirty(r,"__exists"),Object.keys(p).forEach(function(o){a.group.dirty(r,o)})):a.delete(r)}),i):i===this.parent?this:i.addLayer(this.id,this.replay)},e.prototype.toObject=function(){return w(w({},this.parent.toObject()),this.data)},e.prototype.findChildRefIds=function(t){var a=this.parent.findChildRefIds(t);return Z.call(this.data,t)?w(w({},a),n.prototype.findChildRefIds.call(this,t)):a},e.prototype.getStorage=function(){for(var t=this.parent;t.parent;)t=t.parent;return t.getStorage.apply(t,arguments)},e}(Ft),tp=function(n){qe(e,n);function e(t){return n.call(this,"EntityStore.Stump",t,function(){},new Gi(t.group.caching,t.group))||this}return e.prototype.removeLayer=function(){return this},e.prototype.merge=function(){return this.parent.merge.apply(this.parent,arguments)},e}(De);function np(n,e,t){var a=n[t],i=e[t];return K(a,i)?a:i}function xt(n){return!!(n instanceof Ft&&n.group.caching)}function ap(n){return j(n)?X(n)?n.slice(0):w({__proto__:Object.getPrototypeOf(n)},n):n}var zn=function(){function n(){this.known=new(Pi?WeakSet:Set),this.pool=new Et(Ve),this.passes=new WeakMap,this.keysByJSON=new Map,this.empty=this.admit({})}return n.prototype.isKnown=function(e){return j(e)&&this.known.has(e)},n.prototype.pass=function(e){if(j(e)){var t=ap(e);return this.passes.set(t,e),t}return e},n.prototype.admit=function(e){var t=this;if(j(e)){var a=this.passes.get(e);if(a)return a;var i=Object.getPrototypeOf(e);switch(i){case Array.prototype:{if(this.known.has(e))return e;var r=e.map(this.admit,this),s=this.pool.lookupArray(r);return s.array||(this.known.add(s.array=r),globalThis.__DEV__!==!1&&Object.freeze(r)),s.array}case null:case Object.prototype:{if(this.known.has(e))return e;var p=Object.getPrototypeOf(e),o=[p],u=this.sortedKeys(e);o.push(u.json);var l=o.length;u.sorted.forEach(function(d){o.push(t.admit(e[d]))});var s=this.pool.lookupArray(o);if(!s.object){var y=s.object=Object.create(p);this.known.add(y),u.sorted.forEach(function(d,T){y[d]=o[l+T]}),globalThis.__DEV__!==!1&&Object.freeze(y)}return s.object}}}return e},n.prototype.sortedKeys=function(e){var t=Object.keys(e),a=this.pool.lookupArray(t);if(!a.keys){t.sort();var i=JSON.stringify(t);(a.keys=this.keysByJSON.get(i))||this.keysByJSON.set(i,a.keys={sorted:t,json:i})}return a.keys},n}(),Je=Object.assign(function(n){if(j(n)){$n===void 0&&$a();var e=$n.admit(n),t=Kn.get(e);return t===void 0&&Kn.set(e,t=JSON.stringify(e)),t}return JSON.stringify(n)},{reset:$a}),$n,Kn;function $a(){$n=new zn,Kn=new(Ve?WeakMap:Map)}function Ka(n){return[n.selectionSet,n.objectOrReference,n.context,n.context.canonizeResults]}var ip=function(){function n(e){var t=this;this.knownResults=new(Ve?WeakMap:Map),this.config=Tt(e,{addTypename:e.addTypename!==!1,canonizeResults:_i(e)}),this.canon=e.canon||new zn,this.executeSelectionSet=nn(function(a){var i,r=a.context.canonizeResults,s=Ka(a);s[3]=!r;var p=(i=t.executeSelectionSet).peek.apply(i,s);return p?r?w(w({},p),{result:t.canon.admit(p.result)}):p:(za(a.context.store,a.enclosingRef.__ref),t.execSelectionSetImpl(a))},{max:this.config.resultCacheMaxSize,keyArgs:Ka,makeCacheKey:function(a,i,r,s){if(xt(r.store))return r.store.makeCacheKey(a,H(i)?i.__ref:i,r.varString,s)}}),this.executeSubSelectedArray=nn(function(a){return za(a.context.store,a.enclosingRef.__ref),t.execSubSelectedArrayImpl(a)},{max:this.config.resultCacheMaxSize,makeCacheKey:function(a){var i=a.field,r=a.array,s=a.context;if(xt(s.store))return s.store.makeCacheKey(i,r,s.varString)}})}return n.prototype.resetCanon=function(){this.canon=new zn},n.prototype.diffQueryAgainstStore=function(e){var t=e.store,a=e.query,i=e.rootId,r=i===void 0?"ROOT_QUERY":i,s=e.variables,p=e.returnPartialData,o=p===void 0?!0:p,u=e.canonizeResults,l=u===void 0?this.config.canonizeResults:u,y=this.config.cache.policies;s=w(w({},pa(Mi(a))),s);var m=ot(r),d=this.executeSelectionSet({selectionSet:Gt(a).selectionSet,objectOrReference:m,enclosingRef:m,context:w({store:t,query:a,policies:y,variables:s,varString:Je(s),canonizeResults:l},Ni(a,this.config.fragments))}),T;if(d.missing&&(T=[new Li(rp(d.missing),d.missing,a,s)],!o))throw T[0];return{result:d.result,complete:!T,missing:T}},n.prototype.isFresh=function(e,t,a,i){if(xt(i.store)&&this.knownResults.get(e)===a){var r=this.executeSelectionSet.peek(a,t,i,this.canon.isKnown(e));if(r&&e===r.result)return!0}return!1},n.prototype.execSelectionSetImpl=function(e){var t=this,a=e.selectionSet,i=e.objectOrReference,r=e.enclosingRef,s=e.context;if(H(i)&&!s.policies.rootTypenamesById[i.__ref]&&!s.store.has(i.__ref))return{result:this.canon.empty,missing:"Dangling reference to missing ".concat(i.__ref," object")};var p=s.variables,o=s.policies,u=s.store,l=u.getFieldValue(i,"__typename"),y=[],m,d=new We;this.config.addTypename&&typeof l=="string"&&!o.rootIdsByTypename[l]&&y.push({__typename:l});function T(b,g){var C;return b.missing&&(m=d.merge(m,(C={},C[g]=b.missing,C))),b.result}var c=new Set(a.selections);c.forEach(function(b){var g,C;if(_t(b,p))if(Ue(b)){var P=o.readField({fieldName:b.name.value,field:b,variables:s.variables,from:i},s),O=He(b);P===void 0?oa.added(b)||(m=d.merge(m,(g={},g[O]="Can't find field '".concat(b.name.value,"' on ").concat(H(i)?i.__ref+" object":"object "+JSON.stringify(i,null,2)),g))):X(P)?P=T(t.executeSubSelectedArray({field:b,array:P,enclosingRef:r,context:s}),O):b.selectionSet?P!=null&&(P=T(t.executeSelectionSet({selectionSet:b.selectionSet,objectOrReference:P,enclosingRef:H(P)?P:r,context:s}),O)):s.canonizeResults&&(P=t.canon.pass(P)),P!==void 0&&y.push((C={},C[O]=P,C))}else{var x=dn(b,s.lookupFragment);if(!x&&b.kind===he.FRAGMENT_SPREAD)throw pe(7,b.name.value);x&&o.fragmentMatches(x,l)&&x.selectionSet.selections.forEach(c.add,c)}});var h=ua(y),v={result:h,missing:m},k=s.canonizeResults?this.canon.admit(v):Nn(v);return k.result&&this.knownResults.set(k.result,a),k},n.prototype.execSubSelectedArrayImpl=function(e){var t=this,a=e.field,i=e.array,r=e.enclosingRef,s=e.context,p,o=new We;function u(l,y){var m;return l.missing&&(p=o.merge(p,(m={},m[y]=l.missing,m))),l.result}return a.selectionSet&&(i=i.filter(s.store.canRead)),i=i.map(function(l,y){return l===null?null:X(l)?u(t.executeSubSelectedArray({field:a,array:l,enclosingRef:r,context:s}),y):a.selectionSet?u(t.executeSelectionSet({selectionSet:a.selectionSet,objectOrReference:l,enclosingRef:H(l)?l:r,context:s}),y):(globalThis.__DEV__!==!1&&sp(s.store,a,l),l)}),{result:s.canonizeResults?this.canon.admit(i):i,missing:p}},n}();function rp(n){try{JSON.stringify(n,function(e,t){if(typeof t=="string")throw t;return t})}catch(e){return e}}function sp(n,e,t){if(!e.selectionSet){var a=new Set([t]);a.forEach(function(i){j(i)&&(B(!H(i),8,Js(n,i),e.name.value),Object.values(i).forEach(a.add,a))})}}var ya=new Nr,Xa=new WeakMap;function It(n){var e=Xa.get(n);return e||Xa.set(n,e={vars:new Set,dep:ki()}),e}function Ya(n){It(n).vars.forEach(function(e){return e.forgetCache(n)})}function pp(n){It(n).vars.forEach(function(e){return e.attachCache(n)})}function op(n){var e=new Set,t=new Set,a=function(r){if(arguments.length>0){if(n!==r){n=r,e.forEach(function(o){It(o).dep.dirty(a),up(o)});var s=Array.from(t);t.clear(),s.forEach(function(o){return o(n)})}}else{var p=ya.getValue();p&&(i(p),It(p).dep(a))}return n};a.onNextChange=function(r){return t.add(r),function(){t.delete(r)}};var i=a.attachCache=function(r){return e.add(r),It(r).vars.add(a),a};return a.forgetCache=function(r){return e.delete(r)},a}function up(n){n.broadcastWatches&&n.broadcastWatches()}var Za=Object.create(null);function ma(n){var e=JSON.stringify(n);return Za[e]||(Za[e]=Object.create(null))}function Ja(n){var e=ma(n);return e.keyFieldsFn||(e.keyFieldsFn=function(t,a){var i=function(s,p){return a.readField(p,s)},r=a.keyObject=da(n,function(s){var p=lt(a.storeObject,s,i);return p===void 0&&t!==a.storeObject&&Z.call(t,s[0])&&(p=lt(t,s,Hi)),B(p!==void 0,2,s.join("."),t),p});return"".concat(a.typename,":").concat(JSON.stringify(r))})}function ei(n){var e=ma(n);return e.keyArgsFn||(e.keyArgsFn=function(t,a){var i=a.field,r=a.variables,s=a.fieldName,p=da(n,function(u){var l=u[0],y=l.charAt(0);if(y==="@"){if(i&&Oe(i.directives)){var m=l.slice(1),d=i.directives.find(function(v){return v.name.value===m}),T=d&&cn(d,r);return T&&lt(T,u.slice(1))}return}if(y==="$"){var c=l.slice(1);if(r&&Z.call(r,c)){var h=u.slice(0);return h[0]=c,lt(r,h)}return}if(t)return lt(t,u)}),o=JSON.stringify(p);return(t||o!=="{}")&&(s+=":"+o),s})}function da(n,e){var t=new We;return Qi(n).reduce(function(a,i){var r,s=e(i);if(s!==void 0){for(var p=i.length-1;p>=0;--p)s=(r={},r[i[p]]=s,r);a=t.merge(a,s)}return a},Object.create(null))}function Qi(n){var e=ma(n);if(!e.paths){var t=e.paths=[],a=[];n.forEach(function(i,r){X(i)?(Qi(i).forEach(function(s){return t.push(a.concat(s))}),a.length=0):(a.push(i),X(n[r+1])||(t.push(a.slice(0)),a.length=0))})}return e.paths}function Hi(n,e){return n[e]}function lt(n,e,t){return t=t||Hi,Ui(e.reduce(function a(i,r){return X(i)?i.map(function(s){return a(s,r)}):i&&t(i,r)},n))}function Ui(n){return j(n)?X(n)?n.map(Ui):da(Object.keys(n).sort(),function(e){return lt(n,e)}):n}sa.setStringify(Je);function Xn(n){return n.args!==void 0?n.args:n.field?cn(n.field,n.variables):null}var lp=function(){},ti=function(n,e){return e.fieldName},ni=function(n,e,t){var a=t.mergeObjects;return a(n,e)},ai=function(n,e){return e},yp=function(){function n(e){this.config=e,this.typePolicies=Object.create(null),this.toBeAdded=Object.create(null),this.supertypeMap=new Map,this.fuzzySubtypes=new Map,this.rootIdsByTypename=Object.create(null),this.rootTypenamesById=Object.create(null),this.usingPossibleTypes=!1,this.config=w({dataIdFromObject:Bi},e),this.cache=this.config.cache,this.setRootTypename("Query"),this.setRootTypename("Mutation"),this.setRootTypename("Subscription"),e.possibleTypes&&this.addPossibleTypes(e.possibleTypes),e.typePolicies&&this.addTypePolicies(e.typePolicies)}return n.prototype.identify=function(e,t){var a,i=this,r=t&&(t.typename||((a=t.storeObject)===null||a===void 0?void 0:a.__typename))||e.__typename;if(r===this.rootTypenamesById.ROOT_QUERY)return["ROOT_QUERY"];for(var s=t&&t.storeObject||e,p=w(w({},t),{typename:r,storeObject:s,readField:t&&t.readField||function(){var m=ca(arguments,s);return i.readField(m,{store:i.cache.data,variables:m.variables})}}),o,u=r&&this.getTypePolicy(r),l=u&&u.keyFn||this.config.dataIdFromObject;l;){var y=l(w(w({},e),s),p);if(X(y))l=Ja(y);else{o=y;break}}return o=o?String(o):void 0,p.keyObject?[o,p.keyObject]:[o]},n.prototype.addTypePolicies=function(e){var t=this;Object.keys(e).forEach(function(a){var i=e[a],r=i.queryType,s=i.mutationType,p=i.subscriptionType,o=Ge(i,["queryType","mutationType","subscriptionType"]);r&&t.setRootTypename("Query",a),s&&t.setRootTypename("Mutation",a),p&&t.setRootTypename("Subscription",a),Z.call(t.toBeAdded,a)?t.toBeAdded[a].push(o):t.toBeAdded[a]=[o]})},n.prototype.updateTypePolicy=function(e,t){var a=this,i=this.getTypePolicy(e),r=t.keyFields,s=t.fields;function p(o,u){o.merge=typeof u=="function"?u:u===!0?ni:u===!1?ai:o.merge}p(i,t.merge),i.keyFn=r===!1?lp:X(r)?Ja(r):typeof r=="function"?r:i.keyFn,s&&Object.keys(s).forEach(function(o){var u=a.getFieldPolicy(e,o,!0),l=s[o];if(typeof l=="function")u.read=l;else{var y=l.keyArgs,m=l.read,d=l.merge;u.keyFn=y===!1?ti:X(y)?ei(y):typeof y=="function"?y:u.keyFn,typeof m=="function"&&(u.read=m),p(u,d)}u.read&&u.merge&&(u.keyFn=u.keyFn||ti)})},n.prototype.setRootTypename=function(e,t){t===void 0&&(t=e);var a="ROOT_"+e.toUpperCase(),i=this.rootTypenamesById[a];t!==i&&(B(!i||i===e,3,e),i&&delete this.rootIdsByTypename[i],this.rootIdsByTypename[t]=a,this.rootTypenamesById[a]=t)},n.prototype.addPossibleTypes=function(e){var t=this;this.usingPossibleTypes=!0,Object.keys(e).forEach(function(a){t.getSupertypeSet(a,!0),e[a].forEach(function(i){t.getSupertypeSet(i,!0).add(a);var r=i.match(Ri);(!r||r[0]!==i)&&t.fuzzySubtypes.set(i,new RegExp(i))})})},n.prototype.getTypePolicy=function(e){var t=this;if(!Z.call(this.typePolicies,e)){var a=this.typePolicies[e]=Object.create(null);a.fields=Object.create(null);var i=this.supertypeMap.get(e);!i&&this.fuzzySubtypes.size&&(i=this.getSupertypeSet(e,!0),this.fuzzySubtypes.forEach(function(s,p){if(s.test(e)){var o=t.supertypeMap.get(p);o&&o.forEach(function(u){return i.add(u)})}})),i&&i.size&&i.forEach(function(s){var p=t.getTypePolicy(s),o=p.fields,u=Ge(p,["fields"]);Object.assign(a,u),Object.assign(a.fields,o)})}var r=this.toBeAdded[e];return r&&r.length&&r.splice(0).forEach(function(s){t.updateTypePolicy(e,s)}),this.typePolicies[e]},n.prototype.getFieldPolicy=function(e,t,a){if(e){var i=this.getTypePolicy(e).fields;return i[t]||a&&(i[t]=Object.create(null))}},n.prototype.getSupertypeSet=function(e,t){var a=this.supertypeMap.get(e);return!a&&t&&this.supertypeMap.set(e,a=new Set),a},n.prototype.fragmentMatches=function(e,t,a,i){var r=this;if(!e.typeCondition)return!0;if(!t)return!1;var s=e.typeCondition.name.value;if(t===s)return!0;if(this.usingPossibleTypes&&this.supertypeMap.has(s))for(var p=this.getSupertypeSet(t,!0),o=[p],u=function(T){var c=r.getSupertypeSet(T,!1);c&&c.size&&o.indexOf(c)<0&&o.push(c)},l=!!(a&&this.fuzzySubtypes.size),y=!1,m=0;m<o.length;++m){var d=o[m];if(d.has(s))return p.has(s)||(y&&globalThis.__DEV__!==!1&&B.warn(4,t,s),p.add(s)),!0;d.forEach(u),l&&m===o.length-1&&jn(e.selectionSet,a,i)&&(l=!1,y=!0,this.fuzzySubtypes.forEach(function(T,c){var h=t.match(T);h&&h[0]===t&&u(c)}))}return!1},n.prototype.hasKeyArgs=function(e,t){var a=this.getFieldPolicy(e,t,!1);return!!(a&&a.keyFn)},n.prototype.getStoreFieldName=function(e){var t=e.typename,a=e.fieldName,i=this.getFieldPolicy(t,a,!1),r,s=i&&i.keyFn;if(s&&t)for(var p={typename:t,fieldName:a,field:e.field||null,variables:e.variables},o=Xn(e);s;){var u=s(o,p);if(X(u))s=ei(u);else{r=u||a;break}}return r===void 0&&(r=e.field?ns(e.field,e.variables):sa(a,Xn(e))),r===!1?a:a===je(r)?r:a+":"+r},n.prototype.readField=function(e,t){var a=e.from;if(a){var i=e.field||e.fieldName;if(i){if(e.typename===void 0){var r=t.store.getFieldValue(a,"__typename");r&&(e.typename=r)}var s=this.getStoreFieldName(e),p=je(s),o=t.store.getFieldValue(a,s),u=this.getFieldPolicy(e.typename,p,!1),l=u&&u.read;if(l){var y=ii(this,a,e,t,t.store.getStorage(H(a)?a.__ref:a,s));return ya.withValue(this.cache,l,[o,y])}return o}}},n.prototype.getReadFunction=function(e,t){var a=this.getFieldPolicy(e,t,!1);return a&&a.read},n.prototype.getMergeFunction=function(e,t,a){var i=this.getFieldPolicy(e,t,!1),r=i&&i.merge;return!r&&a&&(i=this.getTypePolicy(a),r=i&&i.merge),r},n.prototype.runMergeFunction=function(e,t,a,i,r){var s=a.field,p=a.typename,o=a.merge;return o===ni?Wi(i.store)(e,t):o===ai?t:(i.overwrite&&(e=void 0),o(e,t,ii(this,void 0,{typename:p,fieldName:s.name.value,field:s,variables:i.variables},i,r||Object.create(null))))},n}();function ii(n,e,t,a,i){var r=n.getStoreFieldName(t),s=je(r),p=t.variables||a.variables,o=a.store,u=o.toReference,l=o.canRead;return{args:Xn(t),field:t.field||null,fieldName:s,storeFieldName:r,variables:p,isReference:H,toReference:u,storage:i,cache:n.cache,canRead:l,readField:function(){return n.readField(ca(arguments,e,p),a)},mergeObjects:Wi(a.store)}}function ca(n,e,t){var a=n[0],i=n[1],r=n.length,s;return typeof a=="string"?s={fieldName:a,from:r>1?i:e}:(s=w({},a),Z.call(s,"from")||(s.from=e)),globalThis.__DEV__!==!1&&s.from===void 0&&globalThis.__DEV__!==!1&&B.warn(5,wi(Array.from(n))),s.variables===void 0&&(s.variables=t),s}function Wi(n){return function(t,a){if(X(t)||X(a))throw pe(6);if(j(t)&&j(a)){var i=n.getFieldValue(t,"__typename"),r=n.getFieldValue(a,"__typename"),s=i&&r&&i!==r;if(s)return a;if(H(t)&&st(a))return n.merge(t.__ref,a),t;if(st(t)&&H(a))return n.merge(t,a.__ref),a;if(st(t)&&st(a))return w(w({},t),a)}return a}}function Sn(n,e,t){var a="".concat(e).concat(t),i=n.flavors.get(a);return i||n.flavors.set(a,i=n.clientOnly===e&&n.deferred===t?n:w(w({},n),{clientOnly:e,deferred:t})),i}var mp=function(){function n(e,t,a){this.cache=e,this.reader=t,this.fragments=a}return n.prototype.writeToStore=function(e,t){var a=this,i=t.query,r=t.result,s=t.dataId,p=t.variables,o=t.overwrite,u=Nt(i),l=ep();p=w(w({},pa(u)),p);var y=w(w({store:e,written:Object.create(null),merge:function(d,T){return l.merge(d,T)},variables:p,varString:Je(p)},Ni(i,this.fragments)),{overwrite:!!o,incomingById:new Map,clientOnly:!1,deferred:!1,flavors:new Map}),m=this.processSelectionSet({result:r||Object.create(null),dataId:s,selectionSet:u.selectionSet,mergeTree:{map:new Map},context:y});if(!H(m))throw pe(9,r);return y.incomingById.forEach(function(d,T){var c=d.storeObject,h=d.mergeTree,v=d.fieldNodeSet,k=ot(T);if(h&&h.map.size){var b=a.applyMerges(h,k,c,y);if(H(b))return;c=b}if(globalThis.__DEV__!==!1&&!y.overwrite){var g=Object.create(null);v.forEach(function(O){O.selectionSet&&(g[O.name.value]=!0)});var C=function(O){return g[je(O)]===!0},P=function(O){var x=h&&h.map.get(O);return!!(x&&x.info&&x.info.merge)};Object.keys(c).forEach(function(O){C(O)&&!P(O)&&dp(k,c,O,y.store)})}e.merge(T,c)}),e.retain(m.__ref),m},n.prototype.processSelectionSet=function(e){var t=this,a=e.dataId,i=e.result,r=e.selectionSet,s=e.context,p=e.mergeTree,o=this.cache.policies,u=Object.create(null),l=a&&o.rootTypenamesById[a]||En(i,r,s.fragmentMap)||a&&s.store.get(a,"__typename");typeof l=="string"&&(u.__typename=l);var y=function(){var b=ca(arguments,u,s.variables);if(H(b.from)){var g=s.incomingById.get(b.from.__ref);if(g){var C=o.readField(w(w({},b),{from:g.storeObject}),s);if(C!==void 0)return C}}return o.readField(b,s)},m=new Set;this.flattenFields(r,i,s,l).forEach(function(b,g){var C,P=He(g),O=i[P];if(m.add(g),O!==void 0){var x=o.getStoreFieldName({typename:l,fieldName:g.name.value,field:g,variables:b.variables}),I=ri(p,x),V=t.processFieldValue(O,g,g.selectionSet?Sn(b,!1,!1):b,I),L=void 0;g.selectionSet&&(H(V)||st(V))&&(L=y("__typename",V));var R=o.getMergeFunction(l,g.name.value,L);R?I.info={field:g,typename:l,merge:R}:si(p,x),u=b.merge(u,(C={},C[x]=V,C))}else globalThis.__DEV__!==!1&&!b.clientOnly&&!b.deferred&&!oa.added(g)&&!o.getReadFunction(l,g.name.value)&&globalThis.__DEV__!==!1&&B.error(10,He(g),i)});try{var d=o.identify(i,{typename:l,selectionSet:r,fragmentMap:s.fragmentMap,storeObject:u,readField:y}),T=d[0],c=d[1];a=a||T,c&&(u=s.merge(u,c))}catch(b){if(!a)throw b}if(typeof a=="string"){var h=ot(a),v=s.written[a]||(s.written[a]=[]);if(v.indexOf(r)>=0||(v.push(r),this.reader&&this.reader.isFresh(i,h,r,s)))return h;var k=s.incomingById.get(a);return k?(k.storeObject=s.merge(k.storeObject,u),k.mergeTree=Yn(k.mergeTree,p),m.forEach(function(b){return k.fieldNodeSet.add(b)})):s.incomingById.set(a,{storeObject:u,mergeTree:an(p)?void 0:p,fieldNodeSet:m}),h}return u},n.prototype.processFieldValue=function(e,t,a,i){var r=this;return!t.selectionSet||e===null?globalThis.__DEV__!==!1?Fi(e):e:X(e)?e.map(function(s,p){var o=r.processFieldValue(s,t,a,ri(i,p));return si(i,p),o}):this.processSelectionSet({result:e,selectionSet:t.selectionSet,context:a,mergeTree:i})},n.prototype.flattenFields=function(e,t,a,i){i===void 0&&(i=En(t,e,a.fragmentMap));var r=new Map,s=this.cache.policies,p=new Et(!1);return function o(u,l){var y=p.lookup(u,l.clientOnly,l.deferred);y.visited||(y.visited=!0,u.selections.forEach(function(m){if(_t(m,a.variables)){var d=l.clientOnly,T=l.deferred;if(!(d&&T)&&Oe(m.directives)&&m.directives.forEach(function(v){var k=v.name.value;if(k==="client"&&(d=!0),k==="defer"){var b=cn(v,a.variables);(!b||b.if!==!1)&&(T=!0)}}),Ue(m)){var c=r.get(m);c&&(d=d&&c.clientOnly,T=T&&c.deferred),r.set(m,Sn(a,d,T))}else{var h=dn(m,a.lookupFragment);if(!h&&m.kind===he.FRAGMENT_SPREAD)throw pe(11,m.name.value);h&&s.fragmentMatches(h,i,t,a.variables)&&o(h.selectionSet,Sn(a,d,T))}}}))}(e,a),r},n.prototype.applyMerges=function(e,t,a,i,r){var s,p=this;if(e.map.size&&!H(a)){var o=!X(a)&&(H(t)||st(t))?t:void 0,u=a;o&&!r&&(r=[H(o)?o.__ref:o]);var l,y=function(m,d){return X(m)?typeof d=="number"?m[d]:void 0:i.store.getFieldValue(m,String(d))};e.map.forEach(function(m,d){var T=y(o,d),c=y(u,d);if(c!==void 0){r&&r.push(d);var h=p.applyMerges(m,T,c,i,r);h!==c&&(l=l||new Map,l.set(d,h)),r&&B(r.pop()===d)}}),l&&(a=X(u)?u.slice(0):w({},u),l.forEach(function(m,d){a[d]=m}))}return e.info?this.cache.policies.runMergeFunction(t,a,e.info,i,r&&(s=i.store).getStorage.apply(s,r)):a},n}(),ji=[];function ri(n,e){var t=n.map;return t.has(e)||t.set(e,ji.pop()||{map:new Map}),t.get(e)}function Yn(n,e){if(n===e||!e||an(e))return n;if(!n||an(n))return e;var t=n.info&&e.info?w(w({},n.info),e.info):n.info||e.info,a=n.map.size&&e.map.size,i=a?new Map:n.map.size?n.map:e.map,r={info:t,map:i};if(a){var s=new Set(e.map.keys());n.map.forEach(function(p,o){r.map.set(o,Yn(p,e.map.get(o))),s.delete(o)}),s.forEach(function(p){r.map.set(p,Yn(e.map.get(p),n.map.get(p)))})}return r}function an(n){return!n||!(n.info||n.map.size)}function si(n,e){var t=n.map,a=t.get(e);a&&an(a)&&(ji.push(a),t.delete(e))}var pi=new Set;function dp(n,e,t,a){var i=function(y){var m=a.getFieldValue(y,t);return typeof m=="object"&&m},r=i(n);if(r){var s=i(e);if(s&&!H(r)&&!K(r,s)&&!Object.keys(r).every(function(y){return a.getFieldValue(s,y)!==void 0})){var p=a.getFieldValue(n,"__typename")||a.getFieldValue(e,"__typename"),o=je(t),u="".concat(p,".").concat(o);if(!pi.has(u)){pi.add(u);var l=[];!X(r)&&!X(s)&&[r,s].forEach(function(y){var m=a.getFieldValue(y,"__typename");typeof m=="string"&&!l.includes(m)&&l.push(m)}),globalThis.__DEV__!==!1&&B.warn(12,o,p,l.length?"either ensure all objects of type "+l.join(" and ")+" have an ID or a custom merge function, or ":"",u,r,s)}}}}var oi=function(n){qe(e,n);function e(t){t===void 0&&(t={});var a=n.call(this)||this;return a.watches=new Set,a.addTypenameTransform=new Oi(oa),a.assumeImmutableResults=!0,a.makeVar=op,a.txCount=0,a.config=Zs(t),a.addTypename=!!a.config.addTypename,a.policies=new yp({cache:a,dataIdFromObject:a.config.dataIdFromObject,possibleTypes:a.config.possibleTypes,typePolicies:a.config.typePolicies}),a.init(),a}return e.prototype.init=function(){var t=this.data=new Ft.Root({policies:this.policies,resultCaching:this.config.resultCaching});this.optimisticData=t.stump,this.resetResultCache()},e.prototype.resetResultCache=function(t){var a=this,i=this.storeReader,r=this.config.fragments;this.storeWriter=new mp(this,this.storeReader=new ip({cache:this,addTypename:this.addTypename,resultCacheMaxSize:this.config.resultCacheMaxSize,canonizeResults:_i(this.config),canon:t?void 0:i&&i.canon,fragments:r}),r),this.maybeBroadcastWatch=nn(function(s,p){return a.broadcastWatch(s,p)},{max:this.config.resultCacheMaxSize,makeCacheKey:function(s){var p=s.optimistic?a.optimisticData:a.data;if(xt(p)){var o=s.optimistic,u=s.id,l=s.variables;return p.makeCacheKey(s.query,s.callback,Je({optimistic:o,id:u,variables:l}))}}}),new Set([this.data.group,this.optimisticData.group]).forEach(function(s){return s.resetCaching()})},e.prototype.restore=function(t){return this.init(),t&&this.data.replace(t),this},e.prototype.extract=function(t){return t===void 0&&(t=!1),(t?this.optimisticData:this.data).extract()},e.prototype.read=function(t){var a=t.returnPartialData,i=a===void 0?!1:a;try{return this.storeReader.diffQueryAgainstStore(w(w({},t),{store:t.optimistic?this.optimisticData:this.data,config:this.config,returnPartialData:i})).result||null}catch(r){if(r instanceof Li)return null;throw r}},e.prototype.write=function(t){try{return++this.txCount,this.storeWriter.writeToStore(this.data,t)}finally{!--this.txCount&&t.broadcast!==!1&&this.broadcastWatches()}},e.prototype.modify=function(t){if(Z.call(t,"id")&&!t.id)return!1;var a=t.optimistic?this.optimisticData:this.data;try{return++this.txCount,a.modify(t.id||"ROOT_QUERY",t.fields)}finally{!--this.txCount&&t.broadcast!==!1&&this.broadcastWatches()}},e.prototype.diff=function(t){return this.storeReader.diffQueryAgainstStore(w(w({},t),{store:t.optimistic?this.optimisticData:this.data,rootId:t.id||"ROOT_QUERY",config:this.config}))},e.prototype.watch=function(t){var a=this;return this.watches.size||pp(this),this.watches.add(t),t.immediate&&this.maybeBroadcastWatch(t),function(){a.watches.delete(t)&&!a.watches.size&&Ya(a),a.maybeBroadcastWatch.forget(t)}},e.prototype.gc=function(t){Je.reset();var a=this.optimisticData.gc();return t&&!this.txCount&&(t.resetResultCache?this.resetResultCache(t.resetResultIdentities):t.resetResultIdentities&&this.storeReader.resetCanon()),a},e.prototype.retain=function(t,a){return(a?this.optimisticData:this.data).retain(t)},e.prototype.release=function(t,a){return(a?this.optimisticData:this.data).release(t)},e.prototype.identify=function(t){if(H(t))return t.__ref;try{return this.policies.identify(t)[0]}catch(a){globalThis.__DEV__!==!1&&B.warn(a)}},e.prototype.evict=function(t){if(!t.id){if(Z.call(t,"id"))return!1;t=w(w({},t),{id:"ROOT_QUERY"})}try{return++this.txCount,this.optimisticData.evict(t,this.data)}finally{!--this.txCount&&t.broadcast!==!1&&this.broadcastWatches()}},e.prototype.reset=function(t){var a=this;return this.init(),Je.reset(),t&&t.discardWatches?(this.watches.forEach(function(i){return a.maybeBroadcastWatch.forget(i)}),this.watches.clear(),Ya(this)):this.broadcastWatches(),Promise.resolve()},e.prototype.removeOptimistic=function(t){var a=this.optimisticData.removeLayer(t);a!==this.optimisticData&&(this.optimisticData=a,this.broadcastWatches())},e.prototype.batch=function(t){var a=this,i=t.update,r=t.optimistic,s=r===void 0?!0:r,p=t.removeOptimistic,o=t.onWatchUpdated,u,l=function(m){var d=a,T=d.data,c=d.optimisticData;++a.txCount,m&&(a.data=a.optimisticData=m);try{return u=i(a)}finally{--a.txCount,a.data=T,a.optimisticData=c}},y=new Set;return o&&!this.txCount&&this.broadcastWatches(w(w({},t),{onWatchUpdated:function(m){return y.add(m),!1}})),typeof s=="string"?this.optimisticData=this.optimisticData.addLayer(s,l):s===!1?l(this.data):l(),typeof p=="string"&&(this.optimisticData=this.optimisticData.removeLayer(p)),o&&y.size?(this.broadcastWatches(w(w({},t),{onWatchUpdated:function(m,d){var T=o.call(this,m,d);return T!==!1&&y.delete(m),T}})),y.size&&y.forEach(function(m){return a.maybeBroadcastWatch.dirty(m)})):this.broadcastWatches(t),u},e.prototype.performTransaction=function(t,a){return this.batch({update:t,optimistic:a||a!==null})},e.prototype.transformDocument=function(t){return this.addTypenameToDocument(this.addFragmentsToDocument(t))},e.prototype.broadcastWatches=function(t){var a=this;this.txCount||this.watches.forEach(function(i){return a.maybeBroadcastWatch(i,t)})},e.prototype.addFragmentsToDocument=function(t){var a=this.config.fragments;return a?a.transform(t):t},e.prototype.addTypenameToDocument=function(t){return this.addTypename?this.addTypenameTransform.transformDocument(t):t},e.prototype.broadcastWatch=function(t,a){var i=t.lastDiff,r=this.diff(t);a&&(t.optimistic&&typeof a.optimistic=="string"&&(r.fromOptimisticTransaction=!0),a.onWatchUpdated&&a.onWatchUpdated.call(this,t,r,i)===!1)||(!i||!K(i.result,r.result))&&t.callback(t.lastDiff=r,i)},e}(Ys),G;(function(n){n[n.loading=1]="loading",n[n.setVariables=2]="setVariables",n[n.fetchMore=3]="fetchMore",n[n.refetch=4]="refetch",n[n.poll=6]="poll",n[n.ready=7]="ready",n[n.error=8]="error"})(G||(G={}));function qt(n){return n?n<7:!1}function cp(n,e,t,a){var i=e.data,r=Ge(e,["data"]),s=t.data,p=Ge(t,["data"]);return K(r,p)&&en(Gt(n).selectionSet,i,s,{fragmentMap:mn(Tn(n)),variables:a})}function en(n,e,t,a){if(e===t)return!0;var i=new Set;return n.selections.every(function(r){if(i.has(r)||(i.add(r),!_t(r,a.variables))||ui(r))return!0;if(Ue(r)){var s=He(r),p=e&&e[s],o=t&&t[s],u=r.selectionSet;if(!u)return K(p,o);var l=Array.isArray(p),y=Array.isArray(o);if(l!==y)return!1;if(l&&y){var m=p.length;if(o.length!==m)return!1;for(var d=0;d<m;++d)if(!en(u,p[d],o[d],a))return!1;return!0}return en(u,p,o,a)}else{var T=dn(r,a.fragmentMap);if(T)return ui(T)?!0:en(T.selectionSet,e,t,a)}})}function ui(n){return!!n.directives&&n.directives.some(Tp)}function Tp(n){return n.name.value==="nonreactive"}var li=Object.assign,fp=Object.hasOwnProperty,Zn=function(n){qe(e,n);function e(t){var a=t.queryManager,i=t.queryInfo,r=t.options,s=n.call(this,function(h){try{var v=h._subscription._observer;v&&!v.error&&(v.error=hp)}catch{}var k=!s.observers.size;s.observers.add(h);var b=s.last;return b&&b.error?h.error&&h.error(b.error):b&&b.result&&h.next&&h.next(b.result),k&&s.reobserve().catch(function(){}),function(){s.observers.delete(h)&&!s.observers.size&&s.tearDownQuery()}})||this;s.observers=new Set,s.subscriptions=new Set,s.queryInfo=i,s.queryManager=a,s.waitForOwnResult=xn(r.fetchPolicy),s.isTornDown=!1;var p=a.defaultOptions.watchQuery,o=p===void 0?{}:p,u=o.fetchPolicy,l=u===void 0?"cache-first":u,y=r.fetchPolicy,m=y===void 0?l:y,d=r.initialFetchPolicy,T=d===void 0?m==="standby"?l:m:d;s.options=w(w({},r),{initialFetchPolicy:T,fetchPolicy:m}),s.queryId=i.queryId||a.generateQueryId();var c=Nt(s.query);return s.queryName=c&&c.name&&c.name.value,s}return Object.defineProperty(e.prototype,"query",{get:function(){return this.lastQuery||this.options.query},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"variables",{get:function(){return this.options.variables},enumerable:!1,configurable:!0}),e.prototype.result=function(){var t=this;return new Promise(function(a,i){var r={next:function(p){a(p),t.observers.delete(r),t.observers.size||t.queryManager.removeQuery(t.queryId),setTimeout(function(){s.unsubscribe()},0)},error:i},s=t.subscribe(r)})},e.prototype.getCurrentResult=function(t){t===void 0&&(t=!0);var a=this.getLastResult(!0),i=this.queryInfo.networkStatus||a&&a.networkStatus||G.ready,r=w(w({},a),{loading:qt(i),networkStatus:i}),s=this.options.fetchPolicy,p=s===void 0?"cache-first":s;if(!(xn(p)||this.queryManager.getDocumentInfo(this.query).hasForcedResolvers))if(this.waitForOwnResult)this.queryInfo.updateWatch();else{var o=this.queryInfo.getDiff();(o.complete||this.options.returnPartialData)&&(r.data=o.result),K(r.data,{})&&(r.data=void 0),o.complete?(delete r.partial,o.complete&&r.networkStatus===G.loading&&(p==="cache-first"||p==="cache-only")&&(r.networkStatus=G.ready,r.loading=!1)):r.partial=!0,globalThis.__DEV__!==!1&&!o.complete&&!this.options.partialRefetch&&!r.loading&&!r.data&&!r.error&&$i(o.missing)}return t&&this.updateLastResult(r),r},e.prototype.isDifferentFromLastResult=function(t,a){if(!this.last)return!0;var i=this.queryManager.getDocumentInfo(this.query).hasNonreactiveDirective?!cp(this.query,this.last.result,t,this.variables):!K(this.last.result,t);return i||a&&!K(this.last.variables,a)},e.prototype.getLast=function(t,a){var i=this.last;if(i&&i[t]&&(!a||K(i.variables,this.variables)))return i[t]},e.prototype.getLastResult=function(t){return this.getLast("result",t)},e.prototype.getLastError=function(t){return this.getLast("error",t)},e.prototype.resetLastResults=function(){delete this.last,this.isTornDown=!1},e.prototype.resetQueryStoreErrors=function(){this.queryManager.resetErrors(this.queryId)},e.prototype.refetch=function(t){var a,i={pollInterval:0},r=this.options.fetchPolicy;if(r==="cache-and-network"?i.fetchPolicy=r:r==="no-cache"?i.fetchPolicy="no-cache":i.fetchPolicy="network-only",globalThis.__DEV__!==!1&&t&&fp.call(t,"variables")){var s=Mi(this.query),p=s.variableDefinitions;(!p||!p.some(function(o){return o.variable.name.value==="variables"}))&&globalThis.__DEV__!==!1&&B.warn(18,t,((a=s.name)===null||a===void 0?void 0:a.value)||s)}return t&&!K(this.options.variables,t)&&(i.variables=this.options.variables=w(w({},this.options.variables),t)),this.queryInfo.resetLastWrite(),this.reobserve(i,G.refetch)},e.prototype.fetchMore=function(t){var a=this,i=w(w({},t.query?t:w(w(w(w({},this.options),{query:this.options.query}),t),{variables:w(w({},this.options.variables),t.variables)})),{fetchPolicy:"no-cache"});i.query=this.transformDocument(i.query);var r=this.queryManager.generateQueryId();this.lastQuery=t.query?this.transformDocument(this.options.query):i.query;var s=this.queryInfo,p=s.networkStatus;s.networkStatus=G.fetchMore,i.notifyOnNetworkStatusChange&&this.observe();var o=new Set;return this.queryManager.fetchQuery(r,i,G.fetchMore).then(function(u){return a.queryManager.removeQuery(r),s.networkStatus===G.fetchMore&&(s.networkStatus=p),a.queryManager.cache.batch({update:function(l){var y=t.updateQuery;y?l.updateQuery({query:a.query,variables:a.variables,returnPartialData:!0,optimistic:!1},function(m){return y(m,{fetchMoreResult:u.data,variables:i.variables})}):l.writeQuery({query:i.query,variables:i.variables,data:u.data})},onWatchUpdated:function(l){o.add(l.query)}}),u}).finally(function(){o.has(a.query)||zi(a)})},e.prototype.subscribeToMore=function(t){var a=this,i=this.queryManager.startGraphQLSubscription({query:t.document,variables:t.variables,context:t.context}).subscribe({next:function(r){var s=t.updateQuery;s&&a.updateQuery(function(p,o){var u=o.variables;return s(p,{subscriptionData:r,variables:u})})},error:function(r){if(t.onError){t.onError(r);return}globalThis.__DEV__!==!1&&B.error(19,r)}});return this.subscriptions.add(i),function(){a.subscriptions.delete(i)&&i.unsubscribe()}},e.prototype.setOptions=function(t){return this.reobserve(t)},e.prototype.silentSetOptions=function(t){var a=Tt(this.options,t||{});li(this.options,a)},e.prototype.setVariables=function(t){return K(this.variables,t)?this.observers.size?this.result():Promise.resolve():(this.options.variables=t,this.observers.size?this.reobserve({fetchPolicy:this.options.initialFetchPolicy,variables:t},G.setVariables):Promise.resolve())},e.prototype.updateQuery=function(t){var a=this.queryManager,i=a.cache.diff({query:this.options.query,variables:this.variables,returnPartialData:!0,optimistic:!1}).result,r=t(i,{variables:this.variables});r&&(a.cache.writeQuery({query:this.options.query,data:r,variables:this.variables}),a.broadcastQueries())},e.prototype.startPolling=function(t){this.options.pollInterval=t,this.updatePolling()},e.prototype.stopPolling=function(){this.options.pollInterval=0,this.updatePolling()},e.prototype.applyNextFetchPolicy=function(t,a){if(a.nextFetchPolicy){var i=a.fetchPolicy,r=i===void 0?"cache-first":i,s=a.initialFetchPolicy,p=s===void 0?r:s;r==="standby"||(typeof a.nextFetchPolicy=="function"?a.fetchPolicy=a.nextFetchPolicy(r,{reason:t,options:a,observable:this,initialFetchPolicy:p}):t==="variables-changed"?a.fetchPolicy=p:a.fetchPolicy=a.nextFetchPolicy)}return a.fetchPolicy},e.prototype.fetch=function(t,a){return this.queryManager.setObservableQuery(this),this.queryManager.fetchConcastWithInfo(this.queryId,t,a)},e.prototype.updatePolling=function(){var t=this;if(!this.queryManager.ssrMode){var a=this,i=a.pollingInfo,r=a.options.pollInterval;if(!r){i&&(clearTimeout(i.timeout),delete this.pollingInfo);return}if(!(i&&i.interval===r)){B(r,20);var s=i||(this.pollingInfo={});s.interval=r;var p=function(){t.pollingInfo&&(qt(t.queryInfo.networkStatus)?o():t.reobserve({fetchPolicy:t.options.initialFetchPolicy==="no-cache"?"no-cache":"network-only"},G.poll).then(o,o))},o=function(){var u=t.pollingInfo;u&&(clearTimeout(u.timeout),u.timeout=setTimeout(p,u.interval))};o()}}},e.prototype.updateLastResult=function(t,a){a===void 0&&(a=this.variables);var i=this.getLastError();return i&&this.last&&!K(a,this.last.variables)&&(i=void 0),this.last=w({result:this.queryManager.assumeImmutableResults?t:Fi(t),variables:a},i?{error:i}:null)},e.prototype.reobserveAsConcast=function(t,a){var i=this;this.isTornDown=!1;var r=a===G.refetch||a===G.fetchMore||a===G.poll,s=this.options.variables,p=this.options.fetchPolicy,o=Tt(this.options,t||{}),u=r?o:li(this.options,o),l=this.transformDocument(u.query);this.lastQuery=l,r||(this.updatePolling(),t&&t.variables&&!K(t.variables,s)&&u.fetchPolicy!=="standby"&&u.fetchPolicy===p&&(this.applyNextFetchPolicy("variables-changed",u),a===void 0&&(a=G.setVariables)));var y=l===u.query?u:w(w({},u),{query:l});this.waitForOwnResult&&(this.waitForOwnResult=xn(y.fetchPolicy));var m=function(){i.concast===c&&(i.waitForOwnResult=!1)},d=y.variables&&w({},y.variables),T=this.fetch(y,a),c=T.concast,h=T.fromLink,v={next:function(k){m(),i.reportResult(k,d)},error:function(k){m(),i.reportError(k,d)}};return!r&&(h||!this.concast)&&(this.concast&&this.observer&&this.concast.removeObserver(this.observer),this.concast=c,this.observer=v),c.addObserver(v),c},e.prototype.reobserve=function(t,a){return this.reobserveAsConcast(t,a).promise},e.prototype.observe=function(){this.reportResult(this.getCurrentResult(!1),this.variables)},e.prototype.reportResult=function(t,a){var i=this.getLastError(),r=this.isDifferentFromLastResult(t,a);(i||!t.partial||this.options.returnPartialData)&&this.updateLastResult(t,a),(i||r)&&St(this.observers,"next",t)},e.prototype.reportError=function(t,a){var i=w(w({},this.getLastResult()),{error:t,errors:t.graphQLErrors,networkStatus:G.error,loading:!1});this.updateLastResult(i,a),St(this.observers,"error",this.last.error=t)},e.prototype.hasObservers=function(){return this.observers.size>0},e.prototype.tearDownQuery=function(){this.isTornDown||(this.concast&&this.observer&&(this.concast.removeObserver(this.observer),delete this.concast,delete this.observer),this.stopPolling(),this.subscriptions.forEach(function(t){return t.unsubscribe()}),this.subscriptions.clear(),this.queryManager.stopQuery(this.queryId),this.observers.clear(),this.isTornDown=!0)},e.prototype.transformDocument=function(t){return this.queryManager.transform(t)},e}($);qi(Zn);function zi(n){var e=n.options,t=e.fetchPolicy,a=e.nextFetchPolicy;return t==="cache-and-network"||t==="network-only"?n.reobserve({fetchPolicy:"cache-first",nextFetchPolicy:function(){return this.nextFetchPolicy=a,typeof a=="function"?a.apply(this,arguments):t}}):n.reobserve()}function hp(n){globalThis.__DEV__!==!1&&B.error(21,n.message,n.stack)}function $i(n){globalThis.__DEV__!==!1&&n&&globalThis.__DEV__!==!1&&B.debug(22,n)}function xn(n){return n==="network-only"||n==="no-cache"||n==="standby"}var Ki=function(){function n(e){var t=e.cache,a=e.client,i=e.resolvers,r=e.fragmentMatcher;this.selectionsToResolveCache=new WeakMap,this.cache=t,a&&(this.client=a),i&&this.addResolvers(i),r&&this.setFragmentMatcher(r)}return n.prototype.addResolvers=function(e){var t=this;this.resolvers=this.resolvers||{},Array.isArray(e)?e.forEach(function(a){t.resolvers=_a(t.resolvers,a)}):this.resolvers=_a(this.resolvers,e)},n.prototype.setResolvers=function(e){this.resolvers={},this.addResolvers(e)},n.prototype.getResolvers=function(){return this.resolvers||{}},n.prototype.runResolvers=function(e){var t=e.document,a=e.remoteResult,i=e.context,r=e.variables,s=e.onlyRunForcedResolvers,p=s===void 0?!1:s;return Le(this,void 0,void 0,function(){return Be(this,function(o){return t?[2,this.resolveDocument(t,a.data,i,r,this.fragmentMatcher,p).then(function(u){return w(w({},a),{data:u.result})})]:[2,a]})})},n.prototype.setFragmentMatcher=function(e){this.fragmentMatcher=e},n.prototype.getFragmentMatcher=function(){return this.fragmentMatcher},n.prototype.clientQuery=function(e){return At(["client"],e)&&this.resolvers?e:null},n.prototype.serverQuery=function(e){return Ai(e)},n.prototype.prepareContext=function(e){var t=this.cache;return w(w({},e),{cache:t,getCacheKey:function(a){return t.identify(a)}})},n.prototype.addExportedVariables=function(e,t,a){return t===void 0&&(t={}),a===void 0&&(a={}),Le(this,void 0,void 0,function(){return Be(this,function(i){return e?[2,this.resolveDocument(e,this.buildRootValueFromCache(e,t)||{},this.prepareContext(a),t).then(function(r){return w(w({},t),r.exportedVariables)})]:[2,w({},t)]})})},n.prototype.shouldForceResolvers=function(e){var t=!1;return Qe(e,{Directive:{enter:function(a){if(a.name.value==="client"&&a.arguments&&(t=a.arguments.some(function(i){return i.name.value==="always"&&i.value.kind==="BooleanValue"&&i.value.value===!0}),t))return gi}}}),t},n.prototype.buildRootValueFromCache=function(e,t){return this.cache.diff({query:ls(e),variables:t,returnPartialData:!0,optimistic:!1}).result},n.prototype.resolveDocument=function(e,t,a,i,r,s){return a===void 0&&(a={}),i===void 0&&(i={}),r===void 0&&(r=function(){return!0}),s===void 0&&(s=!1),Le(this,void 0,void 0,function(){var p,o,u,l,y,m,d,T,c,h,v;return Be(this,function(k){return p=Gt(e),o=Tn(e),u=mn(o),l=this.collectSelectionsToResolve(p,u),y=p.operation,m=y?y.charAt(0).toUpperCase()+y.slice(1):"Query",d=this,T=d.cache,c=d.client,h={fragmentMap:u,context:w(w({},a),{cache:T,client:c}),variables:i,fragmentMatcher:r,defaultOperationType:m,exportedVariables:{},selectionsToResolve:l,onlyRunForcedResolvers:s},v=!1,[2,this.resolveSelectionSet(p.selectionSet,v,t,h).then(function(b){return{result:b,exportedVariables:h.exportedVariables}})]})})},n.prototype.resolveSelectionSet=function(e,t,a,i){return Le(this,void 0,void 0,function(){var r,s,p,o,u,l=this;return Be(this,function(y){return r=i.fragmentMap,s=i.context,p=i.variables,o=[a],u=function(m){return Le(l,void 0,void 0,function(){var d,T;return Be(this,function(c){return!t&&!i.selectionsToResolve.has(m)?[2]:_t(m,p)?Ue(m)?[2,this.resolveField(m,t,a,i).then(function(h){var v;typeof h<"u"&&o.push((v={},v[He(m)]=h,v))})]:(rs(m)?d=m:(d=r[m.name.value],B(d,16,m.name.value)),d&&d.typeCondition&&(T=d.typeCondition.name.value,i.fragmentMatcher(a,T,s))?[2,this.resolveSelectionSet(d.selectionSet,t,a,i).then(function(h){o.push(h)})]:[2]):[2]})})},[2,Promise.all(e.selections.map(u)).then(function(){return ua(o)})]})})},n.prototype.resolveField=function(e,t,a,i){return Le(this,void 0,void 0,function(){var r,s,p,o,u,l,y,m,d,T=this;return Be(this,function(c){return a?(r=i.variables,s=e.name.value,p=He(e),o=s!==p,u=a[p]||a[s],l=Promise.resolve(u),(!i.onlyRunForcedResolvers||this.shouldForceResolvers(e))&&(y=a.__typename||i.defaultOperationType,m=this.resolvers&&this.resolvers[y],m&&(d=m[o?s:p],d&&(l=Promise.resolve(ya.withValue(this.cache,d,[a,cn(e,r),i.context,{field:e,fragmentMap:i.fragmentMap}]))))),[2,l.then(function(h){var v,k;if(h===void 0&&(h=u),e.directives&&e.directives.forEach(function(g){g.name.value==="export"&&g.arguments&&g.arguments.forEach(function(C){C.name.value==="as"&&C.value.kind==="StringValue"&&(i.exportedVariables[C.value.value]=h)})}),!e.selectionSet||h==null)return h;var b=(k=(v=e.directives)===null||v===void 0?void 0:v.some(function(g){return g.name.value==="client"}))!==null&&k!==void 0?k:!1;if(Array.isArray(h))return T.resolveSubSelectedArray(e,t||b,h,i);if(e.selectionSet)return T.resolveSelectionSet(e.selectionSet,t||b,h,i)})]):[2,null]})})},n.prototype.resolveSubSelectedArray=function(e,t,a,i){var r=this;return Promise.all(a.map(function(s){if(s===null)return null;if(Array.isArray(s))return r.resolveSubSelectedArray(e,t,s,i);if(e.selectionSet)return r.resolveSelectionSet(e.selectionSet,t,s,i)}))},n.prototype.collectSelectionsToResolve=function(e,t){var a=function(s){return!Array.isArray(s)},i=this.selectionsToResolveCache;function r(s){if(!i.has(s)){var p=new Set;i.set(s,p),Qe(s,{Directive:function(o,u,l,y,m){o.name.value==="client"&&m.forEach(function(d){a(d)&&qa(d)&&p.add(d)})},FragmentSpread:function(o,u,l,y,m){var d=t[o.name.value];B(d,17,o.name.value);var T=r(d);T.size>0&&(m.forEach(function(c){a(c)&&qa(c)&&p.add(c)}),p.add(o),T.forEach(function(c){p.add(c)}))}})}return i.get(s)}return r(e)},n}(),pt=new(Ve?WeakMap:Map);function In(n,e){var t=n[e];typeof t=="function"&&(n[e]=function(){return pt.set(n,(pt.get(n)+1)%1e15),t.apply(this,arguments)})}function yi(n){n.notifyTimeout&&(clearTimeout(n.notifyTimeout),n.notifyTimeout=void 0)}var An=function(){function n(e,t){t===void 0&&(t=e.generateQueryId()),this.queryId=t,this.listeners=new Set,this.document=null,this.lastRequestId=1,this.subscriptions=new Set,this.stopped=!1,this.dirty=!1,this.observableQuery=null;var a=this.cache=e.cache;pt.has(a)||(pt.set(a,0),In(a,"evict"),In(a,"modify"),In(a,"reset"))}return n.prototype.init=function(e){var t=e.networkStatus||G.loading;return this.variables&&this.networkStatus!==G.loading&&!K(this.variables,e.variables)&&(t=G.setVariables),K(e.variables,this.variables)||(this.lastDiff=void 0),Object.assign(this,{document:e.document,variables:e.variables,networkError:null,graphQLErrors:this.graphQLErrors||[],networkStatus:t}),e.observableQuery&&this.setObservableQuery(e.observableQuery),e.lastRequestId&&(this.lastRequestId=e.lastRequestId),this},n.prototype.reset=function(){yi(this),this.dirty=!1},n.prototype.getDiff=function(e){e===void 0&&(e=this.variables);var t=this.getDiffOptions(e);if(this.lastDiff&&K(t,this.lastDiff.options))return this.lastDiff.diff;this.updateWatch(this.variables=e);var a=this.observableQuery;if(a&&a.options.fetchPolicy==="no-cache")return{complete:!1};var i=this.cache.diff(t);return this.updateLastDiff(i,t),i},n.prototype.updateLastDiff=function(e,t){this.lastDiff=e?{diff:e,options:t||this.getDiffOptions()}:void 0},n.prototype.getDiffOptions=function(e){var t;return e===void 0&&(e=this.variables),{query:this.document,variables:e,returnPartialData:!0,optimistic:!0,canonizeResults:(t=this.observableQuery)===null||t===void 0?void 0:t.options.canonizeResults}},n.prototype.setDiff=function(e){var t=this,a=this.lastDiff&&this.lastDiff.diff;this.updateLastDiff(e),!this.dirty&&!K(a&&a.result,e&&e.result)&&(this.dirty=!0,this.notifyTimeout||(this.notifyTimeout=setTimeout(function(){return t.notify()},0)))},n.prototype.setObservableQuery=function(e){var t=this;e!==this.observableQuery&&(this.oqListener&&this.listeners.delete(this.oqListener),this.observableQuery=e,e?(e.queryInfo=this,this.listeners.add(this.oqListener=function(){var a=t.getDiff();a.fromOptimisticTransaction?e.observe():zi(e)})):delete this.oqListener)},n.prototype.notify=function(){var e=this;yi(this),this.shouldNotify()&&this.listeners.forEach(function(t){return t(e)}),this.dirty=!1},n.prototype.shouldNotify=function(){if(!this.dirty||!this.listeners.size)return!1;if(qt(this.networkStatus)&&this.observableQuery){var e=this.observableQuery.options.fetchPolicy;if(e!=="cache-only"&&e!=="cache-and-network")return!1}return!0},n.prototype.stop=function(){if(!this.stopped){this.stopped=!0,this.reset(),this.cancel(),this.cancel=n.prototype.cancel,this.subscriptions.forEach(function(t){return t.unsubscribe()});var e=this.observableQuery;e&&e.stopPolling()}},n.prototype.cancel=function(){},n.prototype.updateWatch=function(e){var t=this;e===void 0&&(e=this.variables);var a=this.observableQuery;if(!(a&&a.options.fetchPolicy==="no-cache")){var i=w(w({},this.getDiffOptions(e)),{watcher:this,callback:function(r){return t.setDiff(r)}});(!this.lastWatch||!K(i,this.lastWatch))&&(this.cancel(),this.cancel=this.cache.watch(this.lastWatch=i))}},n.prototype.resetLastWrite=function(){this.lastWrite=void 0},n.prototype.shouldWrite=function(e,t){var a=this.lastWrite;return!(a&&a.dmCount===pt.get(this.cache)&&K(t,a.variables)&&K(e.data,a.result.data))},n.prototype.markResult=function(e,t,a,i){var r=this,s=new We,p=Oe(e.errors)?e.errors.slice(0):[];if(this.reset(),"incremental"in e&&Oe(e.incremental)){var o=Vi(this.getDiff().result,e);e.data=o}else if("hasNext"in e&&e.hasNext){var u=this.getDiff();e.data=s.merge(u.result,e.data)}this.graphQLErrors=p,a.fetchPolicy==="no-cache"?this.updateLastDiff({result:e.data,complete:!0},this.getDiffOptions(a.variables)):i!==0&&(Jn(e,a.errorPolicy)?this.cache.performTransaction(function(l){if(r.shouldWrite(e,a.variables))l.writeQuery({query:t,data:e.data,variables:a.variables,overwrite:i===1}),r.lastWrite={result:e,variables:a.variables,dmCount:pt.get(r.cache)};else if(r.lastDiff&&r.lastDiff.diff.complete){e.data=r.lastDiff.diff.result;return}var y=r.getDiffOptions(a.variables),m=l.diff(y);r.stopped||r.updateWatch(a.variables),r.updateLastDiff(m,y),m.complete&&(e.data=m.result)}):this.lastWrite=void 0)},n.prototype.markReady=function(){return this.networkError=null,this.networkStatus=G.ready},n.prototype.markError=function(e){return this.networkStatus=G.error,this.lastWrite=void 0,this.reset(),e.graphQLErrors&&(this.graphQLErrors=e.graphQLErrors),e.networkError&&(this.networkError=e.networkError),e},n}();function Jn(n,e){e===void 0&&(e="none");var t=e==="ignore"||e==="all",a=!Zt(n);return!a&&t&&n.data&&(a=!0),a}var vp=Object.prototype.hasOwnProperty,bp=function(){function n(e){var t=e.cache,a=e.link,i=e.defaultOptions,r=e.documentTransform,s=e.queryDeduplication,p=s===void 0?!1:s,o=e.onBroadcast,u=e.ssrMode,l=u===void 0?!1:u,y=e.clientAwareness,m=y===void 0?{}:y,d=e.localState,T=e.assumeImmutableResults,c=T===void 0?!!t.assumeImmutableResults:T,h=this;this.clientAwareness={},this.queries=new Map,this.fetchCancelFns=new Map,this.transformCache=new(Ve?WeakMap:Map),this.queryIdCounter=1,this.requestIdCounter=1,this.mutationIdCounter=1,this.inFlightLinkObservables=new Map;var v=new Oi(function(k){return h.cache.transformDocument(k)},{cache:!1});this.cache=t,this.link=a,this.defaultOptions=i||Object.create(null),this.queryDeduplication=p,this.clientAwareness=m,this.localState=d||new Ki({cache:t}),this.ssrMode=l,this.assumeImmutableResults=c,this.documentTransform=r?v.concat(r).concat(v):v,(this.onBroadcast=o)&&(this.mutationStore=Object.create(null))}return n.prototype.stop=function(){var e=this;this.queries.forEach(function(t,a){e.stopQueryNoBroadcast(a)}),this.cancelPendingFetches(pe(23))},n.prototype.cancelPendingFetches=function(e){this.fetchCancelFns.forEach(function(t){return t(e)}),this.fetchCancelFns.clear()},n.prototype.mutate=function(e){var t,a,i=e.mutation,r=e.variables,s=e.optimisticResponse,p=e.updateQueries,o=e.refetchQueries,u=o===void 0?[]:o,l=e.awaitRefetchQueries,y=l===void 0?!1:l,m=e.update,d=e.onQueryUpdated,T=e.fetchPolicy,c=T===void 0?((t=this.defaultOptions.mutate)===null||t===void 0?void 0:t.fetchPolicy)||"network-only":T,h=e.errorPolicy,v=h===void 0?((a=this.defaultOptions.mutate)===null||a===void 0?void 0:a.errorPolicy)||"none":h,k=e.keepRootFields,b=e.context;return Le(this,void 0,void 0,function(){var g,C,P,O;return Be(this,function(x){switch(x.label){case 0:return B(i,24),B(c==="network-only"||c==="no-cache",25),g=this.generateMutationId(),i=this.cache.transformForLink(this.transform(i)),C=this.getDocumentInfo(i).hasClientExports,r=this.getVariables(i,r),C?[4,this.localState.addExportedVariables(i,r,b)]:[3,2];case 1:r=x.sent(),x.label=2;case 2:return P=this.mutationStore&&(this.mutationStore[g]={mutation:i,variables:r,loading:!0,error:null}),s&&this.markMutationOptimistic(s,{mutationId:g,document:i,variables:r,fetchPolicy:c,errorPolicy:v,context:b,updateQueries:p,update:m,keepRootFields:k}),this.broadcastQueries(),O=this,[2,new Promise(function(I,V){return wn(O.getObservableFromLink(i,w(w({},b),{optimisticResponse:s}),r,!1),function(L){if(Zt(L)&&v==="none")throw new it({graphQLErrors:Gn(L)});P&&(P.loading=!1,P.error=null);var R=w({},L);return typeof u=="function"&&(u=u(R)),v==="ignore"&&Zt(R)&&delete R.errors,O.markMutationResult({mutationId:g,result:R,document:i,variables:r,fetchPolicy:c,errorPolicy:v,context:b,update:m,updateQueries:p,awaitRefetchQueries:y,refetchQueries:u,removeOptimistic:s?g:void 0,onQueryUpdated:d,keepRootFields:k})}).subscribe({next:function(L){O.broadcastQueries(),(!("hasNext"in L)||L.hasNext===!1)&&I(L)},error:function(L){P&&(P.loading=!1,P.error=L),s&&O.cache.removeOptimistic(g),O.broadcastQueries(),V(L instanceof it?L:new it({networkError:L}))}})})]}})})},n.prototype.markMutationResult=function(e,t){var a=this;t===void 0&&(t=this.cache);var i=e.result,r=[],s=e.fetchPolicy==="no-cache";if(!s&&Jn(i,e.errorPolicy)){if(ut(i)||r.push({result:i.data,dataId:"ROOT_MUTATION",query:e.document,variables:e.variables}),ut(i)&&Oe(i.incremental)){var p=t.diff({id:"ROOT_MUTATION",query:this.getDocumentInfo(e.document).asQuery,variables:e.variables,optimistic:!1,returnPartialData:!0}),o=void 0;p.result&&(o=Vi(p.result,i)),typeof o<"u"&&(i.data=o,r.push({result:o,dataId:"ROOT_MUTATION",query:e.document,variables:e.variables}))}var u=e.updateQueries;u&&this.queries.forEach(function(y,m){var d=y.observableQuery,T=d&&d.queryName;if(!(!T||!vp.call(u,T))){var c=u[T],h=a.queries.get(m),v=h.document,k=h.variables,b=t.diff({query:v,variables:k,returnPartialData:!0,optimistic:!1}),g=b.result,C=b.complete;if(C&&g){var P=c(g,{mutationResult:i,queryName:v&&_n(v)||void 0,queryVariables:k});P&&r.push({result:P,dataId:"ROOT_QUERY",query:v,variables:k})}}})}if(r.length>0||e.refetchQueries||e.update||e.onQueryUpdated||e.removeOptimistic){var l=[];if(this.refetchQueries({updateCache:function(y){s||r.forEach(function(c){return y.write(c)});var m=e.update,d=!hs(i)||ut(i)&&!i.hasNext;if(m){if(!s){var T=y.diff({id:"ROOT_MUTATION",query:a.getDocumentInfo(e.document).asQuery,variables:e.variables,optimistic:!1,returnPartialData:!0});T.complete&&(i=w(w({},i),{data:T.result}),"incremental"in i&&delete i.incremental,"hasNext"in i&&delete i.hasNext)}d&&m(y,i,{context:e.context,variables:e.variables})}!s&&!e.keepRootFields&&d&&y.modify({id:"ROOT_MUTATION",fields:function(c,h){var v=h.fieldName,k=h.DELETE;return v==="__typename"?c:k}})},include:e.refetchQueries,optimistic:!1,removeOptimistic:e.removeOptimistic,onQueryUpdated:e.onQueryUpdated||null}).forEach(function(y){return l.push(y)}),e.awaitRefetchQueries||e.onQueryUpdated)return Promise.all(l).then(function(){return i})}return Promise.resolve(i)},n.prototype.markMutationOptimistic=function(e,t){var a=this,i=typeof e=="function"?e(t.variables):e;return this.cache.recordOptimisticTransaction(function(r){try{a.markMutationResult(w(w({},t),{result:{data:i}}),r)}catch(s){globalThis.__DEV__!==!1&&B.error(s)}},t.mutationId)},n.prototype.fetchQuery=function(e,t,a){return this.fetchConcastWithInfo(e,t,a).concast.promise},n.prototype.getQueryStore=function(){var e=Object.create(null);return this.queries.forEach(function(t,a){e[a]={variables:t.variables,networkStatus:t.networkStatus,networkError:t.networkError,graphQLErrors:t.graphQLErrors}}),e},n.prototype.resetErrors=function(e){var t=this.queries.get(e);t&&(t.networkError=void 0,t.graphQLErrors=[])},n.prototype.transform=function(e){return this.documentTransform.transformDocument(e)},n.prototype.getDocumentInfo=function(e){var t=this.transformCache;if(!t.has(e)){var a={hasClientExports:Qr(e),hasForcedResolvers:this.localState.shouldForceResolvers(e),hasNonreactiveDirective:At(["nonreactive"],e),clientQuery:this.localState.clientQuery(e),serverQuery:Ii([{name:"client",remove:!0},{name:"connection"},{name:"nonreactive"}],e),defaultVars:pa(Nt(e)),asQuery:w(w({},e),{definitions:e.definitions.map(function(i){return i.kind==="OperationDefinition"&&i.operation!=="query"?w(w({},i),{operation:"query"}):i})})};t.set(e,a)}return t.get(e)},n.prototype.getVariables=function(e,t){return w(w({},this.getDocumentInfo(e).defaultVars),t)},n.prototype.watchQuery=function(e){var t=this.transform(e.query);e=w(w({},e),{variables:this.getVariables(t,e.variables)}),typeof e.notifyOnNetworkStatusChange>"u"&&(e.notifyOnNetworkStatusChange=!1);var a=new An(this),i=new Zn({queryManager:this,queryInfo:a,options:e});return i.lastQuery=t,this.queries.set(i.queryId,a),a.init({document:t,observableQuery:i,variables:i.variables}),i},n.prototype.query=function(e,t){var a=this;return t===void 0&&(t=this.generateQueryId()),B(e.query,26),B(e.query.kind==="Document",27),B(!e.returnPartialData,28),B(!e.pollInterval,29),this.fetchQuery(t,w(w({},e),{query:this.transform(e.query)})).finally(function(){return a.stopQuery(t)})},n.prototype.generateQueryId=function(){return String(this.queryIdCounter++)},n.prototype.generateRequestId=function(){return this.requestIdCounter++},n.prototype.generateMutationId=function(){return String(this.mutationIdCounter++)},n.prototype.stopQueryInStore=function(e){this.stopQueryInStoreNoBroadcast(e),this.broadcastQueries()},n.prototype.stopQueryInStoreNoBroadcast=function(e){var t=this.queries.get(e);t&&t.stop()},n.prototype.clearStore=function(e){return e===void 0&&(e={discardWatches:!0}),this.cancelPendingFetches(pe(30)),this.queries.forEach(function(t){t.observableQuery?t.networkStatus=G.loading:t.stop()}),this.mutationStore&&(this.mutationStore=Object.create(null)),this.cache.reset(e)},n.prototype.getObservableQueries=function(e){var t=this;e===void 0&&(e="active");var a=new Map,i=new Map,r=new Set;return Array.isArray(e)&&e.forEach(function(s){typeof s=="string"?i.set(s,!1):jr(s)?i.set(t.transform(s),!1):j(s)&&s.query&&r.add(s)}),this.queries.forEach(function(s,p){var o=s.observableQuery,u=s.document;if(o){if(e==="all"){a.set(p,o);return}var l=o.queryName,y=o.options.fetchPolicy;if(y==="standby"||e==="active"&&!o.hasObservers())return;(e==="active"||l&&i.has(l)||u&&i.has(u))&&(a.set(p,o),l&&i.set(l,!0),u&&i.set(u,!0))}}),r.size&&r.forEach(function(s){var p=Bn("legacyOneTimeQuery"),o=t.getQuery(p).init({document:s.query,variables:s.variables}),u=new Zn({queryManager:t,queryInfo:o,options:w(w({},s),{fetchPolicy:"network-only"})});B(u.queryId===p),o.setObservableQuery(u),a.set(p,u)}),globalThis.__DEV__!==!1&&i.size&&i.forEach(function(s,p){s||globalThis.__DEV__!==!1&&B.warn(typeof p=="string"?31:32,p)}),a},n.prototype.reFetchObservableQueries=function(e){var t=this;e===void 0&&(e=!1);var a=[];return this.getObservableQueries(e?"all":"active").forEach(function(i,r){var s=i.options.fetchPolicy;i.resetLastResults(),(e||s!=="standby"&&s!=="cache-only")&&a.push(i.refetch()),t.getQuery(r).setDiff(null)}),this.broadcastQueries(),Promise.all(a)},n.prototype.setObservableQuery=function(e){this.getQuery(e.queryId).setObservableQuery(e)},n.prototype.startGraphQLSubscription=function(e){var t=this,a=e.query,i=e.fetchPolicy,r=e.errorPolicy,s=e.variables,p=e.context,o=p===void 0?{}:p;a=this.transform(a),s=this.getVariables(a,s);var u=function(y){return t.getObservableFromLink(a,o,y).map(function(m){i!=="no-cache"&&(Jn(m,r)&&t.cache.write({query:a,result:m.data,dataId:"ROOT_SUBSCRIPTION",variables:y}),t.broadcastQueries());var d=Zt(m),T=Vs(m);if(d||T){var c={};throw d&&(c.graphQLErrors=m.errors),T&&(c.protocolErrors=m.extensions[la]),new it(c)}return m})};if(this.getDocumentInfo(a).hasClientExports){var l=this.localState.addExportedVariables(a,s,o).then(u);return new $(function(y){var m=null;return l.then(function(d){return m=d.subscribe(y)},y.error),function(){return m&&m.unsubscribe()}})}return u(s)},n.prototype.stopQuery=function(e){this.stopQueryNoBroadcast(e),this.broadcastQueries()},n.prototype.stopQueryNoBroadcast=function(e){this.stopQueryInStoreNoBroadcast(e),this.removeQuery(e)},n.prototype.removeQuery=function(e){this.fetchCancelFns.delete(e),this.queries.has(e)&&(this.getQuery(e).stop(),this.queries.delete(e))},n.prototype.broadcastQueries=function(){this.onBroadcast&&this.onBroadcast(),this.queries.forEach(function(e){return e.notify()})},n.prototype.getLocalState=function(){return this.localState},n.prototype.getObservableFromLink=function(e,t,a,i){var r=this,s;i===void 0&&(i=(s=t==null?void 0:t.queryDeduplication)!==null&&s!==void 0?s:this.queryDeduplication);var p,o=this.getDocumentInfo(e),u=o.serverQuery,l=o.clientQuery;if(u){var y=this,m=y.inFlightLinkObservables,d=y.link,T={query:u,variables:a,operationName:_n(u)||void 0,context:this.prepareContext(w(w({},t),{forceFetch:!i}))};if(t=T.context,i){var c=Si(u),h=m.get(c)||new Map;m.set(c,h);var v=Je(a);if(p=h.get(v),!p){var k=new rt([Hn(d,T)]);h.set(v,p=k),k.beforeNext(function(){h.delete(v)&&h.size<1&&m.delete(c)})}}else p=new rt([Hn(d,T)])}else p=new rt([$.of({data:{}})]),t=this.prepareContext(t);return l&&(p=wn(p,function(b){return r.localState.runResolvers({document:l,remoteResult:b,context:t,variables:a})})),p},n.prototype.getResultsFromLink=function(e,t,a){var i=e.lastRequestId=this.generateRequestId(),r=this.cache.transformForLink(a.query);return wn(this.getObservableFromLink(r,a.context,a.variables),function(s){var p=Gn(s),o=p.length>0;if(i>=e.lastRequestId){if(o&&a.errorPolicy==="none")throw e.markError(new it({graphQLErrors:p}));e.markResult(s,r,a,t),e.markReady()}var u={data:s.data,loading:!1,networkStatus:G.ready};return o&&a.errorPolicy!=="ignore"&&(u.errors=p,u.networkStatus=G.error),u},function(s){var p=Ds(s)?s:new it({networkError:s});throw i>=e.lastRequestId&&e.markError(p),p})},n.prototype.fetchConcastWithInfo=function(e,t,a){var i=this;a===void 0&&(a=G.loading);var r=t.query,s=this.getVariables(r,t.variables),p=this.getQuery(e),o=this.defaultOptions.watchQuery,u=t.fetchPolicy,l=u===void 0?o&&o.fetchPolicy||"cache-first":u,y=t.errorPolicy,m=y===void 0?o&&o.errorPolicy||"none":y,d=t.returnPartialData,T=d===void 0?!1:d,c=t.notifyOnNetworkStatusChange,h=c===void 0?!1:c,v=t.context,k=v===void 0?{}:v,b=Object.assign({},t,{query:r,variables:s,fetchPolicy:l,errorPolicy:m,returnPartialData:T,notifyOnNetworkStatusChange:h,context:k}),g=function(I){b.variables=I;var V=i.fetchQueryByPolicy(p,b,a);return b.fetchPolicy!=="standby"&&V.sources.length>0&&p.observableQuery&&p.observableQuery.applyNextFetchPolicy("after-fetch",t),V},C=function(){return i.fetchCancelFns.delete(e)};this.fetchCancelFns.set(e,function(I){C(),setTimeout(function(){return P.cancel(I)})});var P,O;if(this.getDocumentInfo(b.query).hasClientExports)P=new rt(this.localState.addExportedVariables(b.query,b.variables,b.context).then(g).then(function(I){return I.sources})),O=!0;else{var x=g(b.variables);O=x.fromLink,P=new rt(x.sources)}return P.promise.then(C,C),{concast:P,fromLink:O}},n.prototype.refetchQueries=function(e){var t=this,a=e.updateCache,i=e.include,r=e.optimistic,s=r===void 0?!1:r,p=e.removeOptimistic,o=p===void 0?s?Bn("refetchQueries"):void 0:p,u=e.onQueryUpdated,l=new Map;i&&this.getObservableQueries(i).forEach(function(m,d){l.set(d,{oq:m,lastDiff:t.getQuery(d).getDiff()})});var y=new Map;return a&&this.cache.batch({update:a,optimistic:s&&o||!1,removeOptimistic:o,onWatchUpdated:function(m,d,T){var c=m.watcher instanceof An&&m.watcher.observableQuery;if(c){if(u){l.delete(c.queryId);var h=u(c,d,T);return h===!0&&(h=c.refetch()),h!==!1&&y.set(c,h),h}u!==null&&l.set(c.queryId,{oq:c,lastDiff:T,diff:d})}}}),l.size&&l.forEach(function(m,d){var T=m.oq,c=m.lastDiff,h=m.diff,v;if(u){if(!h){var k=T.queryInfo;k.reset(),h=k.getDiff()}v=u(T,h,c)}(!u||v===!0)&&(v=T.refetch()),v!==!1&&y.set(T,v),d.indexOf("legacyOneTimeQuery")>=0&&t.stopQueryNoBroadcast(d)}),o&&this.cache.removeOptimistic(o),y},n.prototype.fetchQueryByPolicy=function(e,t,a){var i=this,r=t.query,s=t.variables,p=t.fetchPolicy,o=t.refetchWritePolicy,u=t.errorPolicy,l=t.returnPartialData,y=t.context,m=t.notifyOnNetworkStatusChange,d=e.networkStatus;e.init({document:r,variables:s,networkStatus:a});var T=function(){return e.getDiff(s)},c=function(g,C){C===void 0&&(C=e.networkStatus||G.loading);var P=g.result;globalThis.__DEV__!==!1&&!l&&!K(P,{})&&$i(g.missing);var O=function(x){return $.of(w({data:x,loading:qt(C),networkStatus:C},g.complete?null:{partial:!0}))};return P&&i.getDocumentInfo(r).hasForcedResolvers?i.localState.runResolvers({document:r,remoteResult:{data:P},context:y,variables:s,onlyRunForcedResolvers:!0}).then(function(x){return O(x.data||void 0)}):u==="none"&&C===G.refetch&&Array.isArray(g.missing)?O(void 0):O(P)},h=p==="no-cache"?0:a===G.refetch&&o!=="merge"?1:2,v=function(){return i.getResultsFromLink(e,h,{query:r,variables:s,context:y,fetchPolicy:p,errorPolicy:u})},k=m&&typeof d=="number"&&d!==a&&qt(a);switch(p){default:case"cache-first":{var b=T();return b.complete?{fromLink:!1,sources:[c(b,e.markReady())]}:l||k?{fromLink:!0,sources:[c(b),v()]}:{fromLink:!0,sources:[v()]}}case"cache-and-network":{var b=T();return b.complete||l||k?{fromLink:!0,sources:[c(b),v()]}:{fromLink:!0,sources:[v()]}}case"cache-only":return{fromLink:!1,sources:[c(T(),e.markReady())]};case"network-only":return k?{fromLink:!0,sources:[c(T()),v()]}:{fromLink:!0,sources:[v()]};case"no-cache":return k?{fromLink:!0,sources:[c(e.getDiff()),v()]}:{fromLink:!0,sources:[v()]};case"standby":return{fromLink:!1,sources:[]}}},n.prototype.getQuery=function(e){return e&&!this.queries.has(e)&&this.queries.set(e,new An(this,e)),this.queries.get(e)},n.prototype.prepareContext=function(e){e===void 0&&(e={});var t=this.localState.prepareContext(e);return w(w({},t),{clientAwareness:this.clientAwareness})},n}(),mi=!1,di=function(){function n(e){var t=this;if(this.resetStoreCallbacks=[],this.clearStoreCallbacks=[],!e.cache)throw pe(13);var a=e.uri,i=e.credentials,r=e.headers,s=e.cache,p=e.documentTransform,o=e.ssrMode,u=o===void 0?!1:o,l=e.ssrForceFetchDelay,y=l===void 0?0:l,m=e.connectToDevTools,d=m===void 0?typeof window=="object"&&!window.__APOLLO_CLIENT__&&globalThis.__DEV__!==!1:m,T=e.queryDeduplication,c=T===void 0?!0:T,h=e.defaultOptions,v=e.assumeImmutableResults,k=v===void 0?s.assumeImmutableResults:v,b=e.resolvers,g=e.typeDefs,C=e.fragmentMatcher,P=e.name,O=e.version,x=e.link;if(x||(x=a?new Wn({uri:a,credentials:i,headers:r}):Qt.empty()),this.link=x,this.cache=s,this.disableNetworkFetches=u||y>0,this.queryDeduplication=c,this.defaultOptions=h||Object.create(null),this.typeDefs=g,y&&setTimeout(function(){return t.disableNetworkFetches=!1},y),this.watchQuery=this.watchQuery.bind(this),this.query=this.query.bind(this),this.mutate=this.mutate.bind(this),this.resetStore=this.resetStore.bind(this),this.reFetchObservableQueries=this.reFetchObservableQueries.bind(this),d&&typeof window=="object"&&(window.__APOLLO_CLIENT__=this),!mi&&d&&globalThis.__DEV__!==!1&&(mi=!0,typeof window<"u"&&window.document&&window.top===window.self&&!window.__APOLLO_DEVTOOLS_GLOBAL_HOOK__)){var I=window.navigator,V=I&&I.userAgent,L=void 0;typeof V=="string"&&(V.indexOf("Chrome/")>-1?L="https://chrome.google.com/webstore/detail/apollo-client-developer-t/jdkknkkbebbapilgoeccciglkfbmbnfm":V.indexOf("Firefox/")>-1&&(L="https://addons.mozilla.org/en-US/firefox/addon/apollo-developer-tools/")),L&&globalThis.__DEV__!==!1&&B.log("Download the Apollo DevTools for a better development experience: %s",L)}this.version=ia,this.localState=new Ki({cache:s,client:this,resolvers:b,fragmentMatcher:C}),this.queryManager=new bp({cache:this.cache,link:this.link,defaultOptions:this.defaultOptions,documentTransform:p,queryDeduplication:c,ssrMode:u,clientAwareness:{name:P,version:O},localState:this.localState,assumeImmutableResults:k,onBroadcast:d?function(){t.devToolsHookCb&&t.devToolsHookCb({action:{},state:{queries:t.queryManager.getQueryStore(),mutations:t.queryManager.mutationStore||{}},dataWithOptimisticResults:t.cache.extract(!0)})}:void 0})}return Object.defineProperty(n.prototype,"documentTransform",{get:function(){return this.queryManager.documentTransform},enumerable:!1,configurable:!0}),n.prototype.stop=function(){this.queryManager.stop()},n.prototype.watchQuery=function(e){return this.defaultOptions.watchQuery&&(e=Pn(this.defaultOptions.watchQuery,e)),this.disableNetworkFetches&&(e.fetchPolicy==="network-only"||e.fetchPolicy==="cache-and-network")&&(e=w(w({},e),{fetchPolicy:"cache-first"})),this.queryManager.watchQuery(e)},n.prototype.query=function(e){return this.defaultOptions.query&&(e=Pn(this.defaultOptions.query,e)),B(e.fetchPolicy!=="cache-and-network",14),this.disableNetworkFetches&&e.fetchPolicy==="network-only"&&(e=w(w({},e),{fetchPolicy:"cache-first"})),this.queryManager.query(e)},n.prototype.mutate=function(e){return this.defaultOptions.mutate&&(e=Pn(this.defaultOptions.mutate,e)),this.queryManager.mutate(e)},n.prototype.subscribe=function(e){return this.queryManager.startGraphQLSubscription(e)},n.prototype.readQuery=function(e,t){return t===void 0&&(t=!1),this.cache.readQuery(e,t)},n.prototype.readFragment=function(e,t){return t===void 0&&(t=!1),this.cache.readFragment(e,t)},n.prototype.writeQuery=function(e){var t=this.cache.writeQuery(e);return e.broadcast!==!1&&this.queryManager.broadcastQueries(),t},n.prototype.writeFragment=function(e){var t=this.cache.writeFragment(e);return e.broadcast!==!1&&this.queryManager.broadcastQueries(),t},n.prototype.__actionHookForDevTools=function(e){this.devToolsHookCb=e},n.prototype.__requestRaw=function(e){return Hn(this.link,e)},n.prototype.resetStore=function(){var e=this;return Promise.resolve().then(function(){return e.queryManager.clearStore({discardWatches:!1})}).then(function(){return Promise.all(e.resetStoreCallbacks.map(function(t){return t()}))}).then(function(){return e.reFetchObservableQueries()})},n.prototype.clearStore=function(){var e=this;return Promise.resolve().then(function(){return e.queryManager.clearStore({discardWatches:!0})}).then(function(){return Promise.all(e.clearStoreCallbacks.map(function(t){return t()}))})},n.prototype.onResetStore=function(e){var t=this;return this.resetStoreCallbacks.push(e),function(){t.resetStoreCallbacks=t.resetStoreCallbacks.filter(function(a){return a!==e})}},n.prototype.onClearStore=function(e){var t=this;return this.clearStoreCallbacks.push(e),function(){t.clearStoreCallbacks=t.clearStoreCallbacks.filter(function(a){return a!==e})}},n.prototype.reFetchObservableQueries=function(e){return this.queryManager.reFetchObservableQueries(e)},n.prototype.refetchQueries=function(e){var t=this.queryManager.refetchQueries(e),a=[],i=[];t.forEach(function(s,p){a.push(p),i.push(s)});var r=Promise.all(i);return r.queries=a,r.results=i,r.catch(function(s){globalThis.__DEV__!==!1&&B.debug(15,s)}),r},n.prototype.getObservableQueries=function(e){return e===void 0&&(e="active"),this.queryManager.getObservableQueries(e)},n.prototype.extract=function(e){return this.cache.extract(e)},n.prototype.restore=function(e){return this.cache.restore(e)},n.prototype.addResolvers=function(e){this.localState.addResolvers(e)},n.prototype.setResolvers=function(e){this.localState.setResolvers(e)},n.prototype.getResolvers=function(){return this.localState.getResolvers()},n.prototype.setLocalStateFragmentMatcher=function(e){this.localState.setFragmentMatcher(e)},n.prototype.setLink=function(e){this.link=this.queryManager.link=e},n}(),Q;(function(n){n.OptionMarketViewer="OptionMarketViewer",n.LyraRegistry="LyraRegistry",n.ExchangeAdapter="ExchangeAdapter",n.TestFaucet="TestFaucet"})(Q||(Q={}));var et;(function(n){n.MultiDistributor="MultiDistributor",n.Multicall3="Multicall3"})(et||(et={}));var F;(function(n){n.OptionMarket="OptionMarket",n.OptionMarketPricer="OptionMarketPricer",n.OptionToken="OptionToken",n.ShortCollateral="ShortCollateral",n.OptionGreekCache="OptionGreekCache",n.LiquidityToken="LiquidityToken",n.LiquidityPool="LiquidityPool",n.PoolHedger="PoolHedger"})(F||(F={}));var ce;(function(n){n[n.LongCall=0]="LongCall",n[n.LongPut=1]="LongPut",n[n.ShortCoveredCall=2]="ShortCoveredCall",n[n.ShortCall=3]="ShortCall",n[n.ShortPut=4]="ShortPut"})(ce||(ce={}));var ve;(function(n){n.Testnet="testnet",n.Mainnet="mainnet"})(ve||(ve={}));const Xi=1;var rn;(function(n){n.Trade="Trade",n.PositionUpdated="PositionUpdated",n.Transfer="Transfer"})(rn||(rn={}));var Ce;(function(n){n[n.Empty=0]="Empty",n[n.Active=1]="Active",n[n.Closed=2]="Closed",n[n.Liquidated=3]="Liquidated",n[n.Settled=4]="Settled",n[n.Merged=5]="Merged"})(Ce||(Ce={}));var be;(function(n){n[n.Opened=0]="Opened",n[n.Adjusted=1]="Adjusted",n[n.Closed=2]="Closed",n[n.SplitFrom=3]="SplitFrom",n[n.SplitInto=4]="SplitInto",n[n.Merged=5]="Merged",n[n.MergedInto=6]="MergedInto",n[n.Settled=7]="Settled",n[n.Liquidated=8]="Liquidated",n[n.Transfer=9]="Transfer"})(be||(be={}));var ci;(function(n){n[n.Open=0]="Open",n[n.Close=1]="Close",n[n.Liquidate=2]="Liquidate"})(ci||(ci={}));var le;(function(n){n.ContractCall="ContractCall",n.Log="Log",n.Subgraph="Subgraph"})(le||(le={}));be.Adjusted,be.Closed,be.Liquidated,be.Opened,be.Settled,be.Merged,be.MergedInto,be.SplitFrom,be.SplitInto;function _(n,e,t,a,i){return{to:t,data:i,from:a,chainId:e??n.network.chainId}}const kp=[{inputs:[],stateMutability:"nonpayable",type:"constructor"},{inputs:[{internalType:"bytes32",name:"contractName",type:"bytes32"}],name:"NonExistentGlobalContract",type:"error"},{inputs:[{internalType:"address",name:"optionMarket",type:"address"}],name:"NonExistentMarket",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"nominatedOwner",type:"address"}],name:"OnlyNominatedOwner",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"owner",type:"address"}],name:"OnlyOwner",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"market",type:"address"}],name:"RemovingInvalidMarket",type:"error"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"name",type:"bytes32"},{indexed:!1,internalType:"address",name:"addr",type:"address"}],name:"GlobalAddressUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"contract OptionMarket",name:"market",type:"address"}],name:"MarketRemoved",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"contract OptionMarket",name:"optionMarket",type:"address"},{components:[{internalType:"contract LiquidityPool",name:"liquidityPool",type:"address"},{internalType:"contract LiquidityToken",name:"liquidityToken",type:"address"},{internalType:"contract OptionGreekCache",name:"greekCache",type:"address"},{internalType:"contract OptionMarket",name:"optionMarket",type:"address"},{internalType:"contract OptionMarketPricer",name:"optionMarketPricer",type:"address"},{internalType:"contract OptionToken",name:"optionToken",type:"address"},{internalType:"contract PoolHedger",name:"poolHedger",type:"address"},{internalType:"contract ShortCollateral",name:"shortCollateral",type:"address"},{internalType:"contract GWAVOracle",name:"gwavOracle",type:"address"},{internalType:"contract IERC20",name:"quoteAsset",type:"address"},{internalType:"contract IERC20",name:"baseAsset",type:"address"}],indexed:!1,internalType:"struct LyraRegistry.OptionMarketAddresses",name:"market",type:"tuple"}],name:"MarketUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"oldOwner",type:"address"},{indexed:!1,internalType:"address",name:"newOwner",type:"address"}],name:"OwnerChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"newOwner",type:"address"}],name:"OwnerNominated",type:"event"},{inputs:[],name:"acceptOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"contract LiquidityPool",name:"liquidityPool",type:"address"},{internalType:"contract LiquidityToken",name:"liquidityToken",type:"address"},{internalType:"contract OptionGreekCache",name:"greekCache",type:"address"},{internalType:"contract OptionMarket",name:"optionMarket",type:"address"},{internalType:"contract OptionMarketPricer",name:"optionMarketPricer",type:"address"},{internalType:"contract OptionToken",name:"optionToken",type:"address"},{internalType:"contract PoolHedger",name:"poolHedger",type:"address"},{internalType:"contract ShortCollateral",name:"shortCollateral",type:"address"},{internalType:"contract GWAVOracle",name:"gwavOracle",type:"address"},{internalType:"contract IERC20",name:"quoteAsset",type:"address"},{internalType:"contract IERC20",name:"baseAsset",type:"address"}],internalType:"struct LyraRegistry.OptionMarketAddresses",name:"newMarketAddresses",type:"tuple"}],name:"addMarket",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"contractName",type:"bytes32"}],name:"getGlobalAddress",outputs:[{internalType:"address",name:"globalContract",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract OptionMarket",name:"optionMarket",type:"address"}],name:"getMarketAddresses",outputs:[{components:[{internalType:"contract LiquidityPool",name:"liquidityPool",type:"address"},{internalType:"contract LiquidityToken",name:"liquidityToken",type:"address"},{internalType:"contract OptionGreekCache",name:"greekCache",type:"address"},{internalType:"contract OptionMarket",name:"optionMarket",type:"address"},{internalType:"contract OptionMarketPricer",name:"optionMarketPricer",type:"address"},{internalType:"contract OptionToken",name:"optionToken",type:"address"},{internalType:"contract PoolHedger",name:"poolHedger",type:"address"},{internalType:"contract ShortCollateral",name:"shortCollateral",type:"address"},{internalType:"contract GWAVOracle",name:"gwavOracle",type:"address"},{internalType:"contract IERC20",name:"quoteAsset",type:"address"},{internalType:"contract IERC20",name:"baseAsset",type:"address"}],internalType:"struct LyraRegistry.OptionMarketAddresses",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"",type:"bytes32"}],name:"globalAddresses",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract OptionMarket",name:"",type:"address"}],name:"marketAddresses",outputs:[{internalType:"contract LiquidityPool",name:"liquidityPool",type:"address"},{internalType:"contract LiquidityToken",name:"liquidityToken",type:"address"},{internalType:"contract OptionGreekCache",name:"greekCache",type:"address"},{internalType:"contract OptionMarket",name:"optionMarket",type:"address"},{internalType:"contract OptionMarketPricer",name:"optionMarketPricer",type:"address"},{internalType:"contract OptionToken",name:"optionToken",type:"address"},{internalType:"contract PoolHedger",name:"poolHedger",type:"address"},{internalType:"contract ShortCollateral",name:"shortCollateral",type:"address"},{internalType:"contract GWAVOracle",name:"gwavOracle",type:"address"},{internalType:"contract IERC20",name:"quoteAsset",type:"address"},{internalType:"contract IERC20",name:"baseAsset",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_owner",type:"address"}],name:"nominateNewOwner",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"nominatedOwner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"optionMarkets",outputs:[{internalType:"contract OptionMarket",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract OptionMarket",name:"market",type:"address"}],name:"removeMarket",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32[]",name:"names",type:"bytes32[]"},{internalType:"address[]",name:"addresses",type:"address[]"}],name:"updateGlobalAddresses",outputs:[],stateMutability:"nonpayable",type:"function"}],gp=[{inputs:[],stateMutability:"nonpayable",type:"constructor"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"nominatedOwner",type:"address"}],name:"OnlyNominatedOwner",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"owner",type:"address"}],name:"OnlyOwner",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"market",type:"address"}],name:"RemovingInvalidMarket",type:"error"},{anonymous:!1,inputs:[{components:[{internalType:"contract LiquidityPool",name:"liquidityPool",type:"address"},{internalType:"contract LiquidityToken",name:"liquidityToken",type:"address"},{internalType:"contract OptionGreekCache",name:"greekCache",type:"address"},{internalType:"contract OptionMarket",name:"optionMarket",type:"address"},{internalType:"contract OptionMarketPricer",name:"optionMarketPricer",type:"address"},{internalType:"contract OptionToken",name:"optionToken",type:"address"},{internalType:"contract ShortCollateral",name:"shortCollateral",type:"address"},{internalType:"contract PoolHedger",name:"poolHedger",type:"address"},{internalType:"contract IERC20",name:"quoteAsset",type:"address"},{internalType:"contract IERC20",name:"baseAsset",type:"address"}],indexed:!1,internalType:"struct OptionMarketViewer.OptionMarketAddresses",name:"market",type:"tuple"}],name:"MarketAdded",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"contract OptionMarket",name:"market",type:"address"}],name:"MarketRemoved",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"oldOwner",type:"address"},{indexed:!1,internalType:"address",name:"newOwner",type:"address"}],name:"OwnerChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"newOwner",type:"address"}],name:"OwnerNominated",type:"event"},{inputs:[],name:"acceptOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"contract LiquidityPool",name:"liquidityPool",type:"address"},{internalType:"contract LiquidityToken",name:"liquidityToken",type:"address"},{internalType:"contract OptionGreekCache",name:"greekCache",type:"address"},{internalType:"contract OptionMarket",name:"optionMarket",type:"address"},{internalType:"contract OptionMarketPricer",name:"optionMarketPricer",type:"address"},{internalType:"contract OptionToken",name:"optionToken",type:"address"},{internalType:"contract ShortCollateral",name:"shortCollateral",type:"address"},{internalType:"contract PoolHedger",name:"poolHedger",type:"address"},{internalType:"contract IERC20",name:"quoteAsset",type:"address"},{internalType:"contract IERC20",name:"baseAsset",type:"address"}],internalType:"struct OptionMarketViewer.OptionMarketAddresses",name:"newMarketAddresses",type:"tuple"}],name:"addMarket",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract OptionMarket",name:"market",type:"address"},{internalType:"uint256",name:"boardId",type:"uint256"}],name:"getBoard",outputs:[{components:[{internalType:"address",name:"market",type:"address"},{internalType:"uint256",name:"boardId",type:"uint256"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"baseIv",type:"uint256"},{internalType:"uint256",name:"priceAtExpiry",type:"uint256"},{internalType:"bool",name:"isPaused",type:"bool"},{internalType:"uint256",name:"forceCloseGwavIV",type:"uint256"},{components:[{internalType:"int256",name:"netDelta",type:"int256"},{internalType:"int256",name:"netStdVega",type:"int256"},{internalType:"int256",name:"netOptionValue",type:"int256"}],internalType:"struct OptionGreekCache.NetGreeks",name:"netGreeks",type:"tuple"},{components:[{internalType:"uint256",name:"strikeId",type:"uint256"},{internalType:"uint256",name:"boardId",type:"uint256"},{internalType:"uint256",name:"strikePrice",type:"uint256"},{internalType:"uint256",name:"skew",type:"uint256"},{internalType:"uint256",name:"forceCloseSkew",type:"uint256"},{components:[{internalType:"int256",name:"callDelta",type:"int256"},{internalType:"int256",name:"putDelta",type:"int256"},{internalType:"uint256",name:"stdVega",type:"uint256"},{internalType:"uint256",name:"callPrice",type:"uint256"},{internalType:"uint256",name:"putPrice",type:"uint256"}],internalType:"struct OptionGreekCache.StrikeGreeks",name:"cachedGreeks",type:"tuple"},{internalType:"uint256",name:"baseReturnedRatio",type:"uint256"},{internalType:"uint256",name:"longCallOpenInterest",type:"uint256"},{internalType:"uint256",name:"longPutOpenInterest",type:"uint256"},{internalType:"uint256",name:"shortCallBaseOpenInterest",type:"uint256"},{internalType:"uint256",name:"shortCallQuoteOpenInterest",type:"uint256"},{internalType:"uint256",name:"shortPutOpenInterest",type:"uint256"}],internalType:"struct OptionMarketViewer.StrikeView[]",name:"strikes",type:"tuple[]"}],internalType:"struct OptionMarketViewer.BoardView",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"baseKey",type:"bytes32"},{internalType:"uint256",name:"boardId",type:"uint256"}],name:"getBoardForBaseKey",outputs:[{components:[{internalType:"address",name:"market",type:"address"},{internalType:"uint256",name:"boardId",type:"uint256"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"baseIv",type:"uint256"},{internalType:"uint256",name:"priceAtExpiry",type:"uint256"},{internalType:"bool",name:"isPaused",type:"bool"},{internalType:"uint256",name:"forceCloseGwavIV",type:"uint256"},{components:[{internalType:"int256",name:"netDelta",type:"int256"},{internalType:"int256",name:"netStdVega",type:"int256"},{internalType:"int256",name:"netOptionValue",type:"int256"}],internalType:"struct OptionGreekCache.NetGreeks",name:"netGreeks",type:"tuple"},{components:[{internalType:"uint256",name:"strikeId",type:"uint256"},{internalType:"uint256",name:"boardId",type:"uint256"},{internalType:"uint256",name:"strikePrice",type:"uint256"},{internalType:"uint256",name:"skew",type:"uint256"},{internalType:"uint256",name:"forceCloseSkew",type:"uint256"},{components:[{internalType:"int256",name:"callDelta",type:"int256"},{internalType:"int256",name:"putDelta",type:"int256"},{internalType:"uint256",name:"stdVega",type:"uint256"},{internalType:"uint256",name:"callPrice",type:"uint256"},{internalType:"uint256",name:"putPrice",type:"uint256"}],internalType:"struct OptionGreekCache.StrikeGreeks",name:"cachedGreeks",type:"tuple"},{internalType:"uint256",name:"baseReturnedRatio",type:"uint256"},{internalType:"uint256",name:"longCallOpenInterest",type:"uint256"},{internalType:"uint256",name:"longPutOpenInterest",type:"uint256"},{internalType:"uint256",name:"shortCallBaseOpenInterest",type:"uint256"},{internalType:"uint256",name:"shortCallQuoteOpenInterest",type:"uint256"},{internalType:"uint256",name:"shortPutOpenInterest",type:"uint256"}],internalType:"struct OptionMarketViewer.StrikeView[]",name:"strikes",type:"tuple[]"}],internalType:"struct OptionMarketViewer.BoardView",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract OptionMarket",name:"market",type:"address"},{internalType:"uint256",name:"strikeId",type:"uint256"}],name:"getBoardForStrikeId",outputs:[{components:[{internalType:"address",name:"market",type:"address"},{internalType:"uint256",name:"boardId",type:"uint256"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"baseIv",type:"uint256"},{internalType:"uint256",name:"priceAtExpiry",type:"uint256"},{internalType:"bool",name:"isPaused",type:"bool"},{internalType:"uint256",name:"forceCloseGwavIV",type:"uint256"},{components:[{internalType:"int256",name:"netDelta",type:"int256"},{internalType:"int256",name:"netStdVega",type:"int256"},{internalType:"int256",name:"netOptionValue",type:"int256"}],internalType:"struct OptionGreekCache.NetGreeks",name:"netGreeks",type:"tuple"},{components:[{internalType:"uint256",name:"strikeId",type:"uint256"},{internalType:"uint256",name:"boardId",type:"uint256"},{internalType:"uint256",name:"strikePrice",type:"uint256"},{internalType:"uint256",name:"skew",type:"uint256"},{internalType:"uint256",name:"forceCloseSkew",type:"uint256"},{components:[{internalType:"int256",name:"callDelta",type:"int256"},{internalType:"int256",name:"putDelta",type:"int256"},{internalType:"uint256",name:"stdVega",type:"uint256"},{internalType:"uint256",name:"callPrice",type:"uint256"},{internalType:"uint256",name:"putPrice",type:"uint256"}],internalType:"struct OptionGreekCache.StrikeGreeks",name:"cachedGreeks",type:"tuple"},{internalType:"uint256",name:"baseReturnedRatio",type:"uint256"},{internalType:"uint256",name:"longCallOpenInterest",type:"uint256"},{internalType:"uint256",name:"longPutOpenInterest",type:"uint256"},{internalType:"uint256",name:"shortCallBaseOpenInterest",type:"uint256"},{internalType:"uint256",name:"shortCallQuoteOpenInterest",type:"uint256"},{internalType:"uint256",name:"shortPutOpenInterest",type:"uint256"}],internalType:"struct OptionMarketViewer.StrikeView[]",name:"strikes",type:"tuple[]"}],internalType:"struct OptionMarketViewer.BoardView",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract OptionMarket[]",name:"markets",type:"address[]"},{internalType:"address",name:"account",type:"address"}],name:"getLiquidityBalancesAndAllowances",outputs:[{components:[{internalType:"address",name:"token",type:"address"},{internalType:"uint256",name:"balance",type:"uint256"},{internalType:"uint256",name:"allowance",type:"uint256"}],internalType:"struct OptionMarketViewer.LiquidityBalanceAndAllowance[]",name:"",type:"tuple[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract OptionMarket",name:"market",type:"address"}],name:"getLiveBoards",outputs:[{components:[{internalType:"address",name:"market",type:"address"},{internalType:"uint256",name:"boardId",type:"uint256"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"baseIv",type:"uint256"},{internalType:"uint256",name:"priceAtExpiry",type:"uint256"},{internalType:"bool",name:"isPaused",type:"bool"},{internalType:"uint256",name:"forceCloseGwavIV",type:"uint256"},{components:[{internalType:"int256",name:"netDelta",type:"int256"},{internalType:"int256",name:"netStdVega",type:"int256"},{internalType:"int256",name:"netOptionValue",type:"int256"}],internalType:"struct OptionGreekCache.NetGreeks",name:"netGreeks",type:"tuple"},{components:[{internalType:"uint256",name:"strikeId",type:"uint256"},{internalType:"uint256",name:"boardId",type:"uint256"},{internalType:"uint256",name:"strikePrice",type:"uint256"},{internalType:"uint256",name:"skew",type:"uint256"},{internalType:"uint256",name:"forceCloseSkew",type:"uint256"},{components:[{internalType:"int256",name:"callDelta",type:"int256"},{internalType:"int256",name:"putDelta",type:"int256"},{internalType:"uint256",name:"stdVega",type:"uint256"},{internalType:"uint256",name:"callPrice",type:"uint256"},{internalType:"uint256",name:"putPrice",type:"uint256"}],internalType:"struct OptionGreekCache.StrikeGreeks",name:"cachedGreeks",type:"tuple"},{internalType:"uint256",name:"baseReturnedRatio",type:"uint256"},{internalType:"uint256",name:"longCallOpenInterest",type:"uint256"},{internalType:"uint256",name:"longPutOpenInterest",type:"uint256"},{internalType:"uint256",name:"shortCallBaseOpenInterest",type:"uint256"},{internalType:"uint256",name:"shortCallQuoteOpenInterest",type:"uint256"},{internalType:"uint256",name:"shortPutOpenInterest",type:"uint256"}],internalType:"struct OptionMarketViewer.StrikeView[]",name:"strikes",type:"tuple[]"}],internalType:"struct OptionMarketViewer.BoardView[]",name:"marketBoards",type:"tuple[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract OptionMarket",name:"market",type:"address"}],name:"getMarket",outputs:[{components:[{internalType:"bool",name:"isPaused",type:"bool"},{internalType:"uint256",name:"totalQueuedDeposits",type:"uint256"},{internalType:"uint256",name:"totalQueuedWithdrawals",type:"uint256"},{internalType:"uint256",name:"tokenPrice",type:"uint256"},{components:[{internalType:"contract LiquidityPool",name:"liquidityPool",type:"address"},{internalType:"contract LiquidityToken",name:"liquidityToken",type:"address"},{internalType:"contract OptionGreekCache",name:"greekCache",type:"address"},{internalType:"contract OptionMarket",name:"optionMarket",type:"address"},{internalType:"contract OptionMarketPricer",name:"optionMarketPricer",type:"address"},{internalType:"contract OptionToken",name:"optionToken",type:"address"},{internalType:"contract ShortCollateral",name:"shortCollateral",type:"address"},{internalType:"contract PoolHedger",name:"poolHedger",type:"address"},{internalType:"contract IERC20",name:"quoteAsset",type:"address"},{internalType:"contract IERC20",name:"baseAsset",type:"address"}],internalType:"struct OptionMarketViewer.OptionMarketAddresses",name:"marketAddresses",type:"tuple"},{components:[{components:[{internalType:"uint256",name:"maxBoardExpiry",type:"uint256"},{internalType:"address",name:"securityModule",type:"address"},{internalType:"uint256",name:"feePortionReserved",type:"uint256"},{internalType:"uint256",name:"staticBaseSettlementFee",type:"uint256"}],internalType:"struct OptionMarket.OptionMarketParameters",name:"optionMarketParams",type:"tuple"},{components:[{internalType:"uint256",name:"minDepositWithdraw",type:"uint256"},{internalType:"uint256",name:"depositDelay",type:"uint256"},{internalType:"uint256",name:"withdrawalDelay",type:"uint256"},{internalType:"uint256",name:"withdrawalFee",type:"uint256"},{internalType:"uint256",name:"liquidityCBThreshold",type:"uint256"},{internalType:"uint256",name:"liquidityCBTimeout",type:"uint256"},{internalType:"uint256",name:"ivVarianceCBThreshold",type:"uint256"},{internalType:"uint256",name:"skewVarianceCBThreshold",type:"uint256"},{internalType:"uint256",name:"ivVarianceCBTimeout",type:"uint256"},{internalType:"uint256",name:"skewVarianceCBTimeout",type:"uint256"},{internalType:"address",name:"guardianMultisig",type:"address"},{internalType:"uint256",name:"guardianDelay",type:"uint256"},{internalType:"uint256",name:"boardSettlementCBTimeout",type:"uint256"},{internalType:"uint256",name:"maxFeePaid",type:"uint256"}],internalType:"struct LiquidityPool.LiquidityPoolParameters",name:"lpParams",type:"tuple"},{components:[{internalType:"uint256",name:"maxStrikesPerBoard",type:"uint256"},{internalType:"uint256",name:"acceptableSpotPricePercentMove",type:"uint256"},{internalType:"uint256",name:"staleUpdateDuration",type:"uint256"},{internalType:"uint256",name:"varianceIvGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"varianceSkewGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"optionValueIvGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"optionValueSkewGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"gwavSkewFloor",type:"uint256"},{internalType:"uint256",name:"gwavSkewCap",type:"uint256"},{internalType:"int256",name:"rateAndCarry",type:"int256"}],internalType:"struct OptionGreekCache.GreekCacheParameters",name:"greekCacheParams",type:"tuple"},{components:[{internalType:"uint256",name:"ivGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"skewGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"shortVolShock",type:"uint256"},{internalType:"uint256",name:"shortPostCutoffVolShock",type:"uint256"},{internalType:"uint256",name:"longVolShock",type:"uint256"},{internalType:"uint256",name:"longPostCutoffVolShock",type:"uint256"},{internalType:"uint256",name:"liquidateVolShock",type:"uint256"},{internalType:"uint256",name:"liquidatePostCutoffVolShock",type:"uint256"},{internalType:"uint256",name:"shortSpotMin",type:"uint256"},{internalType:"uint256",name:"liquidateSpotMin",type:"uint256"}],internalType:"struct OptionGreekCache.ForceCloseParameters",name:"forceCloseParams",type:"tuple"},{components:[{internalType:"uint256",name:"minStaticQuoteCollateral",type:"uint256"},{internalType:"uint256",name:"minStaticBaseCollateral",type:"uint256"},{internalType:"uint256",name:"shockVolA",type:"uint256"},{internalType:"uint256",name:"shockVolPointA",type:"uint256"},{internalType:"uint256",name:"shockVolB",type:"uint256"},{internalType:"uint256",name:"shockVolPointB",type:"uint256"},{internalType:"uint256",name:"callSpotPriceShock",type:"uint256"},{internalType:"uint256",name:"putSpotPriceShock",type:"uint256"}],internalType:"struct OptionGreekCache.MinCollateralParameters",name:"minCollatParams",type:"tuple"},{components:[{internalType:"uint256",name:"optionPriceFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"optionPriceFee1xPoint",type:"uint256"},{internalType:"uint256",name:"optionPriceFee2xPoint",type:"uint256"},{internalType:"uint256",name:"spotPriceFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"spotPriceFee1xPoint",type:"uint256"},{internalType:"uint256",name:"spotPriceFee2xPoint",type:"uint256"},{internalType:"uint256",name:"vegaFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"standardSize",type:"uint256"},{internalType:"uint256",name:"skewAdjustmentFactor",type:"uint256"}],internalType:"struct OptionMarketPricer.PricingParameters",name:"pricingParams",type:"tuple"},{components:[{internalType:"int256",name:"minDelta",type:"int256"},{internalType:"int256",name:"minForceCloseDelta",type:"int256"},{internalType:"uint256",name:"tradingCutoff",type:"uint256"},{internalType:"uint256",name:"minBaseIV",type:"uint256"},{internalType:"uint256",name:"maxBaseIV",type:"uint256"},{internalType:"uint256",name:"minSkew",type:"uint256"},{internalType:"uint256",name:"maxSkew",type:"uint256"},{internalType:"uint256",name:"minVol",type:"uint256"},{internalType:"uint256",name:"maxVol",type:"uint256"},{internalType:"uint256",name:"absMinSkew",type:"uint256"},{internalType:"uint256",name:"absMaxSkew",type:"uint256"},{internalType:"bool",name:"capSkewsToAbs",type:"bool"}],internalType:"struct OptionMarketPricer.TradeLimitParameters",name:"tradeLimitParams",type:"tuple"},{components:[{internalType:"uint256",name:"defaultVarianceFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"forceCloseVarianceFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"skewAdjustmentCoefficient",type:"uint256"},{internalType:"uint256",name:"referenceSkew",type:"uint256"},{internalType:"uint256",name:"minimumStaticSkewAdjustment",type:"uint256"},{internalType:"uint256",name:"vegaCoefficient",type:"uint256"},{internalType:"uint256",name:"minimumStaticVega",type:"uint256"},{internalType:"uint256",name:"ivVarianceCoefficient",type:"uint256"},{internalType:"uint256",name:"minimumStaticIvVariance",type:"uint256"}],internalType:"struct OptionMarketPricer.VarianceFeeParameters",name:"varianceFeeParams",type:"tuple"},{components:[{internalType:"uint256",name:"penaltyRatio",type:"uint256"},{internalType:"uint256",name:"liquidatorFeeRatio",type:"uint256"},{internalType:"uint256",name:"smFeeRatio",type:"uint256"},{internalType:"uint256",name:"minLiquidationFee",type:"uint256"}],internalType:"struct OptionToken.PartialCollateralParameters",name:"partialCollatParams",type:"tuple"},{components:[{internalType:"uint256",name:"interactionDelay",type:"uint256"},{internalType:"uint256",name:"hedgeCap",type:"uint256"}],internalType:"struct PoolHedger.PoolHedgerParameters",name:"poolHedgerParams",type:"tuple"}],internalType:"struct OptionMarketViewer.MarketParameters",name:"marketParameters",type:"tuple"},{components:[{internalType:"uint256",name:"freeLiquidity",type:"uint256"},{internalType:"uint256",name:"burnableLiquidity",type:"uint256"},{internalType:"uint256",name:"usedCollatLiquidity",type:"uint256"},{internalType:"uint256",name:"pendingDeltaLiquidity",type:"uint256"},{internalType:"uint256",name:"usedDeltaLiquidity",type:"uint256"},{internalType:"uint256",name:"NAV",type:"uint256"}],internalType:"struct LiquidityPool.Liquidity",name:"liquidity",type:"tuple"},{components:[{internalType:"int256",name:"netDelta",type:"int256"},{internalType:"int256",name:"netStdVega",type:"int256"},{internalType:"int256",name:"netOptionValue",type:"int256"}],internalType:"struct OptionGreekCache.NetGreeks",name:"globalNetGreeks",type:"tuple"},{components:[{internalType:"address",name:"market",type:"address"},{internalType:"uint256",name:"boardId",type:"uint256"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"baseIv",type:"uint256"},{internalType:"uint256",name:"priceAtExpiry",type:"uint256"},{internalType:"bool",name:"isPaused",type:"bool"},{internalType:"uint256",name:"forceCloseGwavIV",type:"uint256"},{components:[{internalType:"int256",name:"netDelta",type:"int256"},{internalType:"int256",name:"netStdVega",type:"int256"},{internalType:"int256",name:"netOptionValue",type:"int256"}],internalType:"struct OptionGreekCache.NetGreeks",name:"netGreeks",type:"tuple"},{components:[{internalType:"uint256",name:"strikeId",type:"uint256"},{internalType:"uint256",name:"boardId",type:"uint256"},{internalType:"uint256",name:"strikePrice",type:"uint256"},{internalType:"uint256",name:"skew",type:"uint256"},{internalType:"uint256",name:"forceCloseSkew",type:"uint256"},{components:[{internalType:"int256",name:"callDelta",type:"int256"},{internalType:"int256",name:"putDelta",type:"int256"},{internalType:"uint256",name:"stdVega",type:"uint256"},{internalType:"uint256",name:"callPrice",type:"uint256"},{internalType:"uint256",name:"putPrice",type:"uint256"}],internalType:"struct OptionGreekCache.StrikeGreeks",name:"cachedGreeks",type:"tuple"},{internalType:"uint256",name:"baseReturnedRatio",type:"uint256"},{internalType:"uint256",name:"longCallOpenInterest",type:"uint256"},{internalType:"uint256",name:"longPutOpenInterest",type:"uint256"},{internalType:"uint256",name:"shortCallBaseOpenInterest",type:"uint256"},{internalType:"uint256",name:"shortCallQuoteOpenInterest",type:"uint256"},{internalType:"uint256",name:"shortPutOpenInterest",type:"uint256"}],internalType:"struct OptionMarketViewer.StrikeView[]",name:"strikes",type:"tuple[]"}],internalType:"struct OptionMarketViewer.BoardView[]",name:"liveBoards",type:"tuple[]"},{components:[{internalType:"uint256",name:"spotPrice",type:"uint256"},{internalType:"bytes32",name:"quoteKey",type:"bytes32"},{internalType:"bytes32",name:"baseKey",type:"bytes32"},{internalType:"uint256",name:"quoteBaseFeeRate",type:"uint256"},{internalType:"uint256",name:"baseQuoteFeeRate",type:"uint256"}],internalType:"struct SynthetixAdapter.ExchangeParams",name:"exchangeParams",type:"tuple"}],internalType:"struct OptionMarketViewer.MarketViewWithBoards",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[],name:"getMarketAddresses",outputs:[{components:[{internalType:"contract LiquidityPool",name:"liquidityPool",type:"address"},{internalType:"contract LiquidityToken",name:"liquidityToken",type:"address"},{internalType:"contract OptionGreekCache",name:"greekCache",type:"address"},{internalType:"contract OptionMarket",name:"optionMarket",type:"address"},{internalType:"contract OptionMarketPricer",name:"optionMarketPricer",type:"address"},{internalType:"contract OptionToken",name:"optionToken",type:"address"},{internalType:"contract ShortCollateral",name:"shortCollateral",type:"address"},{internalType:"contract PoolHedger",name:"poolHedger",type:"address"},{internalType:"contract IERC20",name:"quoteAsset",type:"address"},{internalType:"contract IERC20",name:"baseAsset",type:"address"}],internalType:"struct OptionMarketViewer.OptionMarketAddresses[]",name:"",type:"tuple[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"baseKey",type:"bytes32"}],name:"getMarketForBaseKey",outputs:[{components:[{internalType:"bool",name:"isPaused",type:"bool"},{internalType:"uint256",name:"totalQueuedDeposits",type:"uint256"},{internalType:"uint256",name:"totalQueuedWithdrawals",type:"uint256"},{internalType:"uint256",name:"tokenPrice",type:"uint256"},{components:[{internalType:"contract LiquidityPool",name:"liquidityPool",type:"address"},{internalType:"contract LiquidityToken",name:"liquidityToken",type:"address"},{internalType:"contract OptionGreekCache",name:"greekCache",type:"address"},{internalType:"contract OptionMarket",name:"optionMarket",type:"address"},{internalType:"contract OptionMarketPricer",name:"optionMarketPricer",type:"address"},{internalType:"contract OptionToken",name:"optionToken",type:"address"},{internalType:"contract ShortCollateral",name:"shortCollateral",type:"address"},{internalType:"contract PoolHedger",name:"poolHedger",type:"address"},{internalType:"contract IERC20",name:"quoteAsset",type:"address"},{internalType:"contract IERC20",name:"baseAsset",type:"address"}],internalType:"struct OptionMarketViewer.OptionMarketAddresses",name:"marketAddresses",type:"tuple"},{components:[{components:[{internalType:"uint256",name:"maxBoardExpiry",type:"uint256"},{internalType:"address",name:"securityModule",type:"address"},{internalType:"uint256",name:"feePortionReserved",type:"uint256"},{internalType:"uint256",name:"staticBaseSettlementFee",type:"uint256"}],internalType:"struct OptionMarket.OptionMarketParameters",name:"optionMarketParams",type:"tuple"},{components:[{internalType:"uint256",name:"minDepositWithdraw",type:"uint256"},{internalType:"uint256",name:"depositDelay",type:"uint256"},{internalType:"uint256",name:"withdrawalDelay",type:"uint256"},{internalType:"uint256",name:"withdrawalFee",type:"uint256"},{internalType:"uint256",name:"liquidityCBThreshold",type:"uint256"},{internalType:"uint256",name:"liquidityCBTimeout",type:"uint256"},{internalType:"uint256",name:"ivVarianceCBThreshold",type:"uint256"},{internalType:"uint256",name:"skewVarianceCBThreshold",type:"uint256"},{internalType:"uint256",name:"ivVarianceCBTimeout",type:"uint256"},{internalType:"uint256",name:"skewVarianceCBTimeout",type:"uint256"},{internalType:"address",name:"guardianMultisig",type:"address"},{internalType:"uint256",name:"guardianDelay",type:"uint256"},{internalType:"uint256",name:"boardSettlementCBTimeout",type:"uint256"},{internalType:"uint256",name:"maxFeePaid",type:"uint256"}],internalType:"struct LiquidityPool.LiquidityPoolParameters",name:"lpParams",type:"tuple"},{components:[{internalType:"uint256",name:"maxStrikesPerBoard",type:"uint256"},{internalType:"uint256",name:"acceptableSpotPricePercentMove",type:"uint256"},{internalType:"uint256",name:"staleUpdateDuration",type:"uint256"},{internalType:"uint256",name:"varianceIvGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"varianceSkewGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"optionValueIvGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"optionValueSkewGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"gwavSkewFloor",type:"uint256"},{internalType:"uint256",name:"gwavSkewCap",type:"uint256"},{internalType:"int256",name:"rateAndCarry",type:"int256"}],internalType:"struct OptionGreekCache.GreekCacheParameters",name:"greekCacheParams",type:"tuple"},{components:[{internalType:"uint256",name:"ivGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"skewGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"shortVolShock",type:"uint256"},{internalType:"uint256",name:"shortPostCutoffVolShock",type:"uint256"},{internalType:"uint256",name:"longVolShock",type:"uint256"},{internalType:"uint256",name:"longPostCutoffVolShock",type:"uint256"},{internalType:"uint256",name:"liquidateVolShock",type:"uint256"},{internalType:"uint256",name:"liquidatePostCutoffVolShock",type:"uint256"},{internalType:"uint256",name:"shortSpotMin",type:"uint256"},{internalType:"uint256",name:"liquidateSpotMin",type:"uint256"}],internalType:"struct OptionGreekCache.ForceCloseParameters",name:"forceCloseParams",type:"tuple"},{components:[{internalType:"uint256",name:"minStaticQuoteCollateral",type:"uint256"},{internalType:"uint256",name:"minStaticBaseCollateral",type:"uint256"},{internalType:"uint256",name:"shockVolA",type:"uint256"},{internalType:"uint256",name:"shockVolPointA",type:"uint256"},{internalType:"uint256",name:"shockVolB",type:"uint256"},{internalType:"uint256",name:"shockVolPointB",type:"uint256"},{internalType:"uint256",name:"callSpotPriceShock",type:"uint256"},{internalType:"uint256",name:"putSpotPriceShock",type:"uint256"}],internalType:"struct OptionGreekCache.MinCollateralParameters",name:"minCollatParams",type:"tuple"},{components:[{internalType:"uint256",name:"optionPriceFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"optionPriceFee1xPoint",type:"uint256"},{internalType:"uint256",name:"optionPriceFee2xPoint",type:"uint256"},{internalType:"uint256",name:"spotPriceFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"spotPriceFee1xPoint",type:"uint256"},{internalType:"uint256",name:"spotPriceFee2xPoint",type:"uint256"},{internalType:"uint256",name:"vegaFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"standardSize",type:"uint256"},{internalType:"uint256",name:"skewAdjustmentFactor",type:"uint256"}],internalType:"struct OptionMarketPricer.PricingParameters",name:"pricingParams",type:"tuple"},{components:[{internalType:"int256",name:"minDelta",type:"int256"},{internalType:"int256",name:"minForceCloseDelta",type:"int256"},{internalType:"uint256",name:"tradingCutoff",type:"uint256"},{internalType:"uint256",name:"minBaseIV",type:"uint256"},{internalType:"uint256",name:"maxBaseIV",type:"uint256"},{internalType:"uint256",name:"minSkew",type:"uint256"},{internalType:"uint256",name:"maxSkew",type:"uint256"},{internalType:"uint256",name:"minVol",type:"uint256"},{internalType:"uint256",name:"maxVol",type:"uint256"},{internalType:"uint256",name:"absMinSkew",type:"uint256"},{internalType:"uint256",name:"absMaxSkew",type:"uint256"},{internalType:"bool",name:"capSkewsToAbs",type:"bool"}],internalType:"struct OptionMarketPricer.TradeLimitParameters",name:"tradeLimitParams",type:"tuple"},{components:[{internalType:"uint256",name:"defaultVarianceFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"forceCloseVarianceFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"skewAdjustmentCoefficient",type:"uint256"},{internalType:"uint256",name:"referenceSkew",type:"uint256"},{internalType:"uint256",name:"minimumStaticSkewAdjustment",type:"uint256"},{internalType:"uint256",name:"vegaCoefficient",type:"uint256"},{internalType:"uint256",name:"minimumStaticVega",type:"uint256"},{internalType:"uint256",name:"ivVarianceCoefficient",type:"uint256"},{internalType:"uint256",name:"minimumStaticIvVariance",type:"uint256"}],internalType:"struct OptionMarketPricer.VarianceFeeParameters",name:"varianceFeeParams",type:"tuple"},{components:[{internalType:"uint256",name:"penaltyRatio",type:"uint256"},{internalType:"uint256",name:"liquidatorFeeRatio",type:"uint256"},{internalType:"uint256",name:"smFeeRatio",type:"uint256"},{internalType:"uint256",name:"minLiquidationFee",type:"uint256"}],internalType:"struct OptionToken.PartialCollateralParameters",name:"partialCollatParams",type:"tuple"},{components:[{internalType:"uint256",name:"interactionDelay",type:"uint256"},{internalType:"uint256",name:"hedgeCap",type:"uint256"}],internalType:"struct PoolHedger.PoolHedgerParameters",name:"poolHedgerParams",type:"tuple"}],internalType:"struct OptionMarketViewer.MarketParameters",name:"marketParameters",type:"tuple"},{components:[{internalType:"uint256",name:"freeLiquidity",type:"uint256"},{internalType:"uint256",name:"burnableLiquidity",type:"uint256"},{internalType:"uint256",name:"usedCollatLiquidity",type:"uint256"},{internalType:"uint256",name:"pendingDeltaLiquidity",type:"uint256"},{internalType:"uint256",name:"usedDeltaLiquidity",type:"uint256"},{internalType:"uint256",name:"NAV",type:"uint256"}],internalType:"struct LiquidityPool.Liquidity",name:"liquidity",type:"tuple"},{components:[{internalType:"int256",name:"netDelta",type:"int256"},{internalType:"int256",name:"netStdVega",type:"int256"},{internalType:"int256",name:"netOptionValue",type:"int256"}],internalType:"struct OptionGreekCache.NetGreeks",name:"globalNetGreeks",type:"tuple"},{components:[{internalType:"address",name:"market",type:"address"},{internalType:"uint256",name:"boardId",type:"uint256"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"baseIv",type:"uint256"},{internalType:"uint256",name:"priceAtExpiry",type:"uint256"},{internalType:"bool",name:"isPaused",type:"bool"},{internalType:"uint256",name:"forceCloseGwavIV",type:"uint256"},{components:[{internalType:"int256",name:"netDelta",type:"int256"},{internalType:"int256",name:"netStdVega",type:"int256"},{internalType:"int256",name:"netOptionValue",type:"int256"}],internalType:"struct OptionGreekCache.NetGreeks",name:"netGreeks",type:"tuple"},{components:[{internalType:"uint256",name:"strikeId",type:"uint256"},{internalType:"uint256",name:"boardId",type:"uint256"},{internalType:"uint256",name:"strikePrice",type:"uint256"},{internalType:"uint256",name:"skew",type:"uint256"},{internalType:"uint256",name:"forceCloseSkew",type:"uint256"},{components:[{internalType:"int256",name:"callDelta",type:"int256"},{internalType:"int256",name:"putDelta",type:"int256"},{internalType:"uint256",name:"stdVega",type:"uint256"},{internalType:"uint256",name:"callPrice",type:"uint256"},{internalType:"uint256",name:"putPrice",type:"uint256"}],internalType:"struct OptionGreekCache.StrikeGreeks",name:"cachedGreeks",type:"tuple"},{internalType:"uint256",name:"baseReturnedRatio",type:"uint256"},{internalType:"uint256",name:"longCallOpenInterest",type:"uint256"},{internalType:"uint256",name:"longPutOpenInterest",type:"uint256"},{internalType:"uint256",name:"shortCallBaseOpenInterest",type:"uint256"},{internalType:"uint256",name:"shortCallQuoteOpenInterest",type:"uint256"},{internalType:"uint256",name:"shortPutOpenInterest",type:"uint256"}],internalType:"struct OptionMarketViewer.StrikeView[]",name:"strikes",type:"tuple[]"}],internalType:"struct OptionMarketViewer.BoardView[]",name:"liveBoards",type:"tuple[]"},{components:[{internalType:"uint256",name:"spotPrice",type:"uint256"},{internalType:"bytes32",name:"quoteKey",type:"bytes32"},{internalType:"bytes32",name:"baseKey",type:"bytes32"},{internalType:"uint256",name:"quoteBaseFeeRate",type:"uint256"},{internalType:"uint256",name:"baseQuoteFeeRate",type:"uint256"}],internalType:"struct SynthetixAdapter.ExchangeParams",name:"exchangeParams",type:"tuple"}],internalType:"struct OptionMarketViewer.MarketViewWithBoards",name:"market",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract OptionMarket[]",name:"markets",type:"address[]"}],name:"getMarkets",outputs:[{components:[{internalType:"contract IAddressResolver",name:"addressResolver",type:"address"},{internalType:"bool",name:"isPaused",type:"bool"},{components:[{internalType:"bool",name:"isPaused",type:"bool"},{internalType:"uint256",name:"totalQueuedDeposits",type:"uint256"},{internalType:"uint256",name:"totalQueuedWithdrawals",type:"uint256"},{internalType:"uint256",name:"tokenPrice",type:"uint256"},{components:[{internalType:"contract LiquidityPool",name:"liquidityPool",type:"address"},{internalType:"contract LiquidityToken",name:"liquidityToken",type:"address"},{internalType:"contract OptionGreekCache",name:"greekCache",type:"address"},{internalType:"contract OptionMarket",name:"optionMarket",type:"address"},{internalType:"contract OptionMarketPricer",name:"optionMarketPricer",type:"address"},{internalType:"contract OptionToken",name:"optionToken",type:"address"},{internalType:"contract ShortCollateral",name:"shortCollateral",type:"address"},{internalType:"contract PoolHedger",name:"poolHedger",type:"address"},{internalType:"contract IERC20",name:"quoteAsset",type:"address"},{internalType:"contract IERC20",name:"baseAsset",type:"address"}],internalType:"struct OptionMarketViewer.OptionMarketAddresses",name:"marketAddresses",type:"tuple"},{components:[{components:[{internalType:"uint256",name:"maxBoardExpiry",type:"uint256"},{internalType:"address",name:"securityModule",type:"address"},{internalType:"uint256",name:"feePortionReserved",type:"uint256"},{internalType:"uint256",name:"staticBaseSettlementFee",type:"uint256"}],internalType:"struct OptionMarket.OptionMarketParameters",name:"optionMarketParams",type:"tuple"},{components:[{internalType:"uint256",name:"minDepositWithdraw",type:"uint256"},{internalType:"uint256",name:"depositDelay",type:"uint256"},{internalType:"uint256",name:"withdrawalDelay",type:"uint256"},{internalType:"uint256",name:"withdrawalFee",type:"uint256"},{internalType:"uint256",name:"liquidityCBThreshold",type:"uint256"},{internalType:"uint256",name:"liquidityCBTimeout",type:"uint256"},{internalType:"uint256",name:"ivVarianceCBThreshold",type:"uint256"},{internalType:"uint256",name:"skewVarianceCBThreshold",type:"uint256"},{internalType:"uint256",name:"ivVarianceCBTimeout",type:"uint256"},{internalType:"uint256",name:"skewVarianceCBTimeout",type:"uint256"},{internalType:"address",name:"guardianMultisig",type:"address"},{internalType:"uint256",name:"guardianDelay",type:"uint256"},{internalType:"uint256",name:"boardSettlementCBTimeout",type:"uint256"},{internalType:"uint256",name:"maxFeePaid",type:"uint256"}],internalType:"struct LiquidityPool.LiquidityPoolParameters",name:"lpParams",type:"tuple"},{components:[{internalType:"uint256",name:"maxStrikesPerBoard",type:"uint256"},{internalType:"uint256",name:"acceptableSpotPricePercentMove",type:"uint256"},{internalType:"uint256",name:"staleUpdateDuration",type:"uint256"},{internalType:"uint256",name:"varianceIvGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"varianceSkewGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"optionValueIvGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"optionValueSkewGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"gwavSkewFloor",type:"uint256"},{internalType:"uint256",name:"gwavSkewCap",type:"uint256"},{internalType:"int256",name:"rateAndCarry",type:"int256"}],internalType:"struct OptionGreekCache.GreekCacheParameters",name:"greekCacheParams",type:"tuple"},{components:[{internalType:"uint256",name:"ivGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"skewGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"shortVolShock",type:"uint256"},{internalType:"uint256",name:"shortPostCutoffVolShock",type:"uint256"},{internalType:"uint256",name:"longVolShock",type:"uint256"},{internalType:"uint256",name:"longPostCutoffVolShock",type:"uint256"},{internalType:"uint256",name:"liquidateVolShock",type:"uint256"},{internalType:"uint256",name:"liquidatePostCutoffVolShock",type:"uint256"},{internalType:"uint256",name:"shortSpotMin",type:"uint256"},{internalType:"uint256",name:"liquidateSpotMin",type:"uint256"}],internalType:"struct OptionGreekCache.ForceCloseParameters",name:"forceCloseParams",type:"tuple"},{components:[{internalType:"uint256",name:"minStaticQuoteCollateral",type:"uint256"},{internalType:"uint256",name:"minStaticBaseCollateral",type:"uint256"},{internalType:"uint256",name:"shockVolA",type:"uint256"},{internalType:"uint256",name:"shockVolPointA",type:"uint256"},{internalType:"uint256",name:"shockVolB",type:"uint256"},{internalType:"uint256",name:"shockVolPointB",type:"uint256"},{internalType:"uint256",name:"callSpotPriceShock",type:"uint256"},{internalType:"uint256",name:"putSpotPriceShock",type:"uint256"}],internalType:"struct OptionGreekCache.MinCollateralParameters",name:"minCollatParams",type:"tuple"},{components:[{internalType:"uint256",name:"optionPriceFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"optionPriceFee1xPoint",type:"uint256"},{internalType:"uint256",name:"optionPriceFee2xPoint",type:"uint256"},{internalType:"uint256",name:"spotPriceFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"spotPriceFee1xPoint",type:"uint256"},{internalType:"uint256",name:"spotPriceFee2xPoint",type:"uint256"},{internalType:"uint256",name:"vegaFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"standardSize",type:"uint256"},{internalType:"uint256",name:"skewAdjustmentFactor",type:"uint256"}],internalType:"struct OptionMarketPricer.PricingParameters",name:"pricingParams",type:"tuple"},{components:[{internalType:"int256",name:"minDelta",type:"int256"},{internalType:"int256",name:"minForceCloseDelta",type:"int256"},{internalType:"uint256",name:"tradingCutoff",type:"uint256"},{internalType:"uint256",name:"minBaseIV",type:"uint256"},{internalType:"uint256",name:"maxBaseIV",type:"uint256"},{internalType:"uint256",name:"minSkew",type:"uint256"},{internalType:"uint256",name:"maxSkew",type:"uint256"},{internalType:"uint256",name:"minVol",type:"uint256"},{internalType:"uint256",name:"maxVol",type:"uint256"},{internalType:"uint256",name:"absMinSkew",type:"uint256"},{internalType:"uint256",name:"absMaxSkew",type:"uint256"},{internalType:"bool",name:"capSkewsToAbs",type:"bool"}],internalType:"struct OptionMarketPricer.TradeLimitParameters",name:"tradeLimitParams",type:"tuple"},{components:[{internalType:"uint256",name:"defaultVarianceFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"forceCloseVarianceFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"skewAdjustmentCoefficient",type:"uint256"},{internalType:"uint256",name:"referenceSkew",type:"uint256"},{internalType:"uint256",name:"minimumStaticSkewAdjustment",type:"uint256"},{internalType:"uint256",name:"vegaCoefficient",type:"uint256"},{internalType:"uint256",name:"minimumStaticVega",type:"uint256"},{internalType:"uint256",name:"ivVarianceCoefficient",type:"uint256"},{internalType:"uint256",name:"minimumStaticIvVariance",type:"uint256"}],internalType:"struct OptionMarketPricer.VarianceFeeParameters",name:"varianceFeeParams",type:"tuple"},{components:[{internalType:"uint256",name:"penaltyRatio",type:"uint256"},{internalType:"uint256",name:"liquidatorFeeRatio",type:"uint256"},{internalType:"uint256",name:"smFeeRatio",type:"uint256"},{internalType:"uint256",name:"minLiquidationFee",type:"uint256"}],internalType:"struct OptionToken.PartialCollateralParameters",name:"partialCollatParams",type:"tuple"},{components:[{internalType:"uint256",name:"interactionDelay",type:"uint256"},{internalType:"uint256",name:"hedgeCap",type:"uint256"}],internalType:"struct PoolHedger.PoolHedgerParameters",name:"poolHedgerParams",type:"tuple"}],internalType:"struct OptionMarketViewer.MarketParameters",name:"marketParameters",type:"tuple"},{components:[{internalType:"uint256",name:"freeLiquidity",type:"uint256"},{internalType:"uint256",name:"burnableLiquidity",type:"uint256"},{internalType:"uint256",name:"usedCollatLiquidity",type:"uint256"},{internalType:"uint256",name:"pendingDeltaLiquidity",type:"uint256"},{internalType:"uint256",name:"usedDeltaLiquidity",type:"uint256"},{internalType:"uint256",name:"NAV",type:"uint256"}],internalType:"struct LiquidityPool.Liquidity",name:"liquidity",type:"tuple"},{components:[{internalType:"int256",name:"netDelta",type:"int256"},{internalType:"int256",name:"netStdVega",type:"int256"},{internalType:"int256",name:"netOptionValue",type:"int256"}],internalType:"struct OptionGreekCache.NetGreeks",name:"globalNetGreeks",type:"tuple"},{components:[{internalType:"uint256",name:"spotPrice",type:"uint256"},{internalType:"bytes32",name:"quoteKey",type:"bytes32"},{internalType:"bytes32",name:"baseKey",type:"bytes32"},{internalType:"uint256",name:"quoteBaseFeeRate",type:"uint256"},{internalType:"uint256",name:"baseQuoteFeeRate",type:"uint256"}],internalType:"struct SynthetixAdapter.ExchangeParams",name:"exchangeParams",type:"tuple"}],internalType:"struct OptionMarketViewer.MarketView[]",name:"markets",type:"tuple[]"}],internalType:"struct OptionMarketViewer.MarketsView",name:"marketsView",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"getOwnerPositions",outputs:[{components:[{internalType:"address",name:"market",type:"address"},{components:[{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"uint256",name:"strikeId",type:"uint256"},{internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"collateral",type:"uint256"},{internalType:"enum OptionToken.PositionState",name:"state",type:"uint8"}],internalType:"struct OptionToken.OptionPosition[]",name:"positions",type:"tuple[]"}],internalType:"struct OptionMarketViewer.MarketOptionPositions[]",name:"",type:"tuple[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract OptionMarket",name:"market",type:"address"},{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"start",type:"uint256"},{internalType:"uint256",name:"limit",type:"uint256"}],name:"getOwnerPositionsInRange",outputs:[{components:[{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"uint256",name:"strikeId",type:"uint256"},{internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"collateral",type:"uint256"},{internalType:"enum OptionToken.PositionState",name:"state",type:"uint8"}],internalType:"struct OptionToken.OptionPosition[]",name:"",type:"tuple[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract SynthetixAdapter",name:"_synthetixAdapter",type:"address"}],name:"init",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"initialized",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract OptionMarket",name:"",type:"address"}],name:"marketAddresses",outputs:[{internalType:"contract LiquidityPool",name:"liquidityPool",type:"address"},{internalType:"contract LiquidityToken",name:"liquidityToken",type:"address"},{internalType:"contract OptionGreekCache",name:"greekCache",type:"address"},{internalType:"contract OptionMarket",name:"optionMarket",type:"address"},{internalType:"contract OptionMarketPricer",name:"optionMarketPricer",type:"address"},{internalType:"contract OptionToken",name:"optionToken",type:"address"},{internalType:"contract ShortCollateral",name:"shortCollateral",type:"address"},{internalType:"contract PoolHedger",name:"poolHedger",type:"address"},{internalType:"contract IERC20",name:"quoteAsset",type:"address"},{internalType:"contract IERC20",name:"baseAsset",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_owner",type:"address"}],name:"nominateNewOwner",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"nominatedOwner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"optionMarkets",outputs:[{internalType:"contract OptionMarket",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract OptionMarket",name:"market",type:"address"}],name:"removeMarket",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"synthetixAdapter",outputs:[{internalType:"contract SynthetixAdapter",name:"",type:"address"}],stateMutability:"view",type:"function"}],wp=[{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"marketAddress",type:"address"}],name:"AllMarketsPaused",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"amountQuoteRequested",type:"uint256"},{internalType:"uint256",name:"baseToSpend",type:"uint256"},{internalType:"uint256",name:"baseLimit",type:"uint256"},{internalType:"uint256",name:"spotPrice",type:"uint256"},{internalType:"bytes32",name:"baseKey",type:"bytes32"},{internalType:"bytes32",name:"quoteKey",type:"bytes32"}],name:"BaseQuoteExchangeExceedsLimit",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"rewardAddress",type:"address"}],name:"InvalidRewardAddress",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"marketAddress",type:"address"}],name:"MarketIsPaused",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"nominatedOwner",type:"address"}],name:"OnlyNominatedOwner",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"owner",type:"address"}],name:"OnlyOwner",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"amountBaseRequested",type:"uint256"},{internalType:"uint256",name:"quoteToSpend",type:"uint256"},{internalType:"uint256",name:"quoteLimit",type:"uint256"},{internalType:"uint256",name:"spotPrice",type:"uint256"},{internalType:"bytes32",name:"quoteKey",type:"bytes32"},{internalType:"bytes32",name:"baseKey",type:"bytes32"}],name:"QuoteBaseExchangeExceedsLimit",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"spotPrice",type:"uint256"},{internalType:"bool",name:"invalid",type:"bool"}],name:"RateIsInvalid",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"bytes32",name:"fromKey",type:"bytes32"},{internalType:"bytes32",name:"toKey",type:"bytes32"},{internalType:"uint256",name:"amountSwapped",type:"uint256"},{internalType:"uint256",name:"amountReceived",type:"uint256"}],name:"ReceivedZeroFromExchange",type:"error"},{anonymous:!1,inputs:[{indexed:!1,internalType:"contract IAddressResolver",name:"addressResolver",type:"address"}],name:"AddressResolverSet",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"marketAddress",type:"address"},{indexed:!0,internalType:"address",name:"exchanger",type:"address"},{indexed:!1,internalType:"uint256",name:"baseSwapped",type:"uint256"},{indexed:!1,internalType:"uint256",name:"quoteReceived",type:"uint256"}],name:"BaseSwappedForQuote",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bool",name:"isPaused",type:"bool"}],name:"GlobalPausedSet",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"market",type:"address"},{indexed:!1,internalType:"bytes32",name:"quoteKey",type:"bytes32"},{indexed:!1,internalType:"bytes32",name:"baseKey",type:"bytes32"},{indexed:!1,internalType:"address",name:"rewardAddress",type:"address"},{indexed:!1,internalType:"bytes32",name:"trackingCode",type:"bytes32"}],name:"GlobalsSetForContract",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"contractAddress",type:"address"},{indexed:!1,internalType:"bool",name:"isPaused",type:"bool"}],name:"MarketPausedSet",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"oldOwner",type:"address"},{indexed:!1,internalType:"address",name:"newOwner",type:"address"}],name:"OwnerChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"newOwner",type:"address"}],name:"OwnerNominated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"marketAddress",type:"address"},{indexed:!0,internalType:"address",name:"exchanger",type:"address"},{indexed:!1,internalType:"uint256",name:"quoteSwapped",type:"uint256"},{indexed:!1,internalType:"uint256",name:"baseReceived",type:"uint256"}],name:"QuoteSwappedForBase",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"contract ISynthetix",name:"synthetix",type:"address"},{indexed:!1,internalType:"contract IExchanger",name:"exchanger",type:"address"},{indexed:!1,internalType:"contract IExchangeRates",name:"exchangeRates",type:"address"},{indexed:!1,internalType:"contract IDelegateApprovals",name:"delegateApprovals",type:"address"}],name:"SynthetixAddressesUpdated",type:"event"},{inputs:[],name:"acceptOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"addressResolver",outputs:[{internalType:"contract IAddressResolver",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"baseKey",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"delegateApprovals",outputs:[{internalType:"contract IDelegateApprovals",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{components:[{internalType:"uint256",name:"spotPrice",type:"uint256"},{internalType:"bytes32",name:"quoteKey",type:"bytes32"},{internalType:"bytes32",name:"baseKey",type:"bytes32"},{internalType:"uint256",name:"quoteBaseFeeRate",type:"uint256"},{internalType:"uint256",name:"baseQuoteFeeRate",type:"uint256"}],internalType:"struct SynthetixAdapter.ExchangeParams",name:"exchangeParams",type:"tuple"},{internalType:"uint256",name:"amountBase",type:"uint256"}],name:"estimateExchangeToExactBase",outputs:[{internalType:"uint256",name:"quoteNeeded",type:"uint256"}],stateMutability:"pure",type:"function"},{inputs:[{components:[{internalType:"uint256",name:"spotPrice",type:"uint256"},{internalType:"bytes32",name:"quoteKey",type:"bytes32"},{internalType:"bytes32",name:"baseKey",type:"bytes32"},{internalType:"uint256",name:"quoteBaseFeeRate",type:"uint256"},{internalType:"uint256",name:"baseQuoteFeeRate",type:"uint256"}],internalType:"struct SynthetixAdapter.ExchangeParams",name:"exchangeParams",type:"tuple"},{internalType:"uint256",name:"amountQuote",type:"uint256"}],name:"estimateExchangeToExactQuote",outputs:[{internalType:"uint256",name:"baseNeeded",type:"uint256"}],stateMutability:"pure",type:"function"},{inputs:[{internalType:"address",name:"optionMarket",type:"address"},{internalType:"uint256",name:"amountBase",type:"uint256"}],name:"exchangeFromExactBase",outputs:[{internalType:"uint256",name:"quoteReceived",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"optionMarket",type:"address"},{internalType:"uint256",name:"amountQuote",type:"uint256"}],name:"exchangeFromExactQuote",outputs:[{internalType:"uint256",name:"baseReceived",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"exchangeRates",outputs:[{internalType:"contract IExchangeRates",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{components:[{internalType:"uint256",name:"spotPrice",type:"uint256"},{internalType:"bytes32",name:"quoteKey",type:"bytes32"},{internalType:"bytes32",name:"baseKey",type:"bytes32"},{internalType:"uint256",name:"quoteBaseFeeRate",type:"uint256"},{internalType:"uint256",name:"baseQuoteFeeRate",type:"uint256"}],internalType:"struct SynthetixAdapter.ExchangeParams",name:"exchangeParams",type:"tuple"},{internalType:"address",name:"optionMarket",type:"address"},{internalType:"uint256",name:"amountBase",type:"uint256"}],name:"exchangeToExactBase",outputs:[{internalType:"uint256",name:"quoteSpent",type:"uint256"},{internalType:"uint256",name:"baseReceived",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"uint256",name:"spotPrice",type:"uint256"},{internalType:"bytes32",name:"quoteKey",type:"bytes32"},{internalType:"bytes32",name:"baseKey",type:"bytes32"},{internalType:"uint256",name:"quoteBaseFeeRate",type:"uint256"},{internalType:"uint256",name:"baseQuoteFeeRate",type:"uint256"}],internalType:"struct SynthetixAdapter.ExchangeParams",name:"exchangeParams",type:"tuple"},{internalType:"address",name:"optionMarket",type:"address"},{internalType:"uint256",name:"amountBase",type:"uint256"},{internalType:"uint256",name:"quoteLimit",type:"uint256"}],name:"exchangeToExactBaseWithLimit",outputs:[{internalType:"uint256",name:"quoteSpent",type:"uint256"},{internalType:"uint256",name:"baseReceived",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"uint256",name:"spotPrice",type:"uint256"},{internalType:"bytes32",name:"quoteKey",type:"bytes32"},{internalType:"bytes32",name:"baseKey",type:"bytes32"},{internalType:"uint256",name:"quoteBaseFeeRate",type:"uint256"},{internalType:"uint256",name:"baseQuoteFeeRate",type:"uint256"}],internalType:"struct SynthetixAdapter.ExchangeParams",name:"exchangeParams",type:"tuple"},{internalType:"address",name:"optionMarket",type:"address"},{internalType:"uint256",name:"amountQuote",type:"uint256"}],name:"exchangeToExactQuote",outputs:[{internalType:"uint256",name:"baseSpent",type:"uint256"},{internalType:"uint256",name:"quoteReceived",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"uint256",name:"spotPrice",type:"uint256"},{internalType:"bytes32",name:"quoteKey",type:"bytes32"},{internalType:"bytes32",name:"baseKey",type:"bytes32"},{internalType:"uint256",name:"quoteBaseFeeRate",type:"uint256"},{internalType:"uint256",name:"baseQuoteFeeRate",type:"uint256"}],internalType:"struct SynthetixAdapter.ExchangeParams",name:"exchangeParams",type:"tuple"},{internalType:"address",name:"optionMarket",type:"address"},{internalType:"uint256",name:"amountQuote",type:"uint256"},{internalType:"uint256",name:"baseLimit",type:"uint256"}],name:"exchangeToExactQuoteWithLimit",outputs:[{internalType:"uint256",name:"baseSpent",type:"uint256"},{internalType:"uint256",name:"quoteReceived",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"exchanger",outputs:[{internalType:"contract IExchanger",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"optionMarket",type:"address"}],name:"getExchangeParams",outputs:[{components:[{internalType:"uint256",name:"spotPrice",type:"uint256"},{internalType:"bytes32",name:"quoteKey",type:"bytes32"},{internalType:"bytes32",name:"baseKey",type:"bytes32"},{internalType:"uint256",name:"quoteBaseFeeRate",type:"uint256"},{internalType:"uint256",name:"baseQuoteFeeRate",type:"uint256"}],internalType:"struct SynthetixAdapter.ExchangeParams",name:"exchangeParams",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"to",type:"bytes32"}],name:"getSpotPrice",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_contractAddress",type:"address"}],name:"getSpotPriceForMarket",outputs:[{internalType:"uint256",name:"spotPrice",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"isGlobalPaused",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"isMarketPaused",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_owner",type:"address"}],name:"nominateNewOwner",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"nominatedOwner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"quoteKey",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"optionMarket",type:"address"}],name:"requireNotGlobalPaused",outputs:[],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"rewardAddress",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract IAddressResolver",name:"_addressResolver",type:"address"}],name:"setAddressResolver",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bool",name:"_isPaused",type:"bool"}],name:"setGlobalPaused",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_contractAddress",type:"address"},{internalType:"bytes32",name:"_quoteKey",type:"bytes32"},{internalType:"bytes32",name:"_baseKey",type:"bytes32"},{internalType:"address",name:"_rewardAddress",type:"address"},{internalType:"bytes32",name:"_trackingCode",type:"bytes32"}],name:"setGlobalsForContract",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_contractAddress",type:"address"},{internalType:"bool",name:"_isPaused",type:"bool"}],name:"setMarketPaused",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"synthetix",outputs:[{internalType:"contract ISynthetix",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"trackingCode",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"updateSynthetixAddresses",outputs:[],stateMutability:"nonpayable",type:"function"}],Pp=[{inputs:[],name:"drip",outputs:[],stateMutability:"nonpayable",type:"function"}],Cp="0xEAf788AD8abd9C98bA05F6802a62B8DbC673D76B",Mp="0xbfa31380ED380cEb325153eA08f296A45A489108",Op="0xF5A0442D4753cA1Ea36427ec071aa5E786dA5916",Sp="",xp={OptionMarketViewer:Cp,ExchangeAdapter:Mp,LyraRegistry:Op,TestFaucet:Sp},Ip="0x9114B0a3D10D5f267b1FA21A0333e094d900f2f5",Ap="0xE3E2061d66ea546dD9CAD1fA171d0173A3Ab4b1E",Fp="0x1C2Ca80c108ff73E281B20556afEB52ABa7a56B1",qp="0xfDd5592e9d657950ACBcCA69A51ecb3e3Bb2F1e7",Vp={OptionMarketViewer:Ip,LyraRegistry:Ap,ExchangeAdapter:Fp,TestFaucet:qp},Dp=[{inputs:[{internalType:"address",name:"thrower",type:"address"}],name:"AllMarketsPaused",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"contract IERC20Decimals",name:"asset",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"receiver",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"AssetTransferFailed",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"amountQuoteRequested",type:"uint256"},{internalType:"uint256",name:"baseToSpend",type:"uint256"},{internalType:"uint256",name:"baseLimit",type:"uint256"},{internalType:"uint256",name:"spotPrice",type:"uint256"},{internalType:"bytes32",name:"baseKey",type:"bytes32"},{internalType:"bytes32",name:"quoteKey",type:"bytes32"}],name:"BaseQuoteExchangeExceedsLimit",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"amountOut",type:"uint256"},{internalType:"uint256",name:"minAcceptedOut",type:"uint256"},{internalType:"contract IERC20Decimals",name:"tokenIn",type:"address"},{internalType:"contract IERC20Decimals",name:"tokenOut",type:"address"},{internalType:"address",name:"receiver",type:"address"}],name:"InsufficientSwap",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"inputAddress",type:"address"}],name:"InvalidAddress",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"int256",name:"answer",type:"int256"},{internalType:"uint256",name:"updatedAt",type:"uint256"},{internalType:"uint256",name:"blockTimestamp",type:"uint256"}],name:"InvalidAnswer",type:"error"},{inputs:[{components:[{internalType:"uint256",name:"staticSwapFeeEstimate",type:"uint256"},{internalType:"uint256",name:"gmxUsageThreshold",type:"uint256"},{internalType:"uint256",name:"priceVarianceCBPercent",type:"uint256"},{internalType:"uint256",name:"chainlinkStalenessCheck",type:"uint256"}],internalType:"struct GMXAdapter.MarketPricingParams",name:"params",type:"tuple"}],name:"InvalidMarketPricingParams",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"contract AggregatorV2V3Interface",name:"inputAddress",type:"address"}],name:"InvalidPriceFeedAddress",type:"error"},{inputs:[],name:"InvalidRiskFreeRate",type:"error"},{inputs:[],name:"InvalidStaticSwapFeeEstimate",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"marketAddress",type:"address"}],name:"MarketIsPaused",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"}],name:"NotImplemented",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"nominatedOwner",type:"address"}],name:"OnlyNominatedOwner",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"owner",type:"address"}],name:"OnlyOwner",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"minPrice",type:"uint256"},{internalType:"uint256",name:"maxPrice",type:"uint256"},{internalType:"uint256",name:"clPrice",type:"uint256"},{internalType:"uint256",name:"priceVarianceCBPercent",type:"uint256"}],name:"PriceVarianceTooHigh",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"amountBaseRequested",type:"uint256"},{internalType:"uint256",name:"quoteToSpend",type:"uint256"},{internalType:"uint256",name:"quoteLimit",type:"uint256"},{internalType:"uint256",name:"spotPrice",type:"uint256"},{internalType:"bytes32",name:"quoteKey",type:"bytes32"},{internalType:"bytes32",name:"baseKey",type:"bytes32"}],name:"QuoteBaseExchangeExceedsLimit",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"contract IERC20Decimals",name:"asset",type:"address"},{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"TransferFailed",type:"error"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"marketAddress",type:"address"},{indexed:!0,internalType:"address",name:"exchanger",type:"address"},{indexed:!1,internalType:"uint256",name:"baseSwapped",type:"uint256"},{indexed:!1,internalType:"uint256",name:"quoteReceived",type:"uint256"}],name:"BaseSwappedForQuote",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"asset",type:"address"},{indexed:!0,internalType:"address",name:"aggregator",type:"address"}],name:"ChainlinkAggregatorUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"vault",type:"address"}],name:"GMXVaultAddressUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bool",name:"isPaused",type:"bool"}],name:"GlobalPausedSet",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"contractAddress",type:"address"},{indexed:!1,internalType:"bool",name:"isPaused",type:"bool"}],name:"MarketPausedSet",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"optionMarket",type:"address"},{components:[{internalType:"uint256",name:"staticSwapFeeEstimate",type:"uint256"},{internalType:"uint256",name:"gmxUsageThreshold",type:"uint256"},{internalType:"uint256",name:"priceVarianceCBPercent",type:"uint256"},{internalType:"uint256",name:"chainlinkStalenessCheck",type:"uint256"}],indexed:!1,internalType:"struct GMXAdapter.MarketPricingParams",name:"marketPricingParams",type:"tuple"}],name:"MarketPricingParamsUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"oldOwner",type:"address"},{indexed:!1,internalType:"address",name:"newOwner",type:"address"}],name:"OwnerChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"newOwner",type:"address"}],name:"OwnerNominated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"marketAddress",type:"address"},{indexed:!0,internalType:"address",name:"exchanger",type:"address"},{indexed:!1,internalType:"uint256",name:"quoteSwapped",type:"uint256"},{indexed:!1,internalType:"uint256",name:"baseReceived",type:"uint256"}],name:"QuoteSwappedForBase",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"optionMarket",type:"address"},{indexed:!1,internalType:"int256",name:"newRate",type:"int256"}],name:"RiskFreeRateUpdated",type:"event"},{inputs:[],name:"GMX_PRICE_PRECISION",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"acceptOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"chainlinkFeeds",outputs:[{internalType:"contract AggregatorV2V3Interface",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_optionMarket",type:"address"},{internalType:"uint256",name:"_amountBase",type:"uint256"}],name:"estimateExchangeToExactBase",outputs:[{internalType:"uint256",name:"quoteNeeded",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_optionMarket",type:"address"},{internalType:"uint256",name:"_amountQuote",type:"uint256"}],name:"estimateExchangeToExactQuote",outputs:[{internalType:"uint256",name:"baseNeeded",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_optionMarket",type:"address"},{internalType:"uint256",name:"_amountBase",type:"uint256"}],name:"exchangeFromExactBase",outputs:[{internalType:"uint256",name:"quoteReceived",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"optionMarket",type:"address"},{internalType:"uint256",name:"amountQuote",type:"uint256"}],name:"exchangeFromExactQuote",outputs:[{internalType:"uint256",name:"baseReceived",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"optionMarket",type:"address"},{internalType:"uint256",name:"amountBase",type:"uint256"}],name:"exchangeToExactBase",outputs:[{internalType:"uint256",name:"quoteSpent",type:"uint256"},{internalType:"uint256",name:"baseReceived",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_optionMarket",type:"address"},{internalType:"uint256",name:"_amountBase",type:"uint256"},{internalType:"uint256",name:"_quoteLimit",type:"uint256"}],name:"exchangeToExactBaseWithLimit",outputs:[{internalType:"uint256",name:"quoteSpent",type:"uint256"},{internalType:"uint256",name:"baseReceived",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"optionMarket",type:"address"},{internalType:"uint256",name:"amountQuote",type:"uint256"}],name:"exchangeToExactQuote",outputs:[{internalType:"uint256",name:"baseSpent",type:"uint256"},{internalType:"uint256",name:"quoteReceived",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"optionMarket",type:"address"},{internalType:"uint256",name:"amountQuote",type:"uint256"},{internalType:"uint256",name:"baseLimit",type:"uint256"}],name:"exchangeToExactQuoteWithLimit",outputs:[{internalType:"uint256",name:"quoteSpent",type:"uint256"},{internalType:"uint256",name:"baseReceived",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_optionMarket",type:"address"}],name:"getAdapterState",outputs:[{components:[{internalType:"contract AggregatorV2V3Interface",name:"chainlinkFeed",type:"address"},{components:[{internalType:"uint256",name:"staticSwapFeeEstimate",type:"uint256"},{internalType:"uint256",name:"gmxUsageThreshold",type:"uint256"},{internalType:"uint256",name:"priceVarianceCBPercent",type:"uint256"},{internalType:"uint256",name:"chainlinkStalenessCheck",type:"uint256"}],internalType:"struct GMXAdapter.MarketPricingParams",name:"marketPricingParams",type:"tuple"},{internalType:"int256",name:"rateAndCarry",type:"int256"},{internalType:"uint256",name:"clPrice",type:"uint256"},{internalType:"uint256",name:"gmxMinPrice",type:"uint256"},{internalType:"uint256",name:"gmxMaxPrice",type:"uint256"}],internalType:"struct GMXAdapter.GMXAdapterState",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"optionMarket",type:"address"},{internalType:"uint256",name:"",type:"uint256"}],name:"getSettlementPriceForMarket",outputs:[{internalType:"uint256",name:"spotPrice",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"optionMarket",type:"address"},{internalType:"enum BaseExchangeAdapter.PriceType",name:"pricing",type:"uint8"}],name:"getSpotPriceForMarket",outputs:[{internalType:"uint256",name:"spotPrice",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"isGlobalPaused",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"isMarketPaused",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"marketPricingParams",outputs:[{internalType:"uint256",name:"staticSwapFeeEstimate",type:"uint256"},{internalType:"uint256",name:"gmxUsageThreshold",type:"uint256"},{internalType:"uint256",name:"priceVarianceCBPercent",type:"uint256"},{internalType:"uint256",name:"chainlinkStalenessCheck",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_owner",type:"address"}],name:"nominateNewOwner",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"nominatedOwner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"rateAndCarry",outputs:[{internalType:"int256",name:"",type:"int256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"optionMarket",type:"address"}],name:"requireNotGlobalPaused",outputs:[],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"optionMarket",type:"address"}],name:"requireNotMarketPaused",outputs:[],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_asset",type:"address"},{internalType:"contract AggregatorV2V3Interface",name:"_assetPriceFeed",type:"address"}],name:"setChainlinkFeed",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bool",name:"isPaused",type:"bool"}],name:"setGlobalPaused",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"optionMarket",type:"address"},{internalType:"bool",name:"isPaused",type:"bool"}],name:"setMarketPaused",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_optionMarket",type:"address"},{components:[{internalType:"uint256",name:"staticSwapFeeEstimate",type:"uint256"},{internalType:"uint256",name:"gmxUsageThreshold",type:"uint256"},{internalType:"uint256",name:"priceVarianceCBPercent",type:"uint256"},{internalType:"uint256",name:"chainlinkStalenessCheck",type:"uint256"}],internalType:"struct GMXAdapter.MarketPricingParams",name:"_marketPricingParams",type:"tuple"}],name:"setMarketPricingParams",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_optionMarket",type:"address"},{internalType:"int256",name:"_rate",type:"int256"}],name:"setRiskFreeRate",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract IVault",name:"_vault",type:"address"}],name:"setVaultContract",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"vault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"}],Lp=[{inputs:[],stateMutability:"nonpayable",type:"constructor"},{inputs:[{internalType:"bytes32",name:"contractName",type:"bytes32"}],name:"NonExistentGlobalContract",type:"error"},{inputs:[{internalType:"address",name:"optionMarket",type:"address"}],name:"NonExistentMarket",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"nominatedOwner",type:"address"}],name:"OnlyNominatedOwner",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"owner",type:"address"}],name:"OnlyOwner",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"market",type:"address"}],name:"RemovingInvalidMarket",type:"error"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"name",type:"bytes32"},{indexed:!1,internalType:"address",name:"addr",type:"address"}],name:"GlobalAddressUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"contract OptionMarket",name:"market",type:"address"}],name:"MarketRemoved",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"contract OptionMarket",name:"optionMarket",type:"address"},{components:[{internalType:"contract LiquidityPool",name:"liquidityPool",type:"address"},{internalType:"contract LiquidityToken",name:"liquidityToken",type:"address"},{internalType:"contract OptionGreekCache",name:"greekCache",type:"address"},{internalType:"contract OptionMarket",name:"optionMarket",type:"address"},{internalType:"contract OptionMarketPricer",name:"optionMarketPricer",type:"address"},{internalType:"contract OptionToken",name:"optionToken",type:"address"},{internalType:"contract PoolHedger",name:"poolHedger",type:"address"},{internalType:"contract ShortCollateral",name:"shortCollateral",type:"address"},{internalType:"contract GWAVOracle",name:"gwavOracle",type:"address"},{internalType:"contract IERC20",name:"quoteAsset",type:"address"},{internalType:"contract IERC20",name:"baseAsset",type:"address"}],indexed:!1,internalType:"struct LyraRegistry.OptionMarketAddresses",name:"market",type:"tuple"}],name:"MarketUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"oldOwner",type:"address"},{indexed:!1,internalType:"address",name:"newOwner",type:"address"}],name:"OwnerChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"newOwner",type:"address"}],name:"OwnerNominated",type:"event"},{inputs:[],name:"acceptOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"contract LiquidityPool",name:"liquidityPool",type:"address"},{internalType:"contract LiquidityToken",name:"liquidityToken",type:"address"},{internalType:"contract OptionGreekCache",name:"greekCache",type:"address"},{internalType:"contract OptionMarket",name:"optionMarket",type:"address"},{internalType:"contract OptionMarketPricer",name:"optionMarketPricer",type:"address"},{internalType:"contract OptionToken",name:"optionToken",type:"address"},{internalType:"contract PoolHedger",name:"poolHedger",type:"address"},{internalType:"contract ShortCollateral",name:"shortCollateral",type:"address"},{internalType:"contract GWAVOracle",name:"gwavOracle",type:"address"},{internalType:"contract IERC20",name:"quoteAsset",type:"address"},{internalType:"contract IERC20",name:"baseAsset",type:"address"}],internalType:"struct LyraRegistry.OptionMarketAddresses",name:"newMarketAddresses",type:"tuple"}],name:"addMarket",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"contractName",type:"bytes32"}],name:"getGlobalAddress",outputs:[{internalType:"address",name:"globalContract",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract OptionMarket",name:"optionMarket",type:"address"}],name:"getMarketAddresses",outputs:[{components:[{internalType:"contract LiquidityPool",name:"liquidityPool",type:"address"},{internalType:"contract LiquidityToken",name:"liquidityToken",type:"address"},{internalType:"contract OptionGreekCache",name:"greekCache",type:"address"},{internalType:"contract OptionMarket",name:"optionMarket",type:"address"},{internalType:"contract OptionMarketPricer",name:"optionMarketPricer",type:"address"},{internalType:"contract OptionToken",name:"optionToken",type:"address"},{internalType:"contract PoolHedger",name:"poolHedger",type:"address"},{internalType:"contract ShortCollateral",name:"shortCollateral",type:"address"},{internalType:"contract GWAVOracle",name:"gwavOracle",type:"address"},{internalType:"contract IERC20",name:"quoteAsset",type:"address"},{internalType:"contract IERC20",name:"baseAsset",type:"address"}],internalType:"struct LyraRegistry.OptionMarketAddresses",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"",type:"bytes32"}],name:"globalAddresses",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract OptionMarket",name:"",type:"address"}],name:"marketAddresses",outputs:[{internalType:"contract LiquidityPool",name:"liquidityPool",type:"address"},{internalType:"contract LiquidityToken",name:"liquidityToken",type:"address"},{internalType:"contract OptionGreekCache",name:"greekCache",type:"address"},{internalType:"contract OptionMarket",name:"optionMarket",type:"address"},{internalType:"contract OptionMarketPricer",name:"optionMarketPricer",type:"address"},{internalType:"contract OptionToken",name:"optionToken",type:"address"},{internalType:"contract PoolHedger",name:"poolHedger",type:"address"},{internalType:"contract ShortCollateral",name:"shortCollateral",type:"address"},{internalType:"contract GWAVOracle",name:"gwavOracle",type:"address"},{internalType:"contract IERC20",name:"quoteAsset",type:"address"},{internalType:"contract IERC20",name:"baseAsset",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_owner",type:"address"}],name:"nominateNewOwner",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"nominatedOwner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"optionMarkets",outputs:[{internalType:"contract OptionMarket",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract OptionMarket",name:"market",type:"address"}],name:"removeMarket",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32[]",name:"names",type:"bytes32[]"},{internalType:"address[]",name:"addresses",type:"address[]"}],name:"updateGlobalAddresses",outputs:[],stateMutability:"nonpayable",type:"function"}],Bp=[{inputs:[],stateMutability:"nonpayable",type:"constructor"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"nominatedOwner",type:"address"}],name:"OnlyNominatedOwner",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"owner",type:"address"}],name:"OnlyOwner",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"market",type:"address"}],name:"RemovingInvalidMarket",type:"error"},{anonymous:!1,inputs:[{components:[{internalType:"contract LiquidityPool",name:"liquidityPool",type:"address"},{internalType:"contract LiquidityToken",name:"liquidityToken",type:"address"},{internalType:"contract OptionGreekCache",name:"greekCache",type:"address"},{internalType:"contract OptionMarket",name:"optionMarket",type:"address"},{internalType:"contract OptionMarketPricer",name:"optionMarketPricer",type:"address"},{internalType:"contract OptionToken",name:"optionToken",type:"address"},{internalType:"contract ShortCollateral",name:"shortCollateral",type:"address"},{internalType:"contract PoolHedger",name:"poolHedger",type:"address"},{internalType:"contract IERC20Decimals",name:"quoteAsset",type:"address"},{internalType:"contract IERC20Decimals",name:"baseAsset",type:"address"}],indexed:!1,internalType:"struct OptionMarketViewer.OptionMarketAddresses",name:"market",type:"tuple"}],name:"MarketAdded",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"contract OptionMarket",name:"market",type:"address"}],name:"MarketRemoved",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"oldOwner",type:"address"},{indexed:!1,internalType:"address",name:"newOwner",type:"address"}],name:"OwnerChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"newOwner",type:"address"}],name:"OwnerNominated",type:"event"},{inputs:[],name:"acceptOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"contract LiquidityPool",name:"liquidityPool",type:"address"},{internalType:"contract LiquidityToken",name:"liquidityToken",type:"address"},{internalType:"contract OptionGreekCache",name:"greekCache",type:"address"},{internalType:"contract OptionMarket",name:"optionMarket",type:"address"},{internalType:"contract OptionMarketPricer",name:"optionMarketPricer",type:"address"},{internalType:"contract OptionToken",name:"optionToken",type:"address"},{internalType:"contract ShortCollateral",name:"shortCollateral",type:"address"},{internalType:"contract PoolHedger",name:"poolHedger",type:"address"},{internalType:"contract IERC20Decimals",name:"quoteAsset",type:"address"},{internalType:"contract IERC20Decimals",name:"baseAsset",type:"address"}],internalType:"struct OptionMarketViewer.OptionMarketAddresses",name:"newMarketAddresses",type:"tuple"}],name:"addMarket",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"exchangeAdapter",outputs:[{internalType:"contract BaseExchangeAdapter",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract OptionMarket",name:"market",type:"address"},{internalType:"uint256",name:"boardId",type:"uint256"}],name:"getBoard",outputs:[{components:[{internalType:"address",name:"market",type:"address"},{internalType:"uint256",name:"boardId",type:"uint256"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"baseIv",type:"uint256"},{internalType:"uint256",name:"priceAtExpiry",type:"uint256"},{internalType:"bool",name:"isPaused",type:"bool"},{internalType:"uint256",name:"varianceGwavIv",type:"uint256"},{internalType:"uint256",name:"forceCloseGwavIv",type:"uint256"},{internalType:"uint256",name:"longScaleFactor",type:"uint256"},{components:[{internalType:"int256",name:"netDelta",type:"int256"},{internalType:"int256",name:"netStdVega",type:"int256"},{internalType:"int256",name:"netOptionValue",type:"int256"}],internalType:"struct OptionGreekCache.NetGreeks",name:"netGreeks",type:"tuple"},{components:[{internalType:"uint256",name:"strikeId",type:"uint256"},{internalType:"uint256",name:"boardId",type:"uint256"},{internalType:"uint256",name:"strikePrice",type:"uint256"},{internalType:"uint256",name:"skew",type:"uint256"},{internalType:"uint256",name:"forceCloseSkew",type:"uint256"},{components:[{internalType:"int256",name:"callDelta",type:"int256"},{internalType:"int256",name:"putDelta",type:"int256"},{internalType:"uint256",name:"stdVega",type:"uint256"},{internalType:"uint256",name:"callPrice",type:"uint256"},{internalType:"uint256",name:"putPrice",type:"uint256"}],internalType:"struct OptionGreekCache.StrikeGreeks",name:"cachedGreeks",type:"tuple"},{internalType:"uint256",name:"baseReturnedRatio",type:"uint256"},{internalType:"uint256",name:"longCallOpenInterest",type:"uint256"},{internalType:"uint256",name:"longPutOpenInterest",type:"uint256"},{internalType:"uint256",name:"shortCallBaseOpenInterest",type:"uint256"},{internalType:"uint256",name:"shortCallQuoteOpenInterest",type:"uint256"},{internalType:"uint256",name:"shortPutOpenInterest",type:"uint256"}],internalType:"struct OptionMarketViewer.StrikeView[]",name:"strikes",type:"tuple[]"}],internalType:"struct OptionMarketViewer.BoardView",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"string",name:"baseSymbol",type:"string"},{internalType:"uint256",name:"boardId",type:"uint256"}],name:"getBoardForBase",outputs:[{components:[{internalType:"address",name:"market",type:"address"},{internalType:"uint256",name:"boardId",type:"uint256"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"baseIv",type:"uint256"},{internalType:"uint256",name:"priceAtExpiry",type:"uint256"},{internalType:"bool",name:"isPaused",type:"bool"},{internalType:"uint256",name:"varianceGwavIv",type:"uint256"},{internalType:"uint256",name:"forceCloseGwavIv",type:"uint256"},{internalType:"uint256",name:"longScaleFactor",type:"uint256"},{components:[{internalType:"int256",name:"netDelta",type:"int256"},{internalType:"int256",name:"netStdVega",type:"int256"},{internalType:"int256",name:"netOptionValue",type:"int256"}],internalType:"struct OptionGreekCache.NetGreeks",name:"netGreeks",type:"tuple"},{components:[{internalType:"uint256",name:"strikeId",type:"uint256"},{internalType:"uint256",name:"boardId",type:"uint256"},{internalType:"uint256",name:"strikePrice",type:"uint256"},{internalType:"uint256",name:"skew",type:"uint256"},{internalType:"uint256",name:"forceCloseSkew",type:"uint256"},{components:[{internalType:"int256",name:"callDelta",type:"int256"},{internalType:"int256",name:"putDelta",type:"int256"},{internalType:"uint256",name:"stdVega",type:"uint256"},{internalType:"uint256",name:"callPrice",type:"uint256"},{internalType:"uint256",name:"putPrice",type:"uint256"}],internalType:"struct OptionGreekCache.StrikeGreeks",name:"cachedGreeks",type:"tuple"},{internalType:"uint256",name:"baseReturnedRatio",type:"uint256"},{internalType:"uint256",name:"longCallOpenInterest",type:"uint256"},{internalType:"uint256",name:"longPutOpenInterest",type:"uint256"},{internalType:"uint256",name:"shortCallBaseOpenInterest",type:"uint256"},{internalType:"uint256",name:"shortCallQuoteOpenInterest",type:"uint256"},{internalType:"uint256",name:"shortPutOpenInterest",type:"uint256"}],internalType:"struct OptionMarketViewer.StrikeView[]",name:"strikes",type:"tuple[]"}],internalType:"struct OptionMarketViewer.BoardView",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract OptionMarket",name:"market",type:"address"},{internalType:"uint256",name:"strikeId",type:"uint256"}],name:"getBoardForStrikeId",outputs:[{components:[{internalType:"address",name:"market",type:"address"},{internalType:"uint256",name:"boardId",type:"uint256"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"baseIv",type:"uint256"},{internalType:"uint256",name:"priceAtExpiry",type:"uint256"},{internalType:"bool",name:"isPaused",type:"bool"},{internalType:"uint256",name:"varianceGwavIv",type:"uint256"},{internalType:"uint256",name:"forceCloseGwavIv",type:"uint256"},{internalType:"uint256",name:"longScaleFactor",type:"uint256"},{components:[{internalType:"int256",name:"netDelta",type:"int256"},{internalType:"int256",name:"netStdVega",type:"int256"},{internalType:"int256",name:"netOptionValue",type:"int256"}],internalType:"struct OptionGreekCache.NetGreeks",name:"netGreeks",type:"tuple"},{components:[{internalType:"uint256",name:"strikeId",type:"uint256"},{internalType:"uint256",name:"boardId",type:"uint256"},{internalType:"uint256",name:"strikePrice",type:"uint256"},{internalType:"uint256",name:"skew",type:"uint256"},{internalType:"uint256",name:"forceCloseSkew",type:"uint256"},{components:[{internalType:"int256",name:"callDelta",type:"int256"},{internalType:"int256",name:"putDelta",type:"int256"},{internalType:"uint256",name:"stdVega",type:"uint256"},{internalType:"uint256",name:"callPrice",type:"uint256"},{internalType:"uint256",name:"putPrice",type:"uint256"}],internalType:"struct OptionGreekCache.StrikeGreeks",name:"cachedGreeks",type:"tuple"},{internalType:"uint256",name:"baseReturnedRatio",type:"uint256"},{internalType:"uint256",name:"longCallOpenInterest",type:"uint256"},{internalType:"uint256",name:"longPutOpenInterest",type:"uint256"},{internalType:"uint256",name:"shortCallBaseOpenInterest",type:"uint256"},{internalType:"uint256",name:"shortCallQuoteOpenInterest",type:"uint256"},{internalType:"uint256",name:"shortPutOpenInterest",type:"uint256"}],internalType:"struct OptionMarketViewer.StrikeView[]",name:"strikes",type:"tuple[]"}],internalType:"struct OptionMarketViewer.BoardView",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract OptionMarket",name:"market",type:"address"}],name:"getMarket",outputs:[{components:[{internalType:"bool",name:"isPaused",type:"bool"},{internalType:"uint256",name:"spotPrice",type:"uint256"},{internalType:"string",name:"quoteSymbol",type:"string"},{internalType:"uint256",name:"quoteDecimals",type:"uint256"},{internalType:"string",name:"baseSymbol",type:"string"},{internalType:"uint256",name:"baseDecimals",type:"uint256"},{components:[{internalType:"uint256",name:"freeLiquidity",type:"uint256"},{internalType:"uint256",name:"burnableLiquidity",type:"uint256"},{internalType:"uint256",name:"reservedCollatLiquidity",type:"uint256"},{internalType:"uint256",name:"pendingDeltaLiquidity",type:"uint256"},{internalType:"uint256",name:"usedDeltaLiquidity",type:"uint256"},{internalType:"uint256",name:"NAV",type:"uint256"},{internalType:"uint256",name:"longScaleFactor",type:"uint256"}],internalType:"struct LiquidityPool.Liquidity",name:"liquidity",type:"tuple"},{components:[{internalType:"contract LiquidityPool",name:"liquidityPool",type:"address"},{internalType:"contract LiquidityToken",name:"liquidityToken",type:"address"},{internalType:"contract OptionGreekCache",name:"greekCache",type:"address"},{internalType:"contract OptionMarket",name:"optionMarket",type:"address"},{internalType:"contract OptionMarketPricer",name:"optionMarketPricer",type:"address"},{internalType:"contract OptionToken",name:"optionToken",type:"address"},{internalType:"contract ShortCollateral",name:"shortCollateral",type:"address"},{internalType:"contract PoolHedger",name:"poolHedger",type:"address"},{internalType:"contract IERC20Decimals",name:"quoteAsset",type:"address"},{internalType:"contract IERC20Decimals",name:"baseAsset",type:"address"}],internalType:"struct OptionMarketViewer.OptionMarketAddresses",name:"marketAddresses",type:"tuple"},{components:[{components:[{internalType:"uint256",name:"maxBoardExpiry",type:"uint256"},{internalType:"address",name:"securityModule",type:"address"},{internalType:"uint256",name:"feePortionReserved",type:"uint256"},{internalType:"uint256",name:"staticBaseSettlementFee",type:"uint256"}],internalType:"struct OptionMarket.OptionMarketParameters",name:"optionMarketParams",type:"tuple"},{components:[{internalType:"uint256",name:"minDepositWithdraw",type:"uint256"},{internalType:"uint256",name:"depositDelay",type:"uint256"},{internalType:"uint256",name:"withdrawalDelay",type:"uint256"},{internalType:"uint256",name:"withdrawalFee",type:"uint256"},{internalType:"address",name:"guardianMultisig",type:"address"},{internalType:"uint256",name:"guardianDelay",type:"uint256"},{internalType:"uint256",name:"adjustmentNetScalingFactor",type:"uint256"},{internalType:"uint256",name:"callCollatScalingFactor",type:"uint256"},{internalType:"uint256",name:"putCollatScalingFactor",type:"uint256"}],internalType:"struct LiquidityPool.LiquidityPoolParameters",name:"lpParams",type:"tuple"},{components:[{internalType:"uint256",name:"liquidityCBThreshold",type:"uint256"},{internalType:"uint256",name:"liquidityCBTimeout",type:"uint256"},{internalType:"uint256",name:"ivVarianceCBThreshold",type:"uint256"},{internalType:"uint256",name:"skewVarianceCBThreshold",type:"uint256"},{internalType:"uint256",name:"ivVarianceCBTimeout",type:"uint256"},{internalType:"uint256",name:"skewVarianceCBTimeout",type:"uint256"},{internalType:"uint256",name:"boardSettlementCBTimeout",type:"uint256"},{internalType:"uint256",name:"contractAdjustmentCBTimeout",type:"uint256"}],internalType:"struct LiquidityPool.CircuitBreakerParameters",name:"cbParams",type:"tuple"},{components:[{internalType:"uint256",name:"maxStrikesPerBoard",type:"uint256"},{internalType:"uint256",name:"acceptableSpotPricePercentMove",type:"uint256"},{internalType:"uint256",name:"staleUpdateDuration",type:"uint256"},{internalType:"uint256",name:"varianceIvGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"varianceSkewGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"optionValueIvGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"optionValueSkewGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"gwavSkewFloor",type:"uint256"},{internalType:"uint256",name:"gwavSkewCap",type:"uint256"}],internalType:"struct OptionGreekCache.GreekCacheParameters",name:"greekCacheParams",type:"tuple"},{components:[{internalType:"uint256",name:"ivGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"skewGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"shortVolShock",type:"uint256"},{internalType:"uint256",name:"shortPostCutoffVolShock",type:"uint256"},{internalType:"uint256",name:"longVolShock",type:"uint256"},{internalType:"uint256",name:"longPostCutoffVolShock",type:"uint256"},{internalType:"uint256",name:"liquidateVolShock",type:"uint256"},{internalType:"uint256",name:"liquidatePostCutoffVolShock",type:"uint256"},{internalType:"uint256",name:"shortSpotMin",type:"uint256"},{internalType:"uint256",name:"liquidateSpotMin",type:"uint256"}],internalType:"struct OptionGreekCache.ForceCloseParameters",name:"forceCloseParams",type:"tuple"},{components:[{internalType:"uint256",name:"minStaticQuoteCollateral",type:"uint256"},{internalType:"uint256",name:"minStaticBaseCollateral",type:"uint256"},{internalType:"uint256",name:"shockVolA",type:"uint256"},{internalType:"uint256",name:"shockVolPointA",type:"uint256"},{internalType:"uint256",name:"shockVolB",type:"uint256"},{internalType:"uint256",name:"shockVolPointB",type:"uint256"},{internalType:"uint256",name:"callSpotPriceShock",type:"uint256"},{internalType:"uint256",name:"putSpotPriceShock",type:"uint256"}],internalType:"struct OptionGreekCache.MinCollateralParameters",name:"minCollatParams",type:"tuple"},{components:[{internalType:"uint256",name:"optionPriceFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"optionPriceFee1xPoint",type:"uint256"},{internalType:"uint256",name:"optionPriceFee2xPoint",type:"uint256"},{internalType:"uint256",name:"spotPriceFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"spotPriceFee1xPoint",type:"uint256"},{internalType:"uint256",name:"spotPriceFee2xPoint",type:"uint256"},{internalType:"uint256",name:"vegaFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"standardSize",type:"uint256"},{internalType:"uint256",name:"skewAdjustmentFactor",type:"uint256"}],internalType:"struct OptionMarketPricer.PricingParameters",name:"pricingParams",type:"tuple"},{components:[{internalType:"int256",name:"minDelta",type:"int256"},{internalType:"int256",name:"minForceCloseDelta",type:"int256"},{internalType:"uint256",name:"tradingCutoff",type:"uint256"},{internalType:"uint256",name:"minBaseIV",type:"uint256"},{internalType:"uint256",name:"maxBaseIV",type:"uint256"},{internalType:"uint256",name:"minSkew",type:"uint256"},{internalType:"uint256",name:"maxSkew",type:"uint256"},{internalType:"uint256",name:"minVol",type:"uint256"},{internalType:"uint256",name:"maxVol",type:"uint256"},{internalType:"uint256",name:"absMinSkew",type:"uint256"},{internalType:"uint256",name:"absMaxSkew",type:"uint256"},{internalType:"bool",name:"capSkewsToAbs",type:"bool"}],internalType:"struct OptionMarketPricer.TradeLimitParameters",name:"tradeLimitParams",type:"tuple"},{components:[{internalType:"uint256",name:"defaultVarianceFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"forceCloseVarianceFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"skewAdjustmentCoefficient",type:"uint256"},{internalType:"uint256",name:"referenceSkew",type:"uint256"},{internalType:"uint256",name:"minimumStaticSkewAdjustment",type:"uint256"},{internalType:"uint256",name:"vegaCoefficient",type:"uint256"},{internalType:"uint256",name:"minimumStaticVega",type:"uint256"},{internalType:"uint256",name:"ivVarianceCoefficient",type:"uint256"},{internalType:"uint256",name:"minimumStaticIvVariance",type:"uint256"}],internalType:"struct OptionMarketPricer.VarianceFeeParameters",name:"varianceFeeParams",type:"tuple"},{components:[{internalType:"uint256",name:"penaltyRatio",type:"uint256"},{internalType:"uint256",name:"liquidatorFeeRatio",type:"uint256"},{internalType:"uint256",name:"smFeeRatio",type:"uint256"},{internalType:"uint256",name:"minLiquidationFee",type:"uint256"}],internalType:"struct OptionToken.PartialCollateralParameters",name:"partialCollatParams",type:"tuple"}],internalType:"struct OptionMarketViewer.MarketParameters",name:"marketParameters",type:"tuple"},{components:[{internalType:"int256",name:"netDelta",type:"int256"},{internalType:"int256",name:"netStdVega",type:"int256"},{internalType:"int256",name:"netOptionValue",type:"int256"}],internalType:"struct OptionGreekCache.NetGreeks",name:"globalNetGreeks",type:"tuple"},{components:[{internalType:"address",name:"market",type:"address"},{internalType:"uint256",name:"boardId",type:"uint256"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"baseIv",type:"uint256"},{internalType:"uint256",name:"priceAtExpiry",type:"uint256"},{internalType:"bool",name:"isPaused",type:"bool"},{internalType:"uint256",name:"varianceGwavIv",type:"uint256"},{internalType:"uint256",name:"forceCloseGwavIv",type:"uint256"},{internalType:"uint256",name:"longScaleFactor",type:"uint256"},{components:[{internalType:"int256",name:"netDelta",type:"int256"},{internalType:"int256",name:"netStdVega",type:"int256"},{internalType:"int256",name:"netOptionValue",type:"int256"}],internalType:"struct OptionGreekCache.NetGreeks",name:"netGreeks",type:"tuple"},{components:[{internalType:"uint256",name:"strikeId",type:"uint256"},{internalType:"uint256",name:"boardId",type:"uint256"},{internalType:"uint256",name:"strikePrice",type:"uint256"},{internalType:"uint256",name:"skew",type:"uint256"},{internalType:"uint256",name:"forceCloseSkew",type:"uint256"},{components:[{internalType:"int256",name:"callDelta",type:"int256"},{internalType:"int256",name:"putDelta",type:"int256"},{internalType:"uint256",name:"stdVega",type:"uint256"},{internalType:"uint256",name:"callPrice",type:"uint256"},{internalType:"uint256",name:"putPrice",type:"uint256"}],internalType:"struct OptionGreekCache.StrikeGreeks",name:"cachedGreeks",type:"tuple"},{internalType:"uint256",name:"baseReturnedRatio",type:"uint256"},{internalType:"uint256",name:"longCallOpenInterest",type:"uint256"},{internalType:"uint256",name:"longPutOpenInterest",type:"uint256"},{internalType:"uint256",name:"shortCallBaseOpenInterest",type:"uint256"},{internalType:"uint256",name:"shortCallQuoteOpenInterest",type:"uint256"},{internalType:"uint256",name:"shortPutOpenInterest",type:"uint256"}],internalType:"struct OptionMarketViewer.StrikeView[]",name:"strikes",type:"tuple[]"}],internalType:"struct OptionMarketViewer.BoardView[]",name:"liveBoards",type:"tuple[]"}],internalType:"struct OptionMarketViewer.MarketView",name:"marketView",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[],name:"getMarketAddresses",outputs:[{components:[{internalType:"contract LiquidityPool",name:"liquidityPool",type:"address"},{internalType:"contract LiquidityToken",name:"liquidityToken",type:"address"},{internalType:"contract OptionGreekCache",name:"greekCache",type:"address"},{internalType:"contract OptionMarket",name:"optionMarket",type:"address"},{internalType:"contract OptionMarketPricer",name:"optionMarketPricer",type:"address"},{internalType:"contract OptionToken",name:"optionToken",type:"address"},{internalType:"contract ShortCollateral",name:"shortCollateral",type:"address"},{internalType:"contract PoolHedger",name:"poolHedger",type:"address"},{internalType:"contract IERC20Decimals",name:"quoteAsset",type:"address"},{internalType:"contract IERC20Decimals",name:"baseAsset",type:"address"}],internalType:"struct OptionMarketViewer.OptionMarketAddresses[]",name:"",type:"tuple[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"string",name:"baseSymbol",type:"string"}],name:"getMarketForBase",outputs:[{components:[{internalType:"bool",name:"isPaused",type:"bool"},{internalType:"uint256",name:"spotPrice",type:"uint256"},{internalType:"string",name:"quoteSymbol",type:"string"},{internalType:"uint256",name:"quoteDecimals",type:"uint256"},{internalType:"string",name:"baseSymbol",type:"string"},{internalType:"uint256",name:"baseDecimals",type:"uint256"},{components:[{internalType:"uint256",name:"freeLiquidity",type:"uint256"},{internalType:"uint256",name:"burnableLiquidity",type:"uint256"},{internalType:"uint256",name:"reservedCollatLiquidity",type:"uint256"},{internalType:"uint256",name:"pendingDeltaLiquidity",type:"uint256"},{internalType:"uint256",name:"usedDeltaLiquidity",type:"uint256"},{internalType:"uint256",name:"NAV",type:"uint256"},{internalType:"uint256",name:"longScaleFactor",type:"uint256"}],internalType:"struct LiquidityPool.Liquidity",name:"liquidity",type:"tuple"},{components:[{internalType:"contract LiquidityPool",name:"liquidityPool",type:"address"},{internalType:"contract LiquidityToken",name:"liquidityToken",type:"address"},{internalType:"contract OptionGreekCache",name:"greekCache",type:"address"},{internalType:"contract OptionMarket",name:"optionMarket",type:"address"},{internalType:"contract OptionMarketPricer",name:"optionMarketPricer",type:"address"},{internalType:"contract OptionToken",name:"optionToken",type:"address"},{internalType:"contract ShortCollateral",name:"shortCollateral",type:"address"},{internalType:"contract PoolHedger",name:"poolHedger",type:"address"},{internalType:"contract IERC20Decimals",name:"quoteAsset",type:"address"},{internalType:"contract IERC20Decimals",name:"baseAsset",type:"address"}],internalType:"struct OptionMarketViewer.OptionMarketAddresses",name:"marketAddresses",type:"tuple"},{components:[{components:[{internalType:"uint256",name:"maxBoardExpiry",type:"uint256"},{internalType:"address",name:"securityModule",type:"address"},{internalType:"uint256",name:"feePortionReserved",type:"uint256"},{internalType:"uint256",name:"staticBaseSettlementFee",type:"uint256"}],internalType:"struct OptionMarket.OptionMarketParameters",name:"optionMarketParams",type:"tuple"},{components:[{internalType:"uint256",name:"minDepositWithdraw",type:"uint256"},{internalType:"uint256",name:"depositDelay",type:"uint256"},{internalType:"uint256",name:"withdrawalDelay",type:"uint256"},{internalType:"uint256",name:"withdrawalFee",type:"uint256"},{internalType:"address",name:"guardianMultisig",type:"address"},{internalType:"uint256",name:"guardianDelay",type:"uint256"},{internalType:"uint256",name:"adjustmentNetScalingFactor",type:"uint256"},{internalType:"uint256",name:"callCollatScalingFactor",type:"uint256"},{internalType:"uint256",name:"putCollatScalingFactor",type:"uint256"}],internalType:"struct LiquidityPool.LiquidityPoolParameters",name:"lpParams",type:"tuple"},{components:[{internalType:"uint256",name:"liquidityCBThreshold",type:"uint256"},{internalType:"uint256",name:"liquidityCBTimeout",type:"uint256"},{internalType:"uint256",name:"ivVarianceCBThreshold",type:"uint256"},{internalType:"uint256",name:"skewVarianceCBThreshold",type:"uint256"},{internalType:"uint256",name:"ivVarianceCBTimeout",type:"uint256"},{internalType:"uint256",name:"skewVarianceCBTimeout",type:"uint256"},{internalType:"uint256",name:"boardSettlementCBTimeout",type:"uint256"},{internalType:"uint256",name:"contractAdjustmentCBTimeout",type:"uint256"}],internalType:"struct LiquidityPool.CircuitBreakerParameters",name:"cbParams",type:"tuple"},{components:[{internalType:"uint256",name:"maxStrikesPerBoard",type:"uint256"},{internalType:"uint256",name:"acceptableSpotPricePercentMove",type:"uint256"},{internalType:"uint256",name:"staleUpdateDuration",type:"uint256"},{internalType:"uint256",name:"varianceIvGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"varianceSkewGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"optionValueIvGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"optionValueSkewGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"gwavSkewFloor",type:"uint256"},{internalType:"uint256",name:"gwavSkewCap",type:"uint256"}],internalType:"struct OptionGreekCache.GreekCacheParameters",name:"greekCacheParams",type:"tuple"},{components:[{internalType:"uint256",name:"ivGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"skewGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"shortVolShock",type:"uint256"},{internalType:"uint256",name:"shortPostCutoffVolShock",type:"uint256"},{internalType:"uint256",name:"longVolShock",type:"uint256"},{internalType:"uint256",name:"longPostCutoffVolShock",type:"uint256"},{internalType:"uint256",name:"liquidateVolShock",type:"uint256"},{internalType:"uint256",name:"liquidatePostCutoffVolShock",type:"uint256"},{internalType:"uint256",name:"shortSpotMin",type:"uint256"},{internalType:"uint256",name:"liquidateSpotMin",type:"uint256"}],internalType:"struct OptionGreekCache.ForceCloseParameters",name:"forceCloseParams",type:"tuple"},{components:[{internalType:"uint256",name:"minStaticQuoteCollateral",type:"uint256"},{internalType:"uint256",name:"minStaticBaseCollateral",type:"uint256"},{internalType:"uint256",name:"shockVolA",type:"uint256"},{internalType:"uint256",name:"shockVolPointA",type:"uint256"},{internalType:"uint256",name:"shockVolB",type:"uint256"},{internalType:"uint256",name:"shockVolPointB",type:"uint256"},{internalType:"uint256",name:"callSpotPriceShock",type:"uint256"},{internalType:"uint256",name:"putSpotPriceShock",type:"uint256"}],internalType:"struct OptionGreekCache.MinCollateralParameters",name:"minCollatParams",type:"tuple"},{components:[{internalType:"uint256",name:"optionPriceFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"optionPriceFee1xPoint",type:"uint256"},{internalType:"uint256",name:"optionPriceFee2xPoint",type:"uint256"},{internalType:"uint256",name:"spotPriceFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"spotPriceFee1xPoint",type:"uint256"},{internalType:"uint256",name:"spotPriceFee2xPoint",type:"uint256"},{internalType:"uint256",name:"vegaFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"standardSize",type:"uint256"},{internalType:"uint256",name:"skewAdjustmentFactor",type:"uint256"}],internalType:"struct OptionMarketPricer.PricingParameters",name:"pricingParams",type:"tuple"},{components:[{internalType:"int256",name:"minDelta",type:"int256"},{internalType:"int256",name:"minForceCloseDelta",type:"int256"},{internalType:"uint256",name:"tradingCutoff",type:"uint256"},{internalType:"uint256",name:"minBaseIV",type:"uint256"},{internalType:"uint256",name:"maxBaseIV",type:"uint256"},{internalType:"uint256",name:"minSkew",type:"uint256"},{internalType:"uint256",name:"maxSkew",type:"uint256"},{internalType:"uint256",name:"minVol",type:"uint256"},{internalType:"uint256",name:"maxVol",type:"uint256"},{internalType:"uint256",name:"absMinSkew",type:"uint256"},{internalType:"uint256",name:"absMaxSkew",type:"uint256"},{internalType:"bool",name:"capSkewsToAbs",type:"bool"}],internalType:"struct OptionMarketPricer.TradeLimitParameters",name:"tradeLimitParams",type:"tuple"},{components:[{internalType:"uint256",name:"defaultVarianceFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"forceCloseVarianceFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"skewAdjustmentCoefficient",type:"uint256"},{internalType:"uint256",name:"referenceSkew",type:"uint256"},{internalType:"uint256",name:"minimumStaticSkewAdjustment",type:"uint256"},{internalType:"uint256",name:"vegaCoefficient",type:"uint256"},{internalType:"uint256",name:"minimumStaticVega",type:"uint256"},{internalType:"uint256",name:"ivVarianceCoefficient",type:"uint256"},{internalType:"uint256",name:"minimumStaticIvVariance",type:"uint256"}],internalType:"struct OptionMarketPricer.VarianceFeeParameters",name:"varianceFeeParams",type:"tuple"},{components:[{internalType:"uint256",name:"penaltyRatio",type:"uint256"},{internalType:"uint256",name:"liquidatorFeeRatio",type:"uint256"},{internalType:"uint256",name:"smFeeRatio",type:"uint256"},{internalType:"uint256",name:"minLiquidationFee",type:"uint256"}],internalType:"struct OptionToken.PartialCollateralParameters",name:"partialCollatParams",type:"tuple"}],internalType:"struct OptionMarketViewer.MarketParameters",name:"marketParameters",type:"tuple"},{components:[{internalType:"int256",name:"netDelta",type:"int256"},{internalType:"int256",name:"netStdVega",type:"int256"},{internalType:"int256",name:"netOptionValue",type:"int256"}],internalType:"struct OptionGreekCache.NetGreeks",name:"globalNetGreeks",type:"tuple"},{components:[{internalType:"address",name:"market",type:"address"},{internalType:"uint256",name:"boardId",type:"uint256"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"baseIv",type:"uint256"},{internalType:"uint256",name:"priceAtExpiry",type:"uint256"},{internalType:"bool",name:"isPaused",type:"bool"},{internalType:"uint256",name:"varianceGwavIv",type:"uint256"},{internalType:"uint256",name:"forceCloseGwavIv",type:"uint256"},{internalType:"uint256",name:"longScaleFactor",type:"uint256"},{components:[{internalType:"int256",name:"netDelta",type:"int256"},{internalType:"int256",name:"netStdVega",type:"int256"},{internalType:"int256",name:"netOptionValue",type:"int256"}],internalType:"struct OptionGreekCache.NetGreeks",name:"netGreeks",type:"tuple"},{components:[{internalType:"uint256",name:"strikeId",type:"uint256"},{internalType:"uint256",name:"boardId",type:"uint256"},{internalType:"uint256",name:"strikePrice",type:"uint256"},{internalType:"uint256",name:"skew",type:"uint256"},{internalType:"uint256",name:"forceCloseSkew",type:"uint256"},{components:[{internalType:"int256",name:"callDelta",type:"int256"},{internalType:"int256",name:"putDelta",type:"int256"},{internalType:"uint256",name:"stdVega",type:"uint256"},{internalType:"uint256",name:"callPrice",type:"uint256"},{internalType:"uint256",name:"putPrice",type:"uint256"}],internalType:"struct OptionGreekCache.StrikeGreeks",name:"cachedGreeks",type:"tuple"},{internalType:"uint256",name:"baseReturnedRatio",type:"uint256"},{internalType:"uint256",name:"longCallOpenInterest",type:"uint256"},{internalType:"uint256",name:"longPutOpenInterest",type:"uint256"},{internalType:"uint256",name:"shortCallBaseOpenInterest",type:"uint256"},{internalType:"uint256",name:"shortCallQuoteOpenInterest",type:"uint256"},{internalType:"uint256",name:"shortPutOpenInterest",type:"uint256"}],internalType:"struct OptionMarketViewer.StrikeView[]",name:"strikes",type:"tuple[]"}],internalType:"struct OptionMarketViewer.BoardView[]",name:"liveBoards",type:"tuple[]"}],internalType:"struct OptionMarketViewer.MarketView",name:"marketView",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract OptionMarket[]",name:"markets",type:"address[]"}],name:"getMarkets",outputs:[{components:[{internalType:"bool",name:"isPaused",type:"bool"},{components:[{internalType:"bool",name:"isPaused",type:"bool"},{internalType:"uint256",name:"spotPrice",type:"uint256"},{internalType:"string",name:"quoteSymbol",type:"string"},{internalType:"uint256",name:"quoteDecimals",type:"uint256"},{internalType:"string",name:"baseSymbol",type:"string"},{internalType:"uint256",name:"baseDecimals",type:"uint256"},{components:[{internalType:"uint256",name:"freeLiquidity",type:"uint256"},{internalType:"uint256",name:"burnableLiquidity",type:"uint256"},{internalType:"uint256",name:"reservedCollatLiquidity",type:"uint256"},{internalType:"uint256",name:"pendingDeltaLiquidity",type:"uint256"},{internalType:"uint256",name:"usedDeltaLiquidity",type:"uint256"},{internalType:"uint256",name:"NAV",type:"uint256"},{internalType:"uint256",name:"longScaleFactor",type:"uint256"}],internalType:"struct LiquidityPool.Liquidity",name:"liquidity",type:"tuple"},{components:[{internalType:"contract LiquidityPool",name:"liquidityPool",type:"address"},{internalType:"contract LiquidityToken",name:"liquidityToken",type:"address"},{internalType:"contract OptionGreekCache",name:"greekCache",type:"address"},{internalType:"contract OptionMarket",name:"optionMarket",type:"address"},{internalType:"contract OptionMarketPricer",name:"optionMarketPricer",type:"address"},{internalType:"contract OptionToken",name:"optionToken",type:"address"},{internalType:"contract ShortCollateral",name:"shortCollateral",type:"address"},{internalType:"contract PoolHedger",name:"poolHedger",type:"address"},{internalType:"contract IERC20Decimals",name:"quoteAsset",type:"address"},{internalType:"contract IERC20Decimals",name:"baseAsset",type:"address"}],internalType:"struct OptionMarketViewer.OptionMarketAddresses",name:"marketAddresses",type:"tuple"},{components:[{components:[{internalType:"uint256",name:"maxBoardExpiry",type:"uint256"},{internalType:"address",name:"securityModule",type:"address"},{internalType:"uint256",name:"feePortionReserved",type:"uint256"},{internalType:"uint256",name:"staticBaseSettlementFee",type:"uint256"}],internalType:"struct OptionMarket.OptionMarketParameters",name:"optionMarketParams",type:"tuple"},{components:[{internalType:"uint256",name:"minDepositWithdraw",type:"uint256"},{internalType:"uint256",name:"depositDelay",type:"uint256"},{internalType:"uint256",name:"withdrawalDelay",type:"uint256"},{internalType:"uint256",name:"withdrawalFee",type:"uint256"},{internalType:"address",name:"guardianMultisig",type:"address"},{internalType:"uint256",name:"guardianDelay",type:"uint256"},{internalType:"uint256",name:"adjustmentNetScalingFactor",type:"uint256"},{internalType:"uint256",name:"callCollatScalingFactor",type:"uint256"},{internalType:"uint256",name:"putCollatScalingFactor",type:"uint256"}],internalType:"struct LiquidityPool.LiquidityPoolParameters",name:"lpParams",type:"tuple"},{components:[{internalType:"uint256",name:"liquidityCBThreshold",type:"uint256"},{internalType:"uint256",name:"liquidityCBTimeout",type:"uint256"},{internalType:"uint256",name:"ivVarianceCBThreshold",type:"uint256"},{internalType:"uint256",name:"skewVarianceCBThreshold",type:"uint256"},{internalType:"uint256",name:"ivVarianceCBTimeout",type:"uint256"},{internalType:"uint256",name:"skewVarianceCBTimeout",type:"uint256"},{internalType:"uint256",name:"boardSettlementCBTimeout",type:"uint256"},{internalType:"uint256",name:"contractAdjustmentCBTimeout",type:"uint256"}],internalType:"struct LiquidityPool.CircuitBreakerParameters",name:"cbParams",type:"tuple"},{components:[{internalType:"uint256",name:"maxStrikesPerBoard",type:"uint256"},{internalType:"uint256",name:"acceptableSpotPricePercentMove",type:"uint256"},{internalType:"uint256",name:"staleUpdateDuration",type:"uint256"},{internalType:"uint256",name:"varianceIvGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"varianceSkewGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"optionValueIvGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"optionValueSkewGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"gwavSkewFloor",type:"uint256"},{internalType:"uint256",name:"gwavSkewCap",type:"uint256"}],internalType:"struct OptionGreekCache.GreekCacheParameters",name:"greekCacheParams",type:"tuple"},{components:[{internalType:"uint256",name:"ivGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"skewGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"shortVolShock",type:"uint256"},{internalType:"uint256",name:"shortPostCutoffVolShock",type:"uint256"},{internalType:"uint256",name:"longVolShock",type:"uint256"},{internalType:"uint256",name:"longPostCutoffVolShock",type:"uint256"},{internalType:"uint256",name:"liquidateVolShock",type:"uint256"},{internalType:"uint256",name:"liquidatePostCutoffVolShock",type:"uint256"},{internalType:"uint256",name:"shortSpotMin",type:"uint256"},{internalType:"uint256",name:"liquidateSpotMin",type:"uint256"}],internalType:"struct OptionGreekCache.ForceCloseParameters",name:"forceCloseParams",type:"tuple"},{components:[{internalType:"uint256",name:"minStaticQuoteCollateral",type:"uint256"},{internalType:"uint256",name:"minStaticBaseCollateral",type:"uint256"},{internalType:"uint256",name:"shockVolA",type:"uint256"},{internalType:"uint256",name:"shockVolPointA",type:"uint256"},{internalType:"uint256",name:"shockVolB",type:"uint256"},{internalType:"uint256",name:"shockVolPointB",type:"uint256"},{internalType:"uint256",name:"callSpotPriceShock",type:"uint256"},{internalType:"uint256",name:"putSpotPriceShock",type:"uint256"}],internalType:"struct OptionGreekCache.MinCollateralParameters",name:"minCollatParams",type:"tuple"},{components:[{internalType:"uint256",name:"optionPriceFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"optionPriceFee1xPoint",type:"uint256"},{internalType:"uint256",name:"optionPriceFee2xPoint",type:"uint256"},{internalType:"uint256",name:"spotPriceFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"spotPriceFee1xPoint",type:"uint256"},{internalType:"uint256",name:"spotPriceFee2xPoint",type:"uint256"},{internalType:"uint256",name:"vegaFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"standardSize",type:"uint256"},{internalType:"uint256",name:"skewAdjustmentFactor",type:"uint256"}],internalType:"struct OptionMarketPricer.PricingParameters",name:"pricingParams",type:"tuple"},{components:[{internalType:"int256",name:"minDelta",type:"int256"},{internalType:"int256",name:"minForceCloseDelta",type:"int256"},{internalType:"uint256",name:"tradingCutoff",type:"uint256"},{internalType:"uint256",name:"minBaseIV",type:"uint256"},{internalType:"uint256",name:"maxBaseIV",type:"uint256"},{internalType:"uint256",name:"minSkew",type:"uint256"},{internalType:"uint256",name:"maxSkew",type:"uint256"},{internalType:"uint256",name:"minVol",type:"uint256"},{internalType:"uint256",name:"maxVol",type:"uint256"},{internalType:"uint256",name:"absMinSkew",type:"uint256"},{internalType:"uint256",name:"absMaxSkew",type:"uint256"},{internalType:"bool",name:"capSkewsToAbs",type:"bool"}],internalType:"struct OptionMarketPricer.TradeLimitParameters",name:"tradeLimitParams",type:"tuple"},{components:[{internalType:"uint256",name:"defaultVarianceFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"forceCloseVarianceFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"skewAdjustmentCoefficient",type:"uint256"},{internalType:"uint256",name:"referenceSkew",type:"uint256"},{internalType:"uint256",name:"minimumStaticSkewAdjustment",type:"uint256"},{internalType:"uint256",name:"vegaCoefficient",type:"uint256"},{internalType:"uint256",name:"minimumStaticVega",type:"uint256"},{internalType:"uint256",name:"ivVarianceCoefficient",type:"uint256"},{internalType:"uint256",name:"minimumStaticIvVariance",type:"uint256"}],internalType:"struct OptionMarketPricer.VarianceFeeParameters",name:"varianceFeeParams",type:"tuple"},{components:[{internalType:"uint256",name:"penaltyRatio",type:"uint256"},{internalType:"uint256",name:"liquidatorFeeRatio",type:"uint256"},{internalType:"uint256",name:"smFeeRatio",type:"uint256"},{internalType:"uint256",name:"minLiquidationFee",type:"uint256"}],internalType:"struct OptionToken.PartialCollateralParameters",name:"partialCollatParams",type:"tuple"}],internalType:"struct OptionMarketViewer.MarketParameters",name:"marketParameters",type:"tuple"},{components:[{internalType:"int256",name:"netDelta",type:"int256"},{internalType:"int256",name:"netStdVega",type:"int256"},{internalType:"int256",name:"netOptionValue",type:"int256"}],internalType:"struct OptionGreekCache.NetGreeks",name:"globalNetGreeks",type:"tuple"},{components:[{internalType:"address",name:"market",type:"address"},{internalType:"uint256",name:"boardId",type:"uint256"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"baseIv",type:"uint256"},{internalType:"uint256",name:"priceAtExpiry",type:"uint256"},{internalType:"bool",name:"isPaused",type:"bool"},{internalType:"uint256",name:"varianceGwavIv",type:"uint256"},{internalType:"uint256",name:"forceCloseGwavIv",type:"uint256"},{internalType:"uint256",name:"longScaleFactor",type:"uint256"},{components:[{internalType:"int256",name:"netDelta",type:"int256"},{internalType:"int256",name:"netStdVega",type:"int256"},{internalType:"int256",name:"netOptionValue",type:"int256"}],internalType:"struct OptionGreekCache.NetGreeks",name:"netGreeks",type:"tuple"},{components:[{internalType:"uint256",name:"strikeId",type:"uint256"},{internalType:"uint256",name:"boardId",type:"uint256"},{internalType:"uint256",name:"strikePrice",type:"uint256"},{internalType:"uint256",name:"skew",type:"uint256"},{internalType:"uint256",name:"forceCloseSkew",type:"uint256"},{components:[{internalType:"int256",name:"callDelta",type:"int256"},{internalType:"int256",name:"putDelta",type:"int256"},{internalType:"uint256",name:"stdVega",type:"uint256"},{internalType:"uint256",name:"callPrice",type:"uint256"},{internalType:"uint256",name:"putPrice",type:"uint256"}],internalType:"struct OptionGreekCache.StrikeGreeks",name:"cachedGreeks",type:"tuple"},{internalType:"uint256",name:"baseReturnedRatio",type:"uint256"},{internalType:"uint256",name:"longCallOpenInterest",type:"uint256"},{internalType:"uint256",name:"longPutOpenInterest",type:"uint256"},{internalType:"uint256",name:"shortCallBaseOpenInterest",type:"uint256"},{internalType:"uint256",name:"shortCallQuoteOpenInterest",type:"uint256"},{internalType:"uint256",name:"shortPutOpenInterest",type:"uint256"}],internalType:"struct OptionMarketViewer.StrikeView[]",name:"strikes",type:"tuple[]"}],internalType:"struct OptionMarketViewer.BoardView[]",name:"liveBoards",type:"tuple[]"}],internalType:"struct OptionMarketViewer.MarketView[]",name:"markets",type:"tuple[]"}],internalType:"struct OptionMarketViewer.MarketsView",name:"marketsView",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"getOwnerPositions",outputs:[{components:[{internalType:"address",name:"market",type:"address"},{components:[{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"uint256",name:"strikeId",type:"uint256"},{internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"collateral",type:"uint256"},{internalType:"enum OptionToken.PositionState",name:"state",type:"uint8"}],internalType:"struct OptionToken.OptionPosition[]",name:"positions",type:"tuple[]"}],internalType:"struct OptionMarketViewer.MarketOptionPositions[]",name:"",type:"tuple[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract BaseExchangeAdapter",name:"_exchangeAdapter",type:"address"}],name:"init",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"initialized",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract OptionMarket",name:"",type:"address"}],name:"marketAddresses",outputs:[{internalType:"contract LiquidityPool",name:"liquidityPool",type:"address"},{internalType:"contract LiquidityToken",name:"liquidityToken",type:"address"},{internalType:"contract OptionGreekCache",name:"greekCache",type:"address"},{internalType:"contract OptionMarket",name:"optionMarket",type:"address"},{internalType:"contract OptionMarketPricer",name:"optionMarketPricer",type:"address"},{internalType:"contract OptionToken",name:"optionToken",type:"address"},{internalType:"contract ShortCollateral",name:"shortCollateral",type:"address"},{internalType:"contract PoolHedger",name:"poolHedger",type:"address"},{internalType:"contract IERC20Decimals",name:"quoteAsset",type:"address"},{internalType:"contract IERC20Decimals",name:"baseAsset",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_owner",type:"address"}],name:"nominateNewOwner",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"nominatedOwner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"optionMarkets",outputs:[{internalType:"contract OptionMarket",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract OptionMarket",name:"market",type:"address"}],name:"removeMarket",outputs:[],stateMutability:"nonpayable",type:"function"}],Ep=[{inputs:[{internalType:"address",name:"thrower",type:"address"}],name:"AllMarketsPaused",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"contract IERC20Decimals",name:"asset",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"receiver",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"AssetTransferFailed",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"amountQuoteRequested",type:"uint256"},{internalType:"uint256",name:"baseToSpend",type:"uint256"},{internalType:"uint256",name:"baseLimit",type:"uint256"},{internalType:"uint256",name:"spotPrice",type:"uint256"},{internalType:"bytes32",name:"baseKey",type:"bytes32"},{internalType:"bytes32",name:"quoteKey",type:"bytes32"}],name:"BaseQuoteExchangeExceedsLimit",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"amountOut",type:"uint256"},{internalType:"uint256",name:"minAcceptedOut",type:"uint256"},{internalType:"contract IERC20Decimals",name:"tokenIn",type:"address"},{internalType:"contract IERC20Decimals",name:"tokenOut",type:"address"},{internalType:"address",name:"receiver",type:"address"}],name:"InsufficientSwap",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"inputAddress",type:"address"}],name:"InvalidAddress",type:"error"},{inputs:[],name:"InvalidRiskFreeRate",type:"error"},{inputs:[],name:"InvalidSNXPerpV2Price",type:"error"},{inputs:[],name:"InvalidStaticEstimationDiscount",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"marketAddress",type:"address"}],name:"MarketIsPaused",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"}],name:"NotImplemented",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"nominatedOwner",type:"address"}],name:"OnlyNominatedOwner",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"owner",type:"address"}],name:"OnlyOwner",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"amountBaseRequested",type:"uint256"},{internalType:"uint256",name:"quoteToSpend",type:"uint256"},{internalType:"uint256",name:"quoteLimit",type:"uint256"},{internalType:"uint256",name:"spotPrice",type:"uint256"},{internalType:"bytes32",name:"quoteKey",type:"bytes32"},{internalType:"bytes32",name:"baseKey",type:"bytes32"}],name:"QuoteBaseExchangeExceedsLimit",type:"error"},{inputs:[{internalType:"address",name:"optionMarket",type:"address"},{internalType:"uint248",name:"reason",type:"uint248"}],name:"SNXPerpV2MarketSuspended",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"contract IERC20Decimals",name:"asset",type:"address"},{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"TransferFailed",type:"error"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"addressResolver",type:"address"}],name:"AddressResolverUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"marketAddress",type:"address"},{indexed:!0,internalType:"address",name:"exchanger",type:"address"},{indexed:!1,internalType:"uint256",name:"baseSwapped",type:"uint256"},{indexed:!1,internalType:"uint256",name:"quoteReceived",type:"uint256"}],name:"BaseSwappedForQuote",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"optionMarket",type:"address"},{indexed:!1,internalType:"uint256",name:"quoteSpentD18",type:"uint256"},{indexed:!1,internalType:"uint256",name:"baseAssetinD18",type:"uint256"}],name:"ExchangeToExactBaseWithLimit",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"optionMarket",type:"address"},{indexed:!1,internalType:"uint256",name:"quoteSpentD18",type:"uint256"},{indexed:!1,internalType:"uint256",name:"baseAssetinD18",type:"uint256"}],name:"ExchangedFromExactBase",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bool",name:"isPaused",type:"bool"}],name:"GlobalPausedSet",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"optionMarket",type:"address"},{indexed:!1,internalType:"uint256",name:"staticEstimationDiscount",type:"uint256"},{indexed:!1,internalType:"address",name:"snxPerpV2Market",type:"address"},{indexed:!1,internalType:"address",name:"uniswapPool",type:"address"},{indexed:!1,internalType:"uint256",name:"feeTier",type:"uint256"}],name:"MarketAdapterConfigurationUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"contractAddress",type:"address"},{indexed:!1,internalType:"bool",name:"isPaused",type:"bool"}],name:"MarketPausedSet",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"oldOwner",type:"address"},{indexed:!1,internalType:"address",name:"newOwner",type:"address"}],name:"OwnerChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"newOwner",type:"address"}],name:"OwnerNominated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"marketAddress",type:"address"},{indexed:!0,internalType:"address",name:"exchanger",type:"address"},{indexed:!1,internalType:"uint256",name:"quoteSwapped",type:"uint256"},{indexed:!1,internalType:"uint256",name:"baseReceived",type:"uint256"}],name:"QuoteSwappedForBase",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"optionMarket",type:"address"},{indexed:!1,internalType:"int256",name:"riskFreeRate",type:"int256"}],name:"RiskFreeRateUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"asset",type:"address"},{indexed:!1,internalType:"address",name:"uniswapRouter",type:"address"}],name:"RouterApproved",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"synthetixSystemStatus",type:"address"}],name:"SynthetixSystemStatusUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"deviation",type:"uint256"}],name:"UniDeviationUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"uniswapRouter",type:"address"}],name:"UniswapRouterUpdated",type:"event"},{inputs:[],name:"acceptOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"addressResolver",outputs:[{internalType:"contract IAddressResolver",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract IERC20Decimals",name:"asset",type:"address"}],name:"approveRouter",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_optionMarket",type:"address"},{internalType:"uint256",name:"_amountBaseD18",type:"uint256"}],name:"estimateExchangeToExactBase",outputs:[{internalType:"uint256",name:"quoteNeededD18",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_optionMarket",type:"address"},{internalType:"uint256",name:"_amountQuoteD18",type:"uint256"}],name:"estimateExchangeToExactQuote",outputs:[{internalType:"uint256",name:"baseNeededD18",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_optionMarket",type:"address"},{internalType:"uint256",name:"_amountBaseD18",type:"uint256"}],name:"exchangeFromExactBase",outputs:[{internalType:"uint256",name:"quoteReceivedD18",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"}],name:"exchangeFromExactQuote",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"}],name:"exchangeToExactBase",outputs:[{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_optionMarket",type:"address"},{internalType:"uint256",name:"_amountBaseD18",type:"uint256"},{internalType:"uint256",name:"_quoteLimitD18",type:"uint256"}],name:"exchangeToExactBaseWithLimit",outputs:[{internalType:"uint256",name:"quoteSpentD18",type:"uint256"},{internalType:"uint256",name:"baseReceivedD18",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"}],name:"exchangeToExactQuote",outputs:[{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"}],name:"exchangeToExactQuoteWithLimit",outputs:[{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"optionMarket",type:"address"}],name:"getAdapterState",outputs:[{components:[{components:[{internalType:"uint256",name:"staticEstimationDiscount",type:"uint256"},{internalType:"address",name:"snxPerpV2MarketAddress",type:"address"},{components:[{internalType:"address",name:"pool",type:"address"},{internalType:"uint24",name:"feeTier",type:"uint24"}],internalType:"struct SNXPerpV2Adapter.UniswapPoolInfo",name:"uniswapInfo",type:"tuple"}],internalType:"struct SNXPerpV2Adapter.MarketAdapterConfiguration",name:"config",type:"tuple"},{internalType:"uint256",name:"snxPrice",type:"uint256"},{internalType:"int256",name:"riskFreeRate",type:"int256"}],internalType:"struct SNXPerpV2Adapter.MarketAdapterState",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"optionMarket",type:"address"}],name:"getPrices",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_optionMarket",type:"address"},{internalType:"uint256",name:"",type:"uint256"}],name:"getSettlementPriceForMarket",outputs:[{internalType:"uint256",name:"spotPrice",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"optionMarket",type:"address"},{internalType:"enum BaseExchangeAdapter.PriceType",name:"pricing",type:"uint8"}],name:"getSpotPriceForMarket",outputs:[{internalType:"uint256",name:"spotPrice",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"isGlobalPaused",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"isMarketPaused",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"marketConfigurations",outputs:[{internalType:"uint256",name:"staticEstimationDiscount",type:"uint256"},{internalType:"address",name:"snxPerpV2MarketAddress",type:"address"},{components:[{internalType:"address",name:"pool",type:"address"},{internalType:"uint24",name:"feeTier",type:"uint24"}],internalType:"struct SNXPerpV2Adapter.UniswapPoolInfo",name:"uniswapInfo",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_owner",type:"address"}],name:"nominateNewOwner",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"nominatedOwner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"rateAndCarry",outputs:[{internalType:"int256",name:"",type:"int256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"requireNotGlobalPaused",outputs:[],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"optionMarket",type:"address"}],name:"requireNotMarketPaused",outputs:[],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract IAddressResolver",name:"_addressResolver",type:"address"}],name:"setAddressResolver",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bool",name:"isPaused",type:"bool"}],name:"setGlobalPaused",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_optionMarket",type:"address"},{internalType:"uint256",name:"_staticEstimationDiscount",type:"uint256"},{internalType:"address",name:"_snxPerpV2MarketAddress",type:"address"},{internalType:"address",name:"_uniswapPool",type:"address"},{internalType:"uint24",name:"_uniswapFeeTier",type:"uint24"}],name:"setMarketAdapterConfiguration",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"optionMarket",type:"address"},{internalType:"bool",name:"isPaused",type:"bool"}],name:"setMarketPaused",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_optionMarket",type:"address"},{internalType:"int256",name:"_rate",type:"int256"}],name:"setRiskFreeRate",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"_deviation",type:"uint256"}],name:"setUniSwapDeviation",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract ISwapRouter",name:"_swapRouter",type:"address"}],name:"setUniswapRouter",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"swapRouter",outputs:[{internalType:"contract ISwapRouter",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"systemStatus",outputs:[{internalType:"contract ISystemStatus",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"uniDeviation",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"updateSynthetixAddresses",outputs:[],stateMutability:"nonpayable",type:"function"}],_p=[{inputs:[],name:"drip",outputs:[],stateMutability:"nonpayable",type:"function"}],Rp="0x0527A05c3CEBc9Ef8171FeD29DE5900A7ea093a4",Np="0x7D135662818d3540bd6f23294bFDB6946c52C9AB",Gp="0x6c87e4364Fd44B0D425ADfD0328e56b89b201329",Qp="",Hp={OptionMarketViewer:Rp,ExchangeAdapter:Np,LyraRegistry:Gp,TestFaucet:Qp},Up="0xB582CC9483ee1F862364C92C22CFD57f0fb607bc",Wp="0xD7A69233b82F53b416c839ff1fB6C51bA59180d2",jp="0x1034C04bC515F18e5D1dFe5a94de6e65e7277fF7",zp="0xF2eDd52E32f8fE2eC76055C1A61958f1EFecb592",$p={OptionMarketViewer:Up,ExchangeAdapter:Wp,LyraRegistry:jp,TestFaucet:zp},Kp="0x136d92f1d103BA5267c85555b28787AE53Ee3CEF",Xp="0x2b1dF9A55Ceb1bba7D830C1a6731ff37383c4A53",Yp="0x0FEd189bCD4A680e05B153dC7c3dC87004e162fb",Zp="",Jp={OptionMarketViewer:Kp,ExchangeAdapter:Xp,LyraRegistry:Yp,TestFaucet:Zp},eo="0x4D0EB92F4CFcB6b4Cc9A88baF1f6Ad9E9C92380A",to="0x46CeCCaf391aFF578963042790C2ee1F88661DDf",no="0xB13E26A28979b32F157F030dC795DDAbF59fEac4",ao="",io={OptionMarketViewer:eo,ExchangeAdapter:to,LyraRegistry:no,TestFaucet:ao},ro=(n,e,t)=>{switch(n){case D.Arbitrum:switch(e){case A.Avalon:throw new Error("Version.Avalon not supported on Arbitrum");case A.Newport:return Hp[t]}case D.ArbitrumGoerli:switch(e){case A.Avalon:throw new Error("Version.Avalon not supported on Arbitrum Goerli");case A.Newport:return $p[t]}case D.Optimism:switch(e){case A.Avalon:return xp[t];case A.Newport:return Jp[t]}case D.OptimismGoerli:switch(e){case A.Avalon:return Vp[t];case A.Newport:return io[t]}}},so=(n,e,t)=>{switch(e){case Q.OptionMarketViewer:switch(n){case A.Avalon:return gp;case A.Newport:return Bp}case Q.LyraRegistry:switch(n){case A.Avalon:return kp;case A.Newport:return Lp}case Q.ExchangeAdapter:switch(n){case A.Avalon:return wp;case A.Newport:switch(t){case J.Arbitrum:return Dp;case J.Optimism:return Ep}}case Q.TestFaucet:switch(n){case A.Avalon:return Pp;case A.Newport:return _p}}};function te(n,e,t){const{provider:a}=n,i=ro(n.chain,e,t),r=so(e,t,n.network);return new nt(i,r,a)}const po=[{constant:!0,inputs:[],name:"name",outputs:[{name:"",type:"string"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{name:"_spender",type:"address"},{name:"_value",type:"uint256"}],name:"approve",outputs:[{name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[],name:"totalSupply",outputs:[{name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{name:"_from",type:"address"},{name:"_to",type:"address"},{name:"_value",type:"uint256"}],name:"transferFrom",outputs:[{name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[],name:"decimals",outputs:[{name:"",type:"uint8"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[{name:"_owner",type:"address"}],name:"balanceOf",outputs:[{name:"balance",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[],name:"symbol",outputs:[{name:"",type:"string"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{name:"_to",type:"address"},{name:"_value",type:"uint256"}],name:"transfer",outputs:[{name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[{name:"_owner",type:"address"},{name:"_spender",type:"address"}],name:"allowance",outputs:[{name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{payable:!0,stateMutability:"payable",type:"fallback"},{anonymous:!1,inputs:[{indexed:!0,name:"owner",type:"address"},{indexed:!0,name:"spender",type:"address"},{indexed:!1,name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!0,name:"from",type:"address"},{indexed:!0,name:"to",type:"address"},{indexed:!1,name:"value",type:"uint256"}],name:"Transfer",type:"event"}];function Vt(n,e){return new nt(e,po,n)}const oo=[{inputs:[],stateMutability:"nonpayable",type:"constructor"},{inputs:[{internalType:"address",name:"thrower",type:"address"}],name:"AlreadyInitialised",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"BaseTransferFailed",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"pendingBase",type:"uint256"},{internalType:"uint256",name:"estimatedExchangeCost",type:"uint256"},{internalType:"uint256",name:"freeLiquidity",type:"uint256"}],name:"InsufficientFreeLiquidityForBaseExchange",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"beneficiary",type:"address"}],name:"InvalidBeneficiaryAddress",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{components:[{internalType:"uint256",name:"minDepositWithdraw",type:"uint256"},{internalType:"uint256",name:"depositDelay",type:"uint256"},{internalType:"uint256",name:"withdrawalDelay",type:"uint256"},{internalType:"uint256",name:"withdrawalFee",type:"uint256"},{internalType:"uint256",name:"liquidityCBThreshold",type:"uint256"},{internalType:"uint256",name:"liquidityCBTimeout",type:"uint256"},{internalType:"uint256",name:"ivVarianceCBThreshold",type:"uint256"},{internalType:"uint256",name:"skewVarianceCBThreshold",type:"uint256"},{internalType:"uint256",name:"ivVarianceCBTimeout",type:"uint256"},{internalType:"uint256",name:"skewVarianceCBTimeout",type:"uint256"},{internalType:"address",name:"guardianMultisig",type:"address"},{internalType:"uint256",name:"guardianDelay",type:"uint256"},{internalType:"uint256",name:"boardSettlementCBTimeout",type:"uint256"},{internalType:"uint256",name:"maxFeePaid",type:"uint256"}],internalType:"struct LiquidityPool.LiquidityPoolParameters",name:"lpParams",type:"tuple"}],name:"InvalidLiquidityPoolParameters",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"quoteToLock",type:"uint256"},{internalType:"uint256",name:"freeLiquidity",type:"uint256"},{components:[{internalType:"uint256",name:"quote",type:"uint256"},{internalType:"uint256",name:"base",type:"uint256"}],internalType:"struct LiquidityPool.Collateral",name:"lockedCollateral",type:"tuple"}],name:"LockingMoreQuoteThanIsFree",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"amountQuote",type:"uint256"},{internalType:"uint256",name:"minDeposit",type:"uint256"}],name:"MinimumDepositNotMet",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"amountLiquidityToken",type:"uint256"},{internalType:"uint256",name:"minWithdraw",type:"uint256"}],name:"MinimumWithdrawNotMet",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"amountQuote",type:"uint256"},{components:[{internalType:"uint256",name:"freeLiquidity",type:"uint256"},{internalType:"uint256",name:"burnableLiquidity",type:"uint256"},{internalType:"uint256",name:"usedCollatLiquidity",type:"uint256"},{internalType:"uint256",name:"pendingDeltaLiquidity",type:"uint256"},{internalType:"uint256",name:"usedDeltaLiquidity",type:"uint256"},{internalType:"uint256",name:"NAV",type:"uint256"}],internalType:"struct LiquidityPool.Liquidity",name:"liquidity",type:"tuple"}],name:"NotEnoughFreeToReclaimInsolvency",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"nominatedOwner",type:"address"}],name:"OnlyNominatedOwner",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"optionMarket",type:"address"}],name:"OnlyOptionMarket",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"owner",type:"address"}],name:"OnlyOwner",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"poolHedger",type:"address"}],name:"OnlyPoolHedger",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"poolHedger",type:"address"}],name:"OnlyShortCollateral",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"int256",name:"totalAssetValue",type:"int256"},{internalType:"int256",name:"optionValueDebt",type:"int256"}],name:"OptionValueDebtExceedsTotalAssets",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"QuoteTransferFailed",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"premium",type:"uint256"},{internalType:"uint256",name:"reservedFee",type:"uint256"},{internalType:"uint256",name:"freeLiquidity",type:"uint256"}],name:"SendPremiumNotEnoughCollateral",type:"error"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"baseFreed",type:"uint256"},{indexed:!1,internalType:"uint256",name:"lockedCollateralBase",type:"uint256"}],name:"BaseFreed",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"baseLocked",type:"uint256"},{indexed:!1,internalType:"uint256",name:"lockedCollateralBase",type:"uint256"}],name:"BaseLocked",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"quoteSpent",type:"uint256"},{indexed:!1,internalType:"uint256",name:"baseReceived",type:"uint256"}],name:"BasePurchased",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"amountBase",type:"uint256"},{indexed:!1,internalType:"uint256",name:"quoteReceived",type:"uint256"}],name:"BaseSold",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"insolventSettlementAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amountQuoteReserved",type:"uint256"},{indexed:!1,internalType:"uint256",name:"totalOutstandingSettlements",type:"uint256"}],name:"BoardSettlement",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"newTimestamp",type:"uint256"}],name:"BoardSettlementCircuitBreakerUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"entryId",type:"uint256"},{indexed:!1,internalType:"bool",name:"boardNotStale",type:"bool"},{indexed:!1,internalType:"bool",name:"validEntry",type:"bool"},{indexed:!1,internalType:"bool",name:"guardianBypass",type:"bool"},{indexed:!1,internalType:"bool",name:"delaysExpired",type:"bool"}],name:"CheckingCanProcess",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"newTimestamp",type:"uint256"},{indexed:!1,internalType:"bool",name:"ivVarianceThresholdCrossed",type:"bool"},{indexed:!1,internalType:"bool",name:"skewVarianceThresholdCrossed",type:"bool"},{indexed:!1,internalType:"bool",name:"liquidityThresholdCrossed",type:"bool"}],name:"CircuitBreakerUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"caller",type:"address"},{indexed:!0,internalType:"address",name:"beneficiary",type:"address"},{indexed:!0,internalType:"uint256",name:"depositQueueId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amountDeposited",type:"uint256"},{indexed:!1,internalType:"uint256",name:"tokenPrice",type:"uint256"},{indexed:!1,internalType:"uint256",name:"tokensReceived",type:"uint256"},{indexed:!1,internalType:"uint256",name:"timestamp",type:"uint256"}],name:"DepositProcessed",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"depositor",type:"address"},{indexed:!0,internalType:"address",name:"beneficiary",type:"address"},{indexed:!0,internalType:"uint256",name:"depositQueueId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amountDeposited",type:"uint256"},{indexed:!1,internalType:"uint256",name:"totalQueuedDeposits",type:"uint256"},{indexed:!1,internalType:"uint256",name:"timestamp",type:"uint256"}],name:"DepositQueued",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"amountQuoteAdded",type:"uint256"},{indexed:!1,internalType:"uint256",name:"totalInsolventSettlementAmount",type:"uint256"}],name:"InsolventSettlementAmountUpdated",type:"event"},{anonymous:!1,inputs:[{components:[{internalType:"uint256",name:"minDepositWithdraw",type:"uint256"},{internalType:"uint256",name:"depositDelay",type:"uint256"},{internalType:"uint256",name:"withdrawalDelay",type:"uint256"},{internalType:"uint256",name:"withdrawalFee",type:"uint256"},{internalType:"uint256",name:"liquidityCBThreshold",type:"uint256"},{internalType:"uint256",name:"liquidityCBTimeout",type:"uint256"},{internalType:"uint256",name:"ivVarianceCBThreshold",type:"uint256"},{internalType:"uint256",name:"skewVarianceCBThreshold",type:"uint256"},{internalType:"uint256",name:"ivVarianceCBTimeout",type:"uint256"},{internalType:"uint256",name:"skewVarianceCBTimeout",type:"uint256"},{internalType:"address",name:"guardianMultisig",type:"address"},{internalType:"uint256",name:"guardianDelay",type:"uint256"},{internalType:"uint256",name:"boardSettlementCBTimeout",type:"uint256"},{internalType:"uint256",name:"maxFeePaid",type:"uint256"}],indexed:!1,internalType:"struct LiquidityPool.LiquidityPoolParameters",name:"lpParams",type:"tuple"}],name:"LiquidityPoolParametersUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"user",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"totalOutstandingSettlements",type:"uint256"}],name:"OutstandingSettlementSent",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"oldOwner",type:"address"},{indexed:!1,internalType:"address",name:"newOwner",type:"address"}],name:"OwnerChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"newOwner",type:"address"}],name:"OwnerNominated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"contract PoolHedger",name:"poolHedger",type:"address"}],name:"PoolHedgerUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"recipient",type:"address"},{indexed:!1,internalType:"uint256",name:"recipientPortion",type:"uint256"},{indexed:!1,internalType:"uint256",name:"optionMarketPortion",type:"uint256"}],name:"PremiumTransferred",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"quoteFreed",type:"uint256"},{indexed:!1,internalType:"uint256",name:"lockedCollateralQuote",type:"uint256"}],name:"QuoteFreed",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"quoteLocked",type:"uint256"},{indexed:!1,internalType:"uint256",name:"lockedCollateralQuote",type:"uint256"}],name:"QuoteLocked",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"amountQuote",type:"uint256"}],name:"QuoteTransferredToPoolHedger",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"caller",type:"address"},{indexed:!0,internalType:"address",name:"beneficiary",type:"address"},{indexed:!0,internalType:"uint256",name:"withdrawalQueueId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amountWithdrawn",type:"uint256"},{indexed:!1,internalType:"uint256",name:"tokenPrice",type:"uint256"},{indexed:!1,internalType:"uint256",name:"quoteReceived",type:"uint256"},{indexed:!1,internalType:"uint256",name:"totalQueuedWithdrawals",type:"uint256"},{indexed:!1,internalType:"uint256",name:"timestamp",type:"uint256"}],name:"WithdrawPartiallyProcessed",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"caller",type:"address"},{indexed:!0,internalType:"address",name:"beneficiary",type:"address"},{indexed:!0,internalType:"uint256",name:"withdrawalQueueId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amountWithdrawn",type:"uint256"},{indexed:!1,internalType:"uint256",name:"tokenPrice",type:"uint256"},{indexed:!1,internalType:"uint256",name:"quoteReceived",type:"uint256"},{indexed:!1,internalType:"uint256",name:"totalQueuedWithdrawals",type:"uint256"},{indexed:!1,internalType:"uint256",name:"timestamp",type:"uint256"}],name:"WithdrawProcessed",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"withdrawer",type:"address"},{indexed:!0,internalType:"address",name:"beneficiary",type:"address"},{indexed:!0,internalType:"uint256",name:"withdrawalQueueId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amountWithdrawn",type:"uint256"},{indexed:!1,internalType:"uint256",name:"totalQueuedWithdrawals",type:"uint256"},{indexed:!1,internalType:"uint256",name:"timestamp",type:"uint256"}],name:"WithdrawQueued",type:"event"},{inputs:[],name:"CBTimestamp",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"acceptOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"insolventSettlements",type:"uint256"},{internalType:"uint256",name:"amountQuoteFreed",type:"uint256"},{internalType:"uint256",name:"amountQuoteReserved",type:"uint256"},{internalType:"uint256",name:"amountBaseFreed",type:"uint256"}],name:"boardSettlement",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"exchangeBase",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"amountQuoteFreed",type:"uint256"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"totalCost",type:"uint256"},{internalType:"uint256",name:"reservedFee",type:"uint256"}],name:"freeQuoteCollateralAndSendPremium",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"getCurrentLiquidity",outputs:[{components:[{internalType:"uint256",name:"freeLiquidity",type:"uint256"},{internalType:"uint256",name:"burnableLiquidity",type:"uint256"},{internalType:"uint256",name:"usedCollatLiquidity",type:"uint256"},{internalType:"uint256",name:"pendingDeltaLiquidity",type:"uint256"},{internalType:"uint256",name:"usedDeltaLiquidity",type:"uint256"},{internalType:"uint256",name:"NAV",type:"uint256"}],internalType:"struct LiquidityPool.Liquidity",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"spotPrice",type:"uint256"}],name:"getLiquidity",outputs:[{components:[{internalType:"uint256",name:"freeLiquidity",type:"uint256"},{internalType:"uint256",name:"burnableLiquidity",type:"uint256"},{internalType:"uint256",name:"usedCollatLiquidity",type:"uint256"},{internalType:"uint256",name:"pendingDeltaLiquidity",type:"uint256"},{internalType:"uint256",name:"usedDeltaLiquidity",type:"uint256"},{internalType:"uint256",name:"NAV",type:"uint256"}],internalType:"struct LiquidityPool.Liquidity",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[],name:"getLpParams",outputs:[{components:[{internalType:"uint256",name:"minDepositWithdraw",type:"uint256"},{internalType:"uint256",name:"depositDelay",type:"uint256"},{internalType:"uint256",name:"withdrawalDelay",type:"uint256"},{internalType:"uint256",name:"withdrawalFee",type:"uint256"},{internalType:"uint256",name:"liquidityCBThreshold",type:"uint256"},{internalType:"uint256",name:"liquidityCBTimeout",type:"uint256"},{internalType:"uint256",name:"ivVarianceCBThreshold",type:"uint256"},{internalType:"uint256",name:"skewVarianceCBThreshold",type:"uint256"},{internalType:"uint256",name:"ivVarianceCBTimeout",type:"uint256"},{internalType:"uint256",name:"skewVarianceCBTimeout",type:"uint256"},{internalType:"address",name:"guardianMultisig",type:"address"},{internalType:"uint256",name:"guardianDelay",type:"uint256"},{internalType:"uint256",name:"boardSettlementCBTimeout",type:"uint256"},{internalType:"uint256",name:"maxFeePaid",type:"uint256"}],internalType:"struct LiquidityPool.LiquidityPoolParameters",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[],name:"getTokenPrice",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getTokenPriceWithCheck",outputs:[{internalType:"uint256",name:"tokenPrice",type:"uint256"},{internalType:"bool",name:"isStale",type:"bool"},{internalType:"uint256",name:"circuitBreakerExpiry",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getTotalPoolValueQuote",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getTotalTokenSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract SynthetixAdapter",name:"_synthetixAdapter",type:"address"},{internalType:"contract OptionMarket",name:"_optionMarket",type:"address"},{internalType:"contract LiquidityToken",name:"_liquidityToken",type:"address"},{internalType:"contract OptionGreekCache",name:"_greekCache",type:"address"},{internalType:"contract PoolHedger",name:"_poolHedger",type:"address"},{internalType:"contract ShortCollateral",name:"_shortCollateral",type:"address"},{internalType:"contract ERC20",name:"_quoteAsset",type:"address"},{internalType:"contract ERC20",name:"_baseAsset",type:"address"}],name:"init",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"beneficiary",type:"address"},{internalType:"uint256",name:"amountQuote",type:"uint256"}],name:"initiateDeposit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"beneficiary",type:"address"},{internalType:"uint256",name:"amountLiquidityToken",type:"uint256"}],name:"initiateWithdraw",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"insolventSettlementAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"amountBase",type:"uint256"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"totalCost",type:"uint256"},{internalType:"uint256",name:"reservedFee",type:"uint256"}],name:"liquidateBaseAndSendPremium",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"liquidationInsolventAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"amount",type:"uint256"},{components:[{internalType:"uint256",name:"spotPrice",type:"uint256"},{internalType:"bytes32",name:"quoteKey",type:"bytes32"},{internalType:"bytes32",name:"baseKey",type:"bytes32"},{internalType:"uint256",name:"quoteBaseFeeRate",type:"uint256"},{internalType:"uint256",name:"baseQuoteFeeRate",type:"uint256"}],internalType:"struct SynthetixAdapter.ExchangeParams",name:"exchangeParams",type:"tuple"},{internalType:"uint256",name:"freeLiquidity",type:"uint256"}],name:"lockBase",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"freeLiquidity",type:"uint256"}],name:"lockQuote",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"lockedCollateral",outputs:[{internalType:"uint256",name:"quote",type:"uint256"},{internalType:"uint256",name:"base",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"lpParams",outputs:[{internalType:"uint256",name:"minDepositWithdraw",type:"uint256"},{internalType:"uint256",name:"depositDelay",type:"uint256"},{internalType:"uint256",name:"withdrawalDelay",type:"uint256"},{internalType:"uint256",name:"withdrawalFee",type:"uint256"},{internalType:"uint256",name:"liquidityCBThreshold",type:"uint256"},{internalType:"uint256",name:"liquidityCBTimeout",type:"uint256"},{internalType:"uint256",name:"ivVarianceCBThreshold",type:"uint256"},{internalType:"uint256",name:"skewVarianceCBThreshold",type:"uint256"},{internalType:"uint256",name:"ivVarianceCBTimeout",type:"uint256"},{internalType:"uint256",name:"skewVarianceCBTimeout",type:"uint256"},{internalType:"address",name:"guardianMultisig",type:"address"},{internalType:"uint256",name:"guardianDelay",type:"uint256"},{internalType:"uint256",name:"boardSettlementCBTimeout",type:"uint256"},{internalType:"uint256",name:"maxFeePaid",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"nextQueuedDepositId",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"nextQueuedWithdrawalId",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_owner",type:"address"}],name:"nominateNewOwner",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"nominatedOwner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"poolHedger",outputs:[{internalType:"contract PoolHedger",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"limit",type:"uint256"}],name:"processDepositQueue",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"limit",type:"uint256"}],name:"processWithdrawalQueue",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"queuedDepositHead",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"queuedDeposits",outputs:[{internalType:"uint256",name:"id",type:"uint256"},{internalType:"address",name:"beneficiary",type:"address"},{internalType:"uint256",name:"amountLiquidity",type:"uint256"},{internalType:"uint256",name:"mintedTokens",type:"uint256"},{internalType:"uint256",name:"depositInitiatedTime",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"queuedWithdrawalHead",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"queuedWithdrawals",outputs:[{internalType:"uint256",name:"id",type:"uint256"},{internalType:"address",name:"beneficiary",type:"address"},{internalType:"uint256",name:"amountTokens",type:"uint256"},{internalType:"uint256",name:"quoteSent",type:"uint256"},{internalType:"uint256",name:"withdrawInitiatedTime",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{components:[{internalType:"uint256",name:"spotPrice",type:"uint256"},{internalType:"bytes32",name:"quoteKey",type:"bytes32"},{internalType:"bytes32",name:"baseKey",type:"bytes32"},{internalType:"uint256",name:"quoteBaseFeeRate",type:"uint256"},{internalType:"uint256",name:"baseQuoteFeeRate",type:"uint256"}],internalType:"struct SynthetixAdapter.ExchangeParams",name:"exchangeParams",type:"tuple"},{internalType:"uint256",name:"amountBase",type:"uint256"}],name:"reclaimInsolventBase",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"spotPrice",type:"uint256"},{internalType:"uint256",name:"amountQuote",type:"uint256"}],name:"reclaimInsolventQuote",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"user",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"sendSettlementValue",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"premium",type:"uint256"},{internalType:"uint256",name:"freeLiquidity",type:"uint256"},{internalType:"uint256",name:"reservedFee",type:"uint256"}],name:"sendShortPremium",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"uint256",name:"minDepositWithdraw",type:"uint256"},{internalType:"uint256",name:"depositDelay",type:"uint256"},{internalType:"uint256",name:"withdrawalDelay",type:"uint256"},{internalType:"uint256",name:"withdrawalFee",type:"uint256"},{internalType:"uint256",name:"liquidityCBThreshold",type:"uint256"},{internalType:"uint256",name:"liquidityCBTimeout",type:"uint256"},{internalType:"uint256",name:"ivVarianceCBThreshold",type:"uint256"},{internalType:"uint256",name:"skewVarianceCBThreshold",type:"uint256"},{internalType:"uint256",name:"ivVarianceCBTimeout",type:"uint256"},{internalType:"uint256",name:"skewVarianceCBTimeout",type:"uint256"},{internalType:"address",name:"guardianMultisig",type:"address"},{internalType:"uint256",name:"guardianDelay",type:"uint256"},{internalType:"uint256",name:"boardSettlementCBTimeout",type:"uint256"},{internalType:"uint256",name:"maxFeePaid",type:"uint256"}],internalType:"struct LiquidityPool.LiquidityPoolParameters",name:"_lpParams",type:"tuple"}],name:"setLiquidityPoolParameters",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract PoolHedger",name:"newPoolHedger",type:"address"}],name:"setPoolHedger",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"totalOutstandingSettlements",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalQueuedDeposits",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalQueuedWithdrawals",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"spotPrice",type:"uint256"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferQuoteToHedge",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"updateCBs",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"updateDelegateApproval",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"insolvencyAmountInQuote",type:"uint256"}],name:"updateLiquidationInsolvency",outputs:[],stateMutability:"nonpayable",type:"function"}],uo=[{inputs:[{internalType:"string",name:"name_",type:"string"},{internalType:"string",name:"symbol_",type:"string"}],stateMutability:"nonpayable",type:"constructor"},{inputs:[{internalType:"address",name:"thrower",type:"address"}],name:"AlreadyInitialised",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"liquidityPool",type:"address"}],name:"OnlyLiquidityPool",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"nominatedOwner",type:"address"}],name:"OnlyNominatedOwner",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"owner",type:"address"}],name:"OnlyOwner",type:"error"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"contract ILiquidityTracker",name:"liquidityTracker",type:"address"}],name:"LiquidityTrackerSet",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"oldOwner",type:"address"},{indexed:!1,internalType:"address",name:"newOwner",type:"address"}],name:"OwnerChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"newOwner",type:"address"}],name:"OwnerNominated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"},{inputs:[],name:"acceptOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"tokenAmount",type:"uint256"}],name:"burn",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"subtractedValue",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_liquidityPool",type:"address"}],name:"init",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"liquidityPool",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"liquidityTracker",outputs:[{internalType:"contract ILiquidityTracker",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"tokenAmount",type:"uint256"}],name:"mint",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_owner",type:"address"}],name:"nominateNewOwner",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"nominatedOwner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract ILiquidityTracker",name:"_liquidityTracker",type:"address"}],name:"setLiquidityTracker",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"}],lo=[{inputs:[],stateMutability:"nonpayable",type:"constructor"},{inputs:[{internalType:"address",name:"thrower",type:"address"}],name:"AlreadyInitialised",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"boardId",type:"uint256"},{internalType:"uint256",name:"newStrikesLength",type:"uint256"},{internalType:"uint256",name:"maxStrikesPerBoard",type:"uint256"}],name:"BoardStrikeLimitExceeded",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"boardId",type:"uint256"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"currentTimestamp",type:"uint256"}],name:"CannotUpdateExpiredBoard",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"timestamp",type:"uint256"},{internalType:"uint256",name:"lastObservedTimestamp",type:"uint256"}],name:"InvalidBlockTimestamp",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"boardId",type:"uint256"}],name:"InvalidBoardId",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{components:[{internalType:"uint256",name:"ivGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"skewGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"shortVolShock",type:"uint256"},{internalType:"uint256",name:"shortPostCutoffVolShock",type:"uint256"},{internalType:"uint256",name:"longVolShock",type:"uint256"},{internalType:"uint256",name:"longPostCutoffVolShock",type:"uint256"},{internalType:"uint256",name:"liquidateVolShock",type:"uint256"},{internalType:"uint256",name:"liquidatePostCutoffVolShock",type:"uint256"},{internalType:"uint256",name:"shortSpotMin",type:"uint256"},{internalType:"uint256",name:"liquidateSpotMin",type:"uint256"}],internalType:"struct OptionGreekCache.ForceCloseParameters",name:"forceCloseParams",type:"tuple"}],name:"InvalidForceCloseParameters",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{components:[{internalType:"uint256",name:"maxStrikesPerBoard",type:"uint256"},{internalType:"uint256",name:"acceptableSpotPricePercentMove",type:"uint256"},{internalType:"uint256",name:"staleUpdateDuration",type:"uint256"},{internalType:"uint256",name:"varianceIvGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"varianceSkewGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"optionValueIvGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"optionValueSkewGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"gwavSkewFloor",type:"uint256"},{internalType:"uint256",name:"gwavSkewCap",type:"uint256"},{internalType:"int256",name:"rateAndCarry",type:"int256"}],internalType:"struct OptionGreekCache.GreekCacheParameters",name:"greekCacheParams",type:"tuple"}],name:"InvalidGreekCacheParameters",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{components:[{internalType:"uint256",name:"minStaticQuoteCollateral",type:"uint256"},{internalType:"uint256",name:"minStaticBaseCollateral",type:"uint256"},{internalType:"uint256",name:"shockVolA",type:"uint256"},{internalType:"uint256",name:"shockVolPointA",type:"uint256"},{internalType:"uint256",name:"shockVolB",type:"uint256"},{internalType:"uint256",name:"shockVolPointB",type:"uint256"},{internalType:"uint256",name:"callSpotPriceShock",type:"uint256"},{internalType:"uint256",name:"putSpotPriceShock",type:"uint256"}],internalType:"struct OptionGreekCache.MinCollateralParameters",name:"minCollatParams",type:"tuple"}],name:"InvalidMinCollatParams",type:"error"},{inputs:[],name:"LnNegativeUndefined",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"nominatedOwner",type:"address"}],name:"OnlyNominatedOwner",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"optionMarket",type:"address"}],name:"OnlyOptionMarket",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"optionMarketPricer",type:"address"}],name:"OnlyOptionMarketPricer",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"owner",type:"address"}],name:"OnlyOwner",type:"error"},{inputs:[],name:"Overflow",type:"error"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"boardId",type:"uint256"}],name:"BoardCacheRemoved",type:"event"},{anonymous:!1,inputs:[{components:[{internalType:"uint256",name:"id",type:"uint256"},{internalType:"uint256[]",name:"strikes",type:"uint256[]"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"iv",type:"uint256"},{components:[{internalType:"int256",name:"netDelta",type:"int256"},{internalType:"int256",name:"netStdVega",type:"int256"},{internalType:"int256",name:"netOptionValue",type:"int256"}],internalType:"struct OptionGreekCache.NetGreeks",name:"netGreeks",type:"tuple"},{internalType:"uint256",name:"updatedAt",type:"uint256"},{internalType:"uint256",name:"updatedAtPrice",type:"uint256"},{internalType:"uint256",name:"maxSkewVariance",type:"uint256"},{internalType:"uint256",name:"ivVariance",type:"uint256"}],indexed:!1,internalType:"struct OptionGreekCache.OptionBoardCache",name:"boardCache",type:"tuple"}],name:"BoardCacheUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"boardId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newIv",type:"uint256"},{indexed:!1,internalType:"uint256",name:"globalMaxIvVariance",type:"uint256"}],name:"BoardIvUpdated",type:"event"},{anonymous:!1,inputs:[{components:[{internalType:"uint256",name:"ivGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"skewGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"shortVolShock",type:"uint256"},{internalType:"uint256",name:"shortPostCutoffVolShock",type:"uint256"},{internalType:"uint256",name:"longVolShock",type:"uint256"},{internalType:"uint256",name:"longPostCutoffVolShock",type:"uint256"},{internalType:"uint256",name:"liquidateVolShock",type:"uint256"},{internalType:"uint256",name:"liquidatePostCutoffVolShock",type:"uint256"},{internalType:"uint256",name:"shortSpotMin",type:"uint256"},{internalType:"uint256",name:"liquidateSpotMin",type:"uint256"}],indexed:!1,internalType:"struct OptionGreekCache.ForceCloseParameters",name:"params",type:"tuple"}],name:"ForceCloseParametersSet",type:"event"},{anonymous:!1,inputs:[{components:[{internalType:"uint256",name:"minUpdatedAt",type:"uint256"},{internalType:"uint256",name:"minUpdatedAtPrice",type:"uint256"},{internalType:"uint256",name:"maxUpdatedAtPrice",type:"uint256"},{internalType:"uint256",name:"maxSkewVariance",type:"uint256"},{internalType:"uint256",name:"maxIvVariance",type:"uint256"},{components:[{internalType:"int256",name:"netDelta",type:"int256"},{internalType:"int256",name:"netStdVega",type:"int256"},{internalType:"int256",name:"netOptionValue",type:"int256"}],internalType:"struct OptionGreekCache.NetGreeks",name:"netGreeks",type:"tuple"}],indexed:!1,internalType:"struct OptionGreekCache.GlobalCache",name:"globalCache",type:"tuple"}],name:"GlobalCacheUpdated",type:"event"},{anonymous:!1,inputs:[{components:[{internalType:"uint256",name:"maxStrikesPerBoard",type:"uint256"},{internalType:"uint256",name:"acceptableSpotPricePercentMove",type:"uint256"},{internalType:"uint256",name:"staleUpdateDuration",type:"uint256"},{internalType:"uint256",name:"varianceIvGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"varianceSkewGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"optionValueIvGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"optionValueSkewGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"gwavSkewFloor",type:"uint256"},{internalType:"uint256",name:"gwavSkewCap",type:"uint256"},{internalType:"int256",name:"rateAndCarry",type:"int256"}],indexed:!1,internalType:"struct OptionGreekCache.GreekCacheParameters",name:"params",type:"tuple"}],name:"GreekCacheParametersSet",type:"event"},{anonymous:!1,inputs:[{components:[{internalType:"uint256",name:"minStaticQuoteCollateral",type:"uint256"},{internalType:"uint256",name:"minStaticBaseCollateral",type:"uint256"},{internalType:"uint256",name:"shockVolA",type:"uint256"},{internalType:"uint256",name:"shockVolPointA",type:"uint256"},{internalType:"uint256",name:"shockVolB",type:"uint256"},{internalType:"uint256",name:"shockVolPointB",type:"uint256"},{internalType:"uint256",name:"callSpotPriceShock",type:"uint256"},{internalType:"uint256",name:"putSpotPriceShock",type:"uint256"}],indexed:!1,internalType:"struct OptionGreekCache.MinCollateralParameters",name:"params",type:"tuple"}],name:"MinCollateralParametersSet",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"oldOwner",type:"address"},{indexed:!1,internalType:"address",name:"newOwner",type:"address"}],name:"OwnerChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"newOwner",type:"address"}],name:"OwnerNominated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"strikeId",type:"uint256"}],name:"StrikeCacheRemoved",type:"event"},{anonymous:!1,inputs:[{components:[{internalType:"uint256",name:"id",type:"uint256"},{internalType:"uint256",name:"boardId",type:"uint256"},{internalType:"uint256",name:"strikePrice",type:"uint256"},{internalType:"uint256",name:"skew",type:"uint256"},{components:[{internalType:"int256",name:"callDelta",type:"int256"},{internalType:"int256",name:"putDelta",type:"int256"},{internalType:"uint256",name:"stdVega",type:"uint256"},{internalType:"uint256",name:"callPrice",type:"uint256"},{internalType:"uint256",name:"putPrice",type:"uint256"}],internalType:"struct OptionGreekCache.StrikeGreeks",name:"greeks",type:"tuple"},{internalType:"int256",name:"callExposure",type:"int256"},{internalType:"int256",name:"putExposure",type:"int256"},{internalType:"uint256",name:"skewVariance",type:"uint256"}],indexed:!1,internalType:"struct OptionGreekCache.StrikeCache",name:"strikeCache",type:"tuple"}],name:"StrikeCacheUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"strikeId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newSkew",type:"uint256"},{indexed:!1,internalType:"uint256",name:"globalMaxSkewVariance",type:"uint256"}],name:"StrikeSkewUpdated",type:"event"},{inputs:[],name:"acceptOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"uint256",name:"id",type:"uint256"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"iv",type:"uint256"},{internalType:"bool",name:"frozen",type:"bool"},{internalType:"uint256[]",name:"strikeIds",type:"uint256[]"}],internalType:"struct OptionMarket.OptionBoard",name:"board",type:"tuple"},{components:[{internalType:"uint256",name:"id",type:"uint256"},{internalType:"uint256",name:"strikePrice",type:"uint256"},{internalType:"uint256",name:"skew",type:"uint256"},{internalType:"uint256",name:"longCall",type:"uint256"},{internalType:"uint256",name:"shortCallBase",type:"uint256"},{internalType:"uint256",name:"shortCallQuote",type:"uint256"},{internalType:"uint256",name:"longPut",type:"uint256"},{internalType:"uint256",name:"shortPut",type:"uint256"},{internalType:"uint256",name:"boardId",type:"uint256"}],internalType:"struct OptionMarket.Strike[]",name:"strikes",type:"tuple[]"}],name:"addBoard",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"boardId",type:"uint256"},{internalType:"uint256",name:"strikeId",type:"uint256"},{internalType:"uint256",name:"strikePrice",type:"uint256"},{internalType:"uint256",name:"skew",type:"uint256"}],name:"addStrikeToBoard",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"boardId",type:"uint256"}],name:"getBoardGreeksView",outputs:[{components:[{components:[{internalType:"int256",name:"netDelta",type:"int256"},{internalType:"int256",name:"netStdVega",type:"int256"},{internalType:"int256",name:"netOptionValue",type:"int256"}],internalType:"struct OptionGreekCache.NetGreeks",name:"boardGreeks",type:"tuple"},{internalType:"uint256",name:"ivGWAV",type:"uint256"},{components:[{internalType:"int256",name:"callDelta",type:"int256"},{internalType:"int256",name:"putDelta",type:"int256"},{internalType:"uint256",name:"stdVega",type:"uint256"},{internalType:"uint256",name:"callPrice",type:"uint256"},{internalType:"uint256",name:"putPrice",type:"uint256"}],internalType:"struct OptionGreekCache.StrikeGreeks[]",name:"strikeGreeks",type:"tuple[]"},{internalType:"uint256[]",name:"skewGWAVs",type:"uint256[]"}],internalType:"struct OptionGreekCache.BoardGreeksView",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[],name:"getForceCloseParams",outputs:[{components:[{internalType:"uint256",name:"ivGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"skewGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"shortVolShock",type:"uint256"},{internalType:"uint256",name:"shortPostCutoffVolShock",type:"uint256"},{internalType:"uint256",name:"longVolShock",type:"uint256"},{internalType:"uint256",name:"longPostCutoffVolShock",type:"uint256"},{internalType:"uint256",name:"liquidateVolShock",type:"uint256"},{internalType:"uint256",name:"liquidatePostCutoffVolShock",type:"uint256"},{internalType:"uint256",name:"shortSpotMin",type:"uint256"},{internalType:"uint256",name:"liquidateSpotMin",type:"uint256"}],internalType:"struct OptionGreekCache.ForceCloseParameters",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[],name:"getGlobalCache",outputs:[{components:[{internalType:"uint256",name:"minUpdatedAt",type:"uint256"},{internalType:"uint256",name:"minUpdatedAtPrice",type:"uint256"},{internalType:"uint256",name:"maxUpdatedAtPrice",type:"uint256"},{internalType:"uint256",name:"maxSkewVariance",type:"uint256"},{internalType:"uint256",name:"maxIvVariance",type:"uint256"},{components:[{internalType:"int256",name:"netDelta",type:"int256"},{internalType:"int256",name:"netStdVega",type:"int256"},{internalType:"int256",name:"netOptionValue",type:"int256"}],internalType:"struct OptionGreekCache.NetGreeks",name:"netGreeks",type:"tuple"}],internalType:"struct OptionGreekCache.GlobalCache",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[],name:"getGlobalNetDelta",outputs:[{internalType:"int256",name:"",type:"int256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getGlobalOptionValue",outputs:[{internalType:"int256",name:"",type:"int256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getGreekCacheParams",outputs:[{components:[{internalType:"uint256",name:"maxStrikesPerBoard",type:"uint256"},{internalType:"uint256",name:"acceptableSpotPricePercentMove",type:"uint256"},{internalType:"uint256",name:"staleUpdateDuration",type:"uint256"},{internalType:"uint256",name:"varianceIvGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"varianceSkewGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"optionValueIvGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"optionValueSkewGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"gwavSkewFloor",type:"uint256"},{internalType:"uint256",name:"gwavSkewCap",type:"uint256"},{internalType:"int256",name:"rateAndCarry",type:"int256"}],internalType:"struct OptionGreekCache.GreekCacheParameters",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"boardId",type:"uint256"},{internalType:"uint256",name:"secondsAgo",type:"uint256"}],name:"getIvGWAV",outputs:[{internalType:"uint256",name:"ivGWAV",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getMinCollatParams",outputs:[{components:[{internalType:"uint256",name:"minStaticQuoteCollateral",type:"uint256"},{internalType:"uint256",name:"minStaticBaseCollateral",type:"uint256"},{internalType:"uint256",name:"shockVolA",type:"uint256"},{internalType:"uint256",name:"shockVolPointA",type:"uint256"},{internalType:"uint256",name:"shockVolB",type:"uint256"},{internalType:"uint256",name:"shockVolPointB",type:"uint256"},{internalType:"uint256",name:"callSpotPriceShock",type:"uint256"},{internalType:"uint256",name:"putSpotPriceShock",type:"uint256"}],internalType:"struct OptionGreekCache.MinCollateralParameters",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"},{internalType:"uint256",name:"strikePrice",type:"uint256"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"spotPrice",type:"uint256"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"getMinCollateral",outputs:[{internalType:"uint256",name:"minCollateral",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"boardId",type:"uint256"}],name:"getOptionBoardCache",outputs:[{components:[{internalType:"uint256",name:"id",type:"uint256"},{internalType:"uint256[]",name:"strikes",type:"uint256[]"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"iv",type:"uint256"},{components:[{internalType:"int256",name:"netDelta",type:"int256"},{internalType:"int256",name:"netStdVega",type:"int256"},{internalType:"int256",name:"netOptionValue",type:"int256"}],internalType:"struct OptionGreekCache.NetGreeks",name:"netGreeks",type:"tuple"},{internalType:"uint256",name:"updatedAt",type:"uint256"},{internalType:"uint256",name:"updatedAtPrice",type:"uint256"},{internalType:"uint256",name:"maxSkewVariance",type:"uint256"},{internalType:"uint256",name:"ivVariance",type:"uint256"}],internalType:"struct OptionGreekCache.OptionBoardCache",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{components:[{internalType:"bool",name:"isBuy",type:"bool"},{internalType:"bool",name:"isForceClose",type:"bool"},{internalType:"enum OptionMarket.TradeDirection",name:"tradeDirection",type:"uint8"},{internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"strikePrice",type:"uint256"},{components:[{internalType:"uint256",name:"freeLiquidity",type:"uint256"},{internalType:"uint256",name:"burnableLiquidity",type:"uint256"},{internalType:"uint256",name:"usedCollatLiquidity",type:"uint256"},{internalType:"uint256",name:"pendingDeltaLiquidity",type:"uint256"},{internalType:"uint256",name:"usedDeltaLiquidity",type:"uint256"},{internalType:"uint256",name:"NAV",type:"uint256"}],internalType:"struct LiquidityPool.Liquidity",name:"liquidity",type:"tuple"},{components:[{internalType:"uint256",name:"spotPrice",type:"uint256"},{internalType:"bytes32",name:"quoteKey",type:"bytes32"},{internalType:"bytes32",name:"baseKey",type:"bytes32"},{internalType:"uint256",name:"quoteBaseFeeRate",type:"uint256"},{internalType:"uint256",name:"baseQuoteFeeRate",type:"uint256"}],internalType:"struct SynthetixAdapter.ExchangeParams",name:"exchangeParams",type:"tuple"}],internalType:"struct OptionMarket.TradeParameters",name:"trade",type:"tuple"},{components:[{internalType:"uint256",name:"id",type:"uint256"},{internalType:"uint256",name:"strikePrice",type:"uint256"},{internalType:"uint256",name:"skew",type:"uint256"},{internalType:"uint256",name:"longCall",type:"uint256"},{internalType:"uint256",name:"shortCallBase",type:"uint256"},{internalType:"uint256",name:"shortCallQuote",type:"uint256"},{internalType:"uint256",name:"longPut",type:"uint256"},{internalType:"uint256",name:"shortPut",type:"uint256"},{internalType:"uint256",name:"boardId",type:"uint256"}],internalType:"struct OptionMarket.Strike",name:"strike",type:"tuple"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"newVol",type:"uint256"},{internalType:"bool",name:"isPostCutoff",type:"bool"}],name:"getPriceForForceClose",outputs:[{internalType:"uint256",name:"optionPrice",type:"uint256"},{internalType:"uint256",name:"forceCloseVol",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"timeToMaturity",type:"uint256"}],name:"getShockVol",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"strikeId",type:"uint256"},{internalType:"uint256",name:"secondsAgo",type:"uint256"}],name:"getSkewGWAV",outputs:[{internalType:"uint256",name:"skewGWAV",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"strikeId",type:"uint256"}],name:"getStrikeCache",outputs:[{components:[{internalType:"uint256",name:"id",type:"uint256"},{internalType:"uint256",name:"boardId",type:"uint256"},{internalType:"uint256",name:"strikePrice",type:"uint256"},{internalType:"uint256",name:"skew",type:"uint256"},{components:[{internalType:"int256",name:"callDelta",type:"int256"},{internalType:"int256",name:"putDelta",type:"int256"},{internalType:"uint256",name:"stdVega",type:"uint256"},{internalType:"uint256",name:"callPrice",type:"uint256"},{internalType:"uint256",name:"putPrice",type:"uint256"}],internalType:"struct OptionGreekCache.StrikeGreeks",name:"greeks",type:"tuple"},{internalType:"int256",name:"callExposure",type:"int256"},{internalType:"int256",name:"putExposure",type:"int256"},{internalType:"uint256",name:"skewVariance",type:"uint256"}],internalType:"struct OptionGreekCache.StrikeCache",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract SynthetixAdapter",name:"_synthetixAdapter",type:"address"},{internalType:"contract OptionMarket",name:"_optionMarket",type:"address"},{internalType:"address",name:"_optionMarketPricer",type:"address"}],name:"init",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"boardId",type:"uint256"}],name:"isBoardCacheStale",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"spotPrice",type:"uint256"}],name:"isGlobalCacheStale",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_owner",type:"address"}],name:"nominateNewOwner",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"nominatedOwner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"boardId",type:"uint256"}],name:"removeBoard",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"boardId",type:"uint256"},{internalType:"uint256",name:"newBaseIv",type:"uint256"}],name:"setBoardIv",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"uint256",name:"ivGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"skewGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"shortVolShock",type:"uint256"},{internalType:"uint256",name:"shortPostCutoffVolShock",type:"uint256"},{internalType:"uint256",name:"longVolShock",type:"uint256"},{internalType:"uint256",name:"longPostCutoffVolShock",type:"uint256"},{internalType:"uint256",name:"liquidateVolShock",type:"uint256"},{internalType:"uint256",name:"liquidatePostCutoffVolShock",type:"uint256"},{internalType:"uint256",name:"shortSpotMin",type:"uint256"},{internalType:"uint256",name:"liquidateSpotMin",type:"uint256"}],internalType:"struct OptionGreekCache.ForceCloseParameters",name:"_forceCloseParams",type:"tuple"}],name:"setForceCloseParameters",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"uint256",name:"maxStrikesPerBoard",type:"uint256"},{internalType:"uint256",name:"acceptableSpotPricePercentMove",type:"uint256"},{internalType:"uint256",name:"staleUpdateDuration",type:"uint256"},{internalType:"uint256",name:"varianceIvGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"varianceSkewGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"optionValueIvGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"optionValueSkewGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"gwavSkewFloor",type:"uint256"},{internalType:"uint256",name:"gwavSkewCap",type:"uint256"},{internalType:"int256",name:"rateAndCarry",type:"int256"}],internalType:"struct OptionGreekCache.GreekCacheParameters",name:"_greekCacheParams",type:"tuple"}],name:"setGreekCacheParameters",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"uint256",name:"minStaticQuoteCollateral",type:"uint256"},{internalType:"uint256",name:"minStaticBaseCollateral",type:"uint256"},{internalType:"uint256",name:"shockVolA",type:"uint256"},{internalType:"uint256",name:"shockVolPointA",type:"uint256"},{internalType:"uint256",name:"shockVolB",type:"uint256"},{internalType:"uint256",name:"shockVolPointB",type:"uint256"},{internalType:"uint256",name:"callSpotPriceShock",type:"uint256"},{internalType:"uint256",name:"putSpotPriceShock",type:"uint256"}],internalType:"struct OptionGreekCache.MinCollateralParameters",name:"_minCollatParams",type:"tuple"}],name:"setMinCollateralParameters",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"strikeId",type:"uint256"},{internalType:"uint256",name:"newSkew",type:"uint256"}],name:"setStrikeSkew",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"boardId",type:"uint256"}],name:"updateBoardCachedGreeks",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"uint256",name:"id",type:"uint256"},{internalType:"uint256",name:"strikePrice",type:"uint256"},{internalType:"uint256",name:"skew",type:"uint256"},{internalType:"uint256",name:"longCall",type:"uint256"},{internalType:"uint256",name:"shortCallBase",type:"uint256"},{internalType:"uint256",name:"shortCallQuote",type:"uint256"},{internalType:"uint256",name:"longPut",type:"uint256"},{internalType:"uint256",name:"shortPut",type:"uint256"},{internalType:"uint256",name:"boardId",type:"uint256"}],internalType:"struct OptionMarket.Strike",name:"strike",type:"tuple"},{components:[{internalType:"bool",name:"isBuy",type:"bool"},{internalType:"bool",name:"isForceClose",type:"bool"},{internalType:"enum OptionMarket.TradeDirection",name:"tradeDirection",type:"uint8"},{internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"strikePrice",type:"uint256"},{components:[{internalType:"uint256",name:"freeLiquidity",type:"uint256"},{internalType:"uint256",name:"burnableLiquidity",type:"uint256"},{internalType:"uint256",name:"usedCollatLiquidity",type:"uint256"},{internalType:"uint256",name:"pendingDeltaLiquidity",type:"uint256"},{internalType:"uint256",name:"usedDeltaLiquidity",type:"uint256"},{internalType:"uint256",name:"NAV",type:"uint256"}],internalType:"struct LiquidityPool.Liquidity",name:"liquidity",type:"tuple"},{components:[{internalType:"uint256",name:"spotPrice",type:"uint256"},{internalType:"bytes32",name:"quoteKey",type:"bytes32"},{internalType:"bytes32",name:"baseKey",type:"bytes32"},{internalType:"uint256",name:"quoteBaseFeeRate",type:"uint256"},{internalType:"uint256",name:"baseQuoteFeeRate",type:"uint256"}],internalType:"struct SynthetixAdapter.ExchangeParams",name:"exchangeParams",type:"tuple"}],internalType:"struct OptionMarket.TradeParameters",name:"trade",type:"tuple"},{internalType:"uint256",name:"iv",type:"uint256"},{internalType:"uint256",name:"skew",type:"uint256"},{internalType:"bool",name:"isPostCutoff",type:"bool"}],name:"updateStrikeExposureAndGetPrice",outputs:[{components:[{internalType:"uint256",name:"optionPrice",type:"uint256"},{internalType:"int256",name:"preTradeAmmNetStdVega",type:"int256"},{internalType:"int256",name:"postTradeAmmNetStdVega",type:"int256"},{internalType:"int256",name:"callDelta",type:"int256"},{internalType:"uint256",name:"volTraded",type:"uint256"},{internalType:"uint256",name:"ivVariance",type:"uint256"},{internalType:"uint256",name:"vega",type:"uint256"}],internalType:"struct OptionGreekCache.TradePricing",name:"pricing",type:"tuple"}],stateMutability:"nonpayable",type:"function"}],yo=[{inputs:[],stateMutability:"nonpayable",type:"constructor"},{inputs:[{internalType:"address",name:"thrower",type:"address"}],name:"AlreadyInitialised",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"BaseTransferFailed",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"boardId",type:"uint256"}],name:"BoardAlreadySettled",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"boardId",type:"uint256"},{internalType:"uint256",name:"boardExpiry",type:"uint256"},{internalType:"uint256",name:"currentTime",type:"uint256"}],name:"BoardExpired",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"boardId",type:"uint256"}],name:"BoardIsFrozen",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"boardId",type:"uint256"}],name:"BoardNotExpired",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"boardId",type:"uint256"}],name:"BoardNotFrozen",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"enum OptionMarket.NonZeroValues",name:"valueType",type:"uint8"}],name:"ExpectedNonZeroValue",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"boardId",type:"uint256"}],name:"InvalidBoardId",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"currentTime",type:"uint256"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"maxBoardExpiry",type:"uint256"}],name:"InvalidExpiryTimestamp",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{components:[{internalType:"uint256",name:"maxBoardExpiry",type:"uint256"},{internalType:"address",name:"securityModule",type:"address"},{internalType:"uint256",name:"feePortionReserved",type:"uint256"},{internalType:"uint256",name:"staticBaseSettlementFee",type:"uint256"}],internalType:"struct OptionMarket.OptionMarketParameters",name:"optionMarketParams",type:"tuple"}],name:"InvalidOptionMarketParams",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"strikeId",type:"uint256"}],name:"InvalidStrikeId",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"nominatedOwner",type:"address"}],name:"OnlyNominatedOwner",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"owner",type:"address"}],name:"OnlyOwner",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"securityModule",type:"address"}],name:"OnlySecurityModule",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"QuoteTransferFailed",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"strikesLength",type:"uint256"},{internalType:"uint256",name:"skewsLength",type:"uint256"}],name:"StrikeSkewLengthMismatch",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"totalCost",type:"uint256"},{internalType:"uint256",name:"minCost",type:"uint256"},{internalType:"uint256",name:"maxCost",type:"uint256"}],name:"TotalCostOutsideOfSpecifiedBounds",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"iterations",type:"uint256"},{internalType:"uint256",name:"expectedAmount",type:"uint256"},{internalType:"uint256",name:"tradeAmount",type:"uint256"},{internalType:"uint256",name:"totalAmount",type:"uint256"}],name:"TradeIterationsHasRemainder",type:"error"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"boardId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"baseIv",type:"uint256"}],name:"BoardBaseIvSet",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"boardId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"expiry",type:"uint256"},{indexed:!1,internalType:"uint256",name:"baseIv",type:"uint256"},{indexed:!1,internalType:"bool",name:"frozen",type:"bool"}],name:"BoardCreated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"boardId",type:"uint256"},{indexed:!1,internalType:"bool",name:"frozen",type:"bool"}],name:"BoardFrozen",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"boardId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"spotPriceAtExpiry",type:"uint256"},{indexed:!1,internalType:"uint256",name:"totalUserLongProfitQuote",type:"uint256"},{indexed:!1,internalType:"uint256",name:"totalBoardLongCallCollateral",type:"uint256"},{indexed:!1,internalType:"uint256",name:"totalBoardLongPutCollateral",type:"uint256"},{indexed:!1,internalType:"uint256",name:"totalAMMShortCallProfitBase",type:"uint256"},{indexed:!1,internalType:"uint256",name:"totalAMMShortCallProfitQuote",type:"uint256"},{indexed:!1,internalType:"uint256",name:"totalAMMShortPutProfitQuote",type:"uint256"}],name:"BoardSettled",type:"event"},{anonymous:!1,inputs:[{components:[{internalType:"uint256",name:"maxBoardExpiry",type:"uint256"},{internalType:"address",name:"securityModule",type:"address"},{internalType:"uint256",name:"feePortionReserved",type:"uint256"},{internalType:"uint256",name:"staticBaseSettlementFee",type:"uint256"}],indexed:!1,internalType:"struct OptionMarket.OptionMarketParameters",name:"optionMarketParams",type:"tuple"}],name:"OptionMarketParamsSet",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"oldOwner",type:"address"},{indexed:!1,internalType:"address",name:"newOwner",type:"address"}],name:"OwnerChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"newOwner",type:"address"}],name:"OwnerNominated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"securityModule",type:"address"},{indexed:!1,internalType:"uint256",name:"quoteAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"baseAmount",type:"uint256"}],name:"SMClaimed",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"boardId",type:"uint256"},{indexed:!0,internalType:"uint256",name:"strikeId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"strikePrice",type:"uint256"},{indexed:!1,internalType:"uint256",name:"skew",type:"uint256"}],name:"StrikeAdded",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"strikeId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"skew",type:"uint256"}],name:"StrikeSkewSet",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"trader",type:"address"},{indexed:!0,internalType:"uint256",name:"strikeId",type:"uint256"},{indexed:!0,internalType:"uint256",name:"positionId",type:"uint256"},{components:[{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"strikePrice",type:"uint256"},{internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"},{internalType:"enum OptionMarket.TradeDirection",name:"tradeDirection",type:"uint8"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"setCollateralTo",type:"uint256"},{internalType:"bool",name:"isForceClose",type:"bool"},{internalType:"uint256",name:"spotPrice",type:"uint256"},{internalType:"uint256",name:"reservedFee",type:"uint256"},{internalType:"uint256",name:"totalCost",type:"uint256"}],indexed:!1,internalType:"struct OptionMarket.TradeEventData",name:"trade",type:"tuple"},{components:[{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"premium",type:"uint256"},{internalType:"uint256",name:"optionPriceFee",type:"uint256"},{internalType:"uint256",name:"spotPriceFee",type:"uint256"},{components:[{internalType:"int256",name:"preTradeAmmNetStdVega",type:"int256"},{internalType:"int256",name:"postTradeAmmNetStdVega",type:"int256"},{internalType:"uint256",name:"vegaUtil",type:"uint256"},{internalType:"uint256",name:"volTraded",type:"uint256"},{internalType:"uint256",name:"NAV",type:"uint256"},{internalType:"uint256",name:"vegaUtilFee",type:"uint256"}],internalType:"struct OptionMarketPricer.VegaUtilFeeComponents",name:"vegaUtilFee",type:"tuple"},{components:[{internalType:"uint256",name:"varianceFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"vega",type:"uint256"},{internalType:"uint256",name:"vegaCoefficient",type:"uint256"},{internalType:"uint256",name:"skew",type:"uint256"},{internalType:"uint256",name:"skewCoefficient",type:"uint256"},{internalType:"uint256",name:"ivVariance",type:"uint256"},{internalType:"uint256",name:"ivVarianceCoefficient",type:"uint256"},{internalType:"uint256",name:"varianceFee",type:"uint256"}],internalType:"struct OptionMarketPricer.VarianceFeeComponents",name:"varianceFee",type:"tuple"},{internalType:"uint256",name:"totalFee",type:"uint256"},{internalType:"uint256",name:"totalCost",type:"uint256"},{internalType:"uint256",name:"volTraded",type:"uint256"},{internalType:"uint256",name:"newBaseIv",type:"uint256"},{internalType:"uint256",name:"newSkew",type:"uint256"}],indexed:!1,internalType:"struct OptionMarketPricer.TradeResult[]",name:"tradeResults",type:"tuple[]"},{components:[{internalType:"address",name:"rewardBeneficiary",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"uint256",name:"returnCollateral",type:"uint256"},{internalType:"uint256",name:"lpPremiums",type:"uint256"},{internalType:"uint256",name:"lpFee",type:"uint256"},{internalType:"uint256",name:"liquidatorFee",type:"uint256"},{internalType:"uint256",name:"smFee",type:"uint256"},{internalType:"uint256",name:"insolventAmount",type:"uint256"}],indexed:!1,internalType:"struct OptionMarket.LiquidationEventData",name:"liquidation",type:"tuple"},{indexed:!1,internalType:"uint256",name:"timestamp",type:"uint256"}],name:"Trade",type:"event"},{inputs:[],name:"acceptOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"uint256",name:"amountCollateral",type:"uint256"}],name:"addCollateral",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"boardId",type:"uint256"},{internalType:"uint256",name:"strikePrice",type:"uint256"},{internalType:"uint256",name:"skew",type:"uint256"}],name:"addStrikeToBoard",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"boardToPriceAtExpiry",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{components:[{internalType:"uint256",name:"strikeId",type:"uint256"},{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"uint256",name:"iterations",type:"uint256"},{internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"setCollateralTo",type:"uint256"},{internalType:"uint256",name:"minTotalCost",type:"uint256"},{internalType:"uint256",name:"maxTotalCost",type:"uint256"}],internalType:"struct OptionMarket.TradeInputParameters",name:"params",type:"tuple"}],name:"closePosition",outputs:[{components:[{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"uint256",name:"totalCost",type:"uint256"},{internalType:"uint256",name:"totalFee",type:"uint256"}],internalType:"struct OptionMarket.Result",name:"result",type:"tuple"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"baseIV",type:"uint256"},{internalType:"uint256[]",name:"strikePrices",type:"uint256[]"},{internalType:"uint256[]",name:"skews",type:"uint256[]"},{internalType:"bool",name:"frozen",type:"bool"}],name:"createOptionBoard",outputs:[{internalType:"uint256",name:"boardId",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"uint256",name:"strikeId",type:"uint256"},{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"uint256",name:"iterations",type:"uint256"},{internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"setCollateralTo",type:"uint256"},{internalType:"uint256",name:"minTotalCost",type:"uint256"},{internalType:"uint256",name:"maxTotalCost",type:"uint256"}],internalType:"struct OptionMarket.TradeInputParameters",name:"params",type:"tuple"}],name:"forceClosePosition",outputs:[{components:[{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"uint256",name:"totalCost",type:"uint256"},{internalType:"uint256",name:"totalFee",type:"uint256"}],internalType:"struct OptionMarket.Result",name:"result",type:"tuple"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"boardId",type:"uint256"}],name:"forceSettleBoard",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"boardId",type:"uint256"}],name:"getBoardAndStrikeDetails",outputs:[{components:[{internalType:"uint256",name:"id",type:"uint256"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"iv",type:"uint256"},{internalType:"bool",name:"frozen",type:"bool"},{internalType:"uint256[]",name:"strikeIds",type:"uint256[]"}],internalType:"struct OptionMarket.OptionBoard",name:"",type:"tuple"},{components:[{internalType:"uint256",name:"id",type:"uint256"},{internalType:"uint256",name:"strikePrice",type:"uint256"},{internalType:"uint256",name:"skew",type:"uint256"},{internalType:"uint256",name:"longCall",type:"uint256"},{internalType:"uint256",name:"shortCallBase",type:"uint256"},{internalType:"uint256",name:"shortCallQuote",type:"uint256"},{internalType:"uint256",name:"longPut",type:"uint256"},{internalType:"uint256",name:"shortPut",type:"uint256"},{internalType:"uint256",name:"boardId",type:"uint256"}],internalType:"struct OptionMarket.Strike[]",name:"",type:"tuple[]"},{internalType:"uint256[]",name:"",type:"uint256[]"},{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"boardId",type:"uint256"}],name:"getBoardStrikes",outputs:[{internalType:"uint256[]",name:"strikeIds",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[],name:"getLiveBoards",outputs:[{internalType:"uint256[]",name:"_liveBoards",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[],name:"getNumLiveBoards",outputs:[{internalType:"uint256",name:"numLiveBoards",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"boardId",type:"uint256"}],name:"getOptionBoard",outputs:[{components:[{internalType:"uint256",name:"id",type:"uint256"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"iv",type:"uint256"},{internalType:"bool",name:"frozen",type:"bool"},{internalType:"uint256[]",name:"strikeIds",type:"uint256[]"}],internalType:"struct OptionMarket.OptionBoard",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[],name:"getOptionMarketParams",outputs:[{components:[{internalType:"uint256",name:"maxBoardExpiry",type:"uint256"},{internalType:"address",name:"securityModule",type:"address"},{internalType:"uint256",name:"feePortionReserved",type:"uint256"},{internalType:"uint256",name:"staticBaseSettlementFee",type:"uint256"}],internalType:"struct OptionMarket.OptionMarketParameters",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"strikeId",type:"uint256"}],name:"getSettlementParameters",outputs:[{internalType:"uint256",name:"strikePrice",type:"uint256"},{internalType:"uint256",name:"priceAtExpiry",type:"uint256"},{internalType:"uint256",name:"strikeToBaseReturned",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"strikeId",type:"uint256"}],name:"getStrike",outputs:[{components:[{internalType:"uint256",name:"id",type:"uint256"},{internalType:"uint256",name:"strikePrice",type:"uint256"},{internalType:"uint256",name:"skew",type:"uint256"},{internalType:"uint256",name:"longCall",type:"uint256"},{internalType:"uint256",name:"shortCallBase",type:"uint256"},{internalType:"uint256",name:"shortCallQuote",type:"uint256"},{internalType:"uint256",name:"longPut",type:"uint256"},{internalType:"uint256",name:"shortPut",type:"uint256"},{internalType:"uint256",name:"boardId",type:"uint256"}],internalType:"struct OptionMarket.Strike",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"strikeId",type:"uint256"}],name:"getStrikeAndBoard",outputs:[{components:[{internalType:"uint256",name:"id",type:"uint256"},{internalType:"uint256",name:"strikePrice",type:"uint256"},{internalType:"uint256",name:"skew",type:"uint256"},{internalType:"uint256",name:"longCall",type:"uint256"},{internalType:"uint256",name:"shortCallBase",type:"uint256"},{internalType:"uint256",name:"shortCallQuote",type:"uint256"},{internalType:"uint256",name:"longPut",type:"uint256"},{internalType:"uint256",name:"shortPut",type:"uint256"},{internalType:"uint256",name:"boardId",type:"uint256"}],internalType:"struct OptionMarket.Strike",name:"",type:"tuple"},{components:[{internalType:"uint256",name:"id",type:"uint256"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"iv",type:"uint256"},{internalType:"bool",name:"frozen",type:"bool"},{internalType:"uint256[]",name:"strikeIds",type:"uint256[]"}],internalType:"struct OptionMarket.OptionBoard",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"strikeId",type:"uint256"}],name:"getStrikeAndExpiry",outputs:[{internalType:"uint256",name:"strikePrice",type:"uint256"},{internalType:"uint256",name:"expiry",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract SynthetixAdapter",name:"_synthetixAdapter",type:"address"},{internalType:"contract LiquidityPool",name:"_liquidityPool",type:"address"},{internalType:"contract OptionMarketPricer",name:"_optionPricer",type:"address"},{internalType:"contract OptionGreekCache",name:"_greekCache",type:"address"},{internalType:"contract ShortCollateral",name:"_shortCollateral",type:"address"},{internalType:"contract OptionToken",name:"_optionToken",type:"address"},{internalType:"contract IERC20",name:"_quoteAsset",type:"address"},{internalType:"contract IERC20",name:"_baseAsset",type:"address"}],name:"init",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"address",name:"rewardBeneficiary",type:"address"}],name:"liquidatePosition",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_owner",type:"address"}],name:"nominateNewOwner",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"nominatedOwner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{components:[{internalType:"uint256",name:"strikeId",type:"uint256"},{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"uint256",name:"iterations",type:"uint256"},{internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"setCollateralTo",type:"uint256"},{internalType:"uint256",name:"minTotalCost",type:"uint256"},{internalType:"uint256",name:"maxTotalCost",type:"uint256"}],internalType:"struct OptionMarket.TradeInputParameters",name:"params",type:"tuple"}],name:"openPosition",outputs:[{components:[{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"uint256",name:"totalCost",type:"uint256"},{internalType:"uint256",name:"totalFee",type:"uint256"}],internalType:"struct OptionMarket.Result",name:"result",type:"tuple"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"boardId",type:"uint256"},{internalType:"uint256",name:"baseIv",type:"uint256"}],name:"setBoardBaseIv",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"boardId",type:"uint256"},{internalType:"bool",name:"frozen",type:"bool"}],name:"setBoardFrozen",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"uint256",name:"maxBoardExpiry",type:"uint256"},{internalType:"address",name:"securityModule",type:"address"},{internalType:"uint256",name:"feePortionReserved",type:"uint256"},{internalType:"uint256",name:"staticBaseSettlementFee",type:"uint256"}],internalType:"struct OptionMarket.OptionMarketParameters",name:"_optionMarketParams",type:"tuple"}],name:"setOptionMarketParams",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"strikeId",type:"uint256"},{internalType:"uint256",name:"skew",type:"uint256"}],name:"setStrikeSkew",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"boardId",type:"uint256"}],name:"settleExpiredBoard",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"smClaim",outputs:[],stateMutability:"nonpayable",type:"function"}],mo=[{inputs:[],stateMutability:"nonpayable",type:"constructor"},{inputs:[{internalType:"address",name:"thrower",type:"address"}],name:"AlreadyInitialised",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"int256",name:"strikeCallDelta",type:"int256"},{internalType:"int256",name:"minDelta",type:"int256"},{internalType:"int256",name:"maxDelta",type:"int256"}],name:"ForceCloseDeltaOutOfRange",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"bool",name:"isBuy",type:"bool"},{internalType:"uint256",name:"newSkew",type:"uint256"},{internalType:"uint256",name:"minSkew",type:"uint256"},{internalType:"uint256",name:"maxSkew",type:"uint256"}],name:"ForceCloseSkewOutOfRange",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{components:[{internalType:"uint256",name:"optionPriceFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"optionPriceFee1xPoint",type:"uint256"},{internalType:"uint256",name:"optionPriceFee2xPoint",type:"uint256"},{internalType:"uint256",name:"spotPriceFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"spotPriceFee1xPoint",type:"uint256"},{internalType:"uint256",name:"spotPriceFee2xPoint",type:"uint256"},{internalType:"uint256",name:"vegaFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"standardSize",type:"uint256"},{internalType:"uint256",name:"skewAdjustmentFactor",type:"uint256"}],internalType:"struct OptionMarketPricer.PricingParameters",name:"pricingParams",type:"tuple"}],name:"InvalidPricingParameters",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{components:[{internalType:"int256",name:"minDelta",type:"int256"},{internalType:"int256",name:"minForceCloseDelta",type:"int256"},{internalType:"uint256",name:"tradingCutoff",type:"uint256"},{internalType:"uint256",name:"minBaseIV",type:"uint256"},{internalType:"uint256",name:"maxBaseIV",type:"uint256"},{internalType:"uint256",name:"minSkew",type:"uint256"},{internalType:"uint256",name:"maxSkew",type:"uint256"},{internalType:"uint256",name:"minVol",type:"uint256"},{internalType:"uint256",name:"maxVol",type:"uint256"},{internalType:"uint256",name:"absMinSkew",type:"uint256"},{internalType:"uint256",name:"absMaxSkew",type:"uint256"},{internalType:"bool",name:"capSkewsToAbs",type:"bool"}],internalType:"struct OptionMarketPricer.TradeLimitParameters",name:"tradeLimitParams",type:"tuple"}],name:"InvalidTradeLimitParameters",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"nominatedOwner",type:"address"}],name:"OnlyNominatedOwner",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"optionMarket",type:"address"}],name:"OnlyOptionMarket",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"owner",type:"address"}],name:"OnlyOwner",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"int256",name:"strikeCallDelta",type:"int256"},{internalType:"int256",name:"minDelta",type:"int256"},{internalType:"int256",name:"maxDelta",type:"int256"}],name:"TradeDeltaOutOfRange",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"tradingCutoff",type:"uint256"},{internalType:"uint256",name:"boardExpiry",type:"uint256"},{internalType:"uint256",name:"currentTime",type:"uint256"}],name:"TradingCutoffReached",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"bool",name:"isBuy",type:"bool"},{components:[{internalType:"uint256",name:"vol",type:"uint256"},{internalType:"uint256",name:"baseIv",type:"uint256"},{internalType:"uint256",name:"skew",type:"uint256"}],internalType:"struct OptionMarketPricer.VolComponents",name:"currentVol",type:"tuple"},{components:[{internalType:"uint256",name:"vol",type:"uint256"},{internalType:"uint256",name:"baseIv",type:"uint256"},{internalType:"uint256",name:"skew",type:"uint256"}],internalType:"struct OptionMarketPricer.VolComponents",name:"newVol",type:"tuple"},{components:[{internalType:"uint256",name:"vol",type:"uint256"},{internalType:"uint256",name:"baseIv",type:"uint256"},{internalType:"uint256",name:"skew",type:"uint256"}],internalType:"struct OptionMarketPricer.VolComponents",name:"tradeBounds",type:"tuple"}],name:"VolSkewOrBaseIvOutsideOfTradingBounds",type:"error"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"oldOwner",type:"address"},{indexed:!1,internalType:"address",name:"newOwner",type:"address"}],name:"OwnerChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"newOwner",type:"address"}],name:"OwnerNominated",type:"event"},{anonymous:!1,inputs:[{components:[{internalType:"uint256",name:"optionPriceFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"optionPriceFee1xPoint",type:"uint256"},{internalType:"uint256",name:"optionPriceFee2xPoint",type:"uint256"},{internalType:"uint256",name:"spotPriceFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"spotPriceFee1xPoint",type:"uint256"},{internalType:"uint256",name:"spotPriceFee2xPoint",type:"uint256"},{internalType:"uint256",name:"vegaFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"standardSize",type:"uint256"},{internalType:"uint256",name:"skewAdjustmentFactor",type:"uint256"}],indexed:!1,internalType:"struct OptionMarketPricer.PricingParameters",name:"pricingParams",type:"tuple"}],name:"PricingParametersSet",type:"event"},{anonymous:!1,inputs:[{components:[{internalType:"int256",name:"minDelta",type:"int256"},{internalType:"int256",name:"minForceCloseDelta",type:"int256"},{internalType:"uint256",name:"tradingCutoff",type:"uint256"},{internalType:"uint256",name:"minBaseIV",type:"uint256"},{internalType:"uint256",name:"maxBaseIV",type:"uint256"},{internalType:"uint256",name:"minSkew",type:"uint256"},{internalType:"uint256",name:"maxSkew",type:"uint256"},{internalType:"uint256",name:"minVol",type:"uint256"},{internalType:"uint256",name:"maxVol",type:"uint256"},{internalType:"uint256",name:"absMinSkew",type:"uint256"},{internalType:"uint256",name:"absMaxSkew",type:"uint256"},{internalType:"bool",name:"capSkewsToAbs",type:"bool"}],indexed:!1,internalType:"struct OptionMarketPricer.TradeLimitParameters",name:"tradeLimitParams",type:"tuple"}],name:"TradeLimitParametersSet",type:"event"},{anonymous:!1,inputs:[{components:[{internalType:"uint256",name:"defaultVarianceFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"forceCloseVarianceFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"skewAdjustmentCoefficient",type:"uint256"},{internalType:"uint256",name:"referenceSkew",type:"uint256"},{internalType:"uint256",name:"minimumStaticSkewAdjustment",type:"uint256"},{internalType:"uint256",name:"vegaCoefficient",type:"uint256"},{internalType:"uint256",name:"minimumStaticVega",type:"uint256"},{internalType:"uint256",name:"ivVarianceCoefficient",type:"uint256"},{internalType:"uint256",name:"minimumStaticIvVariance",type:"uint256"}],indexed:!1,internalType:"struct OptionMarketPricer.VarianceFeeParameters",name:"varianceFeeParams",type:"tuple"}],name:"VarianceFeeParametersSet",type:"event"},{inputs:[],name:"acceptOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"getPricingParams",outputs:[{components:[{internalType:"uint256",name:"optionPriceFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"optionPriceFee1xPoint",type:"uint256"},{internalType:"uint256",name:"optionPriceFee2xPoint",type:"uint256"},{internalType:"uint256",name:"spotPriceFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"spotPriceFee1xPoint",type:"uint256"},{internalType:"uint256",name:"spotPriceFee2xPoint",type:"uint256"},{internalType:"uint256",name:"vegaFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"standardSize",type:"uint256"},{internalType:"uint256",name:"skewAdjustmentFactor",type:"uint256"}],internalType:"struct OptionMarketPricer.PricingParameters",name:"pricingParameters",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"pointA",type:"uint256"},{internalType:"uint256",name:"pointB",type:"uint256"},{internalType:"uint256",name:"coefficient",type:"uint256"}],name:"getTimeWeightedFee",outputs:[{internalType:"uint256",name:"timeWeightedFee",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getTradeLimitParams",outputs:[{components:[{internalType:"int256",name:"minDelta",type:"int256"},{internalType:"int256",name:"minForceCloseDelta",type:"int256"},{internalType:"uint256",name:"tradingCutoff",type:"uint256"},{internalType:"uint256",name:"minBaseIV",type:"uint256"},{internalType:"uint256",name:"maxBaseIV",type:"uint256"},{internalType:"uint256",name:"minSkew",type:"uint256"},{internalType:"uint256",name:"maxSkew",type:"uint256"},{internalType:"uint256",name:"minVol",type:"uint256"},{internalType:"uint256",name:"maxVol",type:"uint256"},{internalType:"uint256",name:"absMinSkew",type:"uint256"},{internalType:"uint256",name:"absMaxSkew",type:"uint256"},{internalType:"bool",name:"capSkewsToAbs",type:"bool"}],internalType:"struct OptionMarketPricer.TradeLimitParameters",name:"tradeLimitParameters",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{components:[{internalType:"bool",name:"isBuy",type:"bool"},{internalType:"bool",name:"isForceClose",type:"bool"},{internalType:"enum OptionMarket.TradeDirection",name:"tradeDirection",type:"uint8"},{internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"strikePrice",type:"uint256"},{components:[{internalType:"uint256",name:"freeLiquidity",type:"uint256"},{internalType:"uint256",name:"burnableLiquidity",type:"uint256"},{internalType:"uint256",name:"usedCollatLiquidity",type:"uint256"},{internalType:"uint256",name:"pendingDeltaLiquidity",type:"uint256"},{internalType:"uint256",name:"usedDeltaLiquidity",type:"uint256"},{internalType:"uint256",name:"NAV",type:"uint256"}],internalType:"struct LiquidityPool.Liquidity",name:"liquidity",type:"tuple"},{components:[{internalType:"uint256",name:"spotPrice",type:"uint256"},{internalType:"bytes32",name:"quoteKey",type:"bytes32"},{internalType:"bytes32",name:"baseKey",type:"bytes32"},{internalType:"uint256",name:"quoteBaseFeeRate",type:"uint256"},{internalType:"uint256",name:"baseQuoteFeeRate",type:"uint256"}],internalType:"struct SynthetixAdapter.ExchangeParams",name:"exchangeParams",type:"tuple"}],internalType:"struct OptionMarket.TradeParameters",name:"trade",type:"tuple"},{components:[{internalType:"uint256",name:"optionPrice",type:"uint256"},{internalType:"int256",name:"preTradeAmmNetStdVega",type:"int256"},{internalType:"int256",name:"postTradeAmmNetStdVega",type:"int256"},{internalType:"int256",name:"callDelta",type:"int256"},{internalType:"uint256",name:"volTraded",type:"uint256"},{internalType:"uint256",name:"ivVariance",type:"uint256"},{internalType:"uint256",name:"vega",type:"uint256"}],internalType:"struct OptionGreekCache.TradePricing",name:"pricing",type:"tuple"},{internalType:"uint256",name:"newBaseIv",type:"uint256"},{internalType:"uint256",name:"newSkew",type:"uint256"}],name:"getTradeResult",outputs:[{components:[{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"premium",type:"uint256"},{internalType:"uint256",name:"optionPriceFee",type:"uint256"},{internalType:"uint256",name:"spotPriceFee",type:"uint256"},{components:[{internalType:"int256",name:"preTradeAmmNetStdVega",type:"int256"},{internalType:"int256",name:"postTradeAmmNetStdVega",type:"int256"},{internalType:"uint256",name:"vegaUtil",type:"uint256"},{internalType:"uint256",name:"volTraded",type:"uint256"},{internalType:"uint256",name:"NAV",type:"uint256"},{internalType:"uint256",name:"vegaUtilFee",type:"uint256"}],internalType:"struct OptionMarketPricer.VegaUtilFeeComponents",name:"vegaUtilFee",type:"tuple"},{components:[{internalType:"uint256",name:"varianceFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"vega",type:"uint256"},{internalType:"uint256",name:"vegaCoefficient",type:"uint256"},{internalType:"uint256",name:"skew",type:"uint256"},{internalType:"uint256",name:"skewCoefficient",type:"uint256"},{internalType:"uint256",name:"ivVariance",type:"uint256"},{internalType:"uint256",name:"ivVarianceCoefficient",type:"uint256"},{internalType:"uint256",name:"varianceFee",type:"uint256"}],internalType:"struct OptionMarketPricer.VarianceFeeComponents",name:"varianceFee",type:"tuple"},{internalType:"uint256",name:"totalFee",type:"uint256"},{internalType:"uint256",name:"totalCost",type:"uint256"},{internalType:"uint256",name:"volTraded",type:"uint256"},{internalType:"uint256",name:"newBaseIv",type:"uint256"},{internalType:"uint256",name:"newSkew",type:"uint256"}],internalType:"struct OptionMarketPricer.TradeResult",name:"tradeResult",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{components:[{internalType:"bool",name:"isBuy",type:"bool"},{internalType:"bool",name:"isForceClose",type:"bool"},{internalType:"enum OptionMarket.TradeDirection",name:"tradeDirection",type:"uint8"},{internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"strikePrice",type:"uint256"},{components:[{internalType:"uint256",name:"freeLiquidity",type:"uint256"},{internalType:"uint256",name:"burnableLiquidity",type:"uint256"},{internalType:"uint256",name:"usedCollatLiquidity",type:"uint256"},{internalType:"uint256",name:"pendingDeltaLiquidity",type:"uint256"},{internalType:"uint256",name:"usedDeltaLiquidity",type:"uint256"},{internalType:"uint256",name:"NAV",type:"uint256"}],internalType:"struct LiquidityPool.Liquidity",name:"liquidity",type:"tuple"},{components:[{internalType:"uint256",name:"spotPrice",type:"uint256"},{internalType:"bytes32",name:"quoteKey",type:"bytes32"},{internalType:"bytes32",name:"baseKey",type:"bytes32"},{internalType:"uint256",name:"quoteBaseFeeRate",type:"uint256"},{internalType:"uint256",name:"baseQuoteFeeRate",type:"uint256"}],internalType:"struct SynthetixAdapter.ExchangeParams",name:"exchangeParams",type:"tuple"}],internalType:"struct OptionMarket.TradeParameters",name:"trade",type:"tuple"},{components:[{internalType:"uint256",name:"optionPrice",type:"uint256"},{internalType:"int256",name:"preTradeAmmNetStdVega",type:"int256"},{internalType:"int256",name:"postTradeAmmNetStdVega",type:"int256"},{internalType:"int256",name:"callDelta",type:"int256"},{internalType:"uint256",name:"volTraded",type:"uint256"},{internalType:"uint256",name:"ivVariance",type:"uint256"},{internalType:"uint256",name:"vega",type:"uint256"}],internalType:"struct OptionGreekCache.TradePricing",name:"pricing",type:"tuple"},{internalType:"uint256",name:"skew",type:"uint256"}],name:"getVarianceFee",outputs:[{components:[{internalType:"uint256",name:"varianceFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"vega",type:"uint256"},{internalType:"uint256",name:"vegaCoefficient",type:"uint256"},{internalType:"uint256",name:"skew",type:"uint256"},{internalType:"uint256",name:"skewCoefficient",type:"uint256"},{internalType:"uint256",name:"ivVariance",type:"uint256"},{internalType:"uint256",name:"ivVarianceCoefficient",type:"uint256"},{internalType:"uint256",name:"varianceFee",type:"uint256"}],internalType:"struct OptionMarketPricer.VarianceFeeComponents",name:"varianceFeeComponents",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVarianceFeeParams",outputs:[{components:[{internalType:"uint256",name:"defaultVarianceFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"forceCloseVarianceFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"skewAdjustmentCoefficient",type:"uint256"},{internalType:"uint256",name:"referenceSkew",type:"uint256"},{internalType:"uint256",name:"minimumStaticSkewAdjustment",type:"uint256"},{internalType:"uint256",name:"vegaCoefficient",type:"uint256"},{internalType:"uint256",name:"minimumStaticVega",type:"uint256"},{internalType:"uint256",name:"ivVarianceCoefficient",type:"uint256"},{internalType:"uint256",name:"minimumStaticIvVariance",type:"uint256"}],internalType:"struct OptionMarketPricer.VarianceFeeParameters",name:"varianceFeeParameters",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{components:[{internalType:"bool",name:"isBuy",type:"bool"},{internalType:"bool",name:"isForceClose",type:"bool"},{internalType:"enum OptionMarket.TradeDirection",name:"tradeDirection",type:"uint8"},{internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"strikePrice",type:"uint256"},{components:[{internalType:"uint256",name:"freeLiquidity",type:"uint256"},{internalType:"uint256",name:"burnableLiquidity",type:"uint256"},{internalType:"uint256",name:"usedCollatLiquidity",type:"uint256"},{internalType:"uint256",name:"pendingDeltaLiquidity",type:"uint256"},{internalType:"uint256",name:"usedDeltaLiquidity",type:"uint256"},{internalType:"uint256",name:"NAV",type:"uint256"}],internalType:"struct LiquidityPool.Liquidity",name:"liquidity",type:"tuple"},{components:[{internalType:"uint256",name:"spotPrice",type:"uint256"},{internalType:"bytes32",name:"quoteKey",type:"bytes32"},{internalType:"bytes32",name:"baseKey",type:"bytes32"},{internalType:"uint256",name:"quoteBaseFeeRate",type:"uint256"},{internalType:"uint256",name:"baseQuoteFeeRate",type:"uint256"}],internalType:"struct SynthetixAdapter.ExchangeParams",name:"exchangeParams",type:"tuple"}],internalType:"struct OptionMarket.TradeParameters",name:"trade",type:"tuple"},{components:[{internalType:"uint256",name:"optionPrice",type:"uint256"},{internalType:"int256",name:"preTradeAmmNetStdVega",type:"int256"},{internalType:"int256",name:"postTradeAmmNetStdVega",type:"int256"},{internalType:"int256",name:"callDelta",type:"int256"},{internalType:"uint256",name:"volTraded",type:"uint256"},{internalType:"uint256",name:"ivVariance",type:"uint256"},{internalType:"uint256",name:"vega",type:"uint256"}],internalType:"struct OptionGreekCache.TradePricing",name:"pricing",type:"tuple"}],name:"getVegaUtilFee",outputs:[{components:[{internalType:"int256",name:"preTradeAmmNetStdVega",type:"int256"},{internalType:"int256",name:"postTradeAmmNetStdVega",type:"int256"},{internalType:"uint256",name:"vegaUtil",type:"uint256"},{internalType:"uint256",name:"volTraded",type:"uint256"},{internalType:"uint256",name:"NAV",type:"uint256"},{internalType:"uint256",name:"vegaUtilFee",type:"uint256"}],internalType:"struct OptionMarketPricer.VegaUtilFeeComponents",name:"vegaUtilFeeComponents",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_optionMarket",type:"address"},{internalType:"contract OptionGreekCache",name:"_greekCache",type:"address"}],name:"init",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"bool",name:"isBuy",type:"bool"},{internalType:"bool",name:"isForceClose",type:"bool"},{internalType:"enum OptionMarket.TradeDirection",name:"tradeDirection",type:"uint8"},{internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"strikePrice",type:"uint256"},{components:[{internalType:"uint256",name:"freeLiquidity",type:"uint256"},{internalType:"uint256",name:"burnableLiquidity",type:"uint256"},{internalType:"uint256",name:"usedCollatLiquidity",type:"uint256"},{internalType:"uint256",name:"pendingDeltaLiquidity",type:"uint256"},{internalType:"uint256",name:"usedDeltaLiquidity",type:"uint256"},{internalType:"uint256",name:"NAV",type:"uint256"}],internalType:"struct LiquidityPool.Liquidity",name:"liquidity",type:"tuple"},{components:[{internalType:"uint256",name:"spotPrice",type:"uint256"},{internalType:"bytes32",name:"quoteKey",type:"bytes32"},{internalType:"bytes32",name:"baseKey",type:"bytes32"},{internalType:"uint256",name:"quoteBaseFeeRate",type:"uint256"},{internalType:"uint256",name:"baseQuoteFeeRate",type:"uint256"}],internalType:"struct SynthetixAdapter.ExchangeParams",name:"exchangeParams",type:"tuple"}],internalType:"struct OptionMarket.TradeParameters",name:"trade",type:"tuple"},{internalType:"uint256",name:"boardBaseIv",type:"uint256"},{internalType:"uint256",name:"strikeSkew",type:"uint256"}],name:"ivImpactForTrade",outputs:[{internalType:"uint256",name:"newBaseIv",type:"uint256"},{internalType:"uint256",name:"newSkew",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_owner",type:"address"}],name:"nominateNewOwner",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"nominatedOwner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"pricingParams",outputs:[{internalType:"uint256",name:"optionPriceFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"optionPriceFee1xPoint",type:"uint256"},{internalType:"uint256",name:"optionPriceFee2xPoint",type:"uint256"},{internalType:"uint256",name:"spotPriceFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"spotPriceFee1xPoint",type:"uint256"},{internalType:"uint256",name:"spotPriceFee2xPoint",type:"uint256"},{internalType:"uint256",name:"vegaFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"standardSize",type:"uint256"},{internalType:"uint256",name:"skewAdjustmentFactor",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{components:[{internalType:"uint256",name:"optionPriceFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"optionPriceFee1xPoint",type:"uint256"},{internalType:"uint256",name:"optionPriceFee2xPoint",type:"uint256"},{internalType:"uint256",name:"spotPriceFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"spotPriceFee1xPoint",type:"uint256"},{internalType:"uint256",name:"spotPriceFee2xPoint",type:"uint256"},{internalType:"uint256",name:"vegaFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"standardSize",type:"uint256"},{internalType:"uint256",name:"skewAdjustmentFactor",type:"uint256"}],internalType:"struct OptionMarketPricer.PricingParameters",name:"_pricingParams",type:"tuple"}],name:"setPricingParams",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"int256",name:"minDelta",type:"int256"},{internalType:"int256",name:"minForceCloseDelta",type:"int256"},{internalType:"uint256",name:"tradingCutoff",type:"uint256"},{internalType:"uint256",name:"minBaseIV",type:"uint256"},{internalType:"uint256",name:"maxBaseIV",type:"uint256"},{internalType:"uint256",name:"minSkew",type:"uint256"},{internalType:"uint256",name:"maxSkew",type:"uint256"},{internalType:"uint256",name:"minVol",type:"uint256"},{internalType:"uint256",name:"maxVol",type:"uint256"},{internalType:"uint256",name:"absMinSkew",type:"uint256"},{internalType:"uint256",name:"absMaxSkew",type:"uint256"},{internalType:"bool",name:"capSkewsToAbs",type:"bool"}],internalType:"struct OptionMarketPricer.TradeLimitParameters",name:"_tradeLimitParams",type:"tuple"}],name:"setTradeLimitParams",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"uint256",name:"defaultVarianceFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"forceCloseVarianceFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"skewAdjustmentCoefficient",type:"uint256"},{internalType:"uint256",name:"referenceSkew",type:"uint256"},{internalType:"uint256",name:"minimumStaticSkewAdjustment",type:"uint256"},{internalType:"uint256",name:"vegaCoefficient",type:"uint256"},{internalType:"uint256",name:"minimumStaticVega",type:"uint256"},{internalType:"uint256",name:"ivVarianceCoefficient",type:"uint256"},{internalType:"uint256",name:"minimumStaticIvVariance",type:"uint256"}],internalType:"struct OptionMarketPricer.VarianceFeeParameters",name:"_varianceFeeParams",type:"tuple"}],name:"setVarianceFeeParams",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"tradeLimitParams",outputs:[{internalType:"int256",name:"minDelta",type:"int256"},{internalType:"int256",name:"minForceCloseDelta",type:"int256"},{internalType:"uint256",name:"tradingCutoff",type:"uint256"},{internalType:"uint256",name:"minBaseIV",type:"uint256"},{internalType:"uint256",name:"maxBaseIV",type:"uint256"},{internalType:"uint256",name:"minSkew",type:"uint256"},{internalType:"uint256",name:"maxSkew",type:"uint256"},{internalType:"uint256",name:"minVol",type:"uint256"},{internalType:"uint256",name:"maxVol",type:"uint256"},{internalType:"uint256",name:"absMinSkew",type:"uint256"},{internalType:"uint256",name:"absMaxSkew",type:"uint256"},{internalType:"bool",name:"capSkewsToAbs",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{components:[{internalType:"uint256",name:"id",type:"uint256"},{internalType:"uint256",name:"strikePrice",type:"uint256"},{internalType:"uint256",name:"skew",type:"uint256"},{internalType:"uint256",name:"longCall",type:"uint256"},{internalType:"uint256",name:"shortCallBase",type:"uint256"},{internalType:"uint256",name:"shortCallQuote",type:"uint256"},{internalType:"uint256",name:"longPut",type:"uint256"},{internalType:"uint256",name:"shortPut",type:"uint256"},{internalType:"uint256",name:"boardId",type:"uint256"}],internalType:"struct OptionMarket.Strike",name:"strike",type:"tuple"},{components:[{internalType:"bool",name:"isBuy",type:"bool"},{internalType:"bool",name:"isForceClose",type:"bool"},{internalType:"enum OptionMarket.TradeDirection",name:"tradeDirection",type:"uint8"},{internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"strikePrice",type:"uint256"},{components:[{internalType:"uint256",name:"freeLiquidity",type:"uint256"},{internalType:"uint256",name:"burnableLiquidity",type:"uint256"},{internalType:"uint256",name:"usedCollatLiquidity",type:"uint256"},{internalType:"uint256",name:"pendingDeltaLiquidity",type:"uint256"},{internalType:"uint256",name:"usedDeltaLiquidity",type:"uint256"},{internalType:"uint256",name:"NAV",type:"uint256"}],internalType:"struct LiquidityPool.Liquidity",name:"liquidity",type:"tuple"},{components:[{internalType:"uint256",name:"spotPrice",type:"uint256"},{internalType:"bytes32",name:"quoteKey",type:"bytes32"},{internalType:"bytes32",name:"baseKey",type:"bytes32"},{internalType:"uint256",name:"quoteBaseFeeRate",type:"uint256"},{internalType:"uint256",name:"baseQuoteFeeRate",type:"uint256"}],internalType:"struct SynthetixAdapter.ExchangeParams",name:"exchangeParams",type:"tuple"}],internalType:"struct OptionMarket.TradeParameters",name:"trade",type:"tuple"},{internalType:"uint256",name:"boardBaseIv",type:"uint256"},{internalType:"uint256",name:"boardExpiry",type:"uint256"}],name:"updateCacheAndGetTradeResult",outputs:[{components:[{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"premium",type:"uint256"},{internalType:"uint256",name:"optionPriceFee",type:"uint256"},{internalType:"uint256",name:"spotPriceFee",type:"uint256"},{components:[{internalType:"int256",name:"preTradeAmmNetStdVega",type:"int256"},{internalType:"int256",name:"postTradeAmmNetStdVega",type:"int256"},{internalType:"uint256",name:"vegaUtil",type:"uint256"},{internalType:"uint256",name:"volTraded",type:"uint256"},{internalType:"uint256",name:"NAV",type:"uint256"},{internalType:"uint256",name:"vegaUtilFee",type:"uint256"}],internalType:"struct OptionMarketPricer.VegaUtilFeeComponents",name:"vegaUtilFee",type:"tuple"},{components:[{internalType:"uint256",name:"varianceFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"vega",type:"uint256"},{internalType:"uint256",name:"vegaCoefficient",type:"uint256"},{internalType:"uint256",name:"skew",type:"uint256"},{internalType:"uint256",name:"skewCoefficient",type:"uint256"},{internalType:"uint256",name:"ivVariance",type:"uint256"},{internalType:"uint256",name:"ivVarianceCoefficient",type:"uint256"},{internalType:"uint256",name:"varianceFee",type:"uint256"}],internalType:"struct OptionMarketPricer.VarianceFeeComponents",name:"varianceFee",type:"tuple"},{internalType:"uint256",name:"totalFee",type:"uint256"},{internalType:"uint256",name:"totalCost",type:"uint256"},{internalType:"uint256",name:"volTraded",type:"uint256"},{internalType:"uint256",name:"newBaseIv",type:"uint256"},{internalType:"uint256",name:"newSkew",type:"uint256"}],internalType:"struct OptionMarketPricer.TradeResult",name:"tradeResult",type:"tuple"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"varianceFeeParams",outputs:[{internalType:"uint256",name:"defaultVarianceFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"forceCloseVarianceFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"skewAdjustmentCoefficient",type:"uint256"},{internalType:"uint256",name:"referenceSkew",type:"uint256"},{internalType:"uint256",name:"minimumStaticSkewAdjustment",type:"uint256"},{internalType:"uint256",name:"vegaCoefficient",type:"uint256"},{internalType:"uint256",name:"minimumStaticVega",type:"uint256"},{internalType:"uint256",name:"ivVarianceCoefficient",type:"uint256"},{internalType:"uint256",name:"minimumStaticIvVariance",type:"uint256"}],stateMutability:"view",type:"function"}],co=[{inputs:[{internalType:"string",name:"name_",type:"string"},{internalType:"string",name:"symbol_",type:"string"}],stateMutability:"nonpayable",type:"constructor"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"bool",name:"invalidPositionId",type:"bool"},{internalType:"bool",name:"positionInactive",type:"bool"},{internalType:"bool",name:"isShort",type:"bool"}],name:"AddingCollateralToInvalidPosition",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{components:[{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"uint256",name:"strikeId",type:"uint256"},{internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"collateral",type:"uint256"},{internalType:"enum OptionToken.PositionState",name:"state",type:"uint8"}],internalType:"struct OptionToken.OptionPosition",name:"position",type:"tuple"},{internalType:"uint256",name:"spotPrice",type:"uint256"}],name:"AdjustmentResultsInMinimumCollateralNotBeingMet",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"}],name:"AlreadyInitialised",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"bool",name:"invalidPositionId",type:"bool"},{internalType:"bool",name:"positionInactive",type:"bool"},{internalType:"bool",name:"strikeMismatch",type:"bool"},{internalType:"bool",name:"optionTypeMismatch",type:"bool"}],name:"CannotAdjustInvalidPosition",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"}],name:"CannotClosePositionZero",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"}],name:"CannotOpenZeroAmount",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"uint256",name:"setCollateralTo",type:"uint256"}],name:"FullyClosingWithNonZeroSetCollateral",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{components:[{internalType:"uint256",name:"penaltyRatio",type:"uint256"},{internalType:"uint256",name:"liquidatorFeeRatio",type:"uint256"},{internalType:"uint256",name:"smFeeRatio",type:"uint256"},{internalType:"uint256",name:"minLiquidationFee",type:"uint256"}],internalType:"struct OptionToken.PartialCollateralParameters",name:"partialCollatParams",type:"tuple"}],name:"InvalidPartialCollateralParameters",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"originalPositionAmount",type:"uint256"},{internalType:"uint256",name:"splitAmount",type:"uint256"}],name:"InvalidSplitAmount",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"uint256",name:"positionId",type:"uint256"}],name:"MergingUnapprovedPosition",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"}],name:"MustMergeTwoOrMorePositions",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"nominatedOwner",type:"address"}],name:"OnlyNominatedOwner",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"optionMarket",type:"address"}],name:"OnlyOptionMarket",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"owner",type:"address"}],name:"OnlyOwner",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"address",name:"trader",type:"address"},{internalType:"address",name:"owner",type:"address"}],name:"OnlyOwnerCanAdjustPosition",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"shortCollateral",type:"address"}],name:"OnlyShortCollateral",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{components:[{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"uint256",name:"strikeId",type:"uint256"},{internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"collateral",type:"uint256"},{internalType:"enum OptionToken.PositionState",name:"state",type:"uint8"}],internalType:"struct OptionToken.OptionPosition",name:"firstPosition",type:"tuple"},{components:[{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"uint256",name:"strikeId",type:"uint256"},{internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"collateral",type:"uint256"},{internalType:"enum OptionToken.PositionState",name:"state",type:"uint8"}],internalType:"struct OptionToken.OptionPosition",name:"nextPosition",type:"tuple"},{internalType:"bool",name:"ownerMismatch",type:"bool"},{internalType:"bool",name:"strikeMismatch",type:"bool"},{internalType:"bool",name:"optionTypeMismatch",type:"bool"},{internalType:"bool",name:"duplicatePositionId",type:"bool"}],name:"PositionMismatchWhenMerging",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{components:[{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"uint256",name:"strikeId",type:"uint256"},{internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"collateral",type:"uint256"},{internalType:"enum OptionToken.PositionState",name:"state",type:"uint8"}],internalType:"struct OptionToken.OptionPosition",name:"position",type:"tuple"},{internalType:"uint256",name:"spotPrice",type:"uint256"}],name:"PositionNotLiquidatable",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{components:[{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"uint256",name:"strikeId",type:"uint256"},{internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"collateral",type:"uint256"},{internalType:"enum OptionToken.PositionState",name:"state",type:"uint8"}],internalType:"struct OptionToken.OptionPosition",name:"position",type:"tuple"},{internalType:"uint256",name:"spotPrice",type:"uint256"}],name:"ResultingNewPositionLiquidatable",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{components:[{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"uint256",name:"strikeId",type:"uint256"},{internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"collateral",type:"uint256"},{internalType:"enum OptionToken.PositionState",name:"state",type:"uint8"}],internalType:"struct OptionToken.OptionPosition",name:"position",type:"tuple"},{internalType:"uint256",name:"spotPrice",type:"uint256"}],name:"ResultingOriginalPositionLiquidatable",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"uint256",name:"positionId",type:"uint256"}],name:"SplittingUnapprovedPosition",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"strikeId",type:"uint256"}],name:"StrikeIsSettled",type:"error"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"approved",type:"address"},{indexed:!0,internalType:"uint256",name:"tokenId",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"operator",type:"address"},{indexed:!1,internalType:"bool",name:"approved",type:"bool"}],name:"ApprovalForAll",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"oldOwner",type:"address"},{indexed:!1,internalType:"address",name:"newOwner",type:"address"}],name:"OwnerChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"newOwner",type:"address"}],name:"OwnerNominated",type:"event"},{anonymous:!1,inputs:[{components:[{internalType:"uint256",name:"penaltyRatio",type:"uint256"},{internalType:"uint256",name:"liquidatorFeeRatio",type:"uint256"},{internalType:"uint256",name:"smFeeRatio",type:"uint256"},{internalType:"uint256",name:"minLiquidationFee",type:"uint256"}],indexed:!1,internalType:"struct OptionToken.PartialCollateralParameters",name:"partialCollateralParams",type:"tuple"}],name:"PartialCollateralParamsSet",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"positionId",type:"uint256"},{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"enum OptionToken.PositionUpdatedType",name:"updatedType",type:"uint8"},{components:[{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"uint256",name:"strikeId",type:"uint256"},{internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"collateral",type:"uint256"},{internalType:"enum OptionToken.PositionState",name:"state",type:"uint8"}],indexed:!1,internalType:"struct OptionToken.OptionPosition",name:"position",type:"tuple"},{indexed:!1,internalType:"uint256",name:"timestamp",type:"uint256"}],name:"PositionUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!0,internalType:"uint256",name:"tokenId",type:"uint256"}],name:"Transfer",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"string",name:"URI",type:"string"}],name:"URISet",type:"event"},{inputs:[],name:"acceptOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"uint256",name:"amountCollateral",type:"uint256"}],name:"addCollateral",outputs:[{internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"bool",name:"isBuy",type:"bool"},{internalType:"bool",name:"isForceClose",type:"bool"},{internalType:"enum OptionMarket.TradeDirection",name:"tradeDirection",type:"uint8"},{internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"strikePrice",type:"uint256"},{components:[{internalType:"uint256",name:"freeLiquidity",type:"uint256"},{internalType:"uint256",name:"burnableLiquidity",type:"uint256"},{internalType:"uint256",name:"usedCollatLiquidity",type:"uint256"},{internalType:"uint256",name:"pendingDeltaLiquidity",type:"uint256"},{internalType:"uint256",name:"usedDeltaLiquidity",type:"uint256"},{internalType:"uint256",name:"NAV",type:"uint256"}],internalType:"struct LiquidityPool.Liquidity",name:"liquidity",type:"tuple"},{components:[{internalType:"uint256",name:"spotPrice",type:"uint256"},{internalType:"bytes32",name:"quoteKey",type:"bytes32"},{internalType:"bytes32",name:"baseKey",type:"bytes32"},{internalType:"uint256",name:"quoteBaseFeeRate",type:"uint256"},{internalType:"uint256",name:"baseQuoteFeeRate",type:"uint256"}],internalType:"struct SynthetixAdapter.ExchangeParams",name:"exchangeParams",type:"tuple"}],internalType:"struct OptionMarket.TradeParameters",name:"trade",type:"tuple"},{internalType:"uint256",name:"strikeId",type:"uint256"},{internalType:"address",name:"trader",type:"address"},{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"uint256",name:"optionCost",type:"uint256"},{internalType:"uint256",name:"setCollateralTo",type:"uint256"},{internalType:"bool",name:"isOpen",type:"bool"}],name:"adjustPosition",outputs:[{internalType:"uint256",name:"",type:"uint256"},{internalType:"int256",name:"pendingCollateral",type:"int256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"approve",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"baseURI",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{components:[{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"uint256",name:"strikeId",type:"uint256"},{internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"collateral",type:"uint256"},{internalType:"enum OptionToken.PositionState",name:"state",type:"uint8"}],internalType:"struct OptionToken.OptionPosition",name:"position",type:"tuple"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"strikePrice",type:"uint256"},{internalType:"uint256",name:"spotPrice",type:"uint256"}],name:"canLiquidate",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"getApproved",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"gwavPremium",type:"uint256"},{internalType:"uint256",name:"userPositionCollateral",type:"uint256"},{internalType:"uint256",name:"convertedMinLiquidationFee",type:"uint256"},{internalType:"uint256",name:"insolvencyMultiplier",type:"uint256"}],name:"getLiquidationFees",outputs:[{components:[{internalType:"uint256",name:"returnCollateral",type:"uint256"},{internalType:"uint256",name:"lpPremiums",type:"uint256"},{internalType:"uint256",name:"lpFee",type:"uint256"},{internalType:"uint256",name:"liquidatorFee",type:"uint256"},{internalType:"uint256",name:"smFee",type:"uint256"},{internalType:"uint256",name:"insolventAmount",type:"uint256"}],internalType:"struct OptionToken.LiquidationFees",name:"liquidationFees",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"positionId",type:"uint256"}],name:"getOptionPosition",outputs:[{components:[{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"uint256",name:"strikeId",type:"uint256"},{internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"collateral",type:"uint256"},{internalType:"enum OptionToken.PositionState",name:"state",type:"uint8"}],internalType:"struct OptionToken.OptionPosition",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256[]",name:"positionIds",type:"uint256[]"}],name:"getOptionPositions",outputs:[{components:[{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"uint256",name:"strikeId",type:"uint256"},{internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"collateral",type:"uint256"},{internalType:"enum OptionToken.PositionState",name:"state",type:"uint8"}],internalType:"struct OptionToken.OptionPosition[]",name:"",type:"tuple[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"target",type:"address"}],name:"getOwnerPositions",outputs:[{components:[{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"uint256",name:"strikeId",type:"uint256"},{internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"collateral",type:"uint256"},{internalType:"enum OptionToken.PositionState",name:"state",type:"uint8"}],internalType:"struct OptionToken.OptionPosition[]",name:"",type:"tuple[]"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPartialCollatParams",outputs:[{components:[{internalType:"uint256",name:"penaltyRatio",type:"uint256"},{internalType:"uint256",name:"liquidatorFeeRatio",type:"uint256"},{internalType:"uint256",name:"smFeeRatio",type:"uint256"},{internalType:"uint256",name:"minLiquidationFee",type:"uint256"}],internalType:"struct OptionToken.PartialCollateralParameters",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"positionId",type:"uint256"}],name:"getPositionState",outputs:[{internalType:"enum OptionToken.PositionState",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"positionId",type:"uint256"}],name:"getPositionWithOwner",outputs:[{components:[{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"uint256",name:"strikeId",type:"uint256"},{internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"collateral",type:"uint256"},{internalType:"enum OptionToken.PositionState",name:"state",type:"uint8"},{internalType:"address",name:"owner",type:"address"}],internalType:"struct OptionToken.PositionWithOwner",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256[]",name:"positionIds",type:"uint256[]"}],name:"getPositionsWithOwner",outputs:[{components:[{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"uint256",name:"strikeId",type:"uint256"},{internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"collateral",type:"uint256"},{internalType:"enum OptionToken.PositionState",name:"state",type:"uint8"},{internalType:"address",name:"owner",type:"address"}],internalType:"struct OptionToken.PositionWithOwner[]",name:"",type:"tuple[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract OptionMarket",name:"_optionMarket",type:"address"},{internalType:"contract OptionGreekCache",name:"_greekCache",type:"address"},{internalType:"address",name:"_shortCollateral",type:"address"},{internalType:"contract SynthetixAdapter",name:"_synthetixAdapter",type:"address"}],name:"init",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"operator",type:"address"}],name:"isApprovedForAll",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"positionId",type:"uint256"},{components:[{internalType:"bool",name:"isBuy",type:"bool"},{internalType:"bool",name:"isForceClose",type:"bool"},{internalType:"enum OptionMarket.TradeDirection",name:"tradeDirection",type:"uint8"},{internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"strikePrice",type:"uint256"},{components:[{internalType:"uint256",name:"freeLiquidity",type:"uint256"},{internalType:"uint256",name:"burnableLiquidity",type:"uint256"},{internalType:"uint256",name:"usedCollatLiquidity",type:"uint256"},{internalType:"uint256",name:"pendingDeltaLiquidity",type:"uint256"},{internalType:"uint256",name:"usedDeltaLiquidity",type:"uint256"},{internalType:"uint256",name:"NAV",type:"uint256"}],internalType:"struct LiquidityPool.Liquidity",name:"liquidity",type:"tuple"},{components:[{internalType:"uint256",name:"spotPrice",type:"uint256"},{internalType:"bytes32",name:"quoteKey",type:"bytes32"},{internalType:"bytes32",name:"baseKey",type:"bytes32"},{internalType:"uint256",name:"quoteBaseFeeRate",type:"uint256"},{internalType:"uint256",name:"baseQuoteFeeRate",type:"uint256"}],internalType:"struct SynthetixAdapter.ExchangeParams",name:"exchangeParams",type:"tuple"}],internalType:"struct OptionMarket.TradeParameters",name:"trade",type:"tuple"},{internalType:"uint256",name:"totalCost",type:"uint256"}],name:"liquidate",outputs:[{components:[{internalType:"uint256",name:"returnCollateral",type:"uint256"},{internalType:"uint256",name:"lpPremiums",type:"uint256"},{internalType:"uint256",name:"lpFee",type:"uint256"},{internalType:"uint256",name:"liquidatorFee",type:"uint256"},{internalType:"uint256",name:"smFee",type:"uint256"},{internalType:"uint256",name:"insolventAmount",type:"uint256"}],internalType:"struct OptionToken.LiquidationFees",name:"liquidationFees",type:"tuple"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256[]",name:"positionIds",type:"uint256[]"}],name:"merge",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"nextId",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_owner",type:"address"}],name:"nominateNewOwner",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"nominatedOwner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"ownerOf",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"partialCollatParams",outputs:[{internalType:"uint256",name:"penaltyRatio",type:"uint256"},{internalType:"uint256",name:"liquidatorFeeRatio",type:"uint256"},{internalType:"uint256",name:"smFeeRatio",type:"uint256"},{internalType:"uint256",name:"minLiquidationFee",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"positions",outputs:[{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"uint256",name:"strikeId",type:"uint256"},{internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"collateral",type:"uint256"},{internalType:"enum OptionToken.PositionState",name:"state",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"safeTransferFrom",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"},{internalType:"bytes",name:"_data",type:"bytes"}],name:"safeTransferFrom",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"operator",type:"address"},{internalType:"bool",name:"approved",type:"bool"}],name:"setApprovalForAll",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"uint256",name:"penaltyRatio",type:"uint256"},{internalType:"uint256",name:"liquidatorFeeRatio",type:"uint256"},{internalType:"uint256",name:"smFeeRatio",type:"uint256"},{internalType:"uint256",name:"minLiquidationFee",type:"uint256"}],internalType:"struct OptionToken.PartialCollateralParameters",name:"_partialCollatParams",type:"tuple"}],name:"setPartialCollateralParams",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"string",name:"newURI",type:"string"}],name:"setURI",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256[]",name:"positionIds",type:"uint256[]"}],name:"settlePositions",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"uint256",name:"newAmount",type:"uint256"},{internalType:"uint256",name:"newCollateral",type:"uint256"},{internalType:"address",name:"recipient",type:"address"}],name:"split",outputs:[{internalType:"uint256",name:"newPositionId",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes4",name:"interfaceId",type:"bytes4"}],name:"supportsInterface",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"index",type:"uint256"}],name:"tokenByIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"uint256",name:"index",type:"uint256"}],name:"tokenOfOwnerByIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"tokenURI",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"transferFrom",outputs:[],stateMutability:"nonpayable",type:"function"}],To=[{inputs:[],stateMutability:"nonpayable",type:"constructor"},{inputs:[{internalType:"address",name:"thrower",type:"address"}],name:"AlreadyInitialised",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"BaseTransferFailed",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{components:[{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"uint256",name:"strikeId",type:"uint256"},{internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"collateral",type:"uint256"},{internalType:"enum OptionToken.PositionState",name:"state",type:"uint8"},{internalType:"address",name:"owner",type:"address"}],internalType:"struct OptionToken.PositionWithOwner",name:"position",type:"tuple"}],name:"BoardMustBeSettled",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"nominatedOwner",type:"address"}],name:"OnlyNominatedOwner",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"optionMarket",type:"address"}],name:"OnlyOptionMarket",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"owner",type:"address"}],name:"OnlyOwner",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"balance",type:"uint256"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"OutOfBaseCollateralForExchangeAndTransfer",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"balance",type:"uint256"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"OutOfBaseCollateralForTransfer",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"balance",type:"uint256"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"OutOfQuoteCollateralForTransfer",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"QuoteTransferFailed",type:"error"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"recipient",type:"address"},{indexed:!1,internalType:"uint256",name:"amountBase",type:"uint256"},{indexed:!1,internalType:"uint256",name:"quoteReceived",type:"uint256"}],name:"BaseExchangedAndQuoteSent",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"receiver",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"BaseSent",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"amountBaseSent",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amountQuoteSent",type:"uint256"},{indexed:!1,internalType:"uint256",name:"lpBaseInsolvency",type:"uint256"},{indexed:!1,internalType:"uint256",name:"lpQuoteInsolvency",type:"uint256"},{indexed:!1,internalType:"uint256",name:"LPBaseExcess",type:"uint256"},{indexed:!1,internalType:"uint256",name:"LPQuoteExcess",type:"uint256"}],name:"BoardSettlementCollateralSent",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"oldOwner",type:"address"},{indexed:!1,internalType:"address",name:"newOwner",type:"address"}],name:"OwnerChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"newOwner",type:"address"}],name:"OwnerNominated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"positionId",type:"uint256"},{indexed:!0,internalType:"address",name:"settler",type:"address"},{indexed:!0,internalType:"address",name:"optionOwner",type:"address"},{indexed:!1,internalType:"uint256",name:"strikePrice",type:"uint256"},{indexed:!1,internalType:"uint256",name:"priceAtExpiry",type:"uint256"},{indexed:!1,internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"settlementAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"insolventAmount",type:"uint256"}],name:"PositionSettled",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"receiver",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"QuoteSent",type:"event"},{inputs:[],name:"LPBaseExcess",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"LPQuoteExcess",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"acceptOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"amountBase",type:"uint256"},{internalType:"uint256",name:"amountQuote",type:"uint256"}],name:"boardSettlement",outputs:[{internalType:"uint256",name:"lpBaseInsolvency",type:"uint256"},{internalType:"uint256",name:"lpQuoteInsolvency",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract OptionMarket",name:"_optionMarket",type:"address"},{internalType:"contract LiquidityPool",name:"_liquidityPool",type:"address"},{internalType:"contract OptionToken",name:"_optionToken",type:"address"},{internalType:"contract SynthetixAdapter",name:"_synthetixAdapter",type:"address"},{internalType:"contract ERC20",name:"_quoteAsset",type:"address"},{internalType:"contract ERC20",name:"_baseAsset",type:"address"}],name:"init",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_owner",type:"address"}],name:"nominateNewOwner",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"nominatedOwner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"trader",type:"address"},{internalType:"address",name:"liquidator",type:"address"},{internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"},{components:[{internalType:"uint256",name:"returnCollateral",type:"uint256"},{internalType:"uint256",name:"lpPremiums",type:"uint256"},{internalType:"uint256",name:"lpFee",type:"uint256"},{internalType:"uint256",name:"liquidatorFee",type:"uint256"},{internalType:"uint256",name:"smFee",type:"uint256"},{internalType:"uint256",name:"insolventAmount",type:"uint256"}],internalType:"struct OptionToken.LiquidationFees",name:"liquidationFees",type:"tuple"}],name:"routeLiquidationFunds",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"sendBaseCollateral",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"sendQuoteCollateral",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256[]",name:"positionIds",type:"uint256[]"}],name:"settleOptions",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"updateDelegateApproval",outputs:[],stateMutability:"nonpayable",type:"function"}],fo=[{inputs:[],stateMutability:"nonpayable",type:"constructor"},{inputs:[{internalType:"address",name:"thrower",type:"address"}],name:"AlreadyInitialised",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"lastInteraction",type:"uint256"},{internalType:"uint256",name:"interactionDelta",type:"uint256"},{internalType:"uint256",name:"currentTime",type:"uint256"}],name:"InteractionDelayNotExpired",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"newShortBuffer",type:"uint256"}],name:"InvalidShortBuffer",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"quoteReceived",type:"uint256"},{internalType:"uint256",name:"minCollateral",type:"uint256"}],name:"NotEnoughQuoteForMinCollateral",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"liquidityPool",type:"address"}],name:"OnlyLiquidityPool",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"nominatedOwner",type:"address"}],name:"OnlyNominatedOwner",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"owner",type:"address"}],name:"OnlyOwner",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"approvee",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"QuoteApprovalFailure",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"QuoteTransferFailed",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"shortId",type:"uint256"}],name:"ShortAccountAlreadyOpen",type:"error"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"oldAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newAmount",type:"uint256"}],name:"LongSetTo",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"shortId",type:"uint256"}],name:"OpenedShortAccount",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"oldOwner",type:"address"},{indexed:!1,internalType:"address",name:"newOwner",type:"address"}],name:"OwnerChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"newOwner",type:"address"}],name:"OwnerNominated",type:"event"},{anonymous:!1,inputs:[{components:[{internalType:"uint256",name:"interactionDelay",type:"uint256"},{internalType:"uint256",name:"hedgeCap",type:"uint256"}],indexed:!1,internalType:"struct PoolHedger.PoolHedgerParameters",name:"poolHedgerParams",type:"tuple"}],name:"PoolHedgerParametersSet",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"int256",name:"oldNetDelta",type:"int256"},{indexed:!1,internalType:"int256",name:"currentNetDelta",type:"int256"},{indexed:!1,internalType:"int256",name:"expectedNetDelta",type:"int256"}],name:"PositionUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"amountQuote",type:"uint256"}],name:"QuoteReturnedToLP",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"newShortBuffer",type:"uint256"}],name:"ShortBufferSet",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"contract ICollateralShort",name:"collateralShort",type:"address"}],name:"ShortCollateralSet",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"oldShort",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newShort",type:"uint256"},{indexed:!1,internalType:"uint256",name:"oldCollateral",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newCollateral",type:"uint256"}],name:"ShortSetTo",type:"event"},{inputs:[],name:"acceptOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"collateralShort",outputs:[{internalType:"contract ICollateralShort",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getCappedExpectedHedge",outputs:[{internalType:"int256",name:"cappedExpectedHedge",type:"int256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getCurrentHedgedNetDelta",outputs:[{internalType:"int256",name:"",type:"int256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"spotPrice",type:"uint256"}],name:"getHedgingLiquidity",outputs:[{internalType:"uint256",name:"pendingDeltaLiquidity",type:"uint256"},{internalType:"uint256",name:"usedDeltaLiquidity",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPoolHedgerParams",outputs:[{components:[{internalType:"uint256",name:"interactionDelay",type:"uint256"},{internalType:"uint256",name:"hedgeCap",type:"uint256"}],internalType:"struct PoolHedger.PoolHedgerParameters",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPoolHedgerSettings",outputs:[{components:[{internalType:"uint256",name:"interactionDelay",type:"uint256"},{internalType:"uint256",name:"hedgeCap",type:"uint256"}],internalType:"struct PoolHedger.PoolHedgerParameters",name:"_poolHedgerParams",type:"tuple"},{internalType:"uint256",name:"_shortBuffer",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getShortPosition",outputs:[{internalType:"uint256",name:"shortBalance",type:"uint256"},{internalType:"uint256",name:"collateral",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"hedgeDelta",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract SynthetixAdapter",name:"_synthetixAdapter",type:"address"},{internalType:"contract OptionMarket",name:"_optionMarket",type:"address"},{internalType:"contract OptionGreekCache",name:"_optionGreekCache",type:"address"},{internalType:"contract LiquidityPool",name:"_liquidityPool",type:"address"},{internalType:"contract ERC20",name:"_quoteAsset",type:"address"},{internalType:"contract ERC20",name:"_baseAsset",type:"address"}],name:"init",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"lastInteraction",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_owner",type:"address"}],name:"nominateNewOwner",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"nominatedOwner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"openShortAccount",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"resetInteractionDelay",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"uint256",name:"interactionDelay",type:"uint256"},{internalType:"uint256",name:"hedgeCap",type:"uint256"}],internalType:"struct PoolHedger.PoolHedgerParameters",name:"_poolHedgerParams",type:"tuple"}],name:"setPoolHedgerParams",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"_shortBuffer",type:"uint256"}],name:"setShortBuffer",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"shortBuffer",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"shortId",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"updateCollateral",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"updateCollateralShortAddress",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"updateDelegateApproval",outputs:[],stateMutability:"nonpayable",type:"function"}],ho=[{inputs:[],stateMutability:"nonpayable",type:"constructor"},{inputs:[{internalType:"address",name:"thrower",type:"address"}],name:"AlreadyInitialised",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"contract IERC20Decimals",name:"asset",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"address",name:"recipient",type:"address"}],name:"AssetTransferFailed",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"}],name:"CancellationDelayNotPassed",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"}],name:"CannotRecoverRestrictedToken",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"balance",type:"uint256"}],name:"EthTransferFailure",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"finalCollat",type:"uint256"},{components:[{internalType:"uint256",name:"size",type:"uint256"},{internalType:"uint256",name:"collateral",type:"uint256"},{internalType:"uint256",name:"averagePrice",type:"uint256"},{internalType:"uint256",name:"entryFundingRate",type:"uint256"},{internalType:"int256",name:"unrealisedPnl",type:"int256"},{internalType:"uint256",name:"lastIncreasedTime",type:"uint256"},{internalType:"bool",name:"isLong",type:"bool"}],internalType:"struct GMXFuturesPoolHedger.PositionDetails",name:"currentPos",type:"tuple"},{internalType:"uint256",name:"minCollateralUpdate",type:"uint256"}],name:"FinalCollateralTooLow",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"}],name:"GetGMXVaultError",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"lastInteraction",type:"uint256"},{internalType:"uint256",name:"interactionDelta",type:"uint256"},{internalType:"uint256",name:"currentTime",type:"uint256"}],name:"InteractionDelayNotExpired",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{components:[{internalType:"uint256",name:"acceptableSpotSlippage",type:"uint256"},{internalType:"uint256",name:"deltaThreshold",type:"uint256"},{internalType:"uint256",name:"marketDepthBuffer",type:"uint256"},{internalType:"uint256",name:"targetLeverage",type:"uint256"},{internalType:"uint256",name:"maxLeverage",type:"uint256"},{internalType:"uint256",name:"minCancelDelay",type:"uint256"},{internalType:"uint256",name:"minCollateralUpdate",type:"uint256"},{internalType:"bool",name:"vaultLiquidityCheckEnabled",type:"bool"}],internalType:"struct GMXFuturesPoolHedger.FuturesPoolHedgerParameters",name:"futuresPoolHedgerParams",type:"tuple"}],name:"InvalidFuturesPoolHedgerParams",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"finalSize",type:"uint256"},{internalType:"uint256",name:"finalCollat",type:"uint256"},{components:[{internalType:"uint256",name:"size",type:"uint256"},{internalType:"uint256",name:"collateral",type:"uint256"},{internalType:"uint256",name:"averagePrice",type:"uint256"},{internalType:"uint256",name:"entryFundingRate",type:"uint256"},{internalType:"int256",name:"unrealisedPnl",type:"int256"},{internalType:"uint256",name:"lastIncreasedTime",type:"uint256"},{internalType:"bool",name:"isLong",type:"bool"}],internalType:"struct GMXFuturesPoolHedger.PositionDetails",name:"currentPos",type:"tuple"}],name:"MaxLeverageThresholdCrossed",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"}],name:"NoQuoteReceivedFromLP",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"quoteReceived",type:"uint256"},{internalType:"uint256",name:"minCollateral",type:"uint256"}],name:"NotEnoughQuoteForMinCollateral",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"liquidityPool",type:"address"}],name:"OnlyLiquidityPool",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"nominatedOwner",type:"address"}],name:"OnlyNominatedOwner",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"owner",type:"address"}],name:"OnlyOwner",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"bytes32",name:"pendingOrderKey",type:"bytes32"}],name:"OrderCancellationFailure",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"bytes32",name:"key",type:"bytes32"}],name:"PositionRequestPending",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"approvee",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"QuoteApprovalFailure",type:"error"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"amountBase",type:"uint256"}],name:"BaseReturnedToLP",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bytes32",name:"positionKey",type:"bytes32"},{indexed:!1,internalType:"bool",name:"isLong",type:"bool"},{indexed:!1,internalType:"int256",name:"collateralDelta",type:"int256"}],name:"CollateralOrderPosted",type:"event"},{anonymous:!1,inputs:[{components:[{internalType:"uint256",name:"acceptableSpotSlippage",type:"uint256"},{internalType:"uint256",name:"deltaThreshold",type:"uint256"},{internalType:"uint256",name:"marketDepthBuffer",type:"uint256"},{internalType:"uint256",name:"targetLeverage",type:"uint256"},{internalType:"uint256",name:"maxLeverage",type:"uint256"},{internalType:"uint256",name:"minCancelDelay",type:"uint256"},{internalType:"uint256",name:"minCollateralUpdate",type:"uint256"},{internalType:"bool",name:"vaultLiquidityCheckEnabled",type:"bool"}],indexed:!1,internalType:"struct GMXFuturesPoolHedger.FuturesPoolHedgerParameters",name:"futuresPoolHedgerParams",type:"tuple"}],name:"FuturesPoolHedgerParamsSet",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bytes32",name:"positionKey",type:"bytes32"},{indexed:!1,internalType:"bool",name:"isExecuted",type:"bool"},{indexed:!1,internalType:"bool",name:"isIncrease",type:"bool"},{components:[{components:[{internalType:"uint256",name:"size",type:"uint256"},{internalType:"uint256",name:"collateral",type:"uint256"},{internalType:"uint256",name:"averagePrice",type:"uint256"},{internalType:"uint256",name:"entryFundingRate",type:"uint256"},{internalType:"int256",name:"unrealisedPnl",type:"int256"},{internalType:"uint256",name:"lastIncreasedTime",type:"uint256"},{internalType:"bool",name:"isLong",type:"bool"}],internalType:"struct GMXFuturesPoolHedger.PositionDetails",name:"longPosition",type:"tuple"},{components:[{internalType:"uint256",name:"size",type:"uint256"},{internalType:"uint256",name:"collateral",type:"uint256"},{internalType:"uint256",name:"averagePrice",type:"uint256"},{internalType:"uint256",name:"entryFundingRate",type:"uint256"},{internalType:"int256",name:"unrealisedPnl",type:"int256"},{internalType:"uint256",name:"lastIncreasedTime",type:"uint256"},{internalType:"bool",name:"isLong",type:"bool"}],internalType:"struct GMXFuturesPoolHedger.PositionDetails",name:"shortPosition",type:"tuple"},{internalType:"uint256",name:"amountOpen",type:"uint256"},{internalType:"bool",name:"isLong",type:"bool"}],indexed:!1,internalType:"struct GMXFuturesPoolHedger.CurrentPositions",name:"positions",type:"tuple"}],name:"GMXPositionCallback",type:"event"},{anonymous:!1,inputs:[{components:[{components:[{internalType:"uint256",name:"size",type:"uint256"},{internalType:"uint256",name:"collateral",type:"uint256"},{internalType:"uint256",name:"averagePrice",type:"uint256"},{internalType:"uint256",name:"entryFundingRate",type:"uint256"},{internalType:"int256",name:"unrealisedPnl",type:"int256"},{internalType:"uint256",name:"lastIncreasedTime",type:"uint256"},{internalType:"bool",name:"isLong",type:"bool"}],internalType:"struct GMXFuturesPoolHedger.PositionDetails",name:"longPosition",type:"tuple"},{components:[{internalType:"uint256",name:"size",type:"uint256"},{internalType:"uint256",name:"collateral",type:"uint256"},{internalType:"uint256",name:"averagePrice",type:"uint256"},{internalType:"uint256",name:"entryFundingRate",type:"uint256"},{internalType:"int256",name:"unrealisedPnl",type:"int256"},{internalType:"uint256",name:"lastIncreasedTime",type:"uint256"},{internalType:"bool",name:"isLong",type:"bool"}],internalType:"struct GMXFuturesPoolHedger.PositionDetails",name:"shortPosition",type:"tuple"},{internalType:"uint256",name:"amountOpen",type:"uint256"},{internalType:"bool",name:"isLong",type:"bool"}],indexed:!1,internalType:"struct GMXFuturesPoolHedger.CurrentPositions",name:"position",type:"tuple"}],name:"HedgerPosition",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bytes32",name:"pendingOrderKey",type:"bytes32"},{indexed:!1,internalType:"bool",name:"success",type:"bool"}],name:"OrderCanceled",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bytes32",name:"positionKey",type:"bytes32"},{indexed:!1,internalType:"uint256",name:"collateralDelta",type:"uint256"},{indexed:!1,internalType:"uint256",name:"sizeDelta",type:"uint256"},{indexed:!1,internalType:"bool",name:"isLong",type:"bool"},{indexed:!1,internalType:"bool",name:"isIncrease",type:"bool"}],name:"OrderPosted",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"oldOwner",type:"address"},{indexed:!1,internalType:"address",name:"newOwner",type:"address"}],name:"OwnerChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"newOwner",type:"address"}],name:"OwnerNominated",type:"event"},{anonymous:!1,inputs:[{components:[{internalType:"uint256",name:"interactionDelay",type:"uint256"},{internalType:"uint256",name:"hedgeCap",type:"uint256"}],indexed:!1,internalType:"struct PoolHedger.PoolHedgerParameters",name:"poolHedgerParams",type:"tuple"}],name:"PoolHedgerParametersSet",type:"event"},{anonymous:!1,inputs:[{components:[{internalType:"uint256",name:"size",type:"uint256"},{internalType:"uint256",name:"collateral",type:"uint256"},{internalType:"uint256",name:"averagePrice",type:"uint256"},{internalType:"uint256",name:"entryFundingRate",type:"uint256"},{internalType:"int256",name:"unrealisedPnl",type:"int256"},{internalType:"uint256",name:"lastIncreasedTime",type:"uint256"},{internalType:"bool",name:"isLong",type:"bool"}],indexed:!1,internalType:"struct GMXFuturesPoolHedger.PositionDetails",name:"currentPos",type:"tuple"}],name:"PositionNotUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"contract IPositionRouter",name:"positionRouter",type:"address"}],name:"PositionRouterSet",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"int256",name:"currentNetDelta",type:"int256"},{indexed:!1,internalType:"int256",name:"expectedNetDelta",type:"int256"},{indexed:!1,internalType:"uint256",name:"modifiedDelta",type:"uint256"},{indexed:!1,internalType:"bool",name:"isIncrease",type:"bool"}],name:"PositionUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"amountQuote",type:"uint256"}],name:"QuoteReturnedToLP",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"amountWeth",type:"uint256"},{indexed:!1,internalType:"uint256",name:"quoteReceived",type:"uint256"}],name:"WETHSold",type:"event"},{inputs:[],name:"BASIS_POINTS_DIVISOR",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"GMX_PRICE_PRECISION",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"acceptOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"baseAsset",outputs:[{internalType:"contract IERC20Decimals",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"",type:"uint256"},{internalType:"bool",name:"increasesPoolDelta",type:"bool"},{internalType:"uint256",name:"",type:"uint256"}],name:"canHedge",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"cancelPendingOrder",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"exchangeAdapter",outputs:[{internalType:"contract BaseExchangeAdapter",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"futuresPoolHedgerParams",outputs:[{internalType:"uint256",name:"acceptableSpotSlippage",type:"uint256"},{internalType:"uint256",name:"deltaThreshold",type:"uint256"},{internalType:"uint256",name:"marketDepthBuffer",type:"uint256"},{internalType:"uint256",name:"targetLeverage",type:"uint256"},{internalType:"uint256",name:"maxLeverage",type:"uint256"},{internalType:"uint256",name:"minCancelDelay",type:"uint256"},{internalType:"uint256",name:"minCollateralUpdate",type:"uint256"},{internalType:"bool",name:"vaultLiquidityCheckEnabled",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"getAllPositionsValue",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getCappedExpectedHedge",outputs:[{internalType:"int256",name:"",type:"int256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getCurrentHedgedNetDelta",outputs:[{internalType:"int256",name:"",type:"int256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getCurrentLeverage",outputs:[{internalType:"uint256",name:"leverage",type:"uint256"},{internalType:"bool",name:"isLong",type:"bool"},{internalType:"bool",name:"needUpdate",type:"bool"},{internalType:"int256",name:"collateralDelta",type:"int256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getHedgerState",outputs:[{components:[{components:[{components:[{internalType:"uint256",name:"size",type:"uint256"},{internalType:"uint256",name:"collateral",type:"uint256"},{internalType:"uint256",name:"averagePrice",type:"uint256"},{internalType:"uint256",name:"entryFundingRate",type:"uint256"},{internalType:"int256",name:"unrealisedPnl",type:"int256"},{internalType:"uint256",name:"lastIncreasedTime",type:"uint256"},{internalType:"bool",name:"isLong",type:"bool"}],internalType:"struct GMXFuturesPoolHedger.PositionDetails",name:"longPosition",type:"tuple"},{components:[{internalType:"uint256",name:"size",type:"uint256"},{internalType:"uint256",name:"collateral",type:"uint256"},{internalType:"uint256",name:"averagePrice",type:"uint256"},{internalType:"uint256",name:"entryFundingRate",type:"uint256"},{internalType:"int256",name:"unrealisedPnl",type:"int256"},{internalType:"uint256",name:"lastIncreasedTime",type:"uint256"},{internalType:"bool",name:"isLong",type:"bool"}],internalType:"struct GMXFuturesPoolHedger.PositionDetails",name:"shortPosition",type:"tuple"},{internalType:"uint256",name:"amountOpen",type:"uint256"},{internalType:"bool",name:"isLong",type:"bool"}],internalType:"struct GMXFuturesPoolHedger.CurrentPositions",name:"currentPositions",type:"tuple"},{components:[{internalType:"uint256",name:"acceptableSpotSlippage",type:"uint256"},{internalType:"uint256",name:"deltaThreshold",type:"uint256"},{internalType:"uint256",name:"marketDepthBuffer",type:"uint256"},{internalType:"uint256",name:"targetLeverage",type:"uint256"},{internalType:"uint256",name:"maxLeverage",type:"uint256"},{internalType:"uint256",name:"minCancelDelay",type:"uint256"},{internalType:"uint256",name:"minCollateralUpdate",type:"uint256"},{internalType:"bool",name:"vaultLiquidityCheckEnabled",type:"bool"}],internalType:"struct GMXFuturesPoolHedger.FuturesPoolHedgerParameters",name:"futuresPoolHedgerParams",type:"tuple"},{components:[{internalType:"contract IRouter",name:"router",type:"address"},{internalType:"contract IPositionRouter",name:"positionRouter",type:"address"},{internalType:"contract IVault",name:"vault",type:"address"},{internalType:"contract IERC20Decimals",name:"quoteAsset",type:"address"},{internalType:"contract IERC20Decimals",name:"baseAsset",type:"address"},{internalType:"contract IERC20Decimals",name:"weth",type:"address"}],internalType:"struct GMXFuturesPoolHedger.HedgerAddresses",name:"hedgerAddresses",type:"tuple"},{components:[{internalType:"uint256",name:"basePoolAmount",type:"uint256"},{internalType:"uint256",name:"baseReservedAmount",type:"uint256"},{internalType:"uint256",name:"quotePoolAmount",type:"uint256"},{internalType:"uint256",name:"quoteReservedAmount",type:"uint256"},{internalType:"uint256",name:"maxGlobalLongSize",type:"uint256"},{internalType:"uint256",name:"guaranteedUSD",type:"uint256"},{internalType:"uint256",name:"maxGlobalShortSize",type:"uint256"},{internalType:"uint256",name:"shortSize",type:"uint256"},{internalType:"uint256",name:"minExecutionFee",type:"uint256"},{internalType:"uint256",name:"remainingLongDollars",type:"uint256"},{internalType:"uint256",name:"remainingShortDollars",type:"uint256"}],internalType:"struct GMXFuturesPoolHedger.GMXView",name:"gmxView",type:"tuple"},{internalType:"bytes32",name:"referralCode",type:"bytes32"},{internalType:"bytes32",name:"pendingOrderKey",type:"bytes32"},{internalType:"uint256",name:"lastOrderTimestamp",type:"uint256"},{internalType:"uint256",name:"spotPrice",type:"uint256"},{internalType:"int256",name:"expectedHedge",type:"int256"},{internalType:"int256",name:"currentHedge",type:"int256"},{internalType:"uint256",name:"currentLeverage",type:"uint256"},{internalType:"int256",name:"pendingCollateralDelta",type:"int256"},{internalType:"uint256",name:"baseBal",type:"uint256"},{internalType:"uint256",name:"quoteBal",type:"uint256"},{internalType:"uint256",name:"wethBal",type:"uint256"}],internalType:"struct GMXFuturesPoolHedger.GMXFuturesPoolHedgerView",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"spotPrice",type:"uint256"}],name:"getHedgingLiquidity",outputs:[{internalType:"uint256",name:"pendingDeltaLiquidity",type:"uint256"},{internalType:"uint256",name:"usedDeltaLiquidity",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPoolHedgerParams",outputs:[{components:[{internalType:"uint256",name:"interactionDelay",type:"uint256"},{internalType:"uint256",name:"hedgeCap",type:"uint256"}],internalType:"struct PoolHedger.PoolHedgerParameters",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPositions",outputs:[{components:[{components:[{internalType:"uint256",name:"size",type:"uint256"},{internalType:"uint256",name:"collateral",type:"uint256"},{internalType:"uint256",name:"averagePrice",type:"uint256"},{internalType:"uint256",name:"entryFundingRate",type:"uint256"},{internalType:"int256",name:"unrealisedPnl",type:"int256"},{internalType:"uint256",name:"lastIncreasedTime",type:"uint256"},{internalType:"bool",name:"isLong",type:"bool"}],internalType:"struct GMXFuturesPoolHedger.PositionDetails",name:"longPosition",type:"tuple"},{components:[{internalType:"uint256",name:"size",type:"uint256"},{internalType:"uint256",name:"collateral",type:"uint256"},{internalType:"uint256",name:"averagePrice",type:"uint256"},{internalType:"uint256",name:"entryFundingRate",type:"uint256"},{internalType:"int256",name:"unrealisedPnl",type:"int256"},{internalType:"uint256",name:"lastIncreasedTime",type:"uint256"},{internalType:"bool",name:"isLong",type:"bool"}],internalType:"struct GMXFuturesPoolHedger.PositionDetails",name:"shortPosition",type:"tuple"},{internalType:"uint256",name:"amountOpen",type:"uint256"},{internalType:"bool",name:"isLong",type:"bool"}],internalType:"struct GMXFuturesPoolHedger.CurrentPositions",name:"positions",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"spotPrice",type:"uint256"}],name:"getRemainingLongLiquidityDollars",outputs:[{internalType:"uint256",name:"remainingDollars",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getRemainingShortLiquidityDollars",outputs:[{internalType:"uint256",name:"remainingDollars",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bool",name:"isLong",type:"bool"},{internalType:"bool",name:"isIncrease",type:"bool"},{internalType:"uint256",name:"amountIn18",type:"uint256"}],name:"getSwapFeeBP",outputs:[{internalType:"uint256",name:"feeBP",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"positionKey",type:"bytes32"},{internalType:"bool",name:"isExecuted",type:"bool"},{internalType:"bool",name:"isIncrease",type:"bool"}],name:"gmxPositionCallback",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"greekCache",outputs:[{internalType:"contract OptionGreekCache",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"hasPendingDecrease",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"hasPendingIncrease",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"hedgeDelta",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract LiquidityPool",name:"_liquidityPool",type:"address"},{internalType:"address",name:"_optionMarket",type:"address"},{internalType:"contract OptionGreekCache",name:"_greekCache",type:"address"},{internalType:"contract BaseExchangeAdapter",name:"_exchangeAdapter",type:"address"},{internalType:"contract IPositionRouter",name:"_positionRouter",type:"address"},{internalType:"contract IRouter",name:"_router",type:"address"},{internalType:"contract IERC20Decimals",name:"_quoteAsset",type:"address"},{internalType:"contract IERC20Decimals",name:"_baseAsset",type:"address"},{internalType:"contract IERC20Decimals",name:"_weth",type:"address"}],name:"init",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"lastInteraction",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"lastOrderTimestamp",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_owner",type:"address"}],name:"nominateNewOwner",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"nominatedOwner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"optionMarket",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"pendingOrderKey",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"positionRouter",outputs:[{internalType:"contract IPositionRouter",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"quoteAsset",outputs:[{internalType:"contract IERC20Decimals",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address payable",name:"receiver",type:"address"}],name:"recoverEth",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract IERC20Decimals",name:"token",type:"address"},{internalType:"address",name:"recipient",type:"address"}],name:"recoverFunds",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"referralCode",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"resetInteractionDelay",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"router",outputs:[{internalType:"contract IRouter",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"sendAllFundsToLP",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"uint256",name:"acceptableSpotSlippage",type:"uint256"},{internalType:"uint256",name:"deltaThreshold",type:"uint256"},{internalType:"uint256",name:"marketDepthBuffer",type:"uint256"},{internalType:"uint256",name:"targetLeverage",type:"uint256"},{internalType:"uint256",name:"maxLeverage",type:"uint256"},{internalType:"uint256",name:"minCancelDelay",type:"uint256"},{internalType:"uint256",name:"minCollateralUpdate",type:"uint256"},{internalType:"bool",name:"vaultLiquidityCheckEnabled",type:"bool"}],internalType:"struct GMXFuturesPoolHedger.FuturesPoolHedgerParameters",name:"_futuresPoolHedgerParams",type:"tuple"}],name:"setFuturesPoolHedgerParams",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"uint256",name:"interactionDelay",type:"uint256"},{internalType:"uint256",name:"hedgeCap",type:"uint256"}],internalType:"struct PoolHedger.PoolHedgerParameters",name:"_poolHedgerParams",type:"tuple"}],name:"setPoolHedgerParams",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract IPositionRouter",name:"_positionRouter",type:"address"}],name:"setPositionRouter",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"_referralCode",type:"bytes32"}],name:"setReferralCode",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"updateCollateral",outputs:[],stateMutability:"payable",type:"function"},{inputs:[],name:"vault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"weth",outputs:[{internalType:"contract IERC20Decimals",name:"",type:"address"}],stateMutability:"view",type:"function"},{stateMutability:"payable",type:"receive"}],vo=[{inputs:[],stateMutability:"nonpayable",type:"constructor"},{inputs:[{internalType:"address",name:"thrower",type:"address"}],name:"AlreadyInitialised",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"approvee",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"BaseApprovalFailure",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"realAmount",type:"uint256"}],name:"BaseTransferFailed",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"}],name:"CannotRecoverQuoteBase",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"beneficiary",type:"address"}],name:"InvalidBeneficiaryAddress",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{components:[{internalType:"uint256",name:"liquidityCBThreshold",type:"uint256"},{internalType:"uint256",name:"liquidityCBTimeout",type:"uint256"},{internalType:"uint256",name:"ivVarianceCBThreshold",type:"uint256"},{internalType:"uint256",name:"skewVarianceCBThreshold",type:"uint256"},{internalType:"uint256",name:"ivVarianceCBTimeout",type:"uint256"},{internalType:"uint256",name:"skewVarianceCBTimeout",type:"uint256"},{internalType:"uint256",name:"boardSettlementCBTimeout",type:"uint256"},{internalType:"uint256",name:"contractAdjustmentCBTimeout",type:"uint256"}],internalType:"struct LiquidityPool.CircuitBreakerParameters",name:"cbParams",type:"tuple"}],name:"InvalidCircuitBreakerParameters",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{components:[{internalType:"uint256",name:"minDepositWithdraw",type:"uint256"},{internalType:"uint256",name:"depositDelay",type:"uint256"},{internalType:"uint256",name:"withdrawalDelay",type:"uint256"},{internalType:"uint256",name:"withdrawalFee",type:"uint256"},{internalType:"address",name:"guardianMultisig",type:"address"},{internalType:"uint256",name:"guardianDelay",type:"uint256"},{internalType:"uint256",name:"adjustmentNetScalingFactor",type:"uint256"},{internalType:"uint256",name:"callCollatScalingFactor",type:"uint256"},{internalType:"uint256",name:"putCollatScalingFactor",type:"uint256"}],internalType:"struct LiquidityPool.LiquidityPoolParameters",name:"lpParams",type:"tuple"}],name:"InvalidLiquidityPoolParameters",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"quoteToLock",type:"uint256"},{internalType:"uint256",name:"freeLiquidity",type:"uint256"},{components:[{internalType:"uint256",name:"quote",type:"uint256"},{internalType:"uint256",name:"base",type:"uint256"}],internalType:"struct LiquidityPool.Collateral",name:"lockedCollateral",type:"tuple"}],name:"LockingMoreQuoteThanIsFree",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"amountQuote",type:"uint256"},{internalType:"uint256",name:"minDeposit",type:"uint256"}],name:"MinimumDepositNotMet",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"amountQuote",type:"uint256"},{internalType:"uint256",name:"minWithdraw",type:"uint256"}],name:"MinimumWithdrawNotMet",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"int256",name:"totalAssetValue",type:"int256"}],name:"NegativeTotalAssetValue",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"amountQuote",type:"uint256"},{components:[{internalType:"uint256",name:"freeLiquidity",type:"uint256"},{internalType:"uint256",name:"burnableLiquidity",type:"uint256"},{internalType:"uint256",name:"reservedCollatLiquidity",type:"uint256"},{internalType:"uint256",name:"pendingDeltaLiquidity",type:"uint256"},{internalType:"uint256",name:"usedDeltaLiquidity",type:"uint256"},{internalType:"uint256",name:"NAV",type:"uint256"},{internalType:"uint256",name:"longScaleFactor",type:"uint256"}],internalType:"struct LiquidityPool.Liquidity",name:"liquidity",type:"tuple"}],name:"NotEnoughFreeToReclaimInsolvency",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"nominatedOwner",type:"address"}],name:"OnlyNominatedOwner",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"optionMarket",type:"address"}],name:"OnlyOptionMarket",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"owner",type:"address"}],name:"OnlyOwner",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"poolHedger",type:"address"}],name:"OnlyPoolHedger",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"poolHedger",type:"address"}],name:"OnlyShortCollateral",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"int256",name:"totalAssetValue",type:"int256"},{internalType:"int256",name:"optionValueDebt",type:"int256"}],name:"OptionValueDebtExceedsTotalAssets",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"approvee",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"QuoteApprovalFailure",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"realAmount",type:"uint256"}],name:"QuoteTransferFailed",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"premium",type:"uint256"},{internalType:"uint256",name:"reservedFee",type:"uint256"},{internalType:"uint256",name:"freeLiquidity",type:"uint256"}],name:"SendPremiumNotEnoughCollateral",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"amountOptions",type:"uint256"},{internalType:"bool",name:"increasesDelta",type:"bool"},{internalType:"uint256",name:"strikeId",type:"uint256"}],name:"UnableToHedgeDelta",type:"error"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"quoteSpent",type:"uint256"},{indexed:!1,internalType:"uint256",name:"baseReceived",type:"uint256"}],name:"BasePurchased",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"amountBase",type:"uint256"},{indexed:!1,internalType:"uint256",name:"quoteReceived",type:"uint256"}],name:"BaseSold",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"insolventSettlementAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amountQuoteReserved",type:"uint256"},{indexed:!1,internalType:"uint256",name:"totalOutstandingSettlements",type:"uint256"}],name:"BoardSettlement",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"newTimestamp",type:"uint256"}],name:"BoardSettlementCircuitBreakerUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"baseFreed",type:"uint256"},{indexed:!1,internalType:"uint256",name:"lockedCollateralBase",type:"uint256"}],name:"CallCollateralFreed",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"baseLocked",type:"uint256"},{indexed:!1,internalType:"uint256",name:"lockedCollateralBase",type:"uint256"}],name:"CallCollateralLocked",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"entryId",type:"uint256"},{indexed:!1,internalType:"bool",name:"boardNotStale",type:"bool"},{indexed:!1,internalType:"bool",name:"validEntry",type:"bool"},{indexed:!1,internalType:"bool",name:"guardianBypass",type:"bool"},{indexed:!1,internalType:"bool",name:"delaysExpired",type:"bool"}],name:"CheckingCanProcess",type:"event"},{anonymous:!1,inputs:[{components:[{internalType:"uint256",name:"liquidityCBThreshold",type:"uint256"},{internalType:"uint256",name:"liquidityCBTimeout",type:"uint256"},{internalType:"uint256",name:"ivVarianceCBThreshold",type:"uint256"},{internalType:"uint256",name:"skewVarianceCBThreshold",type:"uint256"},{internalType:"uint256",name:"ivVarianceCBTimeout",type:"uint256"},{internalType:"uint256",name:"skewVarianceCBTimeout",type:"uint256"},{internalType:"uint256",name:"boardSettlementCBTimeout",type:"uint256"},{internalType:"uint256",name:"contractAdjustmentCBTimeout",type:"uint256"}],indexed:!1,internalType:"struct LiquidityPool.CircuitBreakerParameters",name:"cbParams",type:"tuple"}],name:"CircuitBreakerParametersUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"newTimestamp",type:"uint256"},{indexed:!1,internalType:"bool",name:"ivVarianceThresholdCrossed",type:"bool"},{indexed:!1,internalType:"bool",name:"skewVarianceThresholdCrossed",type:"bool"},{indexed:!1,internalType:"bool",name:"liquidityThresholdCrossed",type:"bool"},{indexed:!1,internalType:"bool",name:"contractAdjustmentEvent",type:"bool"}],name:"CircuitBreakerUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"caller",type:"address"},{indexed:!0,internalType:"address",name:"beneficiary",type:"address"},{indexed:!0,internalType:"uint256",name:"depositQueueId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amountDeposited",type:"uint256"},{indexed:!1,internalType:"uint256",name:"tokenPrice",type:"uint256"},{indexed:!1,internalType:"uint256",name:"tokensReceived",type:"uint256"},{indexed:!1,internalType:"uint256",name:"timestamp",type:"uint256"}],name:"DepositProcessed",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"depositor",type:"address"},{indexed:!0,internalType:"address",name:"beneficiary",type:"address"},{indexed:!0,internalType:"uint256",name:"depositQueueId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amountDeposited",type:"uint256"},{indexed:!1,internalType:"uint256",name:"totalQueuedDeposits",type:"uint256"},{indexed:!1,internalType:"uint256",name:"timestamp",type:"uint256"}],name:"DepositQueued",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"amountQuoteAdded",type:"uint256"},{indexed:!1,internalType:"uint256",name:"totalInsolventSettlementAmount",type:"uint256"}],name:"InsolventSettlementAmountUpdated",type:"event"},{anonymous:!1,inputs:[{components:[{internalType:"uint256",name:"minDepositWithdraw",type:"uint256"},{internalType:"uint256",name:"depositDelay",type:"uint256"},{internalType:"uint256",name:"withdrawalDelay",type:"uint256"},{internalType:"uint256",name:"withdrawalFee",type:"uint256"},{internalType:"address",name:"guardianMultisig",type:"address"},{internalType:"uint256",name:"guardianDelay",type:"uint256"},{internalType:"uint256",name:"adjustmentNetScalingFactor",type:"uint256"},{internalType:"uint256",name:"callCollatScalingFactor",type:"uint256"},{internalType:"uint256",name:"putCollatScalingFactor",type:"uint256"}],indexed:!1,internalType:"struct LiquidityPool.LiquidityPoolParameters",name:"lpParams",type:"tuple"}],name:"LiquidityPoolParametersUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"user",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"totalOutstandingSettlements",type:"uint256"}],name:"OutstandingSettlementSent",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"oldOwner",type:"address"},{indexed:!1,internalType:"address",name:"newOwner",type:"address"}],name:"OwnerChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"newOwner",type:"address"}],name:"OwnerNominated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"contract PoolHedger",name:"poolHedger",type:"address"}],name:"PoolHedgerUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"recipient",type:"address"},{indexed:!1,internalType:"uint256",name:"recipientPortion",type:"uint256"},{indexed:!1,internalType:"uint256",name:"optionMarketPortion",type:"uint256"}],name:"PremiumTransferred",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"quoteFreed",type:"uint256"},{indexed:!1,internalType:"uint256",name:"lockedCollateralQuote",type:"uint256"}],name:"PutCollateralFreed",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"quoteLocked",type:"uint256"},{indexed:!1,internalType:"uint256",name:"lockedCollateralQuote",type:"uint256"}],name:"PutCollateralLocked",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"amountQuote",type:"uint256"}],name:"QuoteTransferredToPoolHedger",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"caller",type:"address"},{indexed:!0,internalType:"address",name:"beneficiary",type:"address"},{indexed:!0,internalType:"uint256",name:"withdrawalQueueId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amountWithdrawn",type:"uint256"},{indexed:!1,internalType:"uint256",name:"tokenPrice",type:"uint256"},{indexed:!1,internalType:"uint256",name:"quoteReceived",type:"uint256"},{indexed:!1,internalType:"uint256",name:"totalQueuedWithdrawals",type:"uint256"},{indexed:!1,internalType:"uint256",name:"timestamp",type:"uint256"}],name:"WithdrawPartiallyProcessed",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"caller",type:"address"},{indexed:!0,internalType:"address",name:"beneficiary",type:"address"},{indexed:!0,internalType:"uint256",name:"withdrawalQueueId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amountWithdrawn",type:"uint256"},{indexed:!1,internalType:"uint256",name:"tokenPrice",type:"uint256"},{indexed:!1,internalType:"uint256",name:"quoteReceived",type:"uint256"},{indexed:!1,internalType:"uint256",name:"totalQueuedWithdrawals",type:"uint256"},{indexed:!1,internalType:"uint256",name:"timestamp",type:"uint256"}],name:"WithdrawProcessed",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"withdrawer",type:"address"},{indexed:!0,internalType:"address",name:"beneficiary",type:"address"},{indexed:!0,internalType:"uint256",name:"withdrawalQueueId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amountWithdrawn",type:"uint256"},{indexed:!1,internalType:"uint256",name:"totalQueuedWithdrawals",type:"uint256"},{indexed:!1,internalType:"uint256",name:"timestamp",type:"uint256"}],name:"WithdrawQueued",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"caller",type:"address"},{indexed:!0,internalType:"address",name:"beneficiary",type:"address"},{indexed:!0,internalType:"uint256",name:"withdrawalQueueId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"tokenPrice",type:"uint256"},{indexed:!1,internalType:"uint256",name:"totalQueuedWithdrawals",type:"uint256"},{indexed:!1,internalType:"uint256",name:"timestamp",type:"uint256"},{indexed:!1,internalType:"uint256",name:"tokensReturned",type:"uint256"}],name:"WithdrawReverted",type:"event"},{inputs:[],name:"CBTimestamp",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"acceptOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"insolventSettlements",type:"uint256"},{internalType:"uint256",name:"amountQuoteFreed",type:"uint256"},{internalType:"uint256",name:"amountQuoteReserved",type:"uint256"},{internalType:"uint256",name:"amountBaseFreed",type:"uint256"}],name:"boardSettlement",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"cbParams",outputs:[{internalType:"uint256",name:"liquidityCBThreshold",type:"uint256"},{internalType:"uint256",name:"liquidityCBTimeout",type:"uint256"},{internalType:"uint256",name:"ivVarianceCBThreshold",type:"uint256"},{internalType:"uint256",name:"skewVarianceCBThreshold",type:"uint256"},{internalType:"uint256",name:"ivVarianceCBTimeout",type:"uint256"},{internalType:"uint256",name:"skewVarianceCBTimeout",type:"uint256"},{internalType:"uint256",name:"boardSettlementCBTimeout",type:"uint256"},{internalType:"uint256",name:"contractAdjustmentCBTimeout",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"exchangeBase",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"amountBase",type:"uint256"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"totalCost",type:"uint256"},{internalType:"uint256",name:"reservedFee",type:"uint256"},{internalType:"uint256",name:"longScaleFactor",type:"uint256"}],name:"freeCallCollateralAndSendPremium",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"amountQuoteFreed",type:"uint256"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"totalCost",type:"uint256"},{internalType:"uint256",name:"reservedFee",type:"uint256"},{internalType:"uint256",name:"longScaleFactor",type:"uint256"}],name:"freePutCollateralAndSendPremium",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"getCBParams",outputs:[{components:[{internalType:"uint256",name:"liquidityCBThreshold",type:"uint256"},{internalType:"uint256",name:"liquidityCBTimeout",type:"uint256"},{internalType:"uint256",name:"ivVarianceCBThreshold",type:"uint256"},{internalType:"uint256",name:"skewVarianceCBThreshold",type:"uint256"},{internalType:"uint256",name:"ivVarianceCBTimeout",type:"uint256"},{internalType:"uint256",name:"skewVarianceCBTimeout",type:"uint256"},{internalType:"uint256",name:"boardSettlementCBTimeout",type:"uint256"},{internalType:"uint256",name:"contractAdjustmentCBTimeout",type:"uint256"}],internalType:"struct LiquidityPool.CircuitBreakerParameters",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[],name:"getLiquidity",outputs:[{components:[{internalType:"uint256",name:"freeLiquidity",type:"uint256"},{internalType:"uint256",name:"burnableLiquidity",type:"uint256"},{internalType:"uint256",name:"reservedCollatLiquidity",type:"uint256"},{internalType:"uint256",name:"pendingDeltaLiquidity",type:"uint256"},{internalType:"uint256",name:"usedDeltaLiquidity",type:"uint256"},{internalType:"uint256",name:"NAV",type:"uint256"},{internalType:"uint256",name:"longScaleFactor",type:"uint256"}],internalType:"struct LiquidityPool.Liquidity",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[],name:"getLpParams",outputs:[{components:[{internalType:"uint256",name:"minDepositWithdraw",type:"uint256"},{internalType:"uint256",name:"depositDelay",type:"uint256"},{internalType:"uint256",name:"withdrawalDelay",type:"uint256"},{internalType:"uint256",name:"withdrawalFee",type:"uint256"},{internalType:"address",name:"guardianMultisig",type:"address"},{internalType:"uint256",name:"guardianDelay",type:"uint256"},{internalType:"uint256",name:"adjustmentNetScalingFactor",type:"uint256"},{internalType:"uint256",name:"callCollatScalingFactor",type:"uint256"},{internalType:"uint256",name:"putCollatScalingFactor",type:"uint256"}],internalType:"struct LiquidityPool.LiquidityPoolParameters",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[],name:"getTokenPrice",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getTokenPriceWithCheck",outputs:[{internalType:"uint256",name:"tokenPrice",type:"uint256"},{internalType:"bool",name:"isStale",type:"bool"},{internalType:"uint256",name:"circuitBreakerExpiry",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getTotalPoolValueQuote",outputs:[{internalType:"uint256",name:"totalPoolValue",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getTotalTokenSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract BaseExchangeAdapter",name:"_exchangeAdapter",type:"address"},{internalType:"contract OptionMarket",name:"_optionMarket",type:"address"},{internalType:"contract LiquidityToken",name:"_liquidityToken",type:"address"},{internalType:"contract OptionGreekCache",name:"_greekCache",type:"address"},{internalType:"contract PoolHedger",name:"_poolHedger",type:"address"},{internalType:"contract ShortCollateral",name:"_shortCollateral",type:"address"},{internalType:"contract IERC20Decimals",name:"_quoteAsset",type:"address"},{internalType:"contract IERC20Decimals",name:"_baseAsset",type:"address"}],name:"init",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"beneficiary",type:"address"},{internalType:"uint256",name:"amountQuote",type:"uint256"}],name:"initiateDeposit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"beneficiary",type:"address"},{internalType:"uint256",name:"amountLiquidityToken",type:"uint256"}],name:"initiateWithdraw",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"insolventSettlementAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"liquidationInsolventAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"spotPrice",type:"uint256"},{internalType:"uint256",name:"freeLiquidity",type:"uint256"},{internalType:"uint256",name:"strikeId",type:"uint256"}],name:"lockCallCollateral",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"freeLiquidity",type:"uint256"},{internalType:"uint256",name:"strikeId",type:"uint256"}],name:"lockPutCollateral",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"lockedCollateral",outputs:[{internalType:"uint256",name:"quote",type:"uint256"},{internalType:"uint256",name:"base",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"lpParams",outputs:[{internalType:"uint256",name:"minDepositWithdraw",type:"uint256"},{internalType:"uint256",name:"depositDelay",type:"uint256"},{internalType:"uint256",name:"withdrawalDelay",type:"uint256"},{internalType:"uint256",name:"withdrawalFee",type:"uint256"},{internalType:"address",name:"guardianMultisig",type:"address"},{internalType:"uint256",name:"guardianDelay",type:"uint256"},{internalType:"uint256",name:"adjustmentNetScalingFactor",type:"uint256"},{internalType:"uint256",name:"callCollatScalingFactor",type:"uint256"},{internalType:"uint256",name:"putCollatScalingFactor",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"nextQueuedDepositId",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"nextQueuedWithdrawalId",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_owner",type:"address"}],name:"nominateNewOwner",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"nominatedOwner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"poolHedger",outputs:[{internalType:"contract PoolHedger",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"limit",type:"uint256"}],name:"processDepositQueue",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"limit",type:"uint256"}],name:"processWithdrawalQueue",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"protectedQuote",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"queuedDepositHead",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"queuedDeposits",outputs:[{internalType:"uint256",name:"id",type:"uint256"},{internalType:"address",name:"beneficiary",type:"address"},{internalType:"uint256",name:"amountLiquidity",type:"uint256"},{internalType:"uint256",name:"mintedTokens",type:"uint256"},{internalType:"uint256",name:"depositInitiatedTime",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"queuedWithdrawalHead",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"queuedWithdrawals",outputs:[{internalType:"uint256",name:"id",type:"uint256"},{internalType:"address",name:"beneficiary",type:"address"},{internalType:"uint256",name:"amountTokens",type:"uint256"},{internalType:"uint256",name:"quoteSent",type:"uint256"},{internalType:"uint256",name:"withdrawInitiatedTime",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"quoteAsset",outputs:[{internalType:"contract IERC20Decimals",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"amountBase",type:"uint256"}],name:"reclaimInsolventBase",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"amountQuote",type:"uint256"}],name:"reclaimInsolventQuote",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract IERC20Decimals",name:"token",type:"address"},{internalType:"address",name:"recipient",type:"address"}],name:"recoverFunds",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"user",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"sendSettlementValue",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amountContracts",type:"uint256"},{internalType:"uint256",name:"premium",type:"uint256"},{internalType:"uint256",name:"freeLiquidity",type:"uint256"},{internalType:"uint256",name:"reservedFee",type:"uint256"},{internalType:"bool",name:"isCall",type:"bool"},{internalType:"uint256",name:"strikeId",type:"uint256"}],name:"sendShortPremium",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"uint256",name:"liquidityCBThreshold",type:"uint256"},{internalType:"uint256",name:"liquidityCBTimeout",type:"uint256"},{internalType:"uint256",name:"ivVarianceCBThreshold",type:"uint256"},{internalType:"uint256",name:"skewVarianceCBThreshold",type:"uint256"},{internalType:"uint256",name:"ivVarianceCBTimeout",type:"uint256"},{internalType:"uint256",name:"skewVarianceCBTimeout",type:"uint256"},{internalType:"uint256",name:"boardSettlementCBTimeout",type:"uint256"},{internalType:"uint256",name:"contractAdjustmentCBTimeout",type:"uint256"}],internalType:"struct LiquidityPool.CircuitBreakerParameters",name:"_cbParams",type:"tuple"}],name:"setCircuitBreakerParameters",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"uint256",name:"minDepositWithdraw",type:"uint256"},{internalType:"uint256",name:"depositDelay",type:"uint256"},{internalType:"uint256",name:"withdrawalDelay",type:"uint256"},{internalType:"uint256",name:"withdrawalFee",type:"uint256"},{internalType:"address",name:"guardianMultisig",type:"address"},{internalType:"uint256",name:"guardianDelay",type:"uint256"},{internalType:"uint256",name:"adjustmentNetScalingFactor",type:"uint256"},{internalType:"uint256",name:"callCollatScalingFactor",type:"uint256"},{internalType:"uint256",name:"putCollatScalingFactor",type:"uint256"}],internalType:"struct LiquidityPool.LiquidityPoolParameters",name:"_lpParams",type:"tuple"}],name:"setLiquidityPoolParameters",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract PoolHedger",name:"newPoolHedger",type:"address"}],name:"setPoolHedger",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"totalOutstandingSettlements",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalQueuedDeposits",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalQueuedWithdrawals",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferQuoteToHedge",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"updateCBs",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"insolvencyAmountInQuote",type:"uint256"}],name:"updateLiquidationInsolvency",outputs:[],stateMutability:"nonpayable",type:"function"}],bo=[{inputs:[{internalType:"string",name:"name_",type:"string"},{internalType:"string",name:"symbol_",type:"string"}],stateMutability:"nonpayable",type:"constructor"},{inputs:[{internalType:"address",name:"thrower",type:"address"}],name:"AlreadyInitialised",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"liquidityPool",type:"address"}],name:"OnlyLiquidityPool",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"nominatedOwner",type:"address"}],name:"OnlyNominatedOwner",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"owner",type:"address"}],name:"OnlyOwner",type:"error"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"contract ILiquidityTracker",name:"liquidityTracker",type:"address"}],name:"LiquidityTrackerSet",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"oldOwner",type:"address"},{indexed:!1,internalType:"address",name:"newOwner",type:"address"}],name:"OwnerChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"newOwner",type:"address"}],name:"OwnerNominated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"},{inputs:[],name:"acceptOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"tokenAmount",type:"uint256"}],name:"burn",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"subtractedValue",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_liquidityPool",type:"address"}],name:"init",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"liquidityPool",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"liquidityTracker",outputs:[{internalType:"contract ILiquidityTracker",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"tokenAmount",type:"uint256"}],name:"mint",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_owner",type:"address"}],name:"nominateNewOwner",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"nominatedOwner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract ILiquidityTracker",name:"_liquidityTracker",type:"address"}],name:"setLiquidityTracker",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"}],ko=[{inputs:[],stateMutability:"nonpayable",type:"constructor"},{inputs:[{internalType:"address",name:"thrower",type:"address"}],name:"AlreadyInitialised",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"boardId",type:"uint256"},{internalType:"uint256",name:"newStrikesLength",type:"uint256"},{internalType:"uint256",name:"maxStrikesPerBoard",type:"uint256"}],name:"BoardStrikeLimitExceeded",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"boardId",type:"uint256"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"currentTimestamp",type:"uint256"}],name:"CannotUpdateExpiredBoard",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"timestamp",type:"uint256"},{internalType:"uint256",name:"lastObservedTimestamp",type:"uint256"}],name:"InvalidBlockTimestamp",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"boardId",type:"uint256"}],name:"InvalidBoardId",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{components:[{internalType:"uint256",name:"ivGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"skewGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"shortVolShock",type:"uint256"},{internalType:"uint256",name:"shortPostCutoffVolShock",type:"uint256"},{internalType:"uint256",name:"longVolShock",type:"uint256"},{internalType:"uint256",name:"longPostCutoffVolShock",type:"uint256"},{internalType:"uint256",name:"liquidateVolShock",type:"uint256"},{internalType:"uint256",name:"liquidatePostCutoffVolShock",type:"uint256"},{internalType:"uint256",name:"shortSpotMin",type:"uint256"},{internalType:"uint256",name:"liquidateSpotMin",type:"uint256"}],internalType:"struct OptionGreekCache.ForceCloseParameters",name:"forceCloseParams",type:"tuple"}],name:"InvalidForceCloseParameters",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{components:[{internalType:"uint256",name:"maxStrikesPerBoard",type:"uint256"},{internalType:"uint256",name:"acceptableSpotPricePercentMove",type:"uint256"},{internalType:"uint256",name:"staleUpdateDuration",type:"uint256"},{internalType:"uint256",name:"varianceIvGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"varianceSkewGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"optionValueIvGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"optionValueSkewGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"gwavSkewFloor",type:"uint256"},{internalType:"uint256",name:"gwavSkewCap",type:"uint256"}],internalType:"struct OptionGreekCache.GreekCacheParameters",name:"greekCacheParams",type:"tuple"}],name:"InvalidGreekCacheParameters",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{components:[{internalType:"uint256",name:"minStaticQuoteCollateral",type:"uint256"},{internalType:"uint256",name:"minStaticBaseCollateral",type:"uint256"},{internalType:"uint256",name:"shockVolA",type:"uint256"},{internalType:"uint256",name:"shockVolPointA",type:"uint256"},{internalType:"uint256",name:"shockVolB",type:"uint256"},{internalType:"uint256",name:"shockVolPointB",type:"uint256"},{internalType:"uint256",name:"callSpotPriceShock",type:"uint256"},{internalType:"uint256",name:"putSpotPriceShock",type:"uint256"}],internalType:"struct OptionGreekCache.MinCollateralParameters",name:"minCollatParams",type:"tuple"}],name:"InvalidMinCollatParams",type:"error"},{inputs:[],name:"LnNegativeUndefined",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"nominatedOwner",type:"address"}],name:"OnlyNominatedOwner",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"optionMarket",type:"address"}],name:"OnlyOptionMarket",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"optionMarketPricer",type:"address"}],name:"OnlyOptionMarketPricer",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"owner",type:"address"}],name:"OnlyOwner",type:"error"},{inputs:[],name:"Overflow",type:"error"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"boardId",type:"uint256"}],name:"BoardCacheRemoved",type:"event"},{anonymous:!1,inputs:[{components:[{internalType:"uint256",name:"id",type:"uint256"},{internalType:"uint256[]",name:"strikes",type:"uint256[]"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"iv",type:"uint256"},{components:[{internalType:"int256",name:"netDelta",type:"int256"},{internalType:"int256",name:"netStdVega",type:"int256"},{internalType:"int256",name:"netOptionValue",type:"int256"}],internalType:"struct OptionGreekCache.NetGreeks",name:"netGreeks",type:"tuple"},{internalType:"uint256",name:"updatedAt",type:"uint256"},{internalType:"uint256",name:"updatedAtPrice",type:"uint256"},{internalType:"uint256",name:"maxSkewVariance",type:"uint256"},{internalType:"uint256",name:"ivVariance",type:"uint256"}],indexed:!1,internalType:"struct OptionGreekCache.OptionBoardCache",name:"boardCache",type:"tuple"}],name:"BoardCacheUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"boardId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newIv",type:"uint256"},{indexed:!1,internalType:"uint256",name:"globalMaxIvVariance",type:"uint256"}],name:"BoardIvUpdated",type:"event"},{anonymous:!1,inputs:[{components:[{internalType:"uint256",name:"ivGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"skewGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"shortVolShock",type:"uint256"},{internalType:"uint256",name:"shortPostCutoffVolShock",type:"uint256"},{internalType:"uint256",name:"longVolShock",type:"uint256"},{internalType:"uint256",name:"longPostCutoffVolShock",type:"uint256"},{internalType:"uint256",name:"liquidateVolShock",type:"uint256"},{internalType:"uint256",name:"liquidatePostCutoffVolShock",type:"uint256"},{internalType:"uint256",name:"shortSpotMin",type:"uint256"},{internalType:"uint256",name:"liquidateSpotMin",type:"uint256"}],indexed:!1,internalType:"struct OptionGreekCache.ForceCloseParameters",name:"params",type:"tuple"}],name:"ForceCloseParametersSet",type:"event"},{anonymous:!1,inputs:[{components:[{internalType:"uint256",name:"minUpdatedAt",type:"uint256"},{internalType:"uint256",name:"minUpdatedAtPrice",type:"uint256"},{internalType:"uint256",name:"maxUpdatedAtPrice",type:"uint256"},{internalType:"uint256",name:"maxSkewVariance",type:"uint256"},{internalType:"uint256",name:"maxIvVariance",type:"uint256"},{components:[{internalType:"int256",name:"netDelta",type:"int256"},{internalType:"int256",name:"netStdVega",type:"int256"},{internalType:"int256",name:"netOptionValue",type:"int256"}],internalType:"struct OptionGreekCache.NetGreeks",name:"netGreeks",type:"tuple"}],indexed:!1,internalType:"struct OptionGreekCache.GlobalCache",name:"globalCache",type:"tuple"}],name:"GlobalCacheUpdated",type:"event"},{anonymous:!1,inputs:[{components:[{internalType:"uint256",name:"maxStrikesPerBoard",type:"uint256"},{internalType:"uint256",name:"acceptableSpotPricePercentMove",type:"uint256"},{internalType:"uint256",name:"staleUpdateDuration",type:"uint256"},{internalType:"uint256",name:"varianceIvGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"varianceSkewGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"optionValueIvGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"optionValueSkewGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"gwavSkewFloor",type:"uint256"},{internalType:"uint256",name:"gwavSkewCap",type:"uint256"}],indexed:!1,internalType:"struct OptionGreekCache.GreekCacheParameters",name:"params",type:"tuple"}],name:"GreekCacheParametersSet",type:"event"},{anonymous:!1,inputs:[{components:[{internalType:"uint256",name:"minStaticQuoteCollateral",type:"uint256"},{internalType:"uint256",name:"minStaticBaseCollateral",type:"uint256"},{internalType:"uint256",name:"shockVolA",type:"uint256"},{internalType:"uint256",name:"shockVolPointA",type:"uint256"},{internalType:"uint256",name:"shockVolB",type:"uint256"},{internalType:"uint256",name:"shockVolPointB",type:"uint256"},{internalType:"uint256",name:"callSpotPriceShock",type:"uint256"},{internalType:"uint256",name:"putSpotPriceShock",type:"uint256"}],indexed:!1,internalType:"struct OptionGreekCache.MinCollateralParameters",name:"params",type:"tuple"}],name:"MinCollateralParametersSet",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"oldOwner",type:"address"},{indexed:!1,internalType:"address",name:"newOwner",type:"address"}],name:"OwnerChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"newOwner",type:"address"}],name:"OwnerNominated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"strikeId",type:"uint256"}],name:"StrikeCacheRemoved",type:"event"},{anonymous:!1,inputs:[{components:[{internalType:"uint256",name:"id",type:"uint256"},{internalType:"uint256",name:"boardId",type:"uint256"},{internalType:"uint256",name:"strikePrice",type:"uint256"},{internalType:"uint256",name:"skew",type:"uint256"},{components:[{internalType:"int256",name:"callDelta",type:"int256"},{internalType:"int256",name:"putDelta",type:"int256"},{internalType:"uint256",name:"stdVega",type:"uint256"},{internalType:"uint256",name:"callPrice",type:"uint256"},{internalType:"uint256",name:"putPrice",type:"uint256"}],internalType:"struct OptionGreekCache.StrikeGreeks",name:"greeks",type:"tuple"},{internalType:"int256",name:"callExposure",type:"int256"},{internalType:"int256",name:"putExposure",type:"int256"},{internalType:"uint256",name:"skewVariance",type:"uint256"}],indexed:!1,internalType:"struct OptionGreekCache.StrikeCache",name:"strikeCache",type:"tuple"}],name:"StrikeCacheUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"strikeId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newSkew",type:"uint256"},{indexed:!1,internalType:"uint256",name:"globalMaxSkewVariance",type:"uint256"}],name:"StrikeSkewUpdated",type:"event"},{inputs:[],name:"acceptOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"uint256",name:"id",type:"uint256"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"iv",type:"uint256"},{internalType:"bool",name:"frozen",type:"bool"},{internalType:"uint256[]",name:"strikeIds",type:"uint256[]"}],internalType:"struct OptionMarket.OptionBoard",name:"board",type:"tuple"},{components:[{internalType:"uint256",name:"id",type:"uint256"},{internalType:"uint256",name:"strikePrice",type:"uint256"},{internalType:"uint256",name:"skew",type:"uint256"},{internalType:"uint256",name:"longCall",type:"uint256"},{internalType:"uint256",name:"shortCallBase",type:"uint256"},{internalType:"uint256",name:"shortCallQuote",type:"uint256"},{internalType:"uint256",name:"longPut",type:"uint256"},{internalType:"uint256",name:"shortPut",type:"uint256"},{internalType:"uint256",name:"boardId",type:"uint256"}],internalType:"struct OptionMarket.Strike[]",name:"strikes",type:"tuple[]"}],name:"addBoard",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"boardId",type:"uint256"},{internalType:"uint256",name:"strikeId",type:"uint256"},{internalType:"uint256",name:"strikePrice",type:"uint256"},{internalType:"uint256",name:"skew",type:"uint256"}],name:"addStrikeToBoard",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"boardId",type:"uint256"}],name:"getBoardGreeksView",outputs:[{components:[{components:[{internalType:"int256",name:"netDelta",type:"int256"},{internalType:"int256",name:"netStdVega",type:"int256"},{internalType:"int256",name:"netOptionValue",type:"int256"}],internalType:"struct OptionGreekCache.NetGreeks",name:"boardGreeks",type:"tuple"},{internalType:"uint256",name:"ivGWAV",type:"uint256"},{components:[{internalType:"int256",name:"callDelta",type:"int256"},{internalType:"int256",name:"putDelta",type:"int256"},{internalType:"uint256",name:"stdVega",type:"uint256"},{internalType:"uint256",name:"callPrice",type:"uint256"},{internalType:"uint256",name:"putPrice",type:"uint256"}],internalType:"struct OptionGreekCache.StrikeGreeks[]",name:"strikeGreeks",type:"tuple[]"},{internalType:"uint256[]",name:"skewGWAVs",type:"uint256[]"}],internalType:"struct OptionGreekCache.BoardGreeksView",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[],name:"getForceCloseParams",outputs:[{components:[{internalType:"uint256",name:"ivGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"skewGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"shortVolShock",type:"uint256"},{internalType:"uint256",name:"shortPostCutoffVolShock",type:"uint256"},{internalType:"uint256",name:"longVolShock",type:"uint256"},{internalType:"uint256",name:"longPostCutoffVolShock",type:"uint256"},{internalType:"uint256",name:"liquidateVolShock",type:"uint256"},{internalType:"uint256",name:"liquidatePostCutoffVolShock",type:"uint256"},{internalType:"uint256",name:"shortSpotMin",type:"uint256"},{internalType:"uint256",name:"liquidateSpotMin",type:"uint256"}],internalType:"struct OptionGreekCache.ForceCloseParameters",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[],name:"getGlobalCache",outputs:[{components:[{internalType:"uint256",name:"minUpdatedAt",type:"uint256"},{internalType:"uint256",name:"minUpdatedAtPrice",type:"uint256"},{internalType:"uint256",name:"maxUpdatedAtPrice",type:"uint256"},{internalType:"uint256",name:"maxSkewVariance",type:"uint256"},{internalType:"uint256",name:"maxIvVariance",type:"uint256"},{components:[{internalType:"int256",name:"netDelta",type:"int256"},{internalType:"int256",name:"netStdVega",type:"int256"},{internalType:"int256",name:"netOptionValue",type:"int256"}],internalType:"struct OptionGreekCache.NetGreeks",name:"netGreeks",type:"tuple"}],internalType:"struct OptionGreekCache.GlobalCache",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[],name:"getGlobalNetDelta",outputs:[{internalType:"int256",name:"",type:"int256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getGlobalOptionValue",outputs:[{internalType:"int256",name:"",type:"int256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getGreekCacheParams",outputs:[{components:[{internalType:"uint256",name:"maxStrikesPerBoard",type:"uint256"},{internalType:"uint256",name:"acceptableSpotPricePercentMove",type:"uint256"},{internalType:"uint256",name:"staleUpdateDuration",type:"uint256"},{internalType:"uint256",name:"varianceIvGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"varianceSkewGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"optionValueIvGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"optionValueSkewGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"gwavSkewFloor",type:"uint256"},{internalType:"uint256",name:"gwavSkewCap",type:"uint256"}],internalType:"struct OptionGreekCache.GreekCacheParameters",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"boardId",type:"uint256"},{internalType:"uint256",name:"secondsAgo",type:"uint256"}],name:"getIvGWAV",outputs:[{internalType:"uint256",name:"ivGWAV",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getMinCollatParams",outputs:[{components:[{internalType:"uint256",name:"minStaticQuoteCollateral",type:"uint256"},{internalType:"uint256",name:"minStaticBaseCollateral",type:"uint256"},{internalType:"uint256",name:"shockVolA",type:"uint256"},{internalType:"uint256",name:"shockVolPointA",type:"uint256"},{internalType:"uint256",name:"shockVolB",type:"uint256"},{internalType:"uint256",name:"shockVolPointB",type:"uint256"},{internalType:"uint256",name:"callSpotPriceShock",type:"uint256"},{internalType:"uint256",name:"putSpotPriceShock",type:"uint256"}],internalType:"struct OptionGreekCache.MinCollateralParameters",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"},{internalType:"uint256",name:"strikePrice",type:"uint256"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"spotPrice",type:"uint256"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"getMinCollateral",outputs:[{internalType:"uint256",name:"minCollateral",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"boardId",type:"uint256"}],name:"getOptionBoardCache",outputs:[{components:[{internalType:"uint256",name:"id",type:"uint256"},{internalType:"uint256[]",name:"strikes",type:"uint256[]"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"iv",type:"uint256"},{components:[{internalType:"int256",name:"netDelta",type:"int256"},{internalType:"int256",name:"netStdVega",type:"int256"},{internalType:"int256",name:"netOptionValue",type:"int256"}],internalType:"struct OptionGreekCache.NetGreeks",name:"netGreeks",type:"tuple"},{internalType:"uint256",name:"updatedAt",type:"uint256"},{internalType:"uint256",name:"updatedAtPrice",type:"uint256"},{internalType:"uint256",name:"maxSkewVariance",type:"uint256"},{internalType:"uint256",name:"ivVariance",type:"uint256"}],internalType:"struct OptionGreekCache.OptionBoardCache",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{components:[{internalType:"bool",name:"isBuy",type:"bool"},{internalType:"bool",name:"isForceClose",type:"bool"},{internalType:"enum OptionMarket.TradeDirection",name:"tradeDirection",type:"uint8"},{internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"strikePrice",type:"uint256"},{internalType:"uint256",name:"spotPrice",type:"uint256"},{components:[{internalType:"uint256",name:"freeLiquidity",type:"uint256"},{internalType:"uint256",name:"burnableLiquidity",type:"uint256"},{internalType:"uint256",name:"reservedCollatLiquidity",type:"uint256"},{internalType:"uint256",name:"pendingDeltaLiquidity",type:"uint256"},{internalType:"uint256",name:"usedDeltaLiquidity",type:"uint256"},{internalType:"uint256",name:"NAV",type:"uint256"},{internalType:"uint256",name:"longScaleFactor",type:"uint256"}],internalType:"struct LiquidityPool.Liquidity",name:"liquidity",type:"tuple"}],internalType:"struct OptionMarket.TradeParameters",name:"trade",type:"tuple"},{components:[{internalType:"uint256",name:"id",type:"uint256"},{internalType:"uint256",name:"strikePrice",type:"uint256"},{internalType:"uint256",name:"skew",type:"uint256"},{internalType:"uint256",name:"longCall",type:"uint256"},{internalType:"uint256",name:"shortCallBase",type:"uint256"},{internalType:"uint256",name:"shortCallQuote",type:"uint256"},{internalType:"uint256",name:"longPut",type:"uint256"},{internalType:"uint256",name:"shortPut",type:"uint256"},{internalType:"uint256",name:"boardId",type:"uint256"}],internalType:"struct OptionMarket.Strike",name:"strike",type:"tuple"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"newVol",type:"uint256"},{internalType:"bool",name:"isPostCutoff",type:"bool"}],name:"getPriceForForceClose",outputs:[{internalType:"uint256",name:"optionPrice",type:"uint256"},{internalType:"uint256",name:"forceCloseVol",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"timeToMaturity",type:"uint256"}],name:"getShockVol",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"strikeId",type:"uint256"},{internalType:"uint256",name:"secondsAgo",type:"uint256"}],name:"getSkewGWAV",outputs:[{internalType:"uint256",name:"skewGWAV",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"strikeId",type:"uint256"}],name:"getStrikeCache",outputs:[{components:[{internalType:"uint256",name:"id",type:"uint256"},{internalType:"uint256",name:"boardId",type:"uint256"},{internalType:"uint256",name:"strikePrice",type:"uint256"},{internalType:"uint256",name:"skew",type:"uint256"},{components:[{internalType:"int256",name:"callDelta",type:"int256"},{internalType:"int256",name:"putDelta",type:"int256"},{internalType:"uint256",name:"stdVega",type:"uint256"},{internalType:"uint256",name:"callPrice",type:"uint256"},{internalType:"uint256",name:"putPrice",type:"uint256"}],internalType:"struct OptionGreekCache.StrikeGreeks",name:"greeks",type:"tuple"},{internalType:"int256",name:"callExposure",type:"int256"},{internalType:"int256",name:"putExposure",type:"int256"},{internalType:"uint256",name:"skewVariance",type:"uint256"}],internalType:"struct OptionGreekCache.StrikeCache",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract BaseExchangeAdapter",name:"_exchangeAdapter",type:"address"},{internalType:"contract OptionMarket",name:"_optionMarket",type:"address"},{internalType:"address",name:"_optionMarketPricer",type:"address"}],name:"init",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"boardId",type:"uint256"}],name:"isBoardCacheStale",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"spotPrice",type:"uint256"}],name:"isGlobalCacheStale",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_owner",type:"address"}],name:"nominateNewOwner",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"nominatedOwner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"boardId",type:"uint256"}],name:"removeBoard",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"boardId",type:"uint256"},{internalType:"uint256",name:"newBaseIv",type:"uint256"}],name:"setBoardIv",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"uint256",name:"ivGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"skewGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"shortVolShock",type:"uint256"},{internalType:"uint256",name:"shortPostCutoffVolShock",type:"uint256"},{internalType:"uint256",name:"longVolShock",type:"uint256"},{internalType:"uint256",name:"longPostCutoffVolShock",type:"uint256"},{internalType:"uint256",name:"liquidateVolShock",type:"uint256"},{internalType:"uint256",name:"liquidatePostCutoffVolShock",type:"uint256"},{internalType:"uint256",name:"shortSpotMin",type:"uint256"},{internalType:"uint256",name:"liquidateSpotMin",type:"uint256"}],internalType:"struct OptionGreekCache.ForceCloseParameters",name:"_forceCloseParams",type:"tuple"}],name:"setForceCloseParameters",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"uint256",name:"maxStrikesPerBoard",type:"uint256"},{internalType:"uint256",name:"acceptableSpotPricePercentMove",type:"uint256"},{internalType:"uint256",name:"staleUpdateDuration",type:"uint256"},{internalType:"uint256",name:"varianceIvGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"varianceSkewGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"optionValueIvGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"optionValueSkewGWAVPeriod",type:"uint256"},{internalType:"uint256",name:"gwavSkewFloor",type:"uint256"},{internalType:"uint256",name:"gwavSkewCap",type:"uint256"}],internalType:"struct OptionGreekCache.GreekCacheParameters",name:"_greekCacheParams",type:"tuple"}],name:"setGreekCacheParameters",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"uint256",name:"minStaticQuoteCollateral",type:"uint256"},{internalType:"uint256",name:"minStaticBaseCollateral",type:"uint256"},{internalType:"uint256",name:"shockVolA",type:"uint256"},{internalType:"uint256",name:"shockVolPointA",type:"uint256"},{internalType:"uint256",name:"shockVolB",type:"uint256"},{internalType:"uint256",name:"shockVolPointB",type:"uint256"},{internalType:"uint256",name:"callSpotPriceShock",type:"uint256"},{internalType:"uint256",name:"putSpotPriceShock",type:"uint256"}],internalType:"struct OptionGreekCache.MinCollateralParameters",name:"_minCollatParams",type:"tuple"}],name:"setMinCollateralParameters",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"strikeId",type:"uint256"},{internalType:"uint256",name:"newSkew",type:"uint256"}],name:"setStrikeSkew",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"boardId",type:"uint256"}],name:"updateBoardCachedGreeks",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"uint256",name:"id",type:"uint256"},{internalType:"uint256",name:"strikePrice",type:"uint256"},{internalType:"uint256",name:"skew",type:"uint256"},{internalType:"uint256",name:"longCall",type:"uint256"},{internalType:"uint256",name:"shortCallBase",type:"uint256"},{internalType:"uint256",name:"shortCallQuote",type:"uint256"},{internalType:"uint256",name:"longPut",type:"uint256"},{internalType:"uint256",name:"shortPut",type:"uint256"},{internalType:"uint256",name:"boardId",type:"uint256"}],internalType:"struct OptionMarket.Strike",name:"strike",type:"tuple"},{components:[{internalType:"bool",name:"isBuy",type:"bool"},{internalType:"bool",name:"isForceClose",type:"bool"},{internalType:"enum OptionMarket.TradeDirection",name:"tradeDirection",type:"uint8"},{internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"strikePrice",type:"uint256"},{internalType:"uint256",name:"spotPrice",type:"uint256"},{components:[{internalType:"uint256",name:"freeLiquidity",type:"uint256"},{internalType:"uint256",name:"burnableLiquidity",type:"uint256"},{internalType:"uint256",name:"reservedCollatLiquidity",type:"uint256"},{internalType:"uint256",name:"pendingDeltaLiquidity",type:"uint256"},{internalType:"uint256",name:"usedDeltaLiquidity",type:"uint256"},{internalType:"uint256",name:"NAV",type:"uint256"},{internalType:"uint256",name:"longScaleFactor",type:"uint256"}],internalType:"struct LiquidityPool.Liquidity",name:"liquidity",type:"tuple"}],internalType:"struct OptionMarket.TradeParameters",name:"trade",type:"tuple"},{internalType:"uint256",name:"iv",type:"uint256"},{internalType:"uint256",name:"skew",type:"uint256"},{internalType:"bool",name:"isPostCutoff",type:"bool"}],name:"updateStrikeExposureAndGetPrice",outputs:[{components:[{internalType:"uint256",name:"optionPrice",type:"uint256"},{internalType:"int256",name:"preTradeAmmNetStdVega",type:"int256"},{internalType:"int256",name:"postTradeAmmNetStdVega",type:"int256"},{internalType:"int256",name:"callDelta",type:"int256"},{internalType:"uint256",name:"volTraded",type:"uint256"},{internalType:"uint256",name:"ivVariance",type:"uint256"},{internalType:"uint256",name:"vega",type:"uint256"}],internalType:"struct OptionGreekCache.TradePricing",name:"pricing",type:"tuple"}],stateMutability:"nonpayable",type:"function"}],go=[{inputs:[],stateMutability:"nonpayable",type:"constructor"},{inputs:[{internalType:"address",name:"thrower",type:"address"}],name:"AlreadyInitialised",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"int256",name:"strikeCallDelta",type:"int256"},{internalType:"int256",name:"minDelta",type:"int256"},{internalType:"int256",name:"maxDelta",type:"int256"}],name:"ForceCloseDeltaOutOfRange",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"bool",name:"isBuy",type:"bool"},{internalType:"uint256",name:"newSkew",type:"uint256"},{internalType:"uint256",name:"minSkew",type:"uint256"},{internalType:"uint256",name:"maxSkew",type:"uint256"}],name:"ForceCloseSkewOutOfRange",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{components:[{internalType:"uint256",name:"optionPriceFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"optionPriceFee1xPoint",type:"uint256"},{internalType:"uint256",name:"optionPriceFee2xPoint",type:"uint256"},{internalType:"uint256",name:"spotPriceFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"spotPriceFee1xPoint",type:"uint256"},{internalType:"uint256",name:"spotPriceFee2xPoint",type:"uint256"},{internalType:"uint256",name:"vegaFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"standardSize",type:"uint256"},{internalType:"uint256",name:"skewAdjustmentFactor",type:"uint256"}],internalType:"struct OptionMarketPricer.PricingParameters",name:"pricingParams",type:"tuple"}],name:"InvalidPricingParameters",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{components:[{internalType:"int256",name:"minDelta",type:"int256"},{internalType:"int256",name:"minForceCloseDelta",type:"int256"},{internalType:"uint256",name:"tradingCutoff",type:"uint256"},{internalType:"uint256",name:"minBaseIV",type:"uint256"},{internalType:"uint256",name:"maxBaseIV",type:"uint256"},{internalType:"uint256",name:"minSkew",type:"uint256"},{internalType:"uint256",name:"maxSkew",type:"uint256"},{internalType:"uint256",name:"minVol",type:"uint256"},{internalType:"uint256",name:"maxVol",type:"uint256"},{internalType:"uint256",name:"absMinSkew",type:"uint256"},{internalType:"uint256",name:"absMaxSkew",type:"uint256"},{internalType:"bool",name:"capSkewsToAbs",type:"bool"}],internalType:"struct OptionMarketPricer.TradeLimitParameters",name:"tradeLimitParams",type:"tuple"}],name:"InvalidTradeLimitParameters",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"nominatedOwner",type:"address"}],name:"OnlyNominatedOwner",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"optionMarket",type:"address"}],name:"OnlyOptionMarket",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"owner",type:"address"}],name:"OnlyOwner",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"int256",name:"strikeCallDelta",type:"int256"},{internalType:"int256",name:"minDelta",type:"int256"},{internalType:"int256",name:"maxDelta",type:"int256"}],name:"TradeDeltaOutOfRange",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"tradingCutoff",type:"uint256"},{internalType:"uint256",name:"boardExpiry",type:"uint256"},{internalType:"uint256",name:"currentTime",type:"uint256"}],name:"TradingCutoffReached",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"bool",name:"isBuy",type:"bool"},{components:[{internalType:"uint256",name:"vol",type:"uint256"},{internalType:"uint256",name:"baseIv",type:"uint256"},{internalType:"uint256",name:"skew",type:"uint256"}],internalType:"struct OptionMarketPricer.VolComponents",name:"currentVol",type:"tuple"},{components:[{internalType:"uint256",name:"vol",type:"uint256"},{internalType:"uint256",name:"baseIv",type:"uint256"},{internalType:"uint256",name:"skew",type:"uint256"}],internalType:"struct OptionMarketPricer.VolComponents",name:"newVol",type:"tuple"},{components:[{internalType:"uint256",name:"vol",type:"uint256"},{internalType:"uint256",name:"baseIv",type:"uint256"},{internalType:"uint256",name:"skew",type:"uint256"}],internalType:"struct OptionMarketPricer.VolComponents",name:"tradeBounds",type:"tuple"}],name:"VolSkewOrBaseIvOutsideOfTradingBounds",type:"error"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"oldOwner",type:"address"},{indexed:!1,internalType:"address",name:"newOwner",type:"address"}],name:"OwnerChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"newOwner",type:"address"}],name:"OwnerNominated",type:"event"},{anonymous:!1,inputs:[{components:[{internalType:"uint256",name:"optionPriceFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"optionPriceFee1xPoint",type:"uint256"},{internalType:"uint256",name:"optionPriceFee2xPoint",type:"uint256"},{internalType:"uint256",name:"spotPriceFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"spotPriceFee1xPoint",type:"uint256"},{internalType:"uint256",name:"spotPriceFee2xPoint",type:"uint256"},{internalType:"uint256",name:"vegaFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"standardSize",type:"uint256"},{internalType:"uint256",name:"skewAdjustmentFactor",type:"uint256"}],indexed:!1,internalType:"struct OptionMarketPricer.PricingParameters",name:"pricingParams",type:"tuple"}],name:"PricingParametersSet",type:"event"},{anonymous:!1,inputs:[{components:[{internalType:"int256",name:"minDelta",type:"int256"},{internalType:"int256",name:"minForceCloseDelta",type:"int256"},{internalType:"uint256",name:"tradingCutoff",type:"uint256"},{internalType:"uint256",name:"minBaseIV",type:"uint256"},{internalType:"uint256",name:"maxBaseIV",type:"uint256"},{internalType:"uint256",name:"minSkew",type:"uint256"},{internalType:"uint256",name:"maxSkew",type:"uint256"},{internalType:"uint256",name:"minVol",type:"uint256"},{internalType:"uint256",name:"maxVol",type:"uint256"},{internalType:"uint256",name:"absMinSkew",type:"uint256"},{internalType:"uint256",name:"absMaxSkew",type:"uint256"},{internalType:"bool",name:"capSkewsToAbs",type:"bool"}],indexed:!1,internalType:"struct OptionMarketPricer.TradeLimitParameters",name:"tradeLimitParams",type:"tuple"}],name:"TradeLimitParametersSet",type:"event"},{anonymous:!1,inputs:[{components:[{internalType:"uint256",name:"defaultVarianceFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"forceCloseVarianceFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"skewAdjustmentCoefficient",type:"uint256"},{internalType:"uint256",name:"referenceSkew",type:"uint256"},{internalType:"uint256",name:"minimumStaticSkewAdjustment",type:"uint256"},{internalType:"uint256",name:"vegaCoefficient",type:"uint256"},{internalType:"uint256",name:"minimumStaticVega",type:"uint256"},{internalType:"uint256",name:"ivVarianceCoefficient",type:"uint256"},{internalType:"uint256",name:"minimumStaticIvVariance",type:"uint256"}],indexed:!1,internalType:"struct OptionMarketPricer.VarianceFeeParameters",name:"varianceFeeParams",type:"tuple"}],name:"VarianceFeeParametersSet",type:"event"},{inputs:[],name:"acceptOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"getPricingParams",outputs:[{components:[{internalType:"uint256",name:"optionPriceFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"optionPriceFee1xPoint",type:"uint256"},{internalType:"uint256",name:"optionPriceFee2xPoint",type:"uint256"},{internalType:"uint256",name:"spotPriceFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"spotPriceFee1xPoint",type:"uint256"},{internalType:"uint256",name:"spotPriceFee2xPoint",type:"uint256"},{internalType:"uint256",name:"vegaFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"standardSize",type:"uint256"},{internalType:"uint256",name:"skewAdjustmentFactor",type:"uint256"}],internalType:"struct OptionMarketPricer.PricingParameters",name:"pricingParameters",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"pointA",type:"uint256"},{internalType:"uint256",name:"pointB",type:"uint256"},{internalType:"uint256",name:"coefficient",type:"uint256"}],name:"getTimeWeightedFee",outputs:[{internalType:"uint256",name:"timeWeightedFee",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getTradeLimitParams",outputs:[{components:[{internalType:"int256",name:"minDelta",type:"int256"},{internalType:"int256",name:"minForceCloseDelta",type:"int256"},{internalType:"uint256",name:"tradingCutoff",type:"uint256"},{internalType:"uint256",name:"minBaseIV",type:"uint256"},{internalType:"uint256",name:"maxBaseIV",type:"uint256"},{internalType:"uint256",name:"minSkew",type:"uint256"},{internalType:"uint256",name:"maxSkew",type:"uint256"},{internalType:"uint256",name:"minVol",type:"uint256"},{internalType:"uint256",name:"maxVol",type:"uint256"},{internalType:"uint256",name:"absMinSkew",type:"uint256"},{internalType:"uint256",name:"absMaxSkew",type:"uint256"},{internalType:"bool",name:"capSkewsToAbs",type:"bool"}],internalType:"struct OptionMarketPricer.TradeLimitParameters",name:"tradeLimitParameters",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{components:[{internalType:"bool",name:"isBuy",type:"bool"},{internalType:"bool",name:"isForceClose",type:"bool"},{internalType:"enum OptionMarket.TradeDirection",name:"tradeDirection",type:"uint8"},{internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"strikePrice",type:"uint256"},{internalType:"uint256",name:"spotPrice",type:"uint256"},{components:[{internalType:"uint256",name:"freeLiquidity",type:"uint256"},{internalType:"uint256",name:"burnableLiquidity",type:"uint256"},{internalType:"uint256",name:"reservedCollatLiquidity",type:"uint256"},{internalType:"uint256",name:"pendingDeltaLiquidity",type:"uint256"},{internalType:"uint256",name:"usedDeltaLiquidity",type:"uint256"},{internalType:"uint256",name:"NAV",type:"uint256"},{internalType:"uint256",name:"longScaleFactor",type:"uint256"}],internalType:"struct LiquidityPool.Liquidity",name:"liquidity",type:"tuple"}],internalType:"struct OptionMarket.TradeParameters",name:"trade",type:"tuple"},{components:[{internalType:"uint256",name:"optionPrice",type:"uint256"},{internalType:"int256",name:"preTradeAmmNetStdVega",type:"int256"},{internalType:"int256",name:"postTradeAmmNetStdVega",type:"int256"},{internalType:"int256",name:"callDelta",type:"int256"},{internalType:"uint256",name:"volTraded",type:"uint256"},{internalType:"uint256",name:"ivVariance",type:"uint256"},{internalType:"uint256",name:"vega",type:"uint256"}],internalType:"struct OptionGreekCache.TradePricing",name:"pricing",type:"tuple"},{internalType:"uint256",name:"newBaseIv",type:"uint256"},{internalType:"uint256",name:"newSkew",type:"uint256"}],name:"getTradeResult",outputs:[{components:[{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"premium",type:"uint256"},{internalType:"uint256",name:"optionPriceFee",type:"uint256"},{internalType:"uint256",name:"spotPriceFee",type:"uint256"},{components:[{internalType:"int256",name:"preTradeAmmNetStdVega",type:"int256"},{internalType:"int256",name:"postTradeAmmNetStdVega",type:"int256"},{internalType:"uint256",name:"vegaUtil",type:"uint256"},{internalType:"uint256",name:"volTraded",type:"uint256"},{internalType:"uint256",name:"NAV",type:"uint256"},{internalType:"uint256",name:"vegaUtilFee",type:"uint256"}],internalType:"struct OptionMarketPricer.VegaUtilFeeComponents",name:"vegaUtilFee",type:"tuple"},{components:[{internalType:"uint256",name:"varianceFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"vega",type:"uint256"},{internalType:"uint256",name:"vegaCoefficient",type:"uint256"},{internalType:"uint256",name:"skew",type:"uint256"},{internalType:"uint256",name:"skewCoefficient",type:"uint256"},{internalType:"uint256",name:"ivVariance",type:"uint256"},{internalType:"uint256",name:"ivVarianceCoefficient",type:"uint256"},{internalType:"uint256",name:"varianceFee",type:"uint256"}],internalType:"struct OptionMarketPricer.VarianceFeeComponents",name:"varianceFee",type:"tuple"},{internalType:"uint256",name:"totalFee",type:"uint256"},{internalType:"uint256",name:"totalCost",type:"uint256"},{internalType:"uint256",name:"volTraded",type:"uint256"},{internalType:"uint256",name:"newBaseIv",type:"uint256"},{internalType:"uint256",name:"newSkew",type:"uint256"}],internalType:"struct OptionMarketPricer.TradeResult",name:"tradeResult",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{components:[{internalType:"bool",name:"isBuy",type:"bool"},{internalType:"bool",name:"isForceClose",type:"bool"},{internalType:"enum OptionMarket.TradeDirection",name:"tradeDirection",type:"uint8"},{internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"strikePrice",type:"uint256"},{internalType:"uint256",name:"spotPrice",type:"uint256"},{components:[{internalType:"uint256",name:"freeLiquidity",type:"uint256"},{internalType:"uint256",name:"burnableLiquidity",type:"uint256"},{internalType:"uint256",name:"reservedCollatLiquidity",type:"uint256"},{internalType:"uint256",name:"pendingDeltaLiquidity",type:"uint256"},{internalType:"uint256",name:"usedDeltaLiquidity",type:"uint256"},{internalType:"uint256",name:"NAV",type:"uint256"},{internalType:"uint256",name:"longScaleFactor",type:"uint256"}],internalType:"struct LiquidityPool.Liquidity",name:"liquidity",type:"tuple"}],internalType:"struct OptionMarket.TradeParameters",name:"trade",type:"tuple"},{components:[{internalType:"uint256",name:"optionPrice",type:"uint256"},{internalType:"int256",name:"preTradeAmmNetStdVega",type:"int256"},{internalType:"int256",name:"postTradeAmmNetStdVega",type:"int256"},{internalType:"int256",name:"callDelta",type:"int256"},{internalType:"uint256",name:"volTraded",type:"uint256"},{internalType:"uint256",name:"ivVariance",type:"uint256"},{internalType:"uint256",name:"vega",type:"uint256"}],internalType:"struct OptionGreekCache.TradePricing",name:"pricing",type:"tuple"},{internalType:"uint256",name:"skew",type:"uint256"}],name:"getVarianceFee",outputs:[{components:[{internalType:"uint256",name:"varianceFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"vega",type:"uint256"},{internalType:"uint256",name:"vegaCoefficient",type:"uint256"},{internalType:"uint256",name:"skew",type:"uint256"},{internalType:"uint256",name:"skewCoefficient",type:"uint256"},{internalType:"uint256",name:"ivVariance",type:"uint256"},{internalType:"uint256",name:"ivVarianceCoefficient",type:"uint256"},{internalType:"uint256",name:"varianceFee",type:"uint256"}],internalType:"struct OptionMarketPricer.VarianceFeeComponents",name:"varianceFeeComponents",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVarianceFeeParams",outputs:[{components:[{internalType:"uint256",name:"defaultVarianceFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"forceCloseVarianceFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"skewAdjustmentCoefficient",type:"uint256"},{internalType:"uint256",name:"referenceSkew",type:"uint256"},{internalType:"uint256",name:"minimumStaticSkewAdjustment",type:"uint256"},{internalType:"uint256",name:"vegaCoefficient",type:"uint256"},{internalType:"uint256",name:"minimumStaticVega",type:"uint256"},{internalType:"uint256",name:"ivVarianceCoefficient",type:"uint256"},{internalType:"uint256",name:"minimumStaticIvVariance",type:"uint256"}],internalType:"struct OptionMarketPricer.VarianceFeeParameters",name:"varianceFeeParameters",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{components:[{internalType:"bool",name:"isBuy",type:"bool"},{internalType:"bool",name:"isForceClose",type:"bool"},{internalType:"enum OptionMarket.TradeDirection",name:"tradeDirection",type:"uint8"},{internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"strikePrice",type:"uint256"},{internalType:"uint256",name:"spotPrice",type:"uint256"},{components:[{internalType:"uint256",name:"freeLiquidity",type:"uint256"},{internalType:"uint256",name:"burnableLiquidity",type:"uint256"},{internalType:"uint256",name:"reservedCollatLiquidity",type:"uint256"},{internalType:"uint256",name:"pendingDeltaLiquidity",type:"uint256"},{internalType:"uint256",name:"usedDeltaLiquidity",type:"uint256"},{internalType:"uint256",name:"NAV",type:"uint256"},{internalType:"uint256",name:"longScaleFactor",type:"uint256"}],internalType:"struct LiquidityPool.Liquidity",name:"liquidity",type:"tuple"}],internalType:"struct OptionMarket.TradeParameters",name:"trade",type:"tuple"},{components:[{internalType:"uint256",name:"optionPrice",type:"uint256"},{internalType:"int256",name:"preTradeAmmNetStdVega",type:"int256"},{internalType:"int256",name:"postTradeAmmNetStdVega",type:"int256"},{internalType:"int256",name:"callDelta",type:"int256"},{internalType:"uint256",name:"volTraded",type:"uint256"},{internalType:"uint256",name:"ivVariance",type:"uint256"},{internalType:"uint256",name:"vega",type:"uint256"}],internalType:"struct OptionGreekCache.TradePricing",name:"pricing",type:"tuple"}],name:"getVegaUtilFee",outputs:[{components:[{internalType:"int256",name:"preTradeAmmNetStdVega",type:"int256"},{internalType:"int256",name:"postTradeAmmNetStdVega",type:"int256"},{internalType:"uint256",name:"vegaUtil",type:"uint256"},{internalType:"uint256",name:"volTraded",type:"uint256"},{internalType:"uint256",name:"NAV",type:"uint256"},{internalType:"uint256",name:"vegaUtilFee",type:"uint256"}],internalType:"struct OptionMarketPricer.VegaUtilFeeComponents",name:"vegaUtilFeeComponents",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_optionMarket",type:"address"},{internalType:"contract OptionGreekCache",name:"_greekCache",type:"address"}],name:"init",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"bool",name:"isBuy",type:"bool"},{internalType:"bool",name:"isForceClose",type:"bool"},{internalType:"enum OptionMarket.TradeDirection",name:"tradeDirection",type:"uint8"},{internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"strikePrice",type:"uint256"},{internalType:"uint256",name:"spotPrice",type:"uint256"},{components:[{internalType:"uint256",name:"freeLiquidity",type:"uint256"},{internalType:"uint256",name:"burnableLiquidity",type:"uint256"},{internalType:"uint256",name:"reservedCollatLiquidity",type:"uint256"},{internalType:"uint256",name:"pendingDeltaLiquidity",type:"uint256"},{internalType:"uint256",name:"usedDeltaLiquidity",type:"uint256"},{internalType:"uint256",name:"NAV",type:"uint256"},{internalType:"uint256",name:"longScaleFactor",type:"uint256"}],internalType:"struct LiquidityPool.Liquidity",name:"liquidity",type:"tuple"}],internalType:"struct OptionMarket.TradeParameters",name:"trade",type:"tuple"},{internalType:"uint256",name:"boardBaseIv",type:"uint256"},{internalType:"uint256",name:"strikeSkew",type:"uint256"}],name:"ivImpactForTrade",outputs:[{internalType:"uint256",name:"newBaseIv",type:"uint256"},{internalType:"uint256",name:"newSkew",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_owner",type:"address"}],name:"nominateNewOwner",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"nominatedOwner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"pricingParams",outputs:[{internalType:"uint256",name:"optionPriceFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"optionPriceFee1xPoint",type:"uint256"},{internalType:"uint256",name:"optionPriceFee2xPoint",type:"uint256"},{internalType:"uint256",name:"spotPriceFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"spotPriceFee1xPoint",type:"uint256"},{internalType:"uint256",name:"spotPriceFee2xPoint",type:"uint256"},{internalType:"uint256",name:"vegaFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"standardSize",type:"uint256"},{internalType:"uint256",name:"skewAdjustmentFactor",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{components:[{internalType:"uint256",name:"optionPriceFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"optionPriceFee1xPoint",type:"uint256"},{internalType:"uint256",name:"optionPriceFee2xPoint",type:"uint256"},{internalType:"uint256",name:"spotPriceFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"spotPriceFee1xPoint",type:"uint256"},{internalType:"uint256",name:"spotPriceFee2xPoint",type:"uint256"},{internalType:"uint256",name:"vegaFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"standardSize",type:"uint256"},{internalType:"uint256",name:"skewAdjustmentFactor",type:"uint256"}],internalType:"struct OptionMarketPricer.PricingParameters",name:"_pricingParams",type:"tuple"}],name:"setPricingParams",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"int256",name:"minDelta",type:"int256"},{internalType:"int256",name:"minForceCloseDelta",type:"int256"},{internalType:"uint256",name:"tradingCutoff",type:"uint256"},{internalType:"uint256",name:"minBaseIV",type:"uint256"},{internalType:"uint256",name:"maxBaseIV",type:"uint256"},{internalType:"uint256",name:"minSkew",type:"uint256"},{internalType:"uint256",name:"maxSkew",type:"uint256"},{internalType:"uint256",name:"minVol",type:"uint256"},{internalType:"uint256",name:"maxVol",type:"uint256"},{internalType:"uint256",name:"absMinSkew",type:"uint256"},{internalType:"uint256",name:"absMaxSkew",type:"uint256"},{internalType:"bool",name:"capSkewsToAbs",type:"bool"}],internalType:"struct OptionMarketPricer.TradeLimitParameters",name:"_tradeLimitParams",type:"tuple"}],name:"setTradeLimitParams",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"uint256",name:"defaultVarianceFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"forceCloseVarianceFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"skewAdjustmentCoefficient",type:"uint256"},{internalType:"uint256",name:"referenceSkew",type:"uint256"},{internalType:"uint256",name:"minimumStaticSkewAdjustment",type:"uint256"},{internalType:"uint256",name:"vegaCoefficient",type:"uint256"},{internalType:"uint256",name:"minimumStaticVega",type:"uint256"},{internalType:"uint256",name:"ivVarianceCoefficient",type:"uint256"},{internalType:"uint256",name:"minimumStaticIvVariance",type:"uint256"}],internalType:"struct OptionMarketPricer.VarianceFeeParameters",name:"_varianceFeeParams",type:"tuple"}],name:"setVarianceFeeParams",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"tradeLimitParams",outputs:[{internalType:"int256",name:"minDelta",type:"int256"},{internalType:"int256",name:"minForceCloseDelta",type:"int256"},{internalType:"uint256",name:"tradingCutoff",type:"uint256"},{internalType:"uint256",name:"minBaseIV",type:"uint256"},{internalType:"uint256",name:"maxBaseIV",type:"uint256"},{internalType:"uint256",name:"minSkew",type:"uint256"},{internalType:"uint256",name:"maxSkew",type:"uint256"},{internalType:"uint256",name:"minVol",type:"uint256"},{internalType:"uint256",name:"maxVol",type:"uint256"},{internalType:"uint256",name:"absMinSkew",type:"uint256"},{internalType:"uint256",name:"absMaxSkew",type:"uint256"},{internalType:"bool",name:"capSkewsToAbs",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{components:[{internalType:"uint256",name:"id",type:"uint256"},{internalType:"uint256",name:"strikePrice",type:"uint256"},{internalType:"uint256",name:"skew",type:"uint256"},{internalType:"uint256",name:"longCall",type:"uint256"},{internalType:"uint256",name:"shortCallBase",type:"uint256"},{internalType:"uint256",name:"shortCallQuote",type:"uint256"},{internalType:"uint256",name:"longPut",type:"uint256"},{internalType:"uint256",name:"shortPut",type:"uint256"},{internalType:"uint256",name:"boardId",type:"uint256"}],internalType:"struct OptionMarket.Strike",name:"strike",type:"tuple"},{components:[{internalType:"bool",name:"isBuy",type:"bool"},{internalType:"bool",name:"isForceClose",type:"bool"},{internalType:"enum OptionMarket.TradeDirection",name:"tradeDirection",type:"uint8"},{internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"strikePrice",type:"uint256"},{internalType:"uint256",name:"spotPrice",type:"uint256"},{components:[{internalType:"uint256",name:"freeLiquidity",type:"uint256"},{internalType:"uint256",name:"burnableLiquidity",type:"uint256"},{internalType:"uint256",name:"reservedCollatLiquidity",type:"uint256"},{internalType:"uint256",name:"pendingDeltaLiquidity",type:"uint256"},{internalType:"uint256",name:"usedDeltaLiquidity",type:"uint256"},{internalType:"uint256",name:"NAV",type:"uint256"},{internalType:"uint256",name:"longScaleFactor",type:"uint256"}],internalType:"struct LiquidityPool.Liquidity",name:"liquidity",type:"tuple"}],internalType:"struct OptionMarket.TradeParameters",name:"trade",type:"tuple"},{internalType:"uint256",name:"boardBaseIv",type:"uint256"},{internalType:"uint256",name:"boardExpiry",type:"uint256"}],name:"updateCacheAndGetTradeResult",outputs:[{components:[{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"premium",type:"uint256"},{internalType:"uint256",name:"optionPriceFee",type:"uint256"},{internalType:"uint256",name:"spotPriceFee",type:"uint256"},{components:[{internalType:"int256",name:"preTradeAmmNetStdVega",type:"int256"},{internalType:"int256",name:"postTradeAmmNetStdVega",type:"int256"},{internalType:"uint256",name:"vegaUtil",type:"uint256"},{internalType:"uint256",name:"volTraded",type:"uint256"},{internalType:"uint256",name:"NAV",type:"uint256"},{internalType:"uint256",name:"vegaUtilFee",type:"uint256"}],internalType:"struct OptionMarketPricer.VegaUtilFeeComponents",name:"vegaUtilFee",type:"tuple"},{components:[{internalType:"uint256",name:"varianceFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"vega",type:"uint256"},{internalType:"uint256",name:"vegaCoefficient",type:"uint256"},{internalType:"uint256",name:"skew",type:"uint256"},{internalType:"uint256",name:"skewCoefficient",type:"uint256"},{internalType:"uint256",name:"ivVariance",type:"uint256"},{internalType:"uint256",name:"ivVarianceCoefficient",type:"uint256"},{internalType:"uint256",name:"varianceFee",type:"uint256"}],internalType:"struct OptionMarketPricer.VarianceFeeComponents",name:"varianceFee",type:"tuple"},{internalType:"uint256",name:"totalFee",type:"uint256"},{internalType:"uint256",name:"totalCost",type:"uint256"},{internalType:"uint256",name:"volTraded",type:"uint256"},{internalType:"uint256",name:"newBaseIv",type:"uint256"},{internalType:"uint256",name:"newSkew",type:"uint256"}],internalType:"struct OptionMarketPricer.TradeResult",name:"tradeResult",type:"tuple"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"varianceFeeParams",outputs:[{internalType:"uint256",name:"defaultVarianceFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"forceCloseVarianceFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"skewAdjustmentCoefficient",type:"uint256"},{internalType:"uint256",name:"referenceSkew",type:"uint256"},{internalType:"uint256",name:"minimumStaticSkewAdjustment",type:"uint256"},{internalType:"uint256",name:"vegaCoefficient",type:"uint256"},{internalType:"uint256",name:"minimumStaticVega",type:"uint256"},{internalType:"uint256",name:"ivVarianceCoefficient",type:"uint256"},{internalType:"uint256",name:"minimumStaticIvVariance",type:"uint256"}],stateMutability:"view",type:"function"}],wo=[{inputs:[{internalType:"string",name:"name_",type:"string"},{internalType:"string",name:"symbol_",type:"string"}],stateMutability:"nonpayable",type:"constructor"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"bool",name:"invalidPositionId",type:"bool"},{internalType:"bool",name:"positionInactive",type:"bool"},{internalType:"bool",name:"isShort",type:"bool"}],name:"AddingCollateralToInvalidPosition",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{components:[{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"uint256",name:"strikeId",type:"uint256"},{internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"collateral",type:"uint256"},{internalType:"enum OptionToken.PositionState",name:"state",type:"uint8"}],internalType:"struct OptionToken.OptionPosition",name:"position",type:"tuple"},{internalType:"uint256",name:"spotPrice",type:"uint256"}],name:"AdjustmentResultsInMinimumCollateralNotBeingMet",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"}],name:"AlreadyInitialised",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"bool",name:"invalidPositionId",type:"bool"},{internalType:"bool",name:"positionInactive",type:"bool"},{internalType:"bool",name:"strikeMismatch",type:"bool"},{internalType:"bool",name:"optionTypeMismatch",type:"bool"}],name:"CannotAdjustInvalidPosition",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"}],name:"CannotClosePositionZero",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"}],name:"CannotOpenZeroAmount",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"uint256",name:"setCollateralTo",type:"uint256"}],name:"FullyClosingWithNonZeroSetCollateral",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{components:[{internalType:"uint256",name:"penaltyRatio",type:"uint256"},{internalType:"uint256",name:"liquidatorFeeRatio",type:"uint256"},{internalType:"uint256",name:"smFeeRatio",type:"uint256"},{internalType:"uint256",name:"minLiquidationFee",type:"uint256"}],internalType:"struct OptionToken.PartialCollateralParameters",name:"partialCollatParams",type:"tuple"}],name:"InvalidPartialCollateralParameters",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"originalPositionAmount",type:"uint256"},{internalType:"uint256",name:"splitAmount",type:"uint256"}],name:"InvalidSplitAmount",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"uint256",name:"positionId",type:"uint256"}],name:"MergingUnapprovedPosition",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"}],name:"MustMergeTwoOrMorePositions",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"nominatedOwner",type:"address"}],name:"OnlyNominatedOwner",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"optionMarket",type:"address"}],name:"OnlyOptionMarket",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"owner",type:"address"}],name:"OnlyOwner",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"address",name:"trader",type:"address"},{internalType:"address",name:"owner",type:"address"}],name:"OnlyOwnerCanAdjustPosition",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"shortCollateral",type:"address"}],name:"OnlyShortCollateral",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{components:[{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"uint256",name:"strikeId",type:"uint256"},{internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"collateral",type:"uint256"},{internalType:"enum OptionToken.PositionState",name:"state",type:"uint8"}],internalType:"struct OptionToken.OptionPosition",name:"firstPosition",type:"tuple"},{components:[{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"uint256",name:"strikeId",type:"uint256"},{internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"collateral",type:"uint256"},{internalType:"enum OptionToken.PositionState",name:"state",type:"uint8"}],internalType:"struct OptionToken.OptionPosition",name:"nextPosition",type:"tuple"},{internalType:"bool",name:"ownerMismatch",type:"bool"},{internalType:"bool",name:"strikeMismatch",type:"bool"},{internalType:"bool",name:"optionTypeMismatch",type:"bool"},{internalType:"bool",name:"duplicatePositionId",type:"bool"}],name:"PositionMismatchWhenMerging",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{components:[{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"uint256",name:"strikeId",type:"uint256"},{internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"collateral",type:"uint256"},{internalType:"enum OptionToken.PositionState",name:"state",type:"uint8"}],internalType:"struct OptionToken.OptionPosition",name:"position",type:"tuple"},{internalType:"uint256",name:"spotPrice",type:"uint256"}],name:"PositionNotLiquidatable",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{components:[{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"uint256",name:"strikeId",type:"uint256"},{internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"collateral",type:"uint256"},{internalType:"enum OptionToken.PositionState",name:"state",type:"uint8"}],internalType:"struct OptionToken.OptionPosition",name:"position",type:"tuple"},{internalType:"uint256",name:"spotPrice",type:"uint256"}],name:"ResultingNewPositionLiquidatable",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{components:[{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"uint256",name:"strikeId",type:"uint256"},{internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"collateral",type:"uint256"},{internalType:"enum OptionToken.PositionState",name:"state",type:"uint8"}],internalType:"struct OptionToken.OptionPosition",name:"position",type:"tuple"},{internalType:"uint256",name:"spotPrice",type:"uint256"}],name:"ResultingOriginalPositionLiquidatable",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"uint256",name:"positionId",type:"uint256"}],name:"SplittingUnapprovedPosition",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"strikeId",type:"uint256"}],name:"StrikeIsSettled",type:"error"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"approved",type:"address"},{indexed:!0,internalType:"uint256",name:"tokenId",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"operator",type:"address"},{indexed:!1,internalType:"bool",name:"approved",type:"bool"}],name:"ApprovalForAll",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"oldOwner",type:"address"},{indexed:!1,internalType:"address",name:"newOwner",type:"address"}],name:"OwnerChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"newOwner",type:"address"}],name:"OwnerNominated",type:"event"},{anonymous:!1,inputs:[{components:[{internalType:"uint256",name:"penaltyRatio",type:"uint256"},{internalType:"uint256",name:"liquidatorFeeRatio",type:"uint256"},{internalType:"uint256",name:"smFeeRatio",type:"uint256"},{internalType:"uint256",name:"minLiquidationFee",type:"uint256"}],indexed:!1,internalType:"struct OptionToken.PartialCollateralParameters",name:"partialCollateralParams",type:"tuple"}],name:"PartialCollateralParamsSet",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"positionId",type:"uint256"},{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"enum OptionToken.PositionUpdatedType",name:"updatedType",type:"uint8"},{components:[{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"uint256",name:"strikeId",type:"uint256"},{internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"collateral",type:"uint256"},{internalType:"enum OptionToken.PositionState",name:"state",type:"uint8"}],indexed:!1,internalType:"struct OptionToken.OptionPosition",name:"position",type:"tuple"},{indexed:!1,internalType:"uint256",name:"timestamp",type:"uint256"}],name:"PositionUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!0,internalType:"uint256",name:"tokenId",type:"uint256"}],name:"Transfer",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"string",name:"URI",type:"string"}],name:"URISet",type:"event"},{inputs:[],name:"acceptOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"uint256",name:"amountCollateral",type:"uint256"}],name:"addCollateral",outputs:[{internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"bool",name:"isBuy",type:"bool"},{internalType:"bool",name:"isForceClose",type:"bool"},{internalType:"enum OptionMarket.TradeDirection",name:"tradeDirection",type:"uint8"},{internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"strikePrice",type:"uint256"},{internalType:"uint256",name:"spotPrice",type:"uint256"},{components:[{internalType:"uint256",name:"freeLiquidity",type:"uint256"},{internalType:"uint256",name:"burnableLiquidity",type:"uint256"},{internalType:"uint256",name:"reservedCollatLiquidity",type:"uint256"},{internalType:"uint256",name:"pendingDeltaLiquidity",type:"uint256"},{internalType:"uint256",name:"usedDeltaLiquidity",type:"uint256"},{internalType:"uint256",name:"NAV",type:"uint256"},{internalType:"uint256",name:"longScaleFactor",type:"uint256"}],internalType:"struct LiquidityPool.Liquidity",name:"liquidity",type:"tuple"}],internalType:"struct OptionMarket.TradeParameters",name:"trade",type:"tuple"},{internalType:"uint256",name:"strikeId",type:"uint256"},{internalType:"address",name:"trader",type:"address"},{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"uint256",name:"optionCost",type:"uint256"},{internalType:"uint256",name:"setCollateralTo",type:"uint256"},{internalType:"bool",name:"isOpen",type:"bool"}],name:"adjustPosition",outputs:[{internalType:"uint256",name:"",type:"uint256"},{internalType:"int256",name:"pendingCollateral",type:"int256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"approve",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"baseURI",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{components:[{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"uint256",name:"strikeId",type:"uint256"},{internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"collateral",type:"uint256"},{internalType:"enum OptionToken.PositionState",name:"state",type:"uint8"}],internalType:"struct OptionToken.OptionPosition",name:"position",type:"tuple"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"strikePrice",type:"uint256"},{internalType:"uint256",name:"spotPrice",type:"uint256"}],name:"canLiquidate",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"getApproved",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"gwavPremium",type:"uint256"},{internalType:"uint256",name:"userPositionCollateral",type:"uint256"},{internalType:"uint256",name:"convertedMinLiquidationFee",type:"uint256"},{internalType:"uint256",name:"insolvencyMultiplier",type:"uint256"}],name:"getLiquidationFees",outputs:[{components:[{internalType:"uint256",name:"returnCollateral",type:"uint256"},{internalType:"uint256",name:"lpPremiums",type:"uint256"},{internalType:"uint256",name:"lpFee",type:"uint256"},{internalType:"uint256",name:"liquidatorFee",type:"uint256"},{internalType:"uint256",name:"smFee",type:"uint256"},{internalType:"uint256",name:"insolventAmount",type:"uint256"}],internalType:"struct OptionToken.LiquidationFees",name:"liquidationFees",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"positionId",type:"uint256"}],name:"getOptionPosition",outputs:[{components:[{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"uint256",name:"strikeId",type:"uint256"},{internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"collateral",type:"uint256"},{internalType:"enum OptionToken.PositionState",name:"state",type:"uint8"}],internalType:"struct OptionToken.OptionPosition",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256[]",name:"positionIds",type:"uint256[]"}],name:"getOptionPositions",outputs:[{components:[{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"uint256",name:"strikeId",type:"uint256"},{internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"collateral",type:"uint256"},{internalType:"enum OptionToken.PositionState",name:"state",type:"uint8"}],internalType:"struct OptionToken.OptionPosition[]",name:"",type:"tuple[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"target",type:"address"}],name:"getOwnerPositions",outputs:[{components:[{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"uint256",name:"strikeId",type:"uint256"},{internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"collateral",type:"uint256"},{internalType:"enum OptionToken.PositionState",name:"state",type:"uint8"}],internalType:"struct OptionToken.OptionPosition[]",name:"",type:"tuple[]"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPartialCollatParams",outputs:[{components:[{internalType:"uint256",name:"penaltyRatio",type:"uint256"},{internalType:"uint256",name:"liquidatorFeeRatio",type:"uint256"},{internalType:"uint256",name:"smFeeRatio",type:"uint256"},{internalType:"uint256",name:"minLiquidationFee",type:"uint256"}],internalType:"struct OptionToken.PartialCollateralParameters",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"positionId",type:"uint256"}],name:"getPositionState",outputs:[{internalType:"enum OptionToken.PositionState",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"positionId",type:"uint256"}],name:"getPositionWithOwner",outputs:[{components:[{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"uint256",name:"strikeId",type:"uint256"},{internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"collateral",type:"uint256"},{internalType:"enum OptionToken.PositionState",name:"state",type:"uint8"},{internalType:"address",name:"owner",type:"address"}],internalType:"struct OptionToken.PositionWithOwner",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256[]",name:"positionIds",type:"uint256[]"}],name:"getPositionsWithOwner",outputs:[{components:[{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"uint256",name:"strikeId",type:"uint256"},{internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"collateral",type:"uint256"},{internalType:"enum OptionToken.PositionState",name:"state",type:"uint8"},{internalType:"address",name:"owner",type:"address"}],internalType:"struct OptionToken.PositionWithOwner[]",name:"",type:"tuple[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract OptionMarket",name:"_optionMarket",type:"address"},{internalType:"contract OptionGreekCache",name:"_greekCache",type:"address"},{internalType:"address",name:"_shortCollateral",type:"address"},{internalType:"contract BaseExchangeAdapter",name:"_exchangeAdapter",type:"address"}],name:"init",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"operator",type:"address"}],name:"isApprovedForAll",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"positionId",type:"uint256"},{components:[{internalType:"bool",name:"isBuy",type:"bool"},{internalType:"bool",name:"isForceClose",type:"bool"},{internalType:"enum OptionMarket.TradeDirection",name:"tradeDirection",type:"uint8"},{internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"strikePrice",type:"uint256"},{internalType:"uint256",name:"spotPrice",type:"uint256"},{components:[{internalType:"uint256",name:"freeLiquidity",type:"uint256"},{internalType:"uint256",name:"burnableLiquidity",type:"uint256"},{internalType:"uint256",name:"reservedCollatLiquidity",type:"uint256"},{internalType:"uint256",name:"pendingDeltaLiquidity",type:"uint256"},{internalType:"uint256",name:"usedDeltaLiquidity",type:"uint256"},{internalType:"uint256",name:"NAV",type:"uint256"},{internalType:"uint256",name:"longScaleFactor",type:"uint256"}],internalType:"struct LiquidityPool.Liquidity",name:"liquidity",type:"tuple"}],internalType:"struct OptionMarket.TradeParameters",name:"trade",type:"tuple"},{internalType:"uint256",name:"totalCost",type:"uint256"}],name:"liquidate",outputs:[{components:[{internalType:"uint256",name:"returnCollateral",type:"uint256"},{internalType:"uint256",name:"lpPremiums",type:"uint256"},{internalType:"uint256",name:"lpFee",type:"uint256"},{internalType:"uint256",name:"liquidatorFee",type:"uint256"},{internalType:"uint256",name:"smFee",type:"uint256"},{internalType:"uint256",name:"insolventAmount",type:"uint256"}],internalType:"struct OptionToken.LiquidationFees",name:"liquidationFees",type:"tuple"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256[]",name:"positionIds",type:"uint256[]"}],name:"merge",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"nextId",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_owner",type:"address"}],name:"nominateNewOwner",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"nominatedOwner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"ownerOf",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"partialCollatParams",outputs:[{internalType:"uint256",name:"penaltyRatio",type:"uint256"},{internalType:"uint256",name:"liquidatorFeeRatio",type:"uint256"},{internalType:"uint256",name:"smFeeRatio",type:"uint256"},{internalType:"uint256",name:"minLiquidationFee",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"positions",outputs:[{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"uint256",name:"strikeId",type:"uint256"},{internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"collateral",type:"uint256"},{internalType:"enum OptionToken.PositionState",name:"state",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"safeTransferFrom",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"},{internalType:"bytes",name:"_data",type:"bytes"}],name:"safeTransferFrom",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"operator",type:"address"},{internalType:"bool",name:"approved",type:"bool"}],name:"setApprovalForAll",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"uint256",name:"penaltyRatio",type:"uint256"},{internalType:"uint256",name:"liquidatorFeeRatio",type:"uint256"},{internalType:"uint256",name:"smFeeRatio",type:"uint256"},{internalType:"uint256",name:"minLiquidationFee",type:"uint256"}],internalType:"struct OptionToken.PartialCollateralParameters",name:"_partialCollatParams",type:"tuple"}],name:"setPartialCollateralParams",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"string",name:"newURI",type:"string"}],name:"setURI",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256[]",name:"positionIds",type:"uint256[]"}],name:"settlePositions",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"uint256",name:"newAmount",type:"uint256"},{internalType:"uint256",name:"newCollateral",type:"uint256"},{internalType:"address",name:"recipient",type:"address"}],name:"split",outputs:[{internalType:"uint256",name:"newPositionId",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes4",name:"interfaceId",type:"bytes4"}],name:"supportsInterface",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"index",type:"uint256"}],name:"tokenByIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"uint256",name:"index",type:"uint256"}],name:"tokenOfOwnerByIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"tokenURI",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"transferFrom",outputs:[],stateMutability:"nonpayable",type:"function"}],Po=[{inputs:[],stateMutability:"nonpayable",type:"constructor"},{inputs:[{internalType:"address",name:"thrower",type:"address"}],name:"AlreadyInitialised",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"BaseTransferFailed",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{components:[{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"uint256",name:"strikeId",type:"uint256"},{internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"collateral",type:"uint256"},{internalType:"enum OptionToken.PositionState",name:"state",type:"uint8"},{internalType:"address",name:"owner",type:"address"}],internalType:"struct OptionToken.PositionWithOwner",name:"position",type:"tuple"}],name:"BoardMustBeSettled",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"nominatedOwner",type:"address"}],name:"OnlyNominatedOwner",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"optionMarket",type:"address"}],name:"OnlyOptionMarket",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"owner",type:"address"}],name:"OnlyOwner",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"balance",type:"uint256"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"OutOfBaseCollateralForTransfer",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"balance",type:"uint256"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"OutOfQuoteCollateralForTransfer",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"QuoteTransferFailed",type:"error"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"receiver",type:"address"},{indexed:!1,internalType:"uint256",name:"nativeAmount",type:"uint256"}],name:"BaseSent",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"amountBaseSent",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amountQuoteSent",type:"uint256"},{indexed:!1,internalType:"uint256",name:"lpBaseInsolvency",type:"uint256"},{indexed:!1,internalType:"uint256",name:"lpQuoteInsolvency",type:"uint256"},{indexed:!1,internalType:"uint256",name:"LPBaseExcess",type:"uint256"},{indexed:!1,internalType:"uint256",name:"LPQuoteExcess",type:"uint256"}],name:"BoardSettlementCollateralSent",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"oldOwner",type:"address"},{indexed:!1,internalType:"address",name:"newOwner",type:"address"}],name:"OwnerChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"newOwner",type:"address"}],name:"OwnerNominated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"positionId",type:"uint256"},{indexed:!0,internalType:"address",name:"settler",type:"address"},{indexed:!0,internalType:"address",name:"optionOwner",type:"address"},{indexed:!1,internalType:"uint256",name:"strikePrice",type:"uint256"},{indexed:!1,internalType:"uint256",name:"priceAtExpiry",type:"uint256"},{indexed:!1,internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"settlementAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"insolventAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"longScaleFactor",type:"uint256"}],name:"PositionSettled",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"receiver",type:"address"},{indexed:!1,internalType:"uint256",name:"nativeAmount",type:"uint256"}],name:"QuoteSent",type:"event"},{inputs:[],name:"LPBaseExcess",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"LPQuoteExcess",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"acceptOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"amountBase",type:"uint256"},{internalType:"uint256",name:"amountQuote",type:"uint256"}],name:"boardSettlement",outputs:[{internalType:"uint256",name:"lpBaseInsolvency",type:"uint256"},{internalType:"uint256",name:"lpQuoteInsolvency",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract OptionMarket",name:"_optionMarket",type:"address"},{internalType:"contract LiquidityPool",name:"_liquidityPool",type:"address"},{internalType:"contract OptionToken",name:"_optionToken",type:"address"},{internalType:"contract BaseExchangeAdapter",name:"_exchangeAdapter",type:"address"},{internalType:"contract IERC20Decimals",name:"_quoteAsset",type:"address"},{internalType:"contract IERC20Decimals",name:"_baseAsset",type:"address"}],name:"init",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_owner",type:"address"}],name:"nominateNewOwner",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"nominatedOwner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"trader",type:"address"},{internalType:"address",name:"liquidator",type:"address"},{internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"},{components:[{internalType:"uint256",name:"returnCollateral",type:"uint256"},{internalType:"uint256",name:"lpPremiums",type:"uint256"},{internalType:"uint256",name:"lpFee",type:"uint256"},{internalType:"uint256",name:"liquidatorFee",type:"uint256"},{internalType:"uint256",name:"smFee",type:"uint256"},{internalType:"uint256",name:"insolventAmount",type:"uint256"}],internalType:"struct OptionToken.LiquidationFees",name:"liquidationFees",type:"tuple"}],name:"routeLiquidationFunds",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"sendBaseCollateral",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"sendQuoteCollateral",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256[]",name:"positionIds",type:"uint256[]"}],name:"settleOptions",outputs:[],stateMutability:"nonpayable",type:"function"}],Co=[{inputs:[],stateMutability:"nonpayable",type:"constructor"},{inputs:[{internalType:"address",name:"thrower",type:"address"}],name:"AlreadyInitialised",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"lastInteraction",type:"uint256"},{internalType:"uint256",name:"interactionDelta",type:"uint256"},{internalType:"uint256",name:"currentTime",type:"uint256"}],name:"InteractionDelayNotExpired",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{components:[{internalType:"uint256",name:"targetLeverage",type:"uint256"},{internalType:"uint256",name:"maximumFundingRate",type:"uint256"},{internalType:"uint256",name:"deltaThreshold",type:"uint256"},{internalType:"uint256",name:"marketDepthBuffer",type:"uint256"},{internalType:"uint256",name:"priceDeltaBuffer",type:"uint256"},{internalType:"uint256",name:"worstStableRate",type:"uint256"},{internalType:"uint256",name:"maxOrderCap",type:"uint256"}],internalType:"struct SNXPerpsV2PoolHedger.SNXPerpsV2PoolHedgerParameters",name:"params",type:"tuple"}],name:"InvalidFuturesPoolHedgerParams",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"liquidityPool",type:"address"}],name:"OnlyLiquidityPool",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"nominatedOwner",type:"address"}],name:"OnlyNominatedOwner",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"owner",type:"address"}],name:"OnlyOwner",type:"error"},{inputs:[{internalType:"int256",name:"pendingDelta",type:"int256"}],name:"PendingOrderDeltaError",type:"error"},{inputs:[],name:"PerpMarketReturnedInvalid",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"QuoteTransferFailed",type:"error"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"oldCollat",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newCollat",type:"uint256"}],name:"CollateralUpdated",type:"event"},{anonymous:!1,inputs:[{components:[{internalType:"uint256",name:"targetLeverage",type:"uint256"},{internalType:"uint256",name:"maximumFundingRate",type:"uint256"},{internalType:"uint256",name:"deltaThreshold",type:"uint256"},{internalType:"uint256",name:"marketDepthBuffer",type:"uint256"},{internalType:"uint256",name:"priceDeltaBuffer",type:"uint256"},{internalType:"uint256",name:"worstStableRate",type:"uint256"},{internalType:"uint256",name:"maxOrderCap",type:"uint256"}],indexed:!1,internalType:"struct SNXPerpsV2PoolHedger.SNXPerpsV2PoolHedgerParameters",name:"params",type:"tuple"}],name:"FuturesPoolHedgerParamsSet",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"oldOwner",type:"address"},{indexed:!1,internalType:"address",name:"newOwner",type:"address"}],name:"OwnerChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"newOwner",type:"address"}],name:"OwnerNominated",type:"event"},{anonymous:!1,inputs:[{components:[{internalType:"uint256",name:"interactionDelay",type:"uint256"},{internalType:"uint256",name:"hedgeCap",type:"uint256"}],indexed:!1,internalType:"struct PoolHedger.PoolHedgerParameters",name:"poolHedgerParams",type:"tuple"}],name:"PoolHedgerParametersSet",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"int256",name:"oldNetDelta",type:"int256"},{indexed:!1,internalType:"int256",name:"currentNetDelta",type:"int256"},{indexed:!1,internalType:"int256",name:"expectedNetDelta",type:"int256"}],name:"PositionUpdateSubmitted",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"amountQuote",type:"uint256"}],name:"QuoteReturnedToLP",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"quoteAsset",type:"address"},{indexed:!1,internalType:"address",name:"sUSD",type:"address"},{indexed:!1,internalType:"uint256",name:"curve_rate",type:"uint256"},{indexed:!1,internalType:"uint256",name:"maxSlippage",type:"uint256"}],name:"SlippageOutOfBounds",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bytes32",name:"trackingCode",type:"bytes32"}],name:"TrackingCodeSet",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"quoteAsset",type:"address"},{indexed:!1,internalType:"address",name:"sUSD",type:"address"},{indexed:!1,internalType:"uint256",name:"amountIn",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amountOut",type:"uint256"}],name:"USDCCollateralSwapForMargin",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"quoteAsset",type:"address"},{indexed:!1,internalType:"address",name:"sUSD",type:"address"},{indexed:!1,internalType:"uint256",name:"amountIn",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amountOut",type:"uint256"}],name:"sUSDCollateralSwap",type:"event"},{inputs:[],name:"acceptOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"addressResolver",outputs:[{internalType:"contract IAddressResolver",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"",type:"uint256"},{internalType:"bool",name:"deltaIncrease",type:"bool"},{internalType:"uint256",name:"",type:"uint256"}],name:"canHedge",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"curveSwap",outputs:[{internalType:"contract ICurve",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"exchangeAdapter",outputs:[{internalType:"contract BaseExchangeAdapter",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"futuresPoolHedgerParams",outputs:[{internalType:"uint256",name:"targetLeverage",type:"uint256"},{internalType:"uint256",name:"maximumFundingRate",type:"uint256"},{internalType:"uint256",name:"deltaThreshold",type:"uint256"},{internalType:"uint256",name:"marketDepthBuffer",type:"uint256"},{internalType:"uint256",name:"priceDeltaBuffer",type:"uint256"},{internalType:"uint256",name:"worstStableRate",type:"uint256"},{internalType:"uint256",name:"maxOrderCap",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getCappedExpectedHedge",outputs:[{internalType:"int256",name:"",type:"int256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getCurrentHedgedNetDelta",outputs:[{internalType:"int256",name:"",type:"int256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getCurrentPositionMargin",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getHedgerState",outputs:[{components:[{internalType:"uint256",name:"lastInteraction",type:"uint256"},{internalType:"int256",name:"hedgedDelta",type:"int256"},{internalType:"uint256",name:"margin",type:"uint256"},{internalType:"uint256",name:"leverage",type:"uint256"},{internalType:"uint256",name:"hedgerQuoteBalance",type:"uint256"},{internalType:"uint256",name:"hedgerMarginQuoteBalance",type:"uint256"},{internalType:"bool",name:"canHedgeDeltaIncrease",type:"bool"},{internalType:"bool",name:"canHedgeDeltaDecrease",type:"bool"},{internalType:"int256",name:"cappedExpectedHedge",type:"int256"},{internalType:"bool",name:"snxHasEnoughMarketDepth",type:"bool"},{internalType:"bool",name:"marketSuspended",type:"bool"},{internalType:"bool",name:"curveRateStable",type:"bool"},{internalType:"uint256",name:"pendingDeltaLiquidity",type:"uint256"},{internalType:"uint256",name:"usedDeltaLiquidity",type:"uint256"},{internalType:"int256",name:"pendingDelta",type:"int256"},{internalType:"uint256",name:"longInterest",type:"uint256"},{internalType:"uint256",name:"shortInterest",type:"uint256"},{internalType:"uint256",name:"maxTotalMarketSize",type:"uint256"},{internalType:"uint256",name:"pendingMargin",type:"uint256"},{internalType:"int256",name:"fundingRate",type:"int256"},{internalType:"bytes32",name:"trackingCode",type:"bytes32"},{internalType:"address",name:"optionMarket",type:"address"},{internalType:"address",name:"perpsMarket",type:"address"},{internalType:"address",name:"curveSwap",type:"address"},{internalType:"address",name:"quoteAsset",type:"address"},{components:[{internalType:"uint256",name:"targetLeverage",type:"uint256"},{internalType:"uint256",name:"maximumFundingRate",type:"uint256"},{internalType:"uint256",name:"deltaThreshold",type:"uint256"},{internalType:"uint256",name:"marketDepthBuffer",type:"uint256"},{internalType:"uint256",name:"priceDeltaBuffer",type:"uint256"},{internalType:"uint256",name:"worstStableRate",type:"uint256"},{internalType:"uint256",name:"maxOrderCap",type:"uint256"}],internalType:"struct SNXPerpsV2PoolHedger.SNXPerpsV2PoolHedgerParameters",name:"futuresPoolHedgerParams",type:"tuple"},{components:[{internalType:"uint256",name:"interactionDelay",type:"uint256"},{internalType:"uint256",name:"hedgeCap",type:"uint256"}],internalType:"struct PoolHedger.PoolHedgerParameters",name:"poolHedgerParams",type:"tuple"}],internalType:"struct SNXPerpsV2PoolHedger.HedgerState",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"spotPrice",type:"uint256"}],name:"getHedgingLiquidity",outputs:[{internalType:"uint256",name:"pendingDeltaLiquidity",type:"uint256"},{internalType:"uint256",name:"usedDeltaLiquidity",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPoolHedgerParams",outputs:[{components:[{internalType:"uint256",name:"interactionDelay",type:"uint256"},{internalType:"uint256",name:"hedgeCap",type:"uint256"}],internalType:"struct PoolHedger.PoolHedgerParameters",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[],name:"hedgeDelta",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IAddressResolver",name:"_addressResolver",type:"address"},{internalType:"contract BaseExchangeAdapter",name:"_exchangeAdapter",type:"address"},{internalType:"contract OptionMarket",name:"_optionMarket",type:"address"},{internalType:"contract OptionGreekCache",name:"_optionGreekCache",type:"address"},{internalType:"contract LiquidityPool",name:"_liquidityPool",type:"address"},{internalType:"contract IPerpsV2MarketConsolidated",name:"_perpMarketProxy",type:"address"},{internalType:"contract ERC20",name:"_quoteAsset",type:"address"},{internalType:"contract ERC20",name:"_sUSD",type:"address"},{internalType:"contract ICurve",name:"_curveSwap",type:"address"},{internalType:"bytes32",name:"_marketKey",type:"bytes32"}],name:"init",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"lastInteraction",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"marketKey",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_owner",type:"address"}],name:"nominateNewOwner",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"nominatedOwner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"perpsMarket",outputs:[{internalType:"contract IPerpsV2MarketConsolidated",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"resetInteractionDelay",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"uint256",name:"targetLeverage",type:"uint256"},{internalType:"uint256",name:"maximumFundingRate",type:"uint256"},{internalType:"uint256",name:"deltaThreshold",type:"uint256"},{internalType:"uint256",name:"marketDepthBuffer",type:"uint256"},{internalType:"uint256",name:"priceDeltaBuffer",type:"uint256"},{internalType:"uint256",name:"worstStableRate",type:"uint256"},{internalType:"uint256",name:"maxOrderCap",type:"uint256"}],internalType:"struct SNXPerpsV2PoolHedger.SNXPerpsV2PoolHedgerParameters",name:"_futuresPoolHedgerParams",type:"tuple"}],name:"setFuturesPoolHedgerParams",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"uint256",name:"interactionDelay",type:"uint256"},{internalType:"uint256",name:"hedgeCap",type:"uint256"}],internalType:"struct PoolHedger.PoolHedgerParameters",name:"_poolHedgerParams",type:"tuple"}],name:"setPoolHedgerParams",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"_trackingCode",type:"bytes32"}],name:"setTrackingCode",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"trackingCode",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"updateCollateral",outputs:[],stateMutability:"payable",type:"function"}],Mo=[{inputs:[],stateMutability:"nonpayable",type:"constructor"},{inputs:[{internalType:"address",name:"thrower",type:"address"}],name:"AlreadyInitialised",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"BaseTransferFailed",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"boardId",type:"uint256"}],name:"BoardAlreadySettled",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"boardId",type:"uint256"},{internalType:"uint256",name:"boardExpiry",type:"uint256"},{internalType:"uint256",name:"currentTime",type:"uint256"}],name:"BoardExpired",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"boardId",type:"uint256"}],name:"BoardIsFrozen",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"boardId",type:"uint256"}],name:"BoardNotExpired",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"boardId",type:"uint256"}],name:"BoardNotFrozen",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"}],name:"CannotRecoverQuote",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"enum OptionMarket.NonZeroValues",name:"valueType",type:"uint8"}],name:"ExpectedNonZeroValue",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"boardId",type:"uint256"}],name:"InvalidBoardId",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"currentTime",type:"uint256"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"maxBoardExpiry",type:"uint256"}],name:"InvalidExpiryTimestamp",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{components:[{internalType:"uint256",name:"maxBoardExpiry",type:"uint256"},{internalType:"address",name:"securityModule",type:"address"},{internalType:"uint256",name:"feePortionReserved",type:"uint256"},{internalType:"uint256",name:"staticBaseSettlementFee",type:"uint256"}],internalType:"struct OptionMarket.OptionMarketParameters",name:"optionMarketParams",type:"tuple"}],name:"InvalidOptionMarketParams",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"strikeId",type:"uint256"}],name:"InvalidStrikeId",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"nominatedOwner",type:"address"}],name:"OnlyNominatedOwner",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"owner",type:"address"}],name:"OnlyOwner",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"securityModule",type:"address"}],name:"OnlySecurityModule",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"QuoteTransferFailed",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"strikesLength",type:"uint256"},{internalType:"uint256",name:"skewsLength",type:"uint256"}],name:"StrikeSkewLengthMismatch",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"totalCost",type:"uint256"},{internalType:"uint256",name:"minCost",type:"uint256"},{internalType:"uint256",name:"maxCost",type:"uint256"}],name:"TotalCostOutsideOfSpecifiedBounds",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"iterations",type:"uint256"},{internalType:"uint256",name:"expectedAmount",type:"uint256"},{internalType:"uint256",name:"tradeAmount",type:"uint256"},{internalType:"uint256",name:"totalAmount",type:"uint256"}],name:"TradeIterationsHasRemainder",type:"error"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"boardId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"baseIv",type:"uint256"}],name:"BoardBaseIvSet",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"boardId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"expiry",type:"uint256"},{indexed:!1,internalType:"uint256",name:"baseIv",type:"uint256"},{indexed:!1,internalType:"bool",name:"frozen",type:"bool"}],name:"BoardCreated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"boardId",type:"uint256"},{indexed:!1,internalType:"bool",name:"frozen",type:"bool"}],name:"BoardFrozen",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"boardId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"spotPriceAtExpiry",type:"uint256"},{indexed:!1,internalType:"uint256",name:"totalUserLongProfitQuote",type:"uint256"},{indexed:!1,internalType:"uint256",name:"totalBoardLongCallCollateral",type:"uint256"},{indexed:!1,internalType:"uint256",name:"totalBoardLongPutCollateral",type:"uint256"},{indexed:!1,internalType:"uint256",name:"totalAMMShortCallProfitBase",type:"uint256"},{indexed:!1,internalType:"uint256",name:"totalAMMShortCallProfitQuote",type:"uint256"},{indexed:!1,internalType:"uint256",name:"totalAMMShortPutProfitQuote",type:"uint256"},{indexed:!1,internalType:"uint256",name:"longScaleFactor",type:"uint256"}],name:"BoardSettled",type:"event"},{anonymous:!1,inputs:[{components:[{internalType:"uint256",name:"maxBoardExpiry",type:"uint256"},{internalType:"address",name:"securityModule",type:"address"},{internalType:"uint256",name:"feePortionReserved",type:"uint256"},{internalType:"uint256",name:"staticBaseSettlementFee",type:"uint256"}],indexed:!1,internalType:"struct OptionMarket.OptionMarketParameters",name:"optionMarketParams",type:"tuple"}],name:"OptionMarketParamsSet",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"oldOwner",type:"address"},{indexed:!1,internalType:"address",name:"newOwner",type:"address"}],name:"OwnerChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"newOwner",type:"address"}],name:"OwnerNominated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"securityModule",type:"address"},{indexed:!1,internalType:"uint256",name:"quoteAmount",type:"uint256"}],name:"SMClaimed",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"boardId",type:"uint256"},{indexed:!0,internalType:"uint256",name:"strikeId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"strikePrice",type:"uint256"},{indexed:!1,internalType:"uint256",name:"skew",type:"uint256"}],name:"StrikeAdded",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"strikeId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"skew",type:"uint256"}],name:"StrikeSkewSet",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"trader",type:"address"},{indexed:!0,internalType:"uint256",name:"positionId",type:"uint256"},{indexed:!0,internalType:"address",name:"referrer",type:"address"},{components:[{internalType:"uint256",name:"strikeId",type:"uint256"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"strikePrice",type:"uint256"},{internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"},{internalType:"enum OptionMarket.TradeDirection",name:"tradeDirection",type:"uint8"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"setCollateralTo",type:"uint256"},{internalType:"bool",name:"isForceClose",type:"bool"},{internalType:"uint256",name:"spotPrice",type:"uint256"},{internalType:"uint256",name:"reservedFee",type:"uint256"},{internalType:"uint256",name:"totalCost",type:"uint256"}],indexed:!1,internalType:"struct OptionMarket.TradeEventData",name:"trade",type:"tuple"},{components:[{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"premium",type:"uint256"},{internalType:"uint256",name:"optionPriceFee",type:"uint256"},{internalType:"uint256",name:"spotPriceFee",type:"uint256"},{components:[{internalType:"int256",name:"preTradeAmmNetStdVega",type:"int256"},{internalType:"int256",name:"postTradeAmmNetStdVega",type:"int256"},{internalType:"uint256",name:"vegaUtil",type:"uint256"},{internalType:"uint256",name:"volTraded",type:"uint256"},{internalType:"uint256",name:"NAV",type:"uint256"},{internalType:"uint256",name:"vegaUtilFee",type:"uint256"}],internalType:"struct OptionMarketPricer.VegaUtilFeeComponents",name:"vegaUtilFee",type:"tuple"},{components:[{internalType:"uint256",name:"varianceFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"vega",type:"uint256"},{internalType:"uint256",name:"vegaCoefficient",type:"uint256"},{internalType:"uint256",name:"skew",type:"uint256"},{internalType:"uint256",name:"skewCoefficient",type:"uint256"},{internalType:"uint256",name:"ivVariance",type:"uint256"},{internalType:"uint256",name:"ivVarianceCoefficient",type:"uint256"},{internalType:"uint256",name:"varianceFee",type:"uint256"}],internalType:"struct OptionMarketPricer.VarianceFeeComponents",name:"varianceFee",type:"tuple"},{internalType:"uint256",name:"totalFee",type:"uint256"},{internalType:"uint256",name:"totalCost",type:"uint256"},{internalType:"uint256",name:"volTraded",type:"uint256"},{internalType:"uint256",name:"newBaseIv",type:"uint256"},{internalType:"uint256",name:"newSkew",type:"uint256"}],indexed:!1,internalType:"struct OptionMarketPricer.TradeResult[]",name:"tradeResults",type:"tuple[]"},{components:[{internalType:"address",name:"rewardBeneficiary",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"uint256",name:"returnCollateral",type:"uint256"},{internalType:"uint256",name:"lpPremiums",type:"uint256"},{internalType:"uint256",name:"lpFee",type:"uint256"},{internalType:"uint256",name:"liquidatorFee",type:"uint256"},{internalType:"uint256",name:"smFee",type:"uint256"},{internalType:"uint256",name:"insolventAmount",type:"uint256"}],indexed:!1,internalType:"struct OptionMarket.LiquidationEventData",name:"liquidation",type:"tuple"},{indexed:!1,internalType:"uint256",name:"longScaleFactor",type:"uint256"},{indexed:!1,internalType:"uint256",name:"timestamp",type:"uint256"}],name:"Trade",type:"event"},{inputs:[],name:"acceptOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"uint256",name:"amountCollateral",type:"uint256"}],name:"addCollateral",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"boardId",type:"uint256"},{internalType:"uint256",name:"strikePrice",type:"uint256"},{internalType:"uint256",name:"skew",type:"uint256"}],name:"addStrikeToBoard",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"baseAsset",outputs:[{internalType:"contract IERC20Decimals",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"boardToPriceAtExpiry",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{components:[{internalType:"uint256",name:"strikeId",type:"uint256"},{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"uint256",name:"iterations",type:"uint256"},{internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"setCollateralTo",type:"uint256"},{internalType:"uint256",name:"minTotalCost",type:"uint256"},{internalType:"uint256",name:"maxTotalCost",type:"uint256"},{internalType:"address",name:"referrer",type:"address"}],internalType:"struct OptionMarket.TradeInputParameters",name:"params",type:"tuple"}],name:"closePosition",outputs:[{components:[{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"uint256",name:"totalCost",type:"uint256"},{internalType:"uint256",name:"totalFee",type:"uint256"}],internalType:"struct OptionMarket.Result",name:"result",type:"tuple"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"baseIV",type:"uint256"},{internalType:"uint256[]",name:"strikePrices",type:"uint256[]"},{internalType:"uint256[]",name:"skews",type:"uint256[]"},{internalType:"bool",name:"frozen",type:"bool"}],name:"createOptionBoard",outputs:[{internalType:"uint256",name:"boardId",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"uint256",name:"strikeId",type:"uint256"},{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"uint256",name:"iterations",type:"uint256"},{internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"setCollateralTo",type:"uint256"},{internalType:"uint256",name:"minTotalCost",type:"uint256"},{internalType:"uint256",name:"maxTotalCost",type:"uint256"},{internalType:"address",name:"referrer",type:"address"}],internalType:"struct OptionMarket.TradeInputParameters",name:"params",type:"tuple"}],name:"forceClosePosition",outputs:[{components:[{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"uint256",name:"totalCost",type:"uint256"},{internalType:"uint256",name:"totalFee",type:"uint256"}],internalType:"struct OptionMarket.Result",name:"result",type:"tuple"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"boardId",type:"uint256"}],name:"forceSettleBoard",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"boardId",type:"uint256"}],name:"getBoardAndStrikeDetails",outputs:[{components:[{internalType:"uint256",name:"id",type:"uint256"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"iv",type:"uint256"},{internalType:"bool",name:"frozen",type:"bool"},{internalType:"uint256[]",name:"strikeIds",type:"uint256[]"}],internalType:"struct OptionMarket.OptionBoard",name:"",type:"tuple"},{components:[{internalType:"uint256",name:"id",type:"uint256"},{internalType:"uint256",name:"strikePrice",type:"uint256"},{internalType:"uint256",name:"skew",type:"uint256"},{internalType:"uint256",name:"longCall",type:"uint256"},{internalType:"uint256",name:"shortCallBase",type:"uint256"},{internalType:"uint256",name:"shortCallQuote",type:"uint256"},{internalType:"uint256",name:"longPut",type:"uint256"},{internalType:"uint256",name:"shortPut",type:"uint256"},{internalType:"uint256",name:"boardId",type:"uint256"}],internalType:"struct OptionMarket.Strike[]",name:"",type:"tuple[]"},{internalType:"uint256[]",name:"",type:"uint256[]"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"boardId",type:"uint256"}],name:"getBoardStrikes",outputs:[{internalType:"uint256[]",name:"strikeIds",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[],name:"getLiveBoards",outputs:[{internalType:"uint256[]",name:"_liveBoards",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[],name:"getNumLiveBoards",outputs:[{internalType:"uint256",name:"numLiveBoards",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"boardId",type:"uint256"}],name:"getOptionBoard",outputs:[{components:[{internalType:"uint256",name:"id",type:"uint256"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"iv",type:"uint256"},{internalType:"bool",name:"frozen",type:"bool"},{internalType:"uint256[]",name:"strikeIds",type:"uint256[]"}],internalType:"struct OptionMarket.OptionBoard",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[],name:"getOptionMarketParams",outputs:[{components:[{internalType:"uint256",name:"maxBoardExpiry",type:"uint256"},{internalType:"address",name:"securityModule",type:"address"},{internalType:"uint256",name:"feePortionReserved",type:"uint256"},{internalType:"uint256",name:"staticBaseSettlementFee",type:"uint256"}],internalType:"struct OptionMarket.OptionMarketParameters",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"strikeId",type:"uint256"}],name:"getSettlementParameters",outputs:[{internalType:"uint256",name:"strikePrice",type:"uint256"},{internalType:"uint256",name:"priceAtExpiry",type:"uint256"},{internalType:"uint256",name:"strikeToBaseReturned",type:"uint256"},{internalType:"uint256",name:"longScaleFactor",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"strikeId",type:"uint256"}],name:"getStrike",outputs:[{components:[{internalType:"uint256",name:"id",type:"uint256"},{internalType:"uint256",name:"strikePrice",type:"uint256"},{internalType:"uint256",name:"skew",type:"uint256"},{internalType:"uint256",name:"longCall",type:"uint256"},{internalType:"uint256",name:"shortCallBase",type:"uint256"},{internalType:"uint256",name:"shortCallQuote",type:"uint256"},{internalType:"uint256",name:"longPut",type:"uint256"},{internalType:"uint256",name:"shortPut",type:"uint256"},{internalType:"uint256",name:"boardId",type:"uint256"}],internalType:"struct OptionMarket.Strike",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"strikeId",type:"uint256"}],name:"getStrikeAndBoard",outputs:[{components:[{internalType:"uint256",name:"id",type:"uint256"},{internalType:"uint256",name:"strikePrice",type:"uint256"},{internalType:"uint256",name:"skew",type:"uint256"},{internalType:"uint256",name:"longCall",type:"uint256"},{internalType:"uint256",name:"shortCallBase",type:"uint256"},{internalType:"uint256",name:"shortCallQuote",type:"uint256"},{internalType:"uint256",name:"longPut",type:"uint256"},{internalType:"uint256",name:"shortPut",type:"uint256"},{internalType:"uint256",name:"boardId",type:"uint256"}],internalType:"struct OptionMarket.Strike",name:"",type:"tuple"},{components:[{internalType:"uint256",name:"id",type:"uint256"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"iv",type:"uint256"},{internalType:"bool",name:"frozen",type:"bool"},{internalType:"uint256[]",name:"strikeIds",type:"uint256[]"}],internalType:"struct OptionMarket.OptionBoard",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"strikeId",type:"uint256"}],name:"getStrikeAndExpiry",outputs:[{internalType:"uint256",name:"strikePrice",type:"uint256"},{internalType:"uint256",name:"expiry",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract BaseExchangeAdapter",name:"_exchangeAdapter",type:"address"},{internalType:"contract LiquidityPool",name:"_liquidityPool",type:"address"},{internalType:"contract OptionMarketPricer",name:"_optionPricer",type:"address"},{internalType:"contract OptionGreekCache",name:"_greekCache",type:"address"},{internalType:"contract ShortCollateral",name:"_shortCollateral",type:"address"},{internalType:"contract OptionToken",name:"_optionToken",type:"address"},{internalType:"contract IERC20Decimals",name:"_quoteAsset",type:"address"},{internalType:"contract IERC20Decimals",name:"_baseAsset",type:"address"}],name:"init",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"address",name:"rewardBeneficiary",type:"address"}],name:"liquidatePosition",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_owner",type:"address"}],name:"nominateNewOwner",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"nominatedOwner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{components:[{internalType:"uint256",name:"strikeId",type:"uint256"},{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"uint256",name:"iterations",type:"uint256"},{internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"setCollateralTo",type:"uint256"},{internalType:"uint256",name:"minTotalCost",type:"uint256"},{internalType:"uint256",name:"maxTotalCost",type:"uint256"},{internalType:"address",name:"referrer",type:"address"}],internalType:"struct OptionMarket.TradeInputParameters",name:"params",type:"tuple"}],name:"openPosition",outputs:[{components:[{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"uint256",name:"totalCost",type:"uint256"},{internalType:"uint256",name:"totalFee",type:"uint256"}],internalType:"struct OptionMarket.Result",name:"result",type:"tuple"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"quoteAsset",outputs:[{internalType:"contract IERC20Decimals",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract IERC20Decimals",name:"token",type:"address"},{internalType:"address",name:"recipient",type:"address"}],name:"recoverFunds",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"scaledLongsForBoard",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"boardId",type:"uint256"},{internalType:"uint256",name:"baseIv",type:"uint256"}],name:"setBoardBaseIv",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"boardId",type:"uint256"},{internalType:"bool",name:"frozen",type:"bool"}],name:"setBoardFrozen",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"uint256",name:"maxBoardExpiry",type:"uint256"},{internalType:"address",name:"securityModule",type:"address"},{internalType:"uint256",name:"feePortionReserved",type:"uint256"},{internalType:"uint256",name:"staticBaseSettlementFee",type:"uint256"}],internalType:"struct OptionMarket.OptionMarketParameters",name:"_optionMarketParams",type:"tuple"}],name:"setOptionMarketParams",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"strikeId",type:"uint256"},{internalType:"uint256",name:"skew",type:"uint256"}],name:"setStrikeSkew",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"boardId",type:"uint256"}],name:"settleExpiredBoard",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"smClaim",outputs:[],stateMutability:"nonpayable",type:"function"}],Oo=[{inputs:[],stateMutability:"nonpayable",type:"constructor"},{inputs:[{internalType:"address",name:"thrower",type:"address"}],name:"AlreadyInitialised",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"trader",type:"address"},{internalType:"address",name:"shortCollateral",type:"address"},{internalType:"uint256",name:"shortCollateralBalance",type:"uint256"},{internalType:"uint256",name:"pendingCollateral",type:"uint256"}],name:"BaseLimitExceeded",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"BaseTransferFailed",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"boardId",type:"uint256"}],name:"BoardAlreadySettled",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"boardId",type:"uint256"},{internalType:"uint256",name:"boardExpiry",type:"uint256"},{internalType:"uint256",name:"currentTime",type:"uint256"}],name:"BoardExpired",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"boardId",type:"uint256"}],name:"BoardIsFrozen",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"boardId",type:"uint256"}],name:"BoardNotExpired",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"boardId",type:"uint256"}],name:"BoardNotFrozen",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"}],name:"CannotRecoverQuote",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"enum OptionMarket.NonZeroValues",name:"valueType",type:"uint8"}],name:"ExpectedNonZeroValue",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"boardId",type:"uint256"}],name:"InvalidBoardId",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"currentTime",type:"uint256"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"maxBoardExpiry",type:"uint256"}],name:"InvalidExpiryTimestamp",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{components:[{internalType:"uint256",name:"maxBoardExpiry",type:"uint256"},{internalType:"address",name:"securityModule",type:"address"},{internalType:"uint256",name:"feePortionReserved",type:"uint256"},{internalType:"uint256",name:"staticBaseSettlementFee",type:"uint256"}],internalType:"struct OptionMarket.OptionMarketParameters",name:"optionMarketParams",type:"tuple"}],name:"InvalidOptionMarketParams",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"strikeId",type:"uint256"}],name:"InvalidStrikeId",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"nominatedOwner",type:"address"}],name:"OnlyNominatedOwner",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"owner",type:"address"}],name:"OnlyOwner",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"address",name:"securityModule",type:"address"}],name:"OnlySecurityModule",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"QuoteTransferFailed",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"strikesLength",type:"uint256"},{internalType:"uint256",name:"skewsLength",type:"uint256"}],name:"StrikeSkewLengthMismatch",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"totalCost",type:"uint256"},{internalType:"uint256",name:"minCost",type:"uint256"},{internalType:"uint256",name:"maxCost",type:"uint256"}],name:"TotalCostOutsideOfSpecifiedBounds",type:"error"},{inputs:[{internalType:"address",name:"thrower",type:"address"},{internalType:"uint256",name:"iterations",type:"uint256"},{internalType:"uint256",name:"expectedAmount",type:"uint256"},{internalType:"uint256",name:"tradeAmount",type:"uint256"},{internalType:"uint256",name:"totalAmount",type:"uint256"}],name:"TradeIterationsHasRemainder",type:"error"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"baseLimit",type:"uint256"}],name:"BaseLimitSet",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"boardId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"baseIv",type:"uint256"}],name:"BoardBaseIvSet",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"boardId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"expiry",type:"uint256"},{indexed:!1,internalType:"uint256",name:"baseIv",type:"uint256"},{indexed:!1,internalType:"bool",name:"frozen",type:"bool"}],name:"BoardCreated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"boardId",type:"uint256"},{indexed:!1,internalType:"bool",name:"frozen",type:"bool"}],name:"BoardFrozen",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"boardId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"spotPriceAtExpiry",type:"uint256"},{indexed:!1,internalType:"uint256",name:"totalUserLongProfitQuote",type:"uint256"},{indexed:!1,internalType:"uint256",name:"totalBoardLongCallCollateral",type:"uint256"},{indexed:!1,internalType:"uint256",name:"totalBoardLongPutCollateral",type:"uint256"},{indexed:!1,internalType:"uint256",name:"totalAMMShortCallProfitBase",type:"uint256"},{indexed:!1,internalType:"uint256",name:"totalAMMShortCallProfitQuote",type:"uint256"},{indexed:!1,internalType:"uint256",name:"totalAMMShortPutProfitQuote",type:"uint256"},{indexed:!1,internalType:"uint256",name:"longScaleFactor",type:"uint256"}],name:"BoardSettled",type:"event"},{anonymous:!1,inputs:[{components:[{internalType:"uint256",name:"maxBoardExpiry",type:"uint256"},{internalType:"address",name:"securityModule",type:"address"},{internalType:"uint256",name:"feePortionReserved",type:"uint256"},{internalType:"uint256",name:"staticBaseSettlementFee",type:"uint256"}],indexed:!1,internalType:"struct OptionMarket.OptionMarketParameters",name:"optionMarketParams",type:"tuple"}],name:"OptionMarketParamsSet",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"oldOwner",type:"address"},{indexed:!1,internalType:"address",name:"newOwner",type:"address"}],name:"OwnerChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"newOwner",type:"address"}],name:"OwnerNominated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"securityModule",type:"address"},{indexed:!1,internalType:"uint256",name:"quoteAmount",type:"uint256"}],name:"SMClaimed",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"boardId",type:"uint256"},{indexed:!0,internalType:"uint256",name:"strikeId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"strikePrice",type:"uint256"},{indexed:!1,internalType:"uint256",name:"skew",type:"uint256"}],name:"StrikeAdded",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"strikeId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"skew",type:"uint256"}],name:"StrikeSkewSet",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"trader",type:"address"},{indexed:!0,internalType:"uint256",name:"positionId",type:"uint256"},{indexed:!0,internalType:"address",name:"referrer",type:"address"},{components:[{internalType:"uint256",name:"strikeId",type:"uint256"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"strikePrice",type:"uint256"},{internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"},{internalType:"enum OptionMarket.TradeDirection",name:"tradeDirection",type:"uint8"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"setCollateralTo",type:"uint256"},{internalType:"bool",name:"isForceClose",type:"bool"},{internalType:"uint256",name:"spotPrice",type:"uint256"},{internalType:"uint256",name:"reservedFee",type:"uint256"},{internalType:"uint256",name:"totalCost",type:"uint256"}],indexed:!1,internalType:"struct OptionMarket.TradeEventData",name:"trade",type:"tuple"},{components:[{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"premium",type:"uint256"},{internalType:"uint256",name:"optionPriceFee",type:"uint256"},{internalType:"uint256",name:"spotPriceFee",type:"uint256"},{components:[{internalType:"int256",name:"preTradeAmmNetStdVega",type:"int256"},{internalType:"int256",name:"postTradeAmmNetStdVega",type:"int256"},{internalType:"uint256",name:"vegaUtil",type:"uint256"},{internalType:"uint256",name:"volTraded",type:"uint256"},{internalType:"uint256",name:"NAV",type:"uint256"},{internalType:"uint256",name:"vegaUtilFee",type:"uint256"}],internalType:"struct OptionMarketPricer.VegaUtilFeeComponents",name:"vegaUtilFee",type:"tuple"},{components:[{internalType:"uint256",name:"varianceFeeCoefficient",type:"uint256"},{internalType:"uint256",name:"vega",type:"uint256"},{internalType:"uint256",name:"vegaCoefficient",type:"uint256"},{internalType:"uint256",name:"skew",type:"uint256"},{internalType:"uint256",name:"skewCoefficient",type:"uint256"},{internalType:"uint256",name:"ivVariance",type:"uint256"},{internalType:"uint256",name:"ivVarianceCoefficient",type:"uint256"},{internalType:"uint256",name:"varianceFee",type:"uint256"}],internalType:"struct OptionMarketPricer.VarianceFeeComponents",name:"varianceFee",type:"tuple"},{internalType:"uint256",name:"totalFee",type:"uint256"},{internalType:"uint256",name:"totalCost",type:"uint256"},{internalType:"uint256",name:"volTraded",type:"uint256"},{internalType:"uint256",name:"newBaseIv",type:"uint256"},{internalType:"uint256",name:"newSkew",type:"uint256"}],indexed:!1,internalType:"struct OptionMarketPricer.TradeResult[]",name:"tradeResults",type:"tuple[]"},{components:[{internalType:"address",name:"rewardBeneficiary",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"uint256",name:"returnCollateral",type:"uint256"},{internalType:"uint256",name:"lpPremiums",type:"uint256"},{internalType:"uint256",name:"lpFee",type:"uint256"},{internalType:"uint256",name:"liquidatorFee",type:"uint256"},{internalType:"uint256",name:"smFee",type:"uint256"},{internalType:"uint256",name:"insolventAmount",type:"uint256"}],indexed:!1,internalType:"struct OptionMarket.LiquidationEventData",name:"liquidation",type:"tuple"},{indexed:!1,internalType:"uint256",name:"longScaleFactor",type:"uint256"},{indexed:!1,internalType:"uint256",name:"timestamp",type:"uint256"}],name:"Trade",type:"event"},{inputs:[],name:"acceptOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"uint256",name:"amountCollateral",type:"uint256"}],name:"addCollateral",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"boardId",type:"uint256"},{internalType:"uint256",name:"strikePrice",type:"uint256"},{internalType:"uint256",name:"skew",type:"uint256"}],name:"addStrikeToBoard",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"baseAsset",outputs:[{internalType:"contract IERC20Decimals",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"baseLimit",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"boardToPriceAtExpiry",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{components:[{internalType:"uint256",name:"strikeId",type:"uint256"},{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"uint256",name:"iterations",type:"uint256"},{internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"setCollateralTo",type:"uint256"},{internalType:"uint256",name:"minTotalCost",type:"uint256"},{internalType:"uint256",name:"maxTotalCost",type:"uint256"},{internalType:"address",name:"referrer",type:"address"}],internalType:"struct OptionMarket.TradeInputParameters",name:"params",type:"tuple"}],name:"closePosition",outputs:[{components:[{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"uint256",name:"totalCost",type:"uint256"},{internalType:"uint256",name:"totalFee",type:"uint256"}],internalType:"struct OptionMarket.Result",name:"result",type:"tuple"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"baseIV",type:"uint256"},{internalType:"uint256[]",name:"strikePrices",type:"uint256[]"},{internalType:"uint256[]",name:"skews",type:"uint256[]"},{internalType:"bool",name:"frozen",type:"bool"}],name:"createOptionBoard",outputs:[{internalType:"uint256",name:"boardId",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"uint256",name:"strikeId",type:"uint256"},{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"uint256",name:"iterations",type:"uint256"},{internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"setCollateralTo",type:"uint256"},{internalType:"uint256",name:"minTotalCost",type:"uint256"},{internalType:"uint256",name:"maxTotalCost",type:"uint256"},{internalType:"address",name:"referrer",type:"address"}],internalType:"struct OptionMarket.TradeInputParameters",name:"params",type:"tuple"}],name:"forceClosePosition",outputs:[{components:[{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"uint256",name:"totalCost",type:"uint256"},{internalType:"uint256",name:"totalFee",type:"uint256"}],internalType:"struct OptionMarket.Result",name:"result",type:"tuple"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"boardId",type:"uint256"}],name:"forceSettleBoard",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"boardId",type:"uint256"}],name:"getBoardAndStrikeDetails",outputs:[{components:[{internalType:"uint256",name:"id",type:"uint256"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"iv",type:"uint256"},{internalType:"bool",name:"frozen",type:"bool"},{internalType:"uint256[]",name:"strikeIds",type:"uint256[]"}],internalType:"struct OptionMarket.OptionBoard",name:"",type:"tuple"},{components:[{internalType:"uint256",name:"id",type:"uint256"},{internalType:"uint256",name:"strikePrice",type:"uint256"},{internalType:"uint256",name:"skew",type:"uint256"},{internalType:"uint256",name:"longCall",type:"uint256"},{internalType:"uint256",name:"shortCallBase",type:"uint256"},{internalType:"uint256",name:"shortCallQuote",type:"uint256"},{internalType:"uint256",name:"longPut",type:"uint256"},{internalType:"uint256",name:"shortPut",type:"uint256"},{internalType:"uint256",name:"boardId",type:"uint256"}],internalType:"struct OptionMarket.Strike[]",name:"",type:"tuple[]"},{internalType:"uint256[]",name:"",type:"uint256[]"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"boardId",type:"uint256"}],name:"getBoardStrikes",outputs:[{internalType:"uint256[]",name:"strikeIds",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[],name:"getLiveBoards",outputs:[{internalType:"uint256[]",name:"_liveBoards",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[],name:"getNumLiveBoards",outputs:[{internalType:"uint256",name:"numLiveBoards",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"boardId",type:"uint256"}],name:"getOptionBoard",outputs:[{components:[{internalType:"uint256",name:"id",type:"uint256"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"iv",type:"uint256"},{internalType:"bool",name:"frozen",type:"bool"},{internalType:"uint256[]",name:"strikeIds",type:"uint256[]"}],internalType:"struct OptionMarket.OptionBoard",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[],name:"getOptionMarketParams",outputs:[{components:[{internalType:"uint256",name:"maxBoardExpiry",type:"uint256"},{internalType:"address",name:"securityModule",type:"address"},{internalType:"uint256",name:"feePortionReserved",type:"uint256"},{internalType:"uint256",name:"staticBaseSettlementFee",type:"uint256"}],internalType:"struct OptionMarket.OptionMarketParameters",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"strikeId",type:"uint256"}],name:"getSettlementParameters",outputs:[{internalType:"uint256",name:"strikePrice",type:"uint256"},{internalType:"uint256",name:"priceAtExpiry",type:"uint256"},{internalType:"uint256",name:"strikeToBaseReturned",type:"uint256"},{internalType:"uint256",name:"longScaleFactor",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"strikeId",type:"uint256"}],name:"getStrike",outputs:[{components:[{internalType:"uint256",name:"id",type:"uint256"},{internalType:"uint256",name:"strikePrice",type:"uint256"},{internalType:"uint256",name:"skew",type:"uint256"},{internalType:"uint256",name:"longCall",type:"uint256"},{internalType:"uint256",name:"shortCallBase",type:"uint256"},{internalType:"uint256",name:"shortCallQuote",type:"uint256"},{internalType:"uint256",name:"longPut",type:"uint256"},{internalType:"uint256",name:"shortPut",type:"uint256"},{internalType:"uint256",name:"boardId",type:"uint256"}],internalType:"struct OptionMarket.Strike",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"strikeId",type:"uint256"}],name:"getStrikeAndBoard",outputs:[{components:[{internalType:"uint256",name:"id",type:"uint256"},{internalType:"uint256",name:"strikePrice",type:"uint256"},{internalType:"uint256",name:"skew",type:"uint256"},{internalType:"uint256",name:"longCall",type:"uint256"},{internalType:"uint256",name:"shortCallBase",type:"uint256"},{internalType:"uint256",name:"shortCallQuote",type:"uint256"},{internalType:"uint256",name:"longPut",type:"uint256"},{internalType:"uint256",name:"shortPut",type:"uint256"},{internalType:"uint256",name:"boardId",type:"uint256"}],internalType:"struct OptionMarket.Strike",name:"",type:"tuple"},{components:[{internalType:"uint256",name:"id",type:"uint256"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"iv",type:"uint256"},{internalType:"bool",name:"frozen",type:"bool"},{internalType:"uint256[]",name:"strikeIds",type:"uint256[]"}],internalType:"struct OptionMarket.OptionBoard",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"strikeId",type:"uint256"}],name:"getStrikeAndExpiry",outputs:[{internalType:"uint256",name:"strikePrice",type:"uint256"},{internalType:"uint256",name:"expiry",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract BaseExchangeAdapter",name:"_exchangeAdapter",type:"address"},{internalType:"contract LiquidityPool",name:"_liquidityPool",type:"address"},{internalType:"contract OptionMarketPricer",name:"_optionPricer",type:"address"},{internalType:"contract OptionGreekCache",name:"_greekCache",type:"address"},{internalType:"contract ShortCollateral",name:"_shortCollateral",type:"address"},{internalType:"contract OptionToken",name:"_optionToken",type:"address"},{internalType:"contract IERC20Decimals",name:"_quoteAsset",type:"address"},{internalType:"contract IERC20Decimals",name:"_baseAsset",type:"address"}],name:"init",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"address",name:"rewardBeneficiary",type:"address"}],name:"liquidatePosition",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_owner",type:"address"}],name:"nominateNewOwner",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"nominatedOwner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{components:[{internalType:"uint256",name:"strikeId",type:"uint256"},{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"uint256",name:"iterations",type:"uint256"},{internalType:"enum OptionMarket.OptionType",name:"optionType",type:"uint8"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"setCollateralTo",type:"uint256"},{internalType:"uint256",name:"minTotalCost",type:"uint256"},{internalType:"uint256",name:"maxTotalCost",type:"uint256"},{internalType:"address",name:"referrer",type:"address"}],internalType:"struct OptionMarket.TradeInputParameters",name:"params",type:"tuple"}],name:"openPosition",outputs:[{components:[{internalType:"uint256",name:"positionId",type:"uint256"},{internalType:"uint256",name:"totalCost",type:"uint256"},{internalType:"uint256",name:"totalFee",type:"uint256"}],internalType:"struct OptionMarket.Result",name:"result",type:"tuple"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"quoteAsset",outputs:[{internalType:"contract IERC20Decimals",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract IERC20Decimals",name:"token",type:"address"},{internalType:"address",name:"recipient",type:"address"}],name:"recoverFunds",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"scaledLongsForBoard",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_baseLimit",type:"uint256"}],name:"setBaseLimit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"boardId",type:"uint256"},{internalType:"uint256",name:"baseIv",type:"uint256"}],name:"setBoardBaseIv",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"boardId",type:"uint256"},{internalType:"bool",name:"frozen",type:"bool"}],name:"setBoardFrozen",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"uint256",name:"maxBoardExpiry",type:"uint256"},{internalType:"address",name:"securityModule",type:"address"},{internalType:"uint256",name:"feePortionReserved",type:"uint256"},{internalType:"uint256",name:"staticBaseSettlementFee",type:"uint256"}],internalType:"struct OptionMarket.OptionMarketParameters",name:"_optionMarketParams",type:"tuple"}],name:"setOptionMarketParams",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"strikeId",type:"uint256"},{internalType:"uint256",name:"skew",type:"uint256"}],name:"setStrikeSkew",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"boardId",type:"uint256"}],name:"settleExpiredBoard",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"smClaim",outputs:[],stateMutability:"nonpayable",type:"function"}],fn=(n,e,t)=>{switch(e){case F.LiquidityPool:switch(n){case A.Avalon:return oo;case A.Newport:return vo}case F.LiquidityToken:switch(n){case A.Avalon:return uo;case A.Newport:return bo}case F.OptionGreekCache:switch(n){case A.Avalon:return lo;case A.Newport:return ko}case F.OptionMarket:switch(n){case A.Avalon:return yo;case A.Newport:switch(t){case J.Arbitrum:return Mo;case J.Optimism:return Oo}}case F.OptionMarketPricer:switch(n){case A.Avalon:return mo;case A.Newport:return go}case F.OptionToken:switch(n){case A.Avalon:return co;case A.Newport:return wo}case F.PoolHedger:switch(n){case A.Avalon:return fo;case A.Newport:switch(t){case J.Arbitrum:return ho;case J.Optimism:return Co}}case F.ShortCollateral:switch(n){case A.Avalon:return To;case A.Newport:return Po}}},So=(n,e)=>{switch(e){case F.LiquidityPool:return n.liquidityPool;case F.LiquidityToken:return n.liquidityToken;case F.OptionGreekCache:return n.greekCache;case F.OptionMarket:return n.optionMarket;case F.OptionMarketPricer:return n.optionMarketPricer;case F.OptionToken:return n.optionToken;case F.PoolHedger:return n.poolHedger;case F.ShortCollateral:return n.shortCollateral}};function E(n,e,t,a){const{provider:i}=n,r=So(e,a),s=fn(t,a,n.network);return new nt(r,s,i)}const xo=[{inputs:[{components:[{internalType:"address",name:"target",type:"address"},{internalType:"bytes",name:"callData",type:"bytes"}],internalType:"struct Multicall3.Call[]",name:"calls",type:"tuple[]"}],name:"aggregate",outputs:[{internalType:"uint256",name:"blockNumber",type:"uint256"},{internalType:"bytes[]",name:"returnData",type:"bytes[]"}],stateMutability:"payable",type:"function"},{inputs:[{components:[{internalType:"address",name:"target",type:"address"},{internalType:"bool",name:"allowFailure",type:"bool"},{internalType:"bytes",name:"callData",type:"bytes"}],internalType:"struct Multicall3.Call3[]",name:"calls",type:"tuple[]"}],name:"aggregate3",outputs:[{components:[{internalType:"bool",name:"success",type:"bool"},{internalType:"bytes",name:"returnData",type:"bytes"}],internalType:"struct Multicall3.Result[]",name:"returnData",type:"tuple[]"}],stateMutability:"payable",type:"function"},{inputs:[{components:[{internalType:"address",name:"target",type:"address"},{internalType:"bool",name:"allowFailure",type:"bool"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bytes",name:"callData",type:"bytes"}],internalType:"struct Multicall3.Call3Value[]",name:"calls",type:"tuple[]"}],name:"aggregate3Value",outputs:[{components:[{internalType:"bool",name:"success",type:"bool"},{internalType:"bytes",name:"returnData",type:"bytes"}],internalType:"struct Multicall3.Result[]",name:"returnData",type:"tuple[]"}],stateMutability:"payable",type:"function"},{inputs:[{components:[{internalType:"address",name:"target",type:"address"},{internalType:"bytes",name:"callData",type:"bytes"}],internalType:"struct Multicall3.Call[]",name:"calls",type:"tuple[]"}],name:"blockAndAggregate",outputs:[{internalType:"uint256",name:"blockNumber",type:"uint256"},{internalType:"bytes32",name:"blockHash",type:"bytes32"},{components:[{internalType:"bool",name:"success",type:"bool"},{internalType:"bytes",name:"returnData",type:"bytes"}],internalType:"struct Multicall3.Result[]",name:"returnData",type:"tuple[]"}],stateMutability:"payable",type:"function"},{inputs:[],name:"getBasefee",outputs:[{internalType:"uint256",name:"basefee",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"blockNumber",type:"uint256"}],name:"getBlockHash",outputs:[{internalType:"bytes32",name:"blockHash",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getBlockNumber",outputs:[{internalType:"uint256",name:"blockNumber",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getChainId",outputs:[{internalType:"uint256",name:"chainid",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getCurrentBlockCoinbase",outputs:[{internalType:"address",name:"coinbase",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getCurrentBlockDifficulty",outputs:[{internalType:"uint256",name:"difficulty",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getCurrentBlockGasLimit",outputs:[{internalType:"uint256",name:"gaslimit",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getCurrentBlockTimestamp",outputs:[{internalType:"uint256",name:"timestamp",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"addr",type:"address"}],name:"getEthBalance",outputs:[{internalType:"uint256",name:"balance",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getLastBlockHash",outputs:[{internalType:"bytes32",name:"blockHash",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bool",name:"requireSuccess",type:"bool"},{components:[{internalType:"address",name:"target",type:"address"},{internalType:"bytes",name:"callData",type:"bytes"}],internalType:"struct Multicall3.Call[]",name:"calls",type:"tuple[]"}],name:"tryAggregate",outputs:[{components:[{internalType:"bool",name:"success",type:"bool"},{internalType:"bytes",name:"returnData",type:"bytes"}],internalType:"struct Multicall3.Result[]",name:"returnData",type:"tuple[]"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"bool",name:"requireSuccess",type:"bool"},{components:[{internalType:"address",name:"target",type:"address"},{internalType:"bytes",name:"callData",type:"bytes"}],internalType:"struct Multicall3.Call[]",name:"calls",type:"tuple[]"}],name:"tryBlockAndAggregate",outputs:[{internalType:"uint256",name:"blockNumber",type:"uint256"},{internalType:"bytes32",name:"blockHash",type:"bytes32"},{components:[{internalType:"bool",name:"success",type:"bool"},{internalType:"bytes",name:"returnData",type:"bytes"}],internalType:"struct Multicall3.Result[]",name:"returnData",type:"tuple[]"}],stateMutability:"payable",type:"function"}],Io=[{anonymous:!1,inputs:[{indexed:!0,internalType:"contract IERC20",name:"rewardToken",type:"address"},{indexed:!0,internalType:"address",name:"claimer",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!0,internalType:"uint256",name:"epochTimestamp",type:"uint256"},{indexed:!1,internalType:"string",name:"tag",type:"string"}],name:"ClaimAdded",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"contract IERC20",name:"rewardToken",type:"address"},{indexed:!0,internalType:"address",name:"claimer",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"Claimed",type:"event"},{inputs:[{internalType:"contract IERC20[]",name:"tokens",type:"address[]"}],name:"claim",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"},{internalType:"contract IERC20",name:"",type:"address"}],name:"claimableBalances",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"}],Ao="0xcA11bde05977b3631167028862bE2a173976CA11",Fo="0xecB73D4621Cabbf199e778CAEBc74bE27f2EcEe1",qo={Multicall3:Ao,MultiDistributor:Fo},Vo="0xcA11bde05977b3631167028862bE2a173976CA11",Do={Multicall3:Vo},Lo="0xcA11bde05977b3631167028862bE2a173976CA11",Bo="0x019F0233C0277B9422FCDb1213B09C86f5f27D87",Eo={Multicall3:Lo,MultiDistributor:Bo},_o="0xcA11bde05977b3631167028862bE2a173976CA11",Ro={Multicall3:_o},No=(n,e)=>{switch(n.chain){case D.Arbitrum:return qo[e];case D.ArbitrumGoerli:return Do[e];case D.Optimism:return Eo[e];case D.OptimismGoerli:return Ro[e]}},Go=n=>{switch(n){case et.MultiDistributor:return Io;case et.Multicall3:return xo}};function sn(n,e){const{provider:t}=n,a=No(n,e);if(!a)throw new Error("Contract does not exist for specified chain");const i=Go(e);return new nt(a,i,t)}async function tt(n,e){const t=sn(n,et.Multicall3),a=e.map(p=>({target:p.contract.address,callData:p.contract.interface.encodeFunctionData(p.function,p.args)})),{returnData:i,blockNumber:r}=await t.callStatic.aggregate(a);return{returnData:e.map((p,o)=>p.contract.interface.decodeFunctionResult(p.function,i[o])[0]),blockNumber:r.toNumber()}}async function Qo(n,e){const t=await n.markets();return await Promise.all(t.map(async a=>{const i=Vt(n.provider,a.quoteToken.address),r=Vt(n.provider,a.baseToken.address),s=E(n,a.contractAddresses,n.version,F.OptionMarket),p=E(n,a.contractAddresses,n.version,F.LiquidityPool),o=E(n,a.contractAddresses,n.version,F.LiquidityToken),{returnData:[u,l,y,m,d,T,c,h,v,k]}=await tt(n,[{contract:i,function:"symbol",args:[]},{contract:i,function:"decimals",args:[]},{contract:i,function:"balanceOf",args:[e]},{contract:i,function:"allowance",args:[e,s.address]},{contract:i,function:"allowance",args:[e,p.address]},{contract:r,function:"symbol",args:[]},{contract:r,function:"decimals",args:[]},{contract:r,function:"balanceOf",args:[e]},{contract:r,function:"allowance",args:[e,s.address]},{contract:o,function:"balanceOf",args:[e]}]);return{owner:e,market:a,marketAddress:a.address,marketName:a.name,quoteAsset:{address:i.address,balance:y,symbol:u,decimals:l,tradeAllowance:m,depositAllowance:d},baseAsset:{address:r.address,symbol:T,decimals:c,balance:h,tradeAllowance:v},liquidityToken:{address:o.address,symbol:`${a.baseToken.symbol}LP`,balance:k,decimals:18}}}))}class pn{constructor(e,t){this.lyra=e,this.address=t}static get(e,t){return new pn(e,t)}async balances(){return await Qo(this.lyra,this.address)}async marketBalances(e){const[t,a]=await Promise.all([this.lyra.market(e),this.balances()]),i=a.find(r=>r.marketAddress.toLowerCase()===t.address.toLowerCase());if(!i)throw new Error("No balances exist for market");return i}drip(){if(this.lyra.deployment!==ve.Testnet)throw new Error("Faucet is only supported on testnet contracts");const e=te(this.lyra,this.lyra.version,Q.TestFaucet),t=e.interface.encodeFunctionData("drip");return _(this.lyra.provider,this.lyra.provider.network.chainId,e.address,this.address,t)}}const Ho=.005,Ot=60*60,yt=24*Ot,tn=yt*7,ea=tn*4,Uo=ea*6,Wo=365.25*yt,Xt={},jo=10*1e3;async function zo(n){return await(await Ln(n)).json()}async function Yi(n){const e=Date.now();return(!Xt[n]||e>Xt[n].lastUpdated+jo)&&(Xt[n]={fetch:zo(n),lastUpdated:e}),Xt[n].fetch}const $o=[];async function Ko(n){return n.deployment!==ve.Mainnet?$o:Yi(`${n.apiUri}/rewards/global?network=${n.network}&version=${n.version}`)}function Ta(n,e){const[t]=e.split("-");if(n.version===A.Avalon)switch(t.toLowerCase()){case"eth":case"seth":return"sETH";case"btc":case"sbtc":return"sBTC";case"sol":case"ssol":return"sSOL";default:return t}else switch(t.toLowerCase()){case"eth":case"weth":return"WETH";case"btc":case"wbtc":return"WBTC";case"lyarb":case"arb":return"LyARB";default:return t.toUpperCase()}}function fa(n,e){return aa(e)?n.address===Te(e):n.baseToken.symbol.toLowerCase()===Ta(n.lyra,e).toLowerCase()}function Zi(n,e){const t=Object.values(n).find(a=>fa(a,e));return t??null}function Ee(n,e){const t=Zi(n,e);if(!t)throw new Error("Failed to find market");return t}function q(n,e=18){return parseFloat(Lr(n.toString(),e))}function Xo(n,e,t,a,i){return a>0?Math.min(i*n+(1-i)*t/a*e,n):n}function Yo(n,e,t){return t===0||e===0?0:n*(e/t)}function mt(n,e){return n.filter((t,a,i)=>i.findIndex(r=>e(r)===e(t))===a)}class hn{constructor(e,t,a,i,r,s){var p,o,u,l,y;this.lyra=e,this.id=t,this.epoch=a,this.markets=i,this.marketsLiquidity=r,this.tradingBoostTiers=(o=(p=a.tradingRewardConfig)===null||p===void 0?void 0:p.boostRateTable)===null||o===void 0?void 0:o.map(T=>({stakingCutoff:T.stakingCutoff,tradingCutoff:T.tradingCutoff,isReferred:T.isReferred,label:T.label,boost:T.boostRate})),this.blockTimestamp=s.timestamp,this.startTimestamp=a.startTimestamp,this.lastUpdatedTimestamp=a.lastUpdated,this.endTimestamp=a.endTimestamp,this.distributionTimestamp=(u=a.distributionTimestamp)!==null&&u!==void 0?u:a.endTimestamp,this.isDepositPeriod=a.isDepositPeriod,this.startEarningTimestamp=a.startEarningTimestamp,this.isCurrent=this.blockTimestamp>=this.startTimestamp&&this.blockTimestamp<=this.endTimestamp,this.isComplete=this.blockTimestamp>this.endTimestamp;const m=Math.max(0,this.endTimestamp-this.startTimestamp),d=m-Math.max(0,this.endTimestamp-this.blockTimestamp);this.duration=m,this.progressDays=d/yt,this.totalAverageStakedLyra=this.progressDays?a.totalStkLyraDays/this.progressDays:0,this.tradingRewardsCap=a.tradingRewardConfig.tokens.map(T=>({address:T.address,symbol:T.symbol,decimals:T.decimals,amount:T.cap})),this.tradingRewardTokens=mt(a.tradingRewardConfig.tokens.filter(T=>T.cap>0),T=>T.address.toLowerCase()),this.vaultRewardTokens=mt(Object.values(a.MMVConfig).flatMap(T=>T.tokens).filter(T=>T.amount>0),T=>T.address.toLowerCase()),this.rewardTokens=mt([...this.tradingRewardTokens,...this.vaultRewardTokens],T=>T.address),this.tokenPriceMap=(y=(l=a.tokenPrices)===null||l===void 0?void 0:l.reduce((T,c)=>({...T,[c.address]:c}),{}))!==null&&y!==void 0?y:{}}static async getAll(e){if(e.deployment!==ve.Mainnet)return[];const[t,a,i]=await Promise.all([Ko(e),e.markets(),e.provider.getBlock("latest")]),r=await Promise.all(a.map(s=>s.liquidity()));return t.map((s,p)=>new hn(e,p+1,s,a,r,i)).sort((s,p)=>s.endTimestamp-p.endTimestamp)}static async getLatest(e){var t;if(e.deployment!==ve.Mainnet)return null;const a=await this.getAll(e),i=(t=a.find(r=>!r.isComplete))!==null&&t!==void 0?t:a[a.length-1];return i??null}static async getByStartTimestamp(e,t){if(e.deployment!==ve.Mainnet)return null;const i=(await this.getAll(e)).find(r=>r.startTimestamp===t);return i??null}vaultApy(e,t,a){const i=this.markets.findIndex(k=>fa(k,e)),s=this.markets[i].baseToken.symbol,p=this.totalAverageVaultTokens(e),o=this.epoch.MMVConfig[s],u=this.epoch.scaledStkLyraDays[s];if(!o)return[];const l=this.progressDays?u/this.progressDays:0,m=Xo(a,p,t,l,o.x)/a*2,d=q(this.marketsLiquidity[i].tokenPrice),T=d>0?q(this.marketsLiquidity[i].pendingDeposits)/d:0,c=p+T,h=d>0?1/d:0,v=c>0?h/c:0;return o.tokens.map(k=>{var b,g;const C=k.amount,P=this.duration>0?v*C/this.duration:0,O=(g=(b=this.tokenPriceMap[k.address])===null||b===void 0?void 0:b.price)!==null&&g!==void 0?g:0;return{amount:P*O*Wo*m,address:k.address,decimals:k.decimals,symbol:k.symbol}})}vaultApyTotal(e,t,a){return this.vaultApy(e,t,a).reduce((i,r)=>i+r.amount,0)}vaultMaxBoost(e,t){const i=Ee(this.markets,e).baseToken.symbol,r=this.totalAverageVaultTokens(e),s=this.epoch.scaledStkLyraDays[i],p=this.progressDays?s/this.progressDays:0;return Yo(p,t,r)}vaultApyMultiplier(e,t,a){const i=this.vaultApyTotal(e,0,a),r=this.vaultApyTotal(e,t,a);return i>0?r/i:0}minVaultApy(e){return this.vaultApy(e,0,1e4)}maxVaultApy(e){const a=Ee(this.markets,e).baseToken.symbol,i=this.epoch.scaledStkLyraDays[a];if(!i)return[];const r=this.progressDays?i/this.progressDays:0;return this.vaultApy(e,r,1e4)}totalVaultRewards(e){var t;const i=Ee(this.markets,e).baseToken.symbol;return(t=this.epoch.globalMMVRewards[i])!==null&&t!==void 0?t:[]}totalAverageVaultTokens(e){const t=Ee(this.markets,e);return t.baseToken.symbol,q(t.params.NAV)}totalAverageBoostedVaultTokens(e){var t;const i=Ee(this.markets,e).baseToken.symbol;return this.progressDays?((t=this.epoch.totalBoostedLpTokenDays[i])!==null&&t!==void 0?t:0)/this.progressDays:0}async accountRewardEpoch(e){const a=(await ft.getByOwner(this.lyra,e)).find(i=>i.globalEpoch.startTimestamp===this.startTimestamp&&i.globalEpoch.endTimestamp===this.endTimestamp);return a??null}}async function Zo(n,e){return n.deployment!==ve.Mainnet?[]:Yi(`${n.apiUri}/rewards/account?network=${n.network}&account=${e}&version=${n.version}`)}const Ji=0,er=2147483647,ha=1e3,tr=`
timestamp
blockNumber
transactionHash
trader
size
isOpen
isBuy
spotPrice
premium
spotPriceFee
optionPriceFee
vegaUtilFee
varianceFee
externalSwapFees
setCollateralTo
newIv
newBaseIv
newSkew
volTraded
isForceClose
isLiquidation
strike {
  strikeId
  strikePrice
}
board {
  expiryTimestamp
}
market {
  name
  id
}
option {
  isCall
}
position {
  positionId
  isLong
  isBaseCollateral
}
`,nr=`
timestamp
trader
blockNumber
transactionHash
amount
isBaseCollateral
spotPrice
strike {
  strikeId
  strikePrice
}
board {
  expiryTimestamp
}
market {
  name
  id
}
option {
  isCall
}
position {
  positionId
  isLong
  isBaseCollateral
}
`,ar=`
id
blockNumber
profit
size
spotPriceAtExpiry
timestamp
transactionHash
owner
settleAmount
position {
  positionId
  isBaseCollateral
  isLong
  strike {
    strikeId
    strikePrice
  }
  board {
    expiryTimestamp
  }
  market {
    name
    id
    latestSpotPrice
  }
  option {
    isCall
  }
}
`,ir=`
  oldOwner
  newOwner
  transactionHash
  blockNumber
  position {
    id
    positionId
  }
`,ta=`
id
positionId
owner
size
isLong
collateral
isBaseCollateral
state
openTimestamp
closeTimestamp
strike {
  strikeId
  strikePrice
}
board {
  boardId
  expiryTimestamp
  spotPriceAtExpiry
}
market {
  name
  id
  latestSpotPrice
}
option {
  isCall
  latestOptionPriceAndGreeks {
    optionPrice
  }
}
trades(orderBy: timestamp, orderDirection: asc) {
  ${tr}
}
collateralUpdates(orderBy: timestamp, orderDirection: asc) {
  ${nr}
}
transfers(orderBy: timestamp, orderDirection: asc) {
  ${ir}
}
settle {
  ${ar}
}
`,rr=`
  id
  period
  timestamp
  tokenPrice
  freeLiquidity
  burnableLiquidity
  usedCollatLiquidity
  pendingDeltaLiquidity
  usedDeltaLiquidity
  NAV
  netOptionValue
  pendingDeposits
  pendingWithdrawals
`,sr=`
  id
  period
  timestamp
  netDelta
  poolNetDelta
  hedgerNetDelta
  netStdVega
`,Jo=`
  id
  timestamp
  period
  premiumVolume
  notionalVolume
  totalPremiumVolume
  totalNotionalVolume
  spotPriceFees
  optionPriceFees
  vegaFees
  varianceFees
  deltaCutoffFees
  liquidatorFees
  smLiquidationFees
  lpLiquidationFees
  totalShortPutOpenInterestUSD
  totalShortCallOpenInterestUSD
`,eu=`
  timestamp
  spotPrice
  open
  high
  low
  close
  blockNumber
  period
`,tu=`
  timestamp
  blockTimestamp
  optionPrice
  id
  blockNumber
  option {
    id
  }
`,nu=`
  notionalVolume
  premiumVolume
  timestamp
`,au=`
  timestamp
  iv
`,iu=`
  pool {
    market {
      id
    }
    cbEvents(first:1, orderBy:cbTimestamp, orderDirection:desc) {
      cbTimestamp
      ivVarianceCrossed
      skewVarianceCrossed
      liquidityVarianceCrossed
    }
  }
  user
  pendingDepositsAndWithdrawals(where: {
    isDeposit: true
  }) {
    id
    queueID
    pendingAmount
    processedAmount
    timestamp
    transactionHash
  }
  depositsAndWithdrawals(where: {
    isDeposit: true
  }) {
    id
    queueID
    quoteAmount
    tokenAmount
    tokenPrice
    timestamp
    transactionHash
  }
`,ru=`
  pool {
    market {
      id
    }
  }
  user
  pendingDepositsAndWithdrawals(where: {
    isDeposit: false
  }) {
    id
    queueID
    pendingAmount
    processedAmount
    timestamp
    transactionHash
  }
  depositsAndWithdrawals(where: {
    isDeposit: false
  }) {
    id
    queueID
    quoteAmount
    tokenAmount
    tokenPrice
    timestamp
    transactionHash
  }
`,su=`
  amount
  blockNumber
  claimer
  epochTimestamp
  rewardToken
  tag
  timestamp
`,pu=`
  amount
  blockNumber
  claimer
  rewardToken
  timestamp
`,pr=`
  cbTimestamp
  ivVarianceCrossed
  skewVarianceCrossed
  liquidityVarianceCrossed
`;var me;(function(n){n[n.FifteenMinutes=900]="FifteenMinutes",n[n.OneHour=3600]="OneHour",n[n.FourHours=14400]="FourHours",n[n.EightHours=28800]="EightHours",n[n.OneDay=86400]="OneDay",n[n.SevenDays=604800]="SevenDays"})(me||(me={}));async function Se(n,e){return n.query({...e,errorPolicy:"all"})}const ou=re`
  query claimAddeds($user: String!) {
    claimAddeds(where: { 
      claimer: $user
    }) {
      ${su}
    }
  }
`;async function uu(n,e){var t;const{data:a}=await Se(n.govSubgraphClient,{query:ou,variables:{user:e.toLowerCase()}});return(t=a==null?void 0:a.claimAddeds.map(i=>({amount:M.from(i.amount),blockNumber:i.blockNumber,claimer:i.claimer,epochTimestamp:parseInt(i.epochTimestamp),rewardToken:i.rewardToken,timestamp:i.timestamp,tag:i.tag})).filter(i=>i.rewardToken.toLowerCase()!=="0xCb9f85730f57732fc899fb158164b9Ed60c77D49".toLowerCase()))!==null&&t!==void 0?t:[]}const lu=re`
  query claims($user: String!) {
    claims(where: { 
      claimer: $user
    }) {
      ${pu}
    }
  }
`;async function yu(n,e){var t;const{data:a}=await Se(n.govSubgraphClient,{query:lu,variables:{user:e.toLowerCase()}});return(t=a==null?void 0:a.claims.map(i=>({amount:M.from(i.amount),blockNumber:i.blockNumber,claimer:i.claimer,rewardToken:i.rewardToken,timestamp:i.timestamp})))!==null&&t!==void 0?t:[]}const mu="TRADING";function du(n,e){const t=e.filter(a=>a.tag.split("-").includes(mu)&&a.epochTimestamp===n.startTimestamp).reduce((a,i)=>{const r=n.tradingRewardTokens.find(s=>s.address.toLowerCase()===i.rewardToken.toLowerCase());return r?(a[r.address]&&(a[r.address].amount+=q(i.amount,r.decimals)),{...a,[r.address]:{...r,amount:q(i.amount,r.decimals)}}):a},{});return Object.values(t)}const cu="MMV";function Tu(n,e,t){const a=t.filter(i=>{const s=i.tag.split("-").map(p=>p.toUpperCase());return s.includes(cu)&&s.includes(n.baseToken.symbol.toUpperCase())&&n.baseToken.symbol.toUpperCase()!=="OP"&&i.epochTimestamp===e.startTimestamp}).reduce((i,r)=>{const s=e.vaultRewardTokens.find(p=>p.address.toLowerCase()===r.rewardToken.toLowerCase());return s?(i[s.address]&&(i[s.address].amount+=q(r.amount,s.decimals)),{...i,[s.address]:{...s,amount:q(r.amount,s.decimals)}}):i},{});return Object.values(a)}const fu="TRADING";function hu(n,e,t){const a=e.filter(i=>i.tag.split("-").includes(fu)).reduce((i,r)=>{if(t.some(o=>o.timestamp>r.timestamp&&o.rewardToken===r.rewardToken))return i;const p=n.find(o=>o.address.toLowerCase()===r.rewardToken.toLowerCase());return p?(i[p.address]&&(i[p.address].amount+=q(r.amount,p.decimals)),{...i,[p.address]:{...p,amount:q(r.amount,p.decimals)}}):(console.warn("Missing token info in global epoch config",r.rewardToken),i)},{});return Object.values(a).filter(i=>i.amount>0)}const vu="MMV";function bu(n,e,t,a){const i=t.filter(r=>{const p=r.tag.split("-").map(o=>o.toUpperCase());return p.includes(vu)&&n.baseToken.symbol.toUpperCase()!=="OP"&&p.includes(n.baseToken.symbol.toUpperCase())}).reduce((r,s)=>{if(a.some(u=>u.timestamp>s.timestamp&&u.rewardToken===s.rewardToken))return r;const o=e.find(u=>u.address.toLowerCase()===s.rewardToken.toLowerCase());return o?(r[o.address]&&(r[o.address].amount+=q(s.amount,o.decimals)),{...r,[o.address]:{...o,amount:q(s.amount,o.decimals)}}):(console.warn("Missing token info in global epoch config",s.rewardToken),r)},{});return Object.values(i).filter(r=>r.amount>0)}class ft{constructor(e,t,a,i,r,s,p,o){var u,l,y,m,d,T;this.lyra=e,this.account=t,this.globalEpoch=i,this.accountEpoch=a;const c=!!a.tradingRewards.newRewards,h=(y=(l=(u=a.tradingRewards)===null||u===void 0?void 0:u.rewards)===null||l===void 0?void 0:l.trading)!==null&&y!==void 0?y:[],v=(T=(d=(m=a==null?void 0:a.tradingRewards)===null||m===void 0?void 0:m.newRewards)===null||d===void 0?void 0:d.tokens)!==null&&T!==void 0?T:[],k=c?v:h,b=du(i,r);this.isTradingRewardsDistributed=!!b.find(g=>g.amount>0),this.tradingRewards=this.isTradingRewardsDistributed?b:k,this.totalClaimableRewards=o,this.totalClaimableTradingRewards=hu(p,r,s),this.totalClaimableVaultRewardsMap=i.markets.reduce((g,C)=>({...g,[C.baseToken.symbol]:bu(C,p,r,s)}),{}),this.distributedVaultRewardsMap=i.markets.reduce((g,C)=>({...g,[C.baseToken.symbol]:Tu(C,i,r)}),{}),this.calculatedVaultRewardsMap=i.markets.reduce((g,C)=>{const P=C.baseToken.symbol,O=a.mmvRewards?a.mmvRewards[P]:null,x=!!(O!=null&&O.isIgnored);return{...g,[C.baseToken.symbol]:O&&!x?O.rewards.filter(I=>I.amount>Ho):[]}},{}),this.isVaultRewardsDistributedMap=i.markets.reduce((g,C)=>{var P;return{...g,[C.baseToken.symbol]:!!(!((P=this.distributedVaultRewardsMap[C.baseToken.symbol])===null||P===void 0)&&P.find(O=>O.amount>0))}},{})}static async getByOwner(e,t){if(e.deployment!==ve.Mainnet)return[];const[a,i,r,s]=await Promise.all([Zo(e,t),hn.getAll(e),uu(e,t),yu(e,t)]),p=mt(i.flatMap(y=>y.rewardTokens),y=>y.address),o=sn(e,et.MultiDistributor),{returnData:u}=await tt(e,p.map(({address:y})=>({contract:o,function:"claimableBalances",args:[t,y]}))),l=u.map((y,m)=>({...p[m],amount:q(y,p[m].decimals)})).filter(({amount:y})=>y>0);return a.map(y=>{const m=i.find(d=>d.startTimestamp===y.startTimestamp&&d.endTimestamp===y.endTimestamp);if(!m)throw new Error("Missing corresponding global epoch for account epoch");return new ft(e,t,y,m,r,s,p,l)}).sort((y,m)=>y.globalEpoch.endTimestamp-m.globalEpoch.endTimestamp)}static async getByStartTimestamp(e,t,a){if(e.deployment!==ve.Mainnet)return null;const r=(await ft.getByOwner(e,t)).find(s=>s.globalEpoch.startTimestamp===a);return r??null}static claim(e,t,a){const i=sn(e,et.MultiDistributor),r=i.interface.encodeFunctionData("claim",[a]);return _(e.provider,e.provider.network.chainId,i.address,t,r)}vaultRewards(e){const a=Ee(this.globalEpoch.markets,e).baseToken.symbol;return this.isVaultRewardsDistributed(e)?this.distributedVaultRewardsMap[a]:this.calculatedVaultRewardsMap[a]}totalClaimableVaultRewards(e){const a=Ee(this.globalEpoch.markets,e).baseToken.symbol;return this.totalClaimableVaultRewardsMap[a]}isVaultRewardsDistributed(e){const a=Ee(this.globalEpoch.markets,e).baseToken.symbol;return this.isVaultRewardsDistributedMap[a]}}async function ku(n){return await te(n,n.version,Q.ExchangeAdapter).owner()}function gu(n,e,t,a){const i=Object.entries(t).find(([p,o])=>isNaN(parseInt(p))&&o===a);if(!i)return null;const[r]=i;let s;switch(r){case"optionMarketPricer":s=F.OptionMarketPricer;break;case"liquidityPool":s=F.LiquidityPool;break;case"liquidityToken":s=F.LiquidityToken;break;case"greekCache":s=F.OptionGreekCache;break;case"optionMarket":s=F.OptionMarket;break;case"optionToken":s=F.OptionToken;break;case"shortCollateral":s=F.ShortCollateral;break;case"poolHedger":s=F.PoolHedger;break}return s?{contractId:s,contract:E(n,t,e,s)}:null}const W=M.from(1e7);class va{constructor(e){this.lyra=e}static get(e){return new va(e)}contract(e,t){return te(this.lyra,e,t)}marketContract(e,t,a){return E(this.lyra,e,t,a)}globalContract(e){return sn(this.lyra,e)}getMarketContractForAddress(e,t,a){return gu(this.lyra,t,e,a)}async owner(){return await ku(this.lyra)}async isMarketPaused(e){return await this.contract(this.lyra.version,Q.ExchangeAdapter).isMarketPaused(e)}async isGlobalPaused(){return await this.contract(this.lyra.version,Q.ExchangeAdapter).isGlobalPaused()}async getMarketGlobalCache(e){const t=await this.lyra.market(e),a=E(this.lyra,t.contractAddresses,this.lyra.version,F.OptionGreekCache),[i,r]=await Promise.all([a.isGlobalCacheStale(t.spotPrice),a.getGlobalCache()]);return{...r,isGlobalCacheStale:i}}async setGlobalPaused(e){const t=this.contract(this.lyra.version,Q.ExchangeAdapter),a=await t.owner(),i=t.interface.encodeFunctionData("setGlobalPaused",[e]);return{..._(this.lyra.provider,this.lyra.provider.network.chainId,t.address,a,i),gasLimit:W}}async setMarketPaused(e,t){const a=this.contract(this.lyra.version,Q.ExchangeAdapter),[i,r]=await Promise.all([a.owner(),this.lyra.market(e)]),s=a.interface.encodeFunctionData("setMarketPaused",[r.address,t]);return{..._(this.lyra.provider,this.lyra.provider.network.chainId,a.address,i,s),gasLimit:W}}async addMarketToViewer(e){const t=this.contract(this.lyra.version,Q.OptionMarketViewer),a=await t.owner(),i=t.interface.encodeFunctionData("addMarket",[e]);return{..._(this.lyra.provider,this.lyra.provider.network.chainId,t.address,a,i),gasLimit:W}}async addMarketToRegistry(e){const t=this.contract(this.lyra.version,Q.LyraRegistry),a=await t.owner(),i=t.interface.encodeFunctionData("addMarket",[e]);return{..._(this.lyra.provider,this.lyra.provider.network.chainId,t.address,a,i),gasLimit:W}}async addBoard(e,t,a,i,r,s=!1){const p=await this.lyra.market(e),o=await p.owner(),u=E(this.lyra,p.contractAddresses,this.lyra.version,F.OptionMarket),l=u.interface.encodeFunctionData("createOptionBoard",[t,a,i,r,s]),y=_(this.lyra.provider,this.lyra.provider.network.chainId,u.address,o,l);return y.gasLimit=W,{tx:y,board:{expiry:t,baseIV:a,strikePrices:i,skews:r,frozen:s}}}async addStrikeToBoard(e,t,a,i){const r=await this.lyra.market(e),s=await r.owner(),p=E(this.lyra,r.contractAddresses,this.lyra.version,F.OptionMarket),o=p.interface.encodeFunctionData("addStrikeToBoard",[t,a,i]),u=_(this.lyra.provider,this.lyra.provider.network.chainId,p.address,s,o);return u.gasLimit=W,{tx:u,strike:{boardId:t,strikePrice:a,skew:i}}}async setBoardPaused(e,t,a){const i=await this.lyra.market(e),r=E(this.lyra,i.contractAddresses,this.lyra.version,F.OptionMarket),s=await r.owner(),p=r.interface.encodeFunctionData("setBoardFrozen",[t,a]);return{..._(this.lyra.provider,this.lyra.provider.network.chainId,r.address,s,p),gasLimit:W}}async setBoardBaseIv(e,t,a){const i=await this.lyra.market(e),r=E(this.lyra,i.contractAddresses,this.lyra.version,F.OptionMarket),s=await r.owner(),p=r.interface.encodeFunctionData("setBoardBaseIv",[t,a]);return{..._(this.lyra.provider,this.lyra.provider.network.chainId,r.address,s,p),gasLimit:W}}async setStrikeSkew(e,t,a){const i=await this.lyra.market(e),r=E(this.lyra,i.contractAddresses,this.lyra.version,F.OptionMarket),s=await r.owner(),p=r.interface.encodeFunctionData("setStrikeSkew",[t,a]);return{..._(this.lyra.provider,this.lyra.provider.network.chainId,r.address,s,p),gasLimit:W}}async setGreekCacheParams(e,t,a){const i=await this.lyra.market(t);if(e===A.Avalon){const r={...i.__data.marketParameters.greekCacheParams,...a},s=E(this.lyra,i.contractAddresses,A.Avalon,F.OptionGreekCache),p=await s.owner(),o=s.interface.encodeFunctionData("setGreekCacheParameters",[r]),u=_(this.lyra.provider,this.lyra.provider.network.chainId,s.address,p,o);return u.gasLimit=W,{params:r,tx:u}}else{const r={...i.__data.marketParameters.greekCacheParams,...a},s=E(this.lyra,i.contractAddresses,A.Newport,F.OptionGreekCache),p=await s.owner(),o=s.interface.encodeFunctionData("setGreekCacheParameters",[r]),u=_(this.lyra.provider,this.lyra.provider.network.chainId,s.address,p,o);return u.gasLimit=W,{params:r,tx:u}}}async setForceCloseParams(e,t){const a=await this.lyra.market(e),i={...a.__data.marketParameters.forceCloseParams,...t},r=E(this.lyra,a.contractAddresses,this.lyra.version,F.OptionGreekCache),s=await r.owner(),p=r.interface.encodeFunctionData("setForceCloseParameters",[i]),o=_(this.lyra.provider,this.lyra.provider.network.chainId,r.address,s,p);return o.gasLimit=W,{params:i,tx:o}}async setMinCollateralParams(e,t){const a=await this.lyra.market(e),i={...a.__data.marketParameters.minCollatParams,...t},r=E(this.lyra,a.contractAddresses,this.lyra.version,F.OptionGreekCache),s=await r.owner(),p=r.interface.encodeFunctionData("setMinCollateralParameters",[i]),o=_(this.lyra.provider,this.lyra.provider.network.chainId,r.address,s,p);return o.gasLimit=W,{params:i,tx:o}}async setLiquidityPoolParams(e,t,a){const i=await this.lyra.market(t);if(e===A.Avalon){const r={...i.__data.marketParameters.lpParams,...a},s=E(this.lyra,i.contractAddresses,A.Avalon,F.LiquidityPool),p=await s.owner(),o=s.interface.encodeFunctionData("setLiquidityPoolParameters",[r]),u=_(this.lyra.provider,this.lyra.provider.network.chainId,s.address,p,o);return u.gasLimit=W,{params:r,tx:u}}else{const r={...i.__data.marketParameters.lpParams,...a},s=E(this.lyra,i.contractAddresses,A.Newport,F.LiquidityPool),p=await s.owner(),o=s.interface.encodeFunctionData("setLiquidityPoolParameters",[r]),u=_(this.lyra.provider,this.lyra.provider.network.chainId,s.address,p,o);return u.gasLimit=W,{params:r,tx:u}}}async setPricingParams(e,t){const a=await this.lyra.market(e),i={...a.__data.marketParameters.pricingParams,...t},r=E(this.lyra,a.contractAddresses,this.lyra.version,F.OptionMarketPricer),s=await r.owner(),p=r.interface.encodeFunctionData("setPricingParams",[i]),o=_(this.lyra.provider,this.lyra.provider.network.chainId,r.address,s,p);return o.gasLimit=W,{params:i,tx:o}}async setTradeLimitParams(e,t){const a=await this.lyra.market(e),i={...a.__data.marketParameters.tradeLimitParams,...t},r=E(this.lyra,a.contractAddresses,this.lyra.version,F.OptionMarketPricer),s=await r.owner(),p=r.interface.encodeFunctionData("setTradeLimitParams",[i]),o=_(this.lyra.provider,this.lyra.provider.network.chainId,r.address,s,p);return o.gasLimit=W,{params:i,tx:o}}async setVarianceFeeParams(e,t){const a=await this.lyra.market(e),i={...a.__data.marketParameters.varianceFeeParams,...t},r=E(this.lyra,a.contractAddresses,this.lyra.version,F.OptionMarketPricer),s=await r.owner(),p=r.interface.encodeFunctionData("setVarianceFeeParams",[i]),o=_(this.lyra.provider,this.lyra.provider.network.chainId,r.address,s,p);return o.gasLimit=W,{params:i,tx:o}}async setPartialCollatParams(e,t){const a=await this.lyra.market(e),i={...a.__data.marketParameters.partialCollatParams,...t},r=E(this.lyra,a.contractAddresses,this.lyra.version,F.OptionToken),s=await r.owner(),p=r.interface.encodeFunctionData("setPartialCollateralParams",[i]),o=_(this.lyra.provider,this.lyra.provider.network.chainId,r.address,s,p);return o.gasLimit=W,{params:i,tx:o}}async setOptionMarketParams(e,t){const a=await this.lyra.market(e),i={...a.__data.marketParameters.optionMarketParams,...t},r=E(this.lyra,a.contractAddresses,this.lyra.version,F.OptionMarket),s=await r.owner(),p=r.interface.encodeFunctionData("setOptionMarketParams",[i]),o=_(this.lyra.provider,this.lyra.provider.network.chainId,r.address,s,p);return o.gasLimit=W,{params:i,tx:o}}async setAdapterMarketPricingParams(e,t){const a=await this.lyra.market(e);if(!a.params.adapterView)throw new Error("Adapter market pricing parameters not supported on this market");const i={...a.params.adapterView.marketPricingParams,...t},r=te(this.lyra,A.Newport,Q.ExchangeAdapter),s=await r.owner(),p=r.interface.encodeFunctionData("setMarketPricingParams",[a.address,i]),o=_(this.lyra.provider,this.lyra.provider.network.chainId,r.address,s,p);return o.gasLimit=W,{params:i,tx:o}}async setAdapterMarketConfigurationParams(e,t){const a=await this.lyra.market(e);if(!a.params.adapterView)throw new Error("Adapter market configuration parameters not supported on this market");const i=a.params.adapterView.config,s={...{snxPerpV2MarketAddress:i.snxPerpV2MarketAddress,staticEstimationDiscount:i.staticEstimationDiscount,pool:i.uniswapInfo.pool,feeTier:i.uniswapInfo.feeTier},...t},p=te(this.lyra,A.Newport,Q.ExchangeAdapter),o=await p.owner(),u=p.interface.encodeFunctionData("setMarketAdapterConfiguration",[a.address,s.staticEstimationDiscount,s.snxPerpV2MarketAddress,s.pool,s.feeTier]),l=_(this.lyra.provider,this.lyra.provider.network.chainId,p.address,o,u);return l.gasLimit=W,{params:s,tx:l}}async setPoolHedgerParams(e,t){const a=await this.lyra.market(e),i=E(this.lyra,a.contractAddresses,a.lyra.version,F.PoolHedger),s={...await i.getPoolHedgerParams(),...t},p=await a.owner(),o=i.interface.encodeFunctionData("setPoolHedgerParams",[s]),u=_(this.lyra.provider,this.lyra.provider.network.chainId,i.address,p,o);return u.gasLimit=M.from(1e7),{params:s,tx:u}}async setFuturesPoolHedgerParams(e,t){const a=await this.lyra.market(e);if(a.lyra.version!==A.Newport||!a.params.hedgerView)throw new Error("Parameters not supported on version");const i=E(this.lyra,a.contractAddresses,a.lyra.version,F.PoolHedger),r={...a.params.hedgerView.futuresPoolHedgerParams,...t},s=a.lyra.network===J.Optimism?i.interface.encodeFunctionData("setFuturesPoolHedgerParams",[r]):i.interface.encodeFunctionData("setFuturesPoolHedgerParams",[r]),p=_(this.lyra.provider,this.lyra.provider.network.chainId,i.address,a.params.owner,s);return p.gasLimit=M.from(1e7),{params:r,tx:p}}async setCircuitBreakerParams(e,t){const a=await this.lyra.market(e);if(a.lyra.version!==A.Newport||!("cbParams"in a.__data.marketParameters))throw new Error("Parameters not supported on version");const i={...a.__data.marketParameters.cbParams,...t},r=E(this.lyra,a.contractAddresses,a.lyra.version,F.LiquidityPool),s=await a.owner(),p=r.interface.encodeFunctionData("setCircuitBreakerParameters",[i]),o=_(this.lyra.provider,this.lyra.provider.network.chainId,r.address,s,p);return o.gasLimit=M.from(1e7),{params:i,tx:o}}async processDepositQueue(e,t){const a=await this.lyra.market(e),i=E(this.lyra,a.contractAddresses,this.lyra.version,F.LiquidityPool),r=await i.owner(),s=i.interface.encodeFunctionData("processDepositQueue",[t]),p=_(this.lyra.provider,this.lyra.provider.network.chainId,i.address,r,s);return p.gasLimit=W,p}async processWithdrawalQueue(e,t){const a=await this.lyra.market(e),i=E(this.lyra,a.contractAddresses,this.lyra.version,F.LiquidityPool),r=await i.owner(),s=i.interface.encodeFunctionData("processWithdrawalQueue",[t]),p=_(this.lyra.provider,this.lyra.provider.network.chainId,i.address,r,s);return p.gasLimit=W,p}}const f=M.from(0),S=M.from(10).pow(18),vn=M.from(1).mul(S),Ht=M.from(2).pow(256).sub(1),Pe="0x0000000000000000000000000000000000000000";var J;(function(n){n.Arbitrum="arbitrum",n.Optimism="optimism"})(J||(J={}));const wu=re`
  query lpuserLiquidities($user: String!, $pool: String!) {
    lpuserLiquidities(where: { 
      user: $user,
      pool: $pool
    }) {
      ${iu}
    }
    circuitBreakers(first: 1, where: {
      pool: $pool
    }) {
      ${pr}
    }
  }
`;async function Pu(n,e,t){var a,i;const{data:r}=await Se(n.subgraphClient,{query:wu,variables:{user:e.toLowerCase(),pool:t.contractAddresses.liquidityPool.toLowerCase()}}),s=r==null?void 0:r.lpuserLiquidities[0],p=r==null?void 0:r.circuitBreakers[0],o=p?{timestamp:p.cbTimestamp,reason:p.ivVarianceCrossed||p.skewVarianceCrossed?Ne.Volatility:p.liquidityVarianceCrossed?Ne.Liquidity:Ne.Keeper}:null;if(!s)return{circuitBreaker:o,events:[]};const u=(a=s.pendingDepositsAndWithdrawals.map(c=>({depositor:e,beneficiary:e,queueId:parseInt(c.queueID,10),amountDeposited:M.from(c.pendingAmount),totalQueuedDeposits:f,timestamp:c.timestamp,transactionHash:c.transactionHash})))!==null&&a!==void 0?a:[],l=(i=s.depositsAndWithdrawals.map(c=>({caller:e,beneficiary:e,queueId:parseInt(c.queueID,10),amountDeposited:M.from(c.quoteAmount),tokenPrice:M.from(c.tokenPrice),tokensReceived:M.from(c.tokenAmount),timestamp:c.timestamp,transactionHash:c.transactionHash})))!==null&&i!==void 0?i:[],y=u.reduce((c,h)=>({...c,[h.queueId]:h}),{}),m=l.reduce((c,h)=>h.queueId===0?c:{...c,[h.queueId]:h},{}),d=l.map(c=>({processed:c,isProcessed:!0,isInstant:!0})),T=Object.entries(y).map(([c,h])=>{const v=m[parseInt(c,10)];return v?{queued:h,processed:v,isProcessed:!0,isInstant:!1}:{queued:h,isProcessed:!1,isInstant:!1}});return{events:d.concat(T).sort((c,h)=>{const v=h.isProcessed?h.processed.timestamp:h.queued.timestamp,k=c.isProcessed?c.processed.timestamp:c.queued.timestamp;return v-k}),circuitBreaker:o}}var Ne;(function(n){n.Liquidity="Liquidity",n.Volatility="Volatility",n.Keeper="Keeper"})(Ne||(Ne={}));class dt{constructor(e,t){this.lyra=e,this.__market=t.market,this.__events=t.events;const a=t.events.isInstant?null:t.events.queued,i=t.events.isProcessed?t.events.processed:null,r=t.events.isInstant?i:t.events.queued;this.transactionHash=r.transactionHash,this.queueId=r.queueId,this.beneficiary=r.beneficiary,this.value=r.amountDeposited,this.tokenPriceAtDeposit=i==null?void 0:i.tokenPrice,this.balance=i==null?void 0:i.tokensReceived,this.isPending=!i,this.depositRequestedTimestamp=r.timestamp,this.depositTimestamp=i?i.timestamp:a?a.timestamp+t.market.params.depositDelay:0,this.timeToDeposit=Math.max(0,this.depositTimestamp-t.market.block.timestamp),this.delayReason=this.timeToDeposit===0&&this.isPending&&t.circuitBreaker&&t.circuitBreaker.timestamp>t.market.block.timestamp?t.circuitBreaker.reason:null}static async getByOwner(e,t,a){const[{events:i,circuitBreaker:r},s]=await Promise.all([Pu(e,a,t),t.liquidity()]);return i.map(o=>new dt(e,{market:t,events:o,circuitBreaker:r,marketLiquidity:s}))}static approve(e,t,a){const i=E(e.lyra,e.contractAddresses,e.lyra.version,F.LiquidityPool),r=Vt(e.lyra.provider,e.quoteToken.address),s=r.interface.encodeFunctionData("approve",[i.address,a]);return _(e.lyra.provider,e.lyra.provider.network.chainId,r.address,t,s)}static initiateDeposit(e,t,a){const i=E(e.lyra,e.contractAddresses,e.lyra.version,F.LiquidityPool),r=i.interface.encodeFunctionData("initiateDeposit",[t,a]);return _(e.lyra.provider,e.lyra.provider.network.chainId,i.address,t,r)}market(){return this.__market}}const Cu=re`
  query lpuserLiquidities($user: String!, $pool: String!) {
    lpuserLiquidities(where: { 
      user: $user,
      pool: $pool
    }) {
      ${ru}
    }
    circuitBreakers(first: 1, where: {
      pool: $pool
    }) {
      ${pr}
    }
  }
`;async function Mu(n,e,t){var a,i;const{data:r}=await Se(n.subgraphClient,{query:Cu,variables:{user:e.toLowerCase(),pool:t.contractAddresses.liquidityPool.toLowerCase()}}),s=r==null?void 0:r.lpuserLiquidities[0],p=r==null?void 0:r.circuitBreakers[0],o=p?{timestamp:p.cbTimestamp,reason:p.ivVarianceCrossed||p.skewVarianceCrossed?Ne.Volatility:p.liquidityVarianceCrossed?Ne.Liquidity:Ne.Keeper}:null;if(!s)return{circuitBreaker:o,events:[]};const u=(a=s.pendingDepositsAndWithdrawals.map(c=>({withdrawer:e,beneficiary:e,queueId:parseInt(c.queueID,10),amountWithdrawn:M.from(c.pendingAmount),totalQueuedWithdrawals:f,timestamp:c.timestamp,transactionHash:c.transactionHash})))!==null&&a!==void 0?a:[],l=(i=s.depositsAndWithdrawals.map(c=>({caller:e,beneficiary:e,queueId:parseInt(c.queueID,10),amountWithdrawn:M.from(c.quoteAmount),tokenPrice:M.from(c.tokenPrice),quoteReceived:M.from(c.tokenAmount),totalQueuedWithdrawals:f,timestamp:c.timestamp,transactionHash:c.transactionHash})))!==null&&i!==void 0?i:[],y=u.reduce((c,h)=>({...c,[h.queueId]:h}),{}),m=l.reduce((c,h)=>h.queueId===0?c:{...c,[h.queueId]:h},{}),d=l.map(c=>({processed:c,isProcessed:!0,isInstant:!0})),T=Object.entries(y).map(([c,h])=>{const v=m[parseInt(c,10)];return v?{queued:h,processed:v,isProcessed:!0,isInstant:!1}:{queued:h,isProcessed:!1,isInstant:!1}});return{events:d.concat(T).sort((c,h)=>{const v=h.isProcessed?h.processed.timestamp:h.queued.timestamp,k=c.isProcessed?c.processed.timestamp:c.queued.timestamp;return v-k}),circuitBreaker:o}}class Dt{constructor(e,t){var a;this.lyra=e,this.__market=t.market;const i=t.events.isInstant?null:t.events.queued,r=t.events.isProcessed?t.events.processed:null,s=i??r;if(!s)throw new Error("No queued or processed event for LiquidityWithdrawal");this.queueId=s.queueId,this.beneficiary=s.beneficiary,this.balance=(a=i==null?void 0:i.amountWithdrawn)!==null&&a!==void 0?a:f,this.tokenPriceAtWithdraw=r==null?void 0:r.tokenPrice,this.value=r==null?void 0:r.amountWithdrawn,this.isPending=!r,this.withdrawalRequestedTimestamp=s.timestamp,this.withdrawalTimestamp=r?r.timestamp:i?i.timestamp+t.market.params.withdrawalDelay:0,this.timeToWithdrawal=Math.max(0,this.withdrawalTimestamp-t.market.block.timestamp),this.delayReason=this.timeToWithdrawal===0&&this.isPending&&t.circuitBreaker&&t.circuitBreaker.timestamp>t.market.block.timestamp?t.circuitBreaker.reason:null}static async getByOwner(e,t,a){const[{events:i,circuitBreaker:r},s]=await Promise.all([Mu(e,a,t),t.liquidity()]);return i.map(o=>new Dt(e,{market:t,events:o,circuitBreaker:r,marketLiquidity:s}))}static initiateWithdraw(e,t,a){const i=E(e.lyra,e.contractAddresses,e.lyra.version,F.LiquidityPool),r=i.interface.encodeFunctionData("initiateWithdraw",[t,a]);return _(e.lyra.provider,e.lyra.provider.network.chainId,i.address,t,r)}market(){return this.__market}}function Ou(n){const e=.254829592,t=-.284496736,a=1.421413741,i=-1.453152027,r=1.061405429,s=.3275911;let p=1;n<0&&(p=-1),n=Math.abs(n);const o=1/(1+s*n),u=1-((((r*o+i)*o+a)*o+t)*o+e)*o*Math.exp(-n*n);return p*u}function Fe(n){return(1-Ou(-n/Math.sqrt(2)))/2}function on(n){return Math.exp(-n*n/2)/Math.sqrt(2*Math.PI)}function ze(n,e,t,a,i){return(Math.log(t/a)+(i+e*e/2)*n)/(e*Math.sqrt(n))}function ht(n,e,t,a,i){return ze(n,e,t,a,i)-e*Math.sqrt(n)}function or(n,e,t){return n*Math.exp(-e*t)}function Su(n,e,t,a,i){return Fe(ze(n,e,t,a,i))*t-Fe(ht(n,e,t,a,i))*or(a,i,n)}function xu(n,e,t,a,i){return Fe(-ht(n,e,t,a,i))*or(a,i,n)-Fe(-ze(n,e,t,a,i))*t}function bn(n,e,t,a,i,r){return r?Su(n,e,t,a,i):xu(n,e,t,a,i)}function ur(n,e,t,a,i){return Fe(ze(n,e,t,a,i))}function Iu(n,e,t,a,i){return ur(n,e,t,a,i)-1}function Ut(n,e,t,a,i,r){return r?ur(n,e,t,a,i):Iu(n,e,t,a,i)}function ba(n,e,t,a,i){return t*on(ze(n,e,t,a,i))*Math.sqrt(n)/100}function lr(n,e,t,a,i){return on(ze(n,e,t,a,i))/(t*e*Math.sqrt(n))}function yr(n,e,t,a,i,r){return r?(-t*on(ze(n,e,t,a,i))*e/(2*Math.sqrt(n))-i*a*Math.exp(-i*n)*Fe(ht(n,e,t,a,i)))/365:(-t*on(ze(n,e,t,a,i))*e/(2*Math.sqrt(n))+i*a*Math.exp(-i*n)*Fe(-ht(n,e,t,a,i)))/365}function mr(n,e,t,a,i,r){return r?a*n*Math.exp(-i*n)*Fe(ht(n,e,t,a,i))/100:-a*n*Math.exp(-i*n)*Fe(-ht(n,e,t,a,i))/100}function ka(n,e,t,a){return n&&!a?e.add(t):e.sub(t)}function un(n,e){return n.mul(S).div(e).sub(S).abs()}var de;(function(n){n[n.MIN_PRICE=0]="MIN_PRICE",n[n.MAX_PRICE=1]="MAX_PRICE",n[n.REFERENCE=2]="REFERENCE",n[n.FORCE_MIN=3]="FORCE_MIN",n[n.FORCE_MAX=4]="FORCE_MAX"})(de||(de={}));function dr(n,e){const t=n.params.referenceSpotPrice;if(n.lyra.version===A.Avalon||!n.params.adapterView||e===de.REFERENCE||n.lyra.network===J.Optimism)return t;const a=n.params.adapterView;if(!a)throw new Error("Mismatching adapter view and getQuoteSpotPrice");const{gmxMaxPrice:i,gmxMinPrice:r,marketPricingParams:s}=a,{gmxUsageThreshold:p}=s,o=un(r,t),u=un(i,t);let l=!1;return(o.gt(p)||u.gt(p))&&(l=!0),e==de.FORCE_MIN||e==de.MIN_PRICE?l&&r.gt(t)?t:r:l&&i.lt(t)?t:i}function Au(n,e,t,a){return t&&n||!t&&!n?a?de.MAX_PRICE:e?de.FORCE_MIN:de.MIN_PRICE:a?de.MIN_PRICE:e?de.FORCE_MAX:de.MAX_PRICE}function Xe(n){return n.timeToExpiry/(60*60*24*365)}function Y(n,e=18){if(isNaN(n))throw new Error("Passed NaN to BigNumber converter");return Br(n.toFixed(18),e)}function cr(n,e,t,a,i){const r=a.hedgeCap,s=e.mul(n.delta).div(S).mul(i?1:-1),p=t.add(s);return p.abs().gt(r)?p.lt(0)?r.mul(-1):r:p}function Fu(n,e,t,a,i,r,s){const{currentHedge:p,gmxView:o,futuresPoolHedgerParams:u}=r;if(!u.vaultLiquidityCheckEnabled)return!0;const l=cr(t,a,e,s,i),y=l.abs(),m=p.abs();if(!u||y.lte(m)||i&&l.gte(0)||!i&&l.lte(0))return!0;let d;if(l.gt(0)){const{remainingLongDollars:h}=o;d=h}else{const{remainingShortDollars:h}=o;d=h}const T=d.div(n).mul(S),c=y.sub(m);return!T.lt(c.mul(u.marketDepthBuffer).div(S))}const Ti=(n,e,t,a,i)=>(n.lt(0)?a:i).add(n.abs().mul(t).div(S)).lt(e);function qu(n,e,t,a,i,r,s){const{marketSuspended:p,hedgedDelta:o,futuresPoolHedgerParams:u,fundingRate:l,shortInterest:y,longInterest:m,maxTotalMarketSize:d,curveRateStable:T}=r;if(p)return!1;const c=cr(t,a,e,s,i),h=c.abs(),v=o.abs();if(h.lte(v)&&c.mul(o).gte(0)||i&&c.gte(0)||!i&&c.lte(0))return!0;if(!T)return!1;if(h.gt(o.abs())){const b=u.maximumFundingRate;if(l.abs().gt(b))return!1}const k=u.marketDepthBuffer;if(c.mul(o).gt(0)){const b=c.sub(o);if(!Ti(b,d,k,y,m))return!1}else if(!Ti(c,d,k,y,m))return!1;return!0}function Vu(n,e,t,a,i,r,s,p){switch(p){case J.Arbitrum:return Fu(n,e,t,a,i,r,s);case J.Optimism:return qu(n,e,t,a,i,r,s)}}function ge(n){switch(n.chain){case D.Arbitrum:case D.Optimism:return!1;case D.ArbitrumGoerli:case D.OptimismGoerli:return!0}}function Du(n,e,t,a,i,r,s,p,o,u,l,y){const m=n.market(),d=n.board(),T=n.strike(),c=Xe(d);if(c==0)return U.Expired;if(t.lte(0))return U.EmptySize;if(d.block.timestamp+m.params.tradingCutoff>d.expiryTimestamp&&!o)return U.TradingCutoff;const v=T.strikePrice,k=m.params.rateAndCarry,b=Y(Ut(c,q(i),q(e),q(v),q(k),!0)),g=o?m.params.minForceCloseDelta:m.params.minDelta;if(!o&&(b.lte(g)||b.gte(vn.sub(g))))return U.DeltaOutOfRange;const C=o?m.params.absMinSkew:m.params.minSkew,P=o?m.params.absMaxSkew:m.params.maxSkew;if(p){if(s.gt(m.params.maxBaseIv))return U.IVTooHigh;if(r.gt(P))return U.SkewTooHigh;if(i.gt(m.params.maxVol))return U.VolTooHigh}else{if(s.lt(m.params.minBaseIv))return U.IVTooLow;if(r.lt(C))return U.SkewTooLow;if(i.lt(m.params.minVol))return U.VolTooLow}const{freeLiquidity:O}=m.params;if(!o&&l&&(p?n.isCall?O.lt(t.mul(e).div(S)):O.lt(t.mul(v).div(S)):O.lt(a)))return U.InsufficientLiquidity;const x=n.market().params.hedgerView,I=n.market().params.poolHedgerParams,V=n.delta.lt(0)&&p||n.delta.gt(0)&&!p;if(x&&I&&l&&!ge(n.lyra)&&!Vu(dr(m,u),m.params.netDelta,n,t,V,x,I,y))return U.UnableToHedgeDelta;if(m.lyra.network===J.Arbitrum){const{adapterView:L}=n.market().params,R=L;if(R&&!o&&(u===de.MAX_PRICE||u===de.MIN_PRICE)){const{gmxMaxPrice:ne,gmxMinPrice:ae}=R,oe=un(ae,m.params.referenceSpotPrice),ye=un(ne,m.params.referenceSpotPrice),N=R.marketPricingParams.priceVarianceCBPercent;if(oe.gt(N)||ye.gt(N))return U.PriceVarianceTooHigh}}return null}function Tr(n,e,t,a){const i=Xe(n.board()),r=n.market().params.rateAndCarry,s=t.mul(a).div(S),p=n.strike().strikePrice;return{price:Y(bn(i,q(s),q(e),q(p),q(r),n.isCall)),volTraded:s}}const Lu=(n,e)=>{const t=n.isCall?e.sub(n.strike().strikePrice):n.strike().strikePrice.sub(e);return t.gt(0)?t:f};function Bu(n,e,t,a,i){const r=a.mul(i).div(S),s=Xe(n.board()),p=n.market(),o=p.params.rateAndCarry,u=n.block.timestamp+p.params.tradingCutoff>n.board().expiryTimestamp,l=n.board().params.forceCloseGwavIv,y=n.strike().params.forceCloseSkew,m=n.strike().strikePrice,d=Y(Ut(s,q(r),q(t),q(m),q(o),!0)),T=p.params.minForceCloseDelta,c=d.lte(T)||d.gte(vn.sub(T));if(u||c){let h=l.mul(y).div(S);e?(h=h.gt(r)?h:r,h=u?h.mul(p.params.shortPostCutoffVolShock).div(S):h.mul(p.params.shortVolShock).div(S)):(h=h.lt(r)?h:r,h=u?h.mul(p.params.longPostCutoffVolShock).div(S):h.mul(p.params.longVolShock).div(S));let v=Y(bn(s,q(h),q(t),q(m),q(o),n.isCall));if(e){const k=Lu(n,t),b=t.mul(p.params.shortSpotMin).div(S),g=k.add(b);v=v.gt(g)?v:g}return{volTraded:h,price:v}}else return Tr(n,t,a,i)}function Eu(n,e,t,a,i){const r=n.market(),p=a.mul(S).div(r.params.standardSize).div(100),o=p.mul(r.params.skewAdjustmentFactor).div(S),u=i?e.add(p):e.sub(p),l=i?t.add(o):t.sub(o);return{newBaseIv:u,newSkew:l}}function fr(n,e,t,a){if(n<=e)return a;{const i=Y(n-e).mul(S).div(t-e).div(S);return a.mul(S.add(i)).div(S)}}function _u(n,e,t){const a=n.market();return fr(n.timeToExpiry,a.params.optionPriceFee1xPoint,a.params.optionPriceFee2xPoint,a.params.optionPriceFeeCoefficient).mul(t).div(S).mul(e).div(S)}function Ru(n,e,t){const a=n.market();return fr(n.timeToExpiry,a.params.spotPriceFee1xPoint,a.params.spotPriceFee2xPoint,a.params.spotPriceFeeCoefficient).mul(e).div(S).mul(t).div(S)}function Nu(n,e,t,a,i,r,s){const p=n.market(),o=s?p.params.forceCloseVarianceFeeCoefficient:p.params.defaultVarianceFeeCoefficient,l=n.board().params.varianceGwavIv.sub(i).abs(),y=n.market().params.rateAndCarry,m=Xe(n.board()),d=Y(ba(m,q(t),q(e),q(n.strike().strikePrice),q(y))*100);if(o.isZero())return{varianceFeeCoefficient:f,vega:d,vegaCoefficient:f,skew:a,skewCoefficient:f,ivVariance:l,ivVarianceCoefficient:f,varianceFee:f};const T=p.params.minimumStaticVega.add(d.mul(p.params.vegaCoefficient).div(S)),c=a.sub(p.params.referenceSkew).abs(),h=p.params.minimumStaticSkewAdjustment.add(c.mul(p.params.skewAdjustmentCoefficient).div(S)),v=p.params.minimumStaticIvVariance.add(l.mul(p.params.ivVarianceCoefficient).div(S)),k=o.mul(T).div(S).mul(h).div(S).mul(v).div(S).mul(r).div(S);return{varianceFeeCoefficient:o,vega:d,vegaCoefficient:T,skew:a,skewCoefficient:h,ivVariance:l,ivVarianceCoefficient:v,varianceFee:k}}function Gu(n,e,t,a,i){const r=n.params.NAV;if(e.abs().gte(t.abs()))return{preTradeAmmNetStdVega:e,postTradeAmmNetStdVega:t,vegaUtil:f,volTraded:a,NAV:r,vegaUtilFee:f};const s=r.gt(0)?a.mul(t.abs()).div(r):f,p=n.params.vegaFeeCoefficient.mul(s).div(S).mul(i).div(S),o=p.lt(0)?f:p;return{preTradeAmmNetStdVega:e,postTradeAmmNetStdVega:t,vegaUtil:s,volTraded:a,NAV:r,vegaUtilFee:o}}function Qu({option:n,isBuy:e,size:t,spotPrice:a,baseIv:i,skew:r,netStdVega:s,preTradeAmmNetStdVega:p,isForceClose:o}){const{newBaseIv:u,newSkew:l}=Eu(n,i,r,t,e),y=Tr(n,a,u,l),{price:m,volTraded:d}=o?Bu(n,e,a,u,l):y,T=y.price,c=m.sub(T).mul(t).div(S).mul(e?1:-1),h=_u(n.board(),m,t),v=Ru(n.board(),t,a),k=s.mul(t).mul(e?1:-1).div(S),b=p.add(k),g=Gu(n.market(),p,b,d,t),C=o?i:u,P=Nu(n,a,d,l,C,t,o),O=h.add(v).add(g.vegaUtilFee).add(P.varianceFee),x=m.mul(t).div(S);return{premium:e?x.add(O):O.lt(x)?x.sub(O):f,optionPriceFee:h,spotPriceFee:v,vegaUtilFee:g,varianceFee:P,forceClosePenalty:c,postTradeAmmNetStdVega:b,volTraded:d,newSkew:l,newBaseIv:C,spotPrice:a}}var U;(function(n){n.EmptySize="EmptySize",n.Expired="Expired",n.TradingCutoff="TradingCutoff",n.InsufficientLiquidity="InsufficientLiquidity",n.DeltaOutOfRange="DeltaOutOfRange",n.VolTooHigh="VolTooHigh",n.VolTooLow="VolTooLow",n.IVTooHigh="IVTooHigh",n.IVTooLow="IVTooLow",n.SkewTooHigh="SkewTooHigh",n.SkewTooLow="SkewTooLow",n.UnableToHedgeDelta="UnableToHedgeDelta",n.PriceVarianceTooHigh="PriceVarianceTooHigh"})(U||(U={}));class vt{constructor(e,t,a,i,r){this.__source=le.ContractCall,this.lyra=e,this.__option=t,this.isBuy=a,this.size=i,this.marketName=t.market().name,this.marketAddress=t.market().address,this.expiryTimestamp=t.board().expiryTimestamp,this.boardId=t.board().id,this.strikePrice=t.strike().strikePrice,this.strikeId=t.strike().id,this.isCall=t.isCall;const s=this.getFields(t,a,i,r);this.pricePerOption=s.pricePerOption,this.premium=s.premium,this.fee=s.fee,this.feeComponents=s.feeComponents,this.iv=s.iv,this.fairIv=s.fairIv,this.greeks=s.greeks,this.forceClosePenalty=s.forceClosePenalty,this.isForceClose=s.isForceClose,this.isDisabled=!!s.disabledReason,this.disabledReason=s.disabledReason,this.breakEven=s.breakEven,this.toBreakEven=s.toBreakEven,this.spotPrice=s.spotPrice,this.iterations=s.iterations}getDisabledFields(e,t,a){const i=e.strike().skew,r=e.board().baseIv,s=i.mul(r).div(S);return{pricePerOption:f,premium:f,iv:s,fairIv:s,fee:f,feeComponents:{optionPriceFee:f,spotPriceFee:f,vegaUtilFee:f,varianceFee:f},greeks:{delta:e.delta,vega:e.strike().vega,gamma:e.strike().gamma,theta:e.theta,rho:e.rho},isForceClose:!1,forceClosePenalty:f,isDisabled:!!a,disabledReason:a,breakEven:f,toBreakEven:f,spotPrice:t,iterations:[]}}getFields(e,t,a,i){var r,s,p,o;const u=(r=i==null?void 0:i.iterations)!==null&&r!==void 0?r:Xi;if(u<1)throw new Error("Iterations must be greater than or equal to 1");const l=(s=i==null?void 0:i.isForceClose)!==null&&s!==void 0?s:!1,y=(p=i==null?void 0:i.isOpen)!==null&&p!==void 0?p:!0,m=e.board(),d=e.strike(),T=e.market(),c=e.isCall,h=(o=i==null?void 0:i.isLong)!==null&&o!==void 0?o:t;let v=m.baseIv,k=d.skew,b=T.params.netStdVega.mul(-1);const g=Xe(e.board());if(g===0)return this.getDisabledFields(e,T.spotPrice,U.Expired);const C=a.div(u),P=[],O=d.params.cachedStdVega.mul(-1),x=Au(c,l,h,y),I=dr(T,x);for(let ue=0;ue<u;ue++){const ie=Qu({option:e,isBuy:t,size:C,spotPrice:I,baseIv:v,skew:k,netStdVega:O,preTradeAmmNetStdVega:b,isForceClose:l});P.push(ie),v=ie.newBaseIv,k=ie.newSkew,b=ie.postTradeAmmNetStdVega}const V=v.mul(k).div(S),L=e.strike().strikePrice,R=e.market().params.rateAndCarry,ne=Y(Ut(g,q(V),q(I),q(L),q(R),c)),ae=Y(ba(g,q(V),q(I),q(L),q(R))),oe=V.gt(0)&&I.gt(0)?Y(lr(g,q(V),q(I),q(L),q(R))):f,ye=V.gt(0)&&I.gt(0)?Y(yr(g,q(V),q(I),q(L),q(R),c)):f,N=V.gt(0)&&I.gt(0)?Y(mr(g,q(V),q(I),q(L),q(R),c)):f,fe=P.reduce((ue,ie)=>ue.add(ie.premium),f),z=Du(e,I,a,fe,V,k,v,t,l,x,y,this.lyra.network);if(z)switch(z){case U.EmptySize:case U.Expired:case U.IVTooHigh:case U.IVTooLow:case U.SkewTooHigh:case U.SkewTooLow:case U.VolTooHigh:case U.VolTooLow:return this.getDisabledFields(e,I,z)}const Ye=fe.mul(S).div(a),we=ka(e.isCall,d.strikePrice,fe.mul(S).div(a)),xe=we.sub(I),gt=this.isCall?I.gt(we)?f:xe:I.lt(we)?f:xe,zt=P.reduce((ue,ie)=>ue.add(ie.forceClosePenalty),f),Oa=P.reduce((ue,ie)=>ue.add(ie.optionPriceFee),f),Sa=P.reduce((ue,ie)=>ue.add(ie.spotPriceFee),f),xa=P.reduce((ue,ie)=>ue.add(ie.vegaUtilFee.vegaUtilFee),f),Ia=P.reduce((ue,ie)=>ue.add(ie.varianceFee.varianceFee),f),gn=Oa.add(Sa).add(xa).add(Ia),Aa=gn.gt(0)&&ae.gt(0)?gn.mul(S).div(ae).div(100):f,Vr=t?V.add(Aa):V.sub(Aa);return{pricePerOption:Ye,premium:fe,fee:gn,iv:Vr,fairIv:V,feeComponents:{optionPriceFee:Oa,spotPriceFee:Sa,vegaUtilFee:xa,varianceFee:Ia},greeks:{delta:ne,vega:ae,gamma:oe,rho:N,theta:ye},isForceClose:l,forceClosePenalty:zt,isDisabled:!!z,disabledReason:z,breakEven:we,toBreakEven:gt,spotPrice:I,iterations:P}}static async get(e,t,a,i,r,s,p){const o=await e.option(t,a,i);return vt.getSync(e,o,r,s,p)}static getSync(e,t,a,i,r){return new vt(e,t,a,i,r)}market(){return this.__option.market()}board(){return this.__option.board()}strike(){return this.__option.strike()}option(){return this.__option}}function hr(n,e,t){const a=Math.max(e-n,0);for(;t.length>1;){const i=t.shift();if(!(Math.ceil(a/i)>ha))return i}return t[0]}const Hu=2147483647;async function vr(n,e,t,a,i){var r;let s=!1,p=[],o=t.min;const u=(r=t.limit)!==null&&r!==void 0?r:ha;for(;!s;){const l=[];if(i){const{batch:d,increment:T}=i;for(let c=0;c<d;c++)l.push({...t,min:o,max:Math.min(o+T-1,Hu)}),o+=T}else l.push({...t,limit:u,min:o});const y=(await Promise.all(l.map(async d=>{const{data:T}=await Se(n.subgraphClient,{query:e,variables:d});return T}))).filter(d=>d!=null).map(d=>Object.values(d)[0]),m=y[y.length-1];p=[...p,...y.flat()],!m||!m.length||m.length<u?s=!0:o=m[m.length-1][a]+1}return p}async function bt(n,e,t,a){var i,r,s;const p=(i=a==null?void 0:a.startTimestamp)!==null&&i!==void 0?i:Ji,o=(r=a==null?void 0:a.endTimestamp)!==null&&r!==void 0?r:er,u=(s=a==null?void 0:a.period)!==null&&s!==void 0?s:hr(p,o,[me.OneHour,me.OneDay]);return vr(n,e,{...t,min:p,max:o,period:u},"timestamp")}const Uu=re`
  query optionPriceAndGreeksSnapshots($optionId: String!, $min: Int!, $max: Int!, $period: Int!) {
    optionPriceAndGreeksSnapshots(
      first: 1000
      orderBy: timestamp
      orderDirection: asc
      where: { option: $optionId, timestamp_gte: $min, timestamp_lte: $max, period_gte: $period }
    ) {
      ${tu}
    }
  }
`;async function Wu(n,e,t){var a;const i=e.board(),r=e.block.timestamp,s=Math.min(i.expiryTimestamp,(a=t==null?void 0:t.endTimestamp)!==null&&a!==void 0?a:r),o=(await bt(n,Uu,{optionId:`${e.market().address.toLowerCase()}-${e.strike().id}-${e.isCall?"call":"put"}`},{...t,endTimestamp:s})).map(l=>({optionPrice:M.from(l.optionPrice),blockNumber:l.blockNumber,timestamp:l.timestamp})),u={optionPrice:e.price,blockNumber:e.block.number,timestamp:s};return[...o,u].filter(l=>l.optionPrice.gt(0))}const ju=re`
  query optionVolumeQuery($optionId: String!, $min: Int!, $max: Int!, $period: Int!) {
    optionVolumeSnapshots(
      first: 1000
      orderBy: timestamp
      orderDirection: asc
      where: { option: $optionId, timestamp_gte: $min, timestamp_lte: $max, period: $period }
    ) {
      ${nu}
    }
  }
`;async function zu(n,e,t){var a;const i=e.board(),r=Math.min(i.expiryTimestamp,(a=t==null?void 0:t.endTimestamp)!==null&&a!==void 0?a:er),s=`${e.market().address.toLowerCase()}-${e.strike().id}-${e.isCall?"call":"put"}`;return(await bt(n,ju,{optionId:s},{...t,period:me.OneHour,endTimestamp:r})).map(o=>({notionalVolume:M.from(o.notionalVolume),premiumVolume:M.from(o.premiumVolume),timestamp:o.timestamp}))}class $e{constructor(e,t,a,i){this.__source=le.ContractCall,this.lyra=e,this.__strike=t,this.block=i,this.isCall=a;const r=$e.getFields(t,a);this.price=r.price,this.longOpenInterest=r.longOpenInterest,this.shortOpenInterest=r.shortOpenInterest,this.delta=r.delta,this.rho=r.rho,this.theta=r.theta,this.isInTheMoney=r.isInTheMoney}static getFields(e,t){var a;const i=e.market(),r=Xe(e.board()),s=(a=e.board().spotPriceAtExpiry)!==null&&a!==void 0?a:i.spotPrice,p=t?s.gt(e.strikePrice):s.lt(e.strikePrice);if(r===0)return{longOpenInterest:f,shortOpenInterest:f,price:f,delta:f,theta:f,rho:f,isInTheMoney:p};{const o=t?e.longCallOpenInterest:e.longPutOpenInterest,u=t?e.shortCallOpenInterest:e.shortPutOpenInterest,l=q(s),y=q(e.strikePrice),m=q(i.params.rateAndCarry),d=q(e.iv),T=Y(bn(r,d,l,y,m,t)),c=d>0?Y(Ut(r,d,l,y,m,t)):f,h=d>0?Y(yr(r,d,l,y,m,t)):f,v=d>0?Y(mr(r,d,l,y,m,t)):f;return{longOpenInterest:o,shortOpenInterest:u,price:T,delta:c,theta:h,rho:v,isInTheMoney:p}}}static async get(e,t,a,i){return await(await ee.get(e,t)).option(a,i)}async refresh(){return $e.get(this.lyra,this.market().address,this.strike().id,this.isCall)}market(){return this.__strike.market()}board(){return this.__strike.board()}strike(){return this.__strike}async quote(e,t,a){return(await this.refresh()).quoteSync(e,t,a)}quoteSync(e,t,a){return vt.getSync(this.lyra,this,e,t,a)}async quoteAll(e,t){return(await this.refresh()).quoteAllSync(e,t)}quoteAllSync(e,t){return{option:this,bid:this.quoteSync(!1,e,t),ask:this.quoteSync(!0,e,t)}}async tradingVolumeHistory(e){return await zu(this.lyra,this,e)}async priceHistory(e){return await Wu(this.lyra,this,e)}}function $u(n,e){const t=Math.max(0,e-n);return t>Uo?tn:t>ea*3?yt*2:t>ea?yt:t>tn*2?Ot*12:t>tn?Ot*6:t>yt*4?Ot*3:Ot}function Ku(n,e,t,a){if(!n.length)return[];const i=a??$u(e,t);let r=0;const s=[];let p=e;for(;p<t+i;p+=i){for(;r<n.length-1&&n[r].timestamp<=p;)r++;s.push({...n[r],timestamp:Math.min(p,t)})}return s}const Xu=re`
  query strikeIVAndGreeksSnapshots($strikeId: String!, $min: Int!, $max: Int!, $period: Int!) {
    strikeIVAndGreeksSnapshots(
      first: 1000
      orderBy: timestamp
      orderDirection: asc
      where: { strike: $strikeId, timestamp_gte: $min, timestamp_lte: $max, period_gte: $period }
    ) {
      ${au}
    }
  }
`;async function Yu(n,e,t){var a;const i=e.board(),r=e.block.timestamp,s=Math.min(i.expiryTimestamp,(a=t==null?void 0:t.endTimestamp)!==null&&a!==void 0?a:r),p=`${e.market().address.toLowerCase()}-${e.id}`,o=await bt(n,Xu,{strikeId:p},{...t,endTimestamp:s}),u=Ku(o.map(y=>({iv:q(M.from(y.iv)),timestamp:y.timestamp})),o[0].timestamp,s),l={iv:q(e.iv),timestamp:e.block.timestamp};return[...u,l].filter(y=>y.iv>0)}class Ke{constructor(e,t,a,i){this.__source=le.ContractCall,this.lyra=e,this.__board=t;const r=Ke.getFields(t,a);this.block=i,this.id=r.id,this.strikePrice=r.strikePrice,this.skew=r.skew,this.iv=r.iv,this.vega=r.vega,this.gamma=r.gamma,this.isDeltaInRange=r.isDeltaInRange,this.openInterest=r.openInterest,this.longCallOpenInterest=r.longCallOpenInterest,this.shortCallOpenInterest=r.shortCallOpenInterest,this.longPutOpenInterest=r.longPutOpenInterest,this.shortPutOpenInterest=r.shortPutOpenInterest,this.params=r.params}static getFields(e,t){const a=t.strikeId.toNumber(),i=t.strikePrice,r=Xe(e),s=t.skew,p=e.baseIv.mul(t.skew).div(S),o={forceCloseSkew:t.forceCloseSkew,cachedStdVega:t.cachedGreeks.stdVega};if(r===0)return{id:a,strikePrice:i,skew:f,iv:f,vega:f,gamma:f,openInterest:f,longCallOpenInterest:f,shortCallOpenInterest:f,longPutOpenInterest:f,shortPutOpenInterest:f,isDeltaInRange:!1,params:o};{const u=q(p),l=q(e.market().spotPrice),y=q(i),m=q(e.market().params.rateAndCarry),d=u>0&&l>0?Y(ba(r,u,l,y,m)):f,T=u>0&&l>0?Y(lr(r,u,l,y,m)):f,c=u>0&&l>0?Y(Ut(r,u,l,y,m,!0)):f,h=e.market().params.minDelta,v=c.gte(h)&&c.lte(vn.sub(h)),k=t.longCallOpenInterest,b=t.shortCallBaseOpenInterest.add(t.shortCallQuoteOpenInterest),g=t.longPutOpenInterest,C=t.shortPutOpenInterest,P=k.add(b).add(g).add(C);return{id:a,strikePrice:i,skew:s,iv:p,vega:d,gamma:T,isDeltaInRange:v,openInterest:P,longCallOpenInterest:k,shortCallOpenInterest:b,longPutOpenInterest:g,shortPutOpenInterest:C,params:o}}}static async get(e,t,a){return await(await ee.get(e,t)).strike(a)}async refresh(){return Ke.get(this.lyra,this.market().address,this.id)}async ivHistory(e,t){return await Yu(e,this,t)}market(){return this.__board.market()}board(){return this.__board}call(){return new $e(this.lyra,this,!0,this.block)}put(){return new $e(this.lyra,this,!1,this.block)}option(e){return e?this.call():this.put()}async quote(e,t,a,i){return(await this.refresh()).quoteSync(e,t,a,i)}quoteSync(e,t,a,i){return this.option(e).quoteSync(t,a,i)}async quoteAll(e,t){return(await this.refresh()).quoteAllSync(e,t)}quoteAllSync(e,t){const{bid:a,ask:i}=this.option(!0).quoteAllSync(e,t),{bid:r,ask:s}=this.option(!1).quoteAllSync(e,t);return{strike:this,callBid:a,callAsk:i,putBid:r,putAsk:s}}}class br{constructor(e,t){this.lyra=e,this.__transferData=t,this.__source=t.source,this.transactionHash=t.transactionHash,this.blockNumber=t.blockNumber,this.from=t.from,this.to=t.to,this.marketAddress=t.marketAddress,this.positionId=t.positionId}static async getByHash(e,t){const{transfers:a}=await Wt(e,t);return a}}function ga(n){const e=M.from(n.amount),t=M.from(n.spotPrice),a=n.isBaseCollateral,i=a?e.mul(t).div(S):e,r=M.from(n.strike.strikePrice),s=parseInt(n.strike.strikeId),p=n.market.name.substring(1);return{owner:Te(n.trader),source:le.Subgraph,timestamp:n.timestamp,amount:e,value:i,positionId:n.position.positionId,blockNumber:n.blockNumber,isBaseCollateral:a,marketName:p,marketAddress:Te(n.market.id),isCall:n.option.isCall,strikeId:s,strikePrice:r,spotPrice:t,expiryTimestamp:n.board.expiryTimestamp,transactionHash:n.transactionHash,swap:n.externalSwapFees?{address:n.externalSwapAddress}:void 0}}function wa(n){const e=M.from(n.spotPriceAtExpiry),t=M.from(n.position.strike.strikePrice),a=n.position.board.expiryTimestamp,i=M.from(n.size),r=n.position.isLong,s=n.position.isBaseCollateral,p=M.from(n.settleAmount),o=r?p:f,u=r?f:p,l=s?u.mul(e).div(S):u,m=n.position.option.isCall?e.gt(t):e.lt(t);return{source:le.Subgraph,blockNumber:n.blockNumber,positionId:n.position.positionId,timestamp:n.timestamp,size:i,spotPriceAtExpiry:e,transactionHash:n.transactionHash,owner:Te(n.owner),marketName:n.position.market.name.substring(1),marketAddress:Te(n.position.market.id),expiryTimestamp:a,isCall:n.position.option.isCall,strikePrice:t,isBaseCollateral:n.position.isBaseCollateral,isLong:n.position.isLong,settlement:o,isInTheMoney:m,returnedCollateralAmount:u,returnedCollateralValue:l}}function Pa(n){var e;const t=M.from(n.size),a=M.from(n.spotPrice),i=M.from(n.premium),r=M.from(n.spotPriceFee),s=M.from(n.optionPriceFee),p=M.from(n.vegaUtilFee),o=M.from(n.varianceFee),u=M.from((e=n.externalSwapFees)!==null&&e!==void 0?e:0),l=M.from(n.strike.strikePrice),y=n.position.isLong?void 0:n.setCollateralTo?M.from(n.setCollateralTo):f,m=n.position.isLong?void 0:n.position.isBaseCollateral,d=y?m?y.mul(a).div(S):y:void 0;return{timestamp:n.timestamp,source:le.Subgraph,positionId:n.position.positionId,blockNumber:n.blockNumber,marketName:n.market.name.substring(1),marketAddress:Te(n.market.id),isCall:n.option.isCall,strikeId:parseInt(n.strike.strikeId),strikePrice:l,expiryTimestamp:n.board.expiryTimestamp,transactionHash:n.transactionHash,trader:Te(n.trader),size:t,isOpen:n.isOpen,isBuy:n.isBuy,isLong:n.position.isLong,spotPrice:a,pricePerOption:i.mul(S).div(t),premium:i,fee:r.add(s).add(p).add(o).add(u),feeComponents:{spotPriceFee:r,optionPriceFee:s,vegaUtilFee:p,varianceFee:o},iv:M.from(n.newIv),baseIv:M.from(n.newBaseIv),skew:M.from(n.newSkew),volTraded:M.from(n.volTraded),collateralAmount:y,collateralValue:d,isBaseCollateral:m,isForceClose:n.isForceClose,isLiquidation:n.isLiquidation,swap:n.externalSwapFees?{fee:M.from(n.externalSwapFees),address:n.externalSwapAddress}:void 0}}function Ca(n){return{source:le.Subgraph,from:Te(n.oldOwner),to:Te(n.newOwner),transactionHash:n.transactionHash,blockNumber:n.blockNumber,positionId:n.position.positionId,marketAddress:Te(n.position.id.split("-")[0])}}const Zu=re`
  query positionEvents($positionIds: [String!]!) {
    trades(first: 1000, orderBy: timestamp, orderDirection: asc, where: { position_in: $positionIds }) {
      ${tr}
    }
    collateralUpdates(first: 1000, orderBy: timestamp, orderDirection: asc, where: { position_in: $positionIds }) {
      ${nr}
    }
    settles(first: 1000, orderBy: timestamp, orderDirection: asc, where: { position_in: $positionIds }) {
      ${ar}
    }
    optionTransfers(first: 1000, orderBy: timestamp, orderDirection: asc, where: { position_in: $positionIds }) {
      ${ir}
    }
  }
`;async function kr(n,e){var t,a,i,r,s,p,o,u;const l=await Se(n.subgraphClient,{query:Zu,variables:{positionIds:e.map(({positionId:h,marketAddress:v})=>`${v.toLowerCase()}-${h}`)}}),y=e.reduce((h,{positionId:v,marketAddress:k})=>({...h,[k]:{[v]:{trades:[],collateralUpdates:[],transfers:[],settle:null},...h[k]}}),{}),m=(a=(t=l.data)===null||t===void 0?void 0:t.trades.map(Pa))!==null&&a!==void 0?a:[],d=(r=(i=l.data)===null||i===void 0?void 0:i.collateralUpdates.map(ga))!==null&&r!==void 0?r:[],T=(p=(s=l.data)===null||s===void 0?void 0:s.optionTransfers.map(Ca))!==null&&p!==void 0?p:[],c=(u=(o=l.data)===null||o===void 0?void 0:o.settles.map(wa))!==null&&u!==void 0?u:[];return m.forEach(h=>{y[h.marketAddress][h.positionId].trades.push(h)}),d.forEach(h=>{y[h.marketAddress][h.positionId].collateralUpdates.push(h)}),T.forEach(h=>{y[h.marketAddress][h.positionId].transfers.push(h)}),c.forEach(h=>{y[h.marketAddress][h.positionId].settle=h}),y}function Ze(n){return n.filter(e=>e!=null)}function gr(n,e){const t=new nt(Pe,fn(A.Newport,F.OptionToken,e));return Ze(n.map(i=>{try{const r=t.interface.parseLog(i);return r.name===rn.PositionUpdated?{address:i.address,blockNumber:i.blockNumber,transactionHash:i.transactionHash,logIndex:i.logIndex,args:r.args}:null}catch{return null}}))}function wr(n,e){const t=new nt(Pe,fn(A.Newport,F.OptionMarket,e));return Ze(n.map(i=>{try{const r=t.interface.parseLog(i);return r.name===rn.Trade&&r.args.tradeResults.length>0?{address:i.address,blockNumber:i.blockNumber,transactionHash:i.transactionHash,logIndex:i.logIndex,args:r.args}:null}catch{return null}}))}async function Wt(n,e){const t=typeof e=="string"?await n.provider.getTransactionReceipt(e):e,a=t.transactionHash,i=wr(t.logs,n.network),r=gr(t.logs,n.network);let s=null;if(i.length)s=i[0].address;else if(r.length){const T=await n.contractAddresses(),c=r[0].address,h=T.find(v=>v.optionToken===c);h&&(s=h.optionMarket)}if(!s)return{trades:[],collateralUpdates:[],transfers:[],settles:[]};const p=Array.from(new Set([...i.map(T=>T.args.positionId.toNumber()),...r.map(T=>T.args.positionId.toNumber())])),o=(await kr(n,p.map(T=>({positionId:T,marketAddress:s}))))[s],u=Object.values(o).map(({trades:T,collateralUpdates:c,transfers:h,settle:v})=>{const k=T.find(V=>V.transactionHash===a),b=c.find(V=>V.transactionHash===a),g=h.find(V=>V.transactionHash===a),C=(v==null?void 0:v.transactionHash)===a?v:null,P=k?new kt(n,k,b):null,O=b?new Ie(n,b,k):null,x=g?new br(n,g):null,I=C?new Mr(n,C):null;return{trade:P,collateralUpdate:O,transfer:x,settle:I}}),l=Ze(u.map(({trade:T})=>T)),y=Ze(u.map(({collateralUpdate:T})=>T)),m=Ze(u.map(({transfer:T})=>T)),d=Ze(u.map(({settle:T})=>T));return{trades:l,collateralUpdates:y,transfers:m,settles:d}}async function jt(n){return await(await te(n,n.version,Q.OptionMarketViewer)).getMarketAddresses()}const Ju=10*1e3;function el(n,e,t){var a,i;const r=(a=t==null?void 0:t.pollInterval)!==null&&a!==void 0?a:Ju,s=(i=t==null?void 0:t.startBlockNumber)!==null&&i!==void 0?i:"latest";let p;const o=new nt(Pe,fn(n.version,F.OptionMarket,n.network));return Promise.all([jt(n),n.provider.getBlock(s)]).then(async([u,l])=>{console.debug(`Polling from block ${l.number} every ${r}ms`);let y=l;const m=async()=>{var d;const T=await n.provider.getBlock("latest"),c=y.number+1,h=T.number;if(c>=h){setTimeout(m,r);return}console.debug(`Querying block range: ${c} to ${h} (${h-c} blocks)`);const v=await n.provider.send("eth_getLogs",[{address:u.map(k=>k.optionMarket),fromBlock:M.from(c).toHexString(),toBlock:M.from(h).toHexString(),topics:[[((d=o.filters.Trade().topics)!==null&&d!==void 0?d:[])[0]]]}]);v.length>0&&console.debug(`Found ${v.length} new trades`),await Promise.all(v.map(async k=>{(await kt.getByHash(n,k.transactionHash)).map(g=>e(g))})),y=T,setTimeout(m,r)};p=setTimeout(m,r)}),{off:()=>{p&&clearTimeout(p)}}}function Lt(n){if(n.length===0)return f;let e=n[0].size,t=n[0].pricePerOption;for(const a of n.slice(1)){const i=e,{size:r,premium:s,isOpen:p}=a;e=p?e.add(r):e.sub(r),p&&e.gt(0)&&(t=t.mul(i).div(S).add(s).mul(S).div(e))}return t}function na(n,e){const t=n.trades();if(!t.length)return[];const a=t.findIndex(i=>i.transactionHash===e.transactionHash);if(a===-1)throw new Error("TradeEvent does not exist for position");return t.slice(0,a)}function Pr(n,e){if(e.isOpen)return f;const t=e.size,a=e.isLong,i=e.pricePerOption,r=e instanceof kt?e.prevAverageCostPerOption(n):e.prevAverageCostPerOption();return(a?i.sub(r):r.sub(i)).mul(t).div(S)}function Cr(n,e){return na(n,e).reduce((i,r)=>r.isOpen?i.add(r.size):i.sub(r.size),f)}function tl(n,e){const t=Cr(n,e);return e.isOpen?t.add(e.size):t.sub(e.size)}class kt{constructor(e,t,a){this.lyra=e,this.__tradeData=t,!t.isLong&&a&&(this.__collateralUpdateData=a),this.__source=t.source,this.positionId=t.positionId,this.marketName=t.marketName,this.marketAddress=t.marketAddress,this.timestamp=t.timestamp,this.blockNumber=t.blockNumber,this.transactionHash=t.transactionHash,this.trader=t.trader,this.size=t.size,this.isCall=t.isCall,this.isOpen=t.isOpen,this.isBuy=t.isBuy,this.isLong=t.isLong,this.strikeId=t.strikeId,this.strikePrice=t.strikePrice,this.expiryTimestamp=t.expiryTimestamp,this.spotPrice=t.spotPrice,this.pricePerOption=t.pricePerOption,this.premium=t.premium,this.fee=t.fee,this.feeComponents=t.feeComponents,this.swap=t.swap,this.iv=t.iv,this.skew=t.skew,this.baseIv=t.baseIv,this.volTraded=t.volTraded,this.collateralAmount=t.collateralAmount,this.collateralValue=t.collateralValue,this.isBaseCollateral=t.isBaseCollateral,this.isForceClose=t.isForceClose,this.isLiquidation=t.isLiquidation,this.liquidation=t.liquidation}static async getByHash(e,t){const{trades:a}=await Wt(e,t);return a}pnl(e){return Pr(e,this)}newAverageCostPerOption(e){return Lt(na(e,this).concat([this]))}prevAverageCostPerOption(e){return Lt(na(e,this))}newSize(e){return tl(e,this)}prevSize(e){return Cr(e,this)}collateralUpdate(){return this.__collateralUpdateData?new Ie(this.lyra,this.__collateralUpdateData,this.__tradeData):null}async position(){return await Me.get(this.lyra,this.marketAddress,this.positionId)}async option(){return await $e.get(this.lyra,this.marketAddress,this.strikeId,this.isCall)}async strike(){return await Ke.get(this.lyra,this.marketAddress,this.strikeId)}async board(){return(await this.strike()).board()}async market(){return await ee.get(this.lyra,this.marketAddress)}static on(e,t,a){return el(e,t,a)}}function Bt(n,e){var t,a,i,r;if(n.isLong||!n.collateral||!e.length)return f;if(!n.collateral.isBase)return vn;const s=e[0],p=s instanceof Ie?s.amount:(a=(t=s.collateral)===null||t===void 0?void 0:t.amount)!==null&&a!==void 0?a:f,o=s instanceof Ie?s.spotPrice:s.market().spotPrice;let u=p,l=o;for(const y of e.slice(1)){const m=u;u=y instanceof Ie?y.amount:(r=(i=y.collateral)===null||i===void 0?void 0:i.amount)!==null&&r!==void 0?r:f;const d=u.sub(m);if(d.gt(0)){const T=l.mul(m).div(S),c=y instanceof Ie?y.spotPrice:y.market().spotPrice,h=d.mul(c).div(S);l=T.add(h).mul(S).div(u)}}return l}function nl(n,e){var t;const a=e instanceof Ie?e.changeAmount(n):e.collateralChangeAmount();if(!(e instanceof Ie?e.isBaseCollateral:!!(!((t=e.collateral)===null||t===void 0)&&t.isBase))||a.gt(0))return f;const r=e.prevAverageCollateralSpotPrice(n);return n.market().spotPrice.sub(r).mul(a).div(S)}class Ie{constructor(e,t,a){this.lyra=e,this.__collateralUpdateData=t,this.__tradeData=a,this.__source=t.source,this.owner=t.owner,this.timestamp=t.timestamp,this.transactionHash=t.transactionHash,this.positionId=t.positionId,this.blockNumber=t.blockNumber,this.marketAddress=t.marketAddress,this.expiryTimestamp=t.expiryTimestamp,this.amount=t.amount,this.value=t.value,this.marketName=t.marketName,this.strikeId=t.strikeId,this.strikePrice=t.strikePrice,this.isCall=t.isCall,this.isBaseCollateral=t.isBaseCollateral,this.spotPrice=t.spotPrice,this.isAdjustment=!a,this.swap=t.swap}static async getByHash(e,t){const{collateralUpdates:a}=await Wt(e,t);return a}pnl(e){return nl(e,this)}prevAmount(e){var t;const a=e.collateralUpdates().filter(r=>r.blockNumber<this.blockNumber),i=a.length?a[a.length-1]:null;return(t=i==null?void 0:i.amount)!==null&&t!==void 0?t:f}changeAmount(e){const t=this.prevAmount(e);return this.amount.sub(t)}changeValue(e){const t=this.changeAmount(e);return this.isBaseCollateral?t.mul(this.spotPrice).div(S):t}newAverageCollateralSpotPrice(e){const t=e.collateralUpdates().filter(a=>a.blockNumber<=this.blockNumber);return Bt(e,t)}prevAverageCollateralSpotPrice(e){const t=e.collateralUpdates().filter(a=>a.blockNumber<this.blockNumber);return Bt(e,t)}trade(){return this.__tradeData?new kt(this.lyra,this.__tradeData,this.__collateralUpdateData):null}async position(){return await Me.get(this.lyra,this.marketAddress,this.positionId)}async option(){return await $e.get(this.lyra,this.marketAddress,this.strikeId,this.isCall)}async strike(){return await Ke.get(this.lyra,this.marketAddress,this.strikeId)}async board(){return(await this.strike()).board()}async market(){return await ee.get(this.lyra,this.marketAddress)}}class Mr{constructor(e,t){this.lyra=e,this.__settleData=t,this.__source=t.source,this.blockNumber=t.blockNumber,this.positionId=t.positionId,this.spotPriceAtExpiry=t.spotPriceAtExpiry,this.timestamp=t.timestamp,this.transactionHash=t.transactionHash,this.owner=t.owner,this.size=t.size,this.marketName=t.marketName,this.blockNumber=t.blockNumber,this.marketAddress=t.marketAddress,this.expiryTimestamp=t.expiryTimestamp,this.isCall=t.isCall,this.isLong=t.isLong,this.isBaseCollateral=t.isBaseCollateral,this.strikePrice=t.strikePrice,this.settlement=t.settlement,this.returnedCollateralAmount=t.returnedCollateralAmount,this.returnedCollateralValue=t.returnedCollateralValue,this.isInTheMoney=t.isInTheMoney}static async getByHash(e,t){const{settles:a}=await Wt(e,t);return a}pnl(e){return e.pnl().settlementPnl}async position(){return await this.lyra.position(this.marketAddress,this.positionId)}}function Ma(n){return[ce.LongCall,ce.ShortCoveredCall,ce.ShortCall].includes(n)}function kn(n,e,t,a){return n?a?t:null:t.mul(e).div(S)}const al=(n,e,t)=>{if(t)return n.shockVolA;const a=M.from(e);if(a.lte(n.shockVolPointA))return n.shockVolA;if(a.gte(n.shockVolPointB))return n.shockVolB;const i=n.shockVolA.sub(n.shockVolB),r=a.sub(n.shockVolPointA);return n.shockVolA.sub(i.mul(r).div(n.shockVolPointB.sub(n.shockVolPointA)))},il=(n,e)=>e?n.params.minStaticBaseCollateral:n.params.minStaticQuoteCollateral;function ln(n,e,t,a,i){const r=n.board().timeToExpiry,s=Xe(n.board());if(s===0)return f;const p=n.market(),o=n.isCall?t.mul(p.params.callSpotPriceShock).div(S):t.mul(p.params.putSpotPriceShock).div(S),u=n.market().params.rateAndCarry,l=Y(bn(s,q(al(p.params,r,i)),q(o),q(n.strike().strikePrice),q(u),n.isCall));let y,m;const d=il(n.market(),a);n.isCall?a?(m=l.mul(e).div(o),y=e):(m=l.mul(e).div(S),y=Ht):(m=l.mul(e).div(S),y=n.strike().strikePrice.mul(e).div(S));const T=m.gt(d)?m:d;return T.lt(y)?T:y}const rl=20,sl=.001,pl=(n,e,t)=>e.gt(0)?q(e.sub(n).mul(S).div(e).abs())<=t:n.eq(e);function Or(n,e,t,a){const r=n.board().timeToExpiry,s=ln(n,e,n.market().spotPrice,a,!0),p=kn(n.isCall,n.strike().strikePrice,e,a),o=n.isCall&&!a,u=n.market().spotPrice;if(r<=0||e.eq(0)||t.eq(0))return null;if(p&&t.gte(p)&&!o)return null;if(t.lt(s))return u;let l=u.div(5),y=u.mul(5),m=0;for(;l.lt(y)&&m<rl;){const d=l.add(y).div(2),T=ln(n,e,d,a,!0);if(n.isCall?t.lt(T)?y=d:l=d:t.lt(T)?l=d:y=d,m++,pl(T,t,sl))return d}return console.warn("Failed to find liquidation price"),l.add(y).div(2)}function Sr(n,e,t,a){var i;const r=n.strike(),s=n.board(),p=n.market(),o=s.isExpired?(i=s.spotPriceAtExpiry)!==null&&i!==void 0?i:f:p.spotPrice;return{amount:t,value:a?t.mul(o).div(S):t,min:ln(n,e,o,a),max:kn(n.isCall,r.strikePrice,e,a),isBase:n.isCall?!!a:!1,liquidationPrice:Or(n,e,t,a)}}function ol(n){return n===ce.ShortCoveredCall}function ul(n){return[ce.LongCall,ce.LongPut].includes(n)}function xr(n,e,t,a,i,r,s){const p=e.positionId.toNumber(),o=e.amount,u=e.optionType,l=Ma(u),y=ul(u),m=e.state,d=m===Ce.Active,T=m===Ce.Liquidated,c=m===Ce.Settled,h=!y&&l?ol(u):void 0,v=y?void 0:Sr(t,o,e.collateral,h),k=t.board().spotPriceAtExpiry,b=t.market().spotPrice,g=k??b,C=t.strike().strikePrice,P=l?g.gt(C):g.lt(C),O=a[0],x=a[a.length-1],I=t.market(),V=t.strike(),L=t.board(),R=O?O.timestamp:t.block.timestamp,ne=c&&s?s.timestamp:d?null:x?x.timestamp:null;return{id:p,market:I,source:le.ContractCall,blockNumber:I.block.number,owner:n,marketName:I.name,marketAddress:I.address,strikeId:V.id,strikePrice:V.strikePrice,expiryTimestamp:L.expiryTimestamp,size:o,isCall:l,isLong:y,state:m,isOpen:d,isLiquidated:T,isSettled:c,collateral:v,pricePerOption:t.price,spotPriceAtExpiry:k,isInTheMoney:P,delta:t.delta,openTimestamp:R,closeTimestamp:ne,trades:a,collateralUpdates:i,transfers:r,settle:s}}async function Ir(n,e){const t=await te(n,n.version,Q.OptionMarketViewer).getOwnerPositions(e),a=t.flatMap(({market:p,positions:o})=>o.map(u=>({positionId:u.positionId.toNumber(),marketAddress:p}))),[i,r]=await Promise.all([kr(n,a),n.markets()]),s=r.reduce((p,o)=>({...p,[o.address]:o}),{});return t.flatMap(({positions:p,market:o})=>p.map(u=>{const l=u.positionId.toNumber(),y=u.strikeId.toNumber(),m=Ma(u.optionType),{trades:d,collateralUpdates:T,transfers:c,settle:h}=i[o][l],v=s[o].liveOption(y,m);return xr(e,u,v,d,T,c,h)}))}function Ar(n,e,t,a,i,r,s){var p,o,u;const l=n.positionId,y=parseInt(n.strike.strikeId),m=parseInt(n.board.boardId),d=n.option.isCall,T=n.isLong,c=n.state,h=c===Ce.Active,v=c===Ce.Liquidated,k=c===Ce.Settled,b=[Ce.Closed,Ce.Liquidated].includes(c)?f:M.from(n.size);let g;try{g=m?e.liveBoard(m).strike(y).option(d):null}catch{g=null}const C=g?g.price:f,P=M.from(n.strike.strikePrice),O=d?!!n.isBaseCollateral:!1,x=n.board.spotPriceAtExpiry?M.from(n.board.spotPriceAtExpiry):void 0,I=e.spotPrice,V=x??I,L=d?V.gt(P):V.lt(P),R=(h||k)&&(o=(p=a[a.length-1])===null||p===void 0?void 0:p.amount)!==null&&o!==void 0?o:f,ne=T?void 0:g&&!s?Sr(g,b,R,O):{amount:R,value:O?R.mul(I).div(S):R,min:f,max:kn(d,P,b,O),isBase:O,liquidationPrice:null},ae=e.name,oe=Te(e.address),ye=Te(n.owner),N=n.board.expiryTimestamp,fe=t[0].timestamp,z=k&&r?r.timestamp:h?null:t[t.length-1].timestamp;return{id:l,market:e,source:le.Subgraph,blockNumber:e.block.number,delta:(u=g==null?void 0:g.delta)!==null&&u!==void 0?u:f,owner:ye,marketName:ae,marketAddress:oe,strikeId:y,strikePrice:P,expiryTimestamp:N,isCall:d,isLong:T,state:c,isOpen:h,isLiquidated:v,isSettled:k,size:b,collateral:ne,pricePerOption:C,spotPriceAtExpiry:x,isInTheMoney:L,openTimestamp:fe,closeTimestamp:z,trades:t,collateralUpdates:a,transfers:i,settle:r}}const ll=re`
  query positions($positionId: Int!, $market: String!) {
    positions(first: 1, orderBy: openTimestamp, orderDirection: asc, where: { 
      positionId: $positionId, 
      market: $market,
    }) {
      ${ta}
    }
  }
`;async function yl(n,e,t){var a,i,r,s;const p=E(n,e.contractAddresses,n.version,F.OptionToken),[o,u]=await Promise.allSettled([p.getPositionWithOwner(t),Se(n.subgraphClient,{query:ll,variables:{positionId:t,market:e.address.toLowerCase()}})]),l=o.status==="fulfilled"?o.value:null,y=u.status==="fulfilled"?u.value:null,m=(a=y==null?void 0:y.data)===null||a===void 0?void 0:a.positions[0],d=(i=m==null?void 0:m.trades.map(Pa))!==null&&i!==void 0?i:[],T=(r=m==null?void 0:m.collateralUpdates.map(ga))!==null&&r!==void 0?r:[],c=(s=m==null?void 0:m.transfers.map(Ca))!==null&&s!==void 0?s:[],h=m!=null&&m.settle?wa(m.settle):null;if(l){const v=l.strikeId.toNumber(),k=Ma(l.optionType),b=e.liveOption(v,k);return xr(l.owner,l,b,d,T,c,h)}else{if(m)return Ar(m,e,d,T,c,h);throw new Error("Failed to fetch position")}}const ml=re`
  query positions($owner: String) {
    # Get all positions that have been transferred to $owner
    optionTransfers(first: 1000, where:{newOwner: $owner}) {
      position {
        ${ta}
      }
    }
    # Get all positions that have been traded by $owner
    # This covers any positions a trader opened as well as collateral updates
    trades(first: 1000, where:{trader:$owner}) {
      position {
        ${ta}
      }
    }
  }
`;async function dl(n,e){var t,a;const[{data:i},r]=await Promise.all([Se(n.subgraphClient,{query:ml,variables:{owner:e.toLowerCase()}}),n.markets()]),s=(t=i==null?void 0:i.optionTransfers.map(l=>l.position))!==null&&t!==void 0?t:[],p=(a=i==null?void 0:i.trades.map(l=>l.position))!==null&&a!==void 0?a:[],o=mt(p.concat(s),l=>l.id),u=r.reduce((l,y)=>({...l,[y.address]:y}),{});return Ze(o.map(l=>{const y=u[Te(l.market.id)];if(!y)return null;const m=l.trades.map(Pa),d=l.collateralUpdates.map(ga),T=l.transfers.map(Ca),c=l.settle?wa(l.settle):null;return Ar(l,y,m,d,T,c)}))}async function cl(n,e){const[t,a]=await Promise.all([Ir(n,e),dl(n,e)]),i=t.concat(a);return mt(i,r=>r.id)}function Fr(n,e,t,a,i,r,s){return n?e?(a.gte(t)?a.sub(t).sub(i):i.mul(-1)).mul(r).div(S):(a.lte(t)?t.sub(a).sub(i):i.mul(-1)).mul(r).div(S):e?(s&&a.gte(s)?i.sub(a):a.lte(t)?i:i.sub(a).add(t)).mul(r).div(S):(s&&a.lte(s)?i.sub(t):a.lte(t)?a.sub(t).add(i):i).mul(r).div(S)}function Tl(n){var e,t;const a=n.trades();if(!a.length)return{totalAverageOpenCost:f,totalAverageCloseCost:f,unrealizedPnl:f,unrealizedPnlPercentage:f,realizedPnl:f,realizedPnlPercentage:f,settlementPnl:f,settlementPnlPercentage:f};const i=a.filter(u=>!u.isOpen),r=n.settle(),s=n.averageCostPerOption().mul(n.size).div(S),p=i.reduce((u,l)=>{const y=l.prevAverageCostPerOption(n).mul(l.size).div(S);return u.add(y)},f),o=i.reduce((u,l)=>u.add(l.premium),f);if(n.isLong){let u=f,l=f;n.isOpen&&(u=n.pricePerOption.mul(n.size).div(S).sub(s),l=s.gt(0)?u.mul(S).div(s):f);const y=o.sub(p),m=p.gt(0)?y.mul(S).div(p):f;let d=f,T=f;return r&&(d=r.settlement.sub(s),T=s.gt(0)?d.mul(S).div(s):f),{totalAverageOpenCost:s,totalAverageCloseCost:p,unrealizedPnl:u,unrealizedPnlPercentage:l,realizedPnl:y,realizedPnlPercentage:m,settlementPnl:d,settlementPnlPercentage:T}}else{let u=f,l=f;if(n.isOpen){const c=n.pricePerOption.mul(n.size).div(S);u=s.sub(c),l=s.gt(0)?u.mul(S).div(s):f}const y=p.sub(o),m=p.gt(0)?y.mul(S).div(p):f;let d=f,T=f;if(r){const c=(t=(e=n.collateral)===null||e===void 0?void 0:e.amount)!==null&&t!==void 0?t:f,h=r.spotPriceAtExpiry,v=r.returnedCollateralAmount,k=c.sub(v),b=r.isBaseCollateral?k.mul(h).div(S):k;d=s.sub(b),T=s.gt(0)?d.mul(S).div(s):f}return{totalAverageOpenCost:s,totalAverageCloseCost:p,unrealizedPnl:u,unrealizedPnlPercentage:l,realizedPnl:y,realizedPnlPercentage:m,settlementPnl:d,settlementPnlPercentage:T}}}class Me{constructor(e,t){this.lyra=e,this.__positionData=t,this.__source=t.source,this.owner=t.owner,this.id=t.id,this.strikeId=t.strikeId,this.strikePrice=t.strikePrice,this.expiryTimestamp=t.expiryTimestamp,this.marketName=t.marketName,this.marketAddress=t.marketAddress,this.isCall=t.isCall,this.isLong=t.isLong,this.state=t.state,this.isOpen=t.isOpen,this.size=t.size,this.isLiquidated=t.isLiquidated,this.isSettled=t.isSettled,this.collateral=t.collateral,this.pricePerOption=t.pricePerOption,this.spotPriceAtExpiry=t.spotPriceAtExpiry,this.isInTheMoney=t.isInTheMoney,this.delta=t.delta,this.openTimestamp=t.openTimestamp,this.closeTimestamp=t.closeTimestamp}static async get(e,t,a){const i=await ee.get(e,t),r=await yl(e,i,a);return new Me(e,r)}static async getOpenByOwner(e,t){return(await Ir(e,t)).map(i=>new Me(e,i))}static async getByOwner(e,t){return(await cl(e,t)).map(i=>new Me(e,i))}sizeBeforeClose(){const e=this.lastTrade();return!this.isOpen&&this.size.isZero()&&e?e.prevSize(this):this.size}averageCostPerOption(){return Lt(this.trades())}averageCollateralSpotPrice(){return Bt(this,this.collateralUpdates())}pnl(){return Tl(this)}breakEven(){return ka(this.isCall,this.strikePrice,this.averageCostPerOption())}toBreakEven(){var e,t,a;const i=this.breakEven(),r=this.isOpen?this.market().spotPrice:this.isSettled?(e=this.spotPriceAtExpiry)!==null&&e!==void 0?e:f:(a=(t=this.lastTrade())===null||t===void 0?void 0:t.spotPrice)!==null&&a!==void 0?a:f,s=i.sub(r);return this.isCall?r.gt(i)?f:s:r.lt(i)?f:s}payoff(e){var t;return Fr(this.isLong,this.isCall,this.strikePrice,e,this.averageCostPerOption(),this.sizeBeforeClose(),(t=this.collateral)===null||t===void 0?void 0:t.liquidationPrice)}trades(){const{trades:e,collateralUpdates:t}=this.__positionData,a=t.reduce((i,r)=>({...i,[r.transactionHash]:r}),{});return e.map(i=>new kt(this.lyra,i,a[i.transactionHash]))}firstTrade(){const e=this.trades();return e.length>0?e[0]:null}lastTrade(){const e=this.trades();return e.length>0?e[e.length-1]:null}collateralUpdates(){const{trades:e,collateralUpdates:t}=this.__positionData,a=e.reduce((i,r)=>({...i,[r.transactionHash]:r}),{});return t.map(i=>new Ie(this.lyra,i,a[i.transactionHash]))}transfers(){const{transfers:e}=this.__positionData;return e.map(t=>new br(this.lyra,t))}settle(){const{settle:e}=this.__positionData;return e?new Mr(this.lyra,e):null}market(){return this.__positionData.market}async board(){return(await this.strike()).board()}async strike(){return this.market().strike(this.strikeId)}liveStrike(){return this.market().liveStrike(this.strikeId)}async option(){return this.market().option(this.strikeId,this.isCall)}liveOption(){return this.market().liveOption(this.strikeId,this.isCall)}async trade(e,t,a,i){return await Ae.get(this.lyra,this.owner,this.marketAddress,this.strikeId,this.isCall,e,t,a,{positionId:this.id,...i})}async open(e,t,a){const i=this.isLong;return await this.trade(i,e,t,a)}async close(e,t,a){const i=!this.isLong;return await this.trade(i,e,t,a)}}function Yt(n,e){return n.div(M.from(10).pow(18-e))}function fl(n,e,t){return n?e?ce.LongCall:t?ce.ShortCoveredCall:ce.ShortCall:e?ce.LongPut:ce.ShortPut}function hl(n){return n.isCall&&n.isBuy?n.premium:n.isCall&&!n.isBuy?Ht:!n.isCall&&n.isBuy?n.premium:n.strikePrice.sub(n.pricePerOption).mul(n.size).div(S)}function vl(n){return n.isCall&&n.isBuy?Ht:n.isCall&&!n.isBuy?n.premium:!n.isCall&&n.isBuy?n.strikePrice.sub(n.pricePerOption).mul(n.size).div(S):n.premium}function bl({option:n,postTradeSize:e,setToCollateral:t,setToFullCollateral:a,isBaseCollateral:i}){const r=n.isCall?!!i:!1;if(e.isZero())return{amount:f,min:f,max:f,isMin:!1,isMax:!1,liquidationPrice:null,isBase:r};const p=n.market().spotPrice,o=ln(n,e,p,i);let u=kn(n.isCall,n.strike().strikePrice,e,i);u&&o.gt(u)&&(u=o);let l;if(a){if(!u)throw new Error("Cannot fully collateralize a cash-secured short call");l=u}else l=t??f;const y=l.lte(o),m=!!(u&&l.gte(u)),d=Or(n,e,l,i);return{amount:l,isBase:r,max:u,min:o,isMin:y,isMax:m,liquidationPrice:d}}function kl({isOpen:n,owner:e,size:t,newSize:a,quote:i,position:r,collateral:s,balances:p,quoteTransfer:o,baseTransfer:u}){if(i.disabledReason){const l=i.disabledReason;if(!(l===se.EmptySize&&(r!=null&&r.collateral)&&s&&!s.amount.eq(r.collateral.amount))){if(!(l===se.InsufficientLiquidity&&!n))return l}}if(r&&r.owner!==e||p.owner!==e)return se.IncorrectOwner;if(r)if(r.isOpen){if(!n&&t.gt(r.size))return se.PositionNotLargeEnough;if(!n&&a.isZero()&&s&&!s.amount.isZero())return se.PositionClosedLeftoverCollateral}else return se.PositionClosed;if(o.gt(0)){if(p.quoteAsset.balance.lt(o))return se.InsufficientQuoteBalance;if(p.quoteAsset.tradeAllowance.lt(o))return se.InsufficientQuoteAllowance}if(u.gt(0)){if(p.baseAsset.balance.lt(u))return se.InsufficientBaseBalance;if(p.baseAsset.tradeAllowance.lt(u))return se.InsufficientBaseAllowance}return(n&&!i.isBuy||r&&!r.isLong)&&(!s||r&&!i.isBuy&&a.isZero()&&s.amount.isZero())?se.EmptyCollateral:a.gt(0)&&s&&s.amount.lt(s.min)?se.NotEnoughCollateral:a.gt(0)&&s&&s.max&&s.amount.gt(s.max)?se.TooMuchCollateral:null}var se;(function(n){n.EmptySize="EmptySize",n.Expired="Expired",n.TradingCutoff="TradingCutoff",n.InsufficientLiquidity="InsufficientLiquidity",n.DeltaOutOfRange="DeltaOutOfRange",n.VolTooHigh="VolTooHigh",n.VolTooLow="VolTooLow",n.IVTooHigh="IVTooHigh",n.IVTooLow="IVTooLow",n.SkewTooHigh="SkewTooHigh",n.SkewTooLow="SkewTooLow",n.NotEnoughCollateral="NotEnoughCollateral",n.TooMuchCollateral="TooMuchCollateral",n.EmptyCollateral="EmptyCollateral",n.IncorrectOwner="IncorrectOwner",n.PositionClosed="PositionClosed",n.PositionNotLargeEnough="PositionNotLargeEnough",n.PositionClosedLeftoverCollateral="PositionClosedLeftoverCollateral",n.InsufficientQuoteAllowance="InsufficientQuoteAllowance",n.InsufficientBaseAllowance="InsufficientBaseAllowance",n.InsufficientQuoteBalance="InsufficientQuoteBalance",n.InsufficientBaseBalance="InsufficientBaseBalance",n.UnableToHedgeDelta="UnableToHedgeDelta",n.PriceVarianceTooHigh="PriceVarianceTooHigh"})(se||(se={}));class Ae{constructor(e,t,a,i,r,s,p,o){var u,l,y,m,d,T;this.__source=le.ContractCall;const{position:c,setToCollateral:h=f,setToFullCollateral:v=!1,iterations:k=Xi,isBaseCollateral:b,referrer:g=Pe}=o??{};this.__option=a,this.__position=c,this.__balances=p;const C=a.strike(),P=a.market(),O=a.board();this.lyra=e,this.marketName=P.name,this.marketAddress=P.address,this.expiryTimestamp=O.expiryTimestamp,this.boardId=O.id,this.strikePrice=C.strikePrice,this.strikeId=C.id,this.isCall=a.isCall,this.positionId=c==null?void 0:c.id,this.isBuy=i,this.isOpen=c?i&&c.isLong||!i&&!c.isLong:!0,this.owner=t,this.isLong=c?c.isLong:i;const x=c?(u=c.collateral)===null||u===void 0?void 0:u.isBase:b;this.size=r;let I=vt.getSync(e,a,this.isBuy,this.size,{iterations:k,isOpen:this.isOpen,isLong:this.isLong});!this.isOpen&&(I.disabledReason===U.DeltaOutOfRange||I.disabledReason===U.TradingCutoff||I.disabledReason===U.PriceVarianceTooHigh)&&(I=vt.getSync(e,a,this.isBuy,this.size,{iterations:k,isOpen:this.isOpen,isLong:this.isLong,isForceClose:!0})),this.isForceClose=I.isForceClose,this.iv=I.iv,this.fairIv=I.fairIv,this.greeks=I.greeks,this.fee=I.fee,this.feeComponents=I.feeComponents,this.forceClosePenalty=I.forceClosePenalty,this.spotPrice=I.spotPrice,this.iterations=I.iterations,this.quoteToken={...P.quoteToken,transfer:f,receive:f,balance:p.quoteAsset.balance,newBalance:p.quoteAsset.balance},this.baseToken={...P.baseToken,transfer:f,receive:f,balance:p.baseAsset.balance,newBalance:p.baseAsset.balance},this.quoted=I.premium,this.pricePerOption=f,this.premium=f,this.newSize=c?this.isOpen?c.size.add(r):c.size.sub(r):r,this.newSize.lt(0)&&(this.newSize=f),this.prevSize=(l=c==null?void 0:c.size)!==null&&l!==void 0?l:f;const V=I.premium.mul(Y(i?1+s:1-s)).div(S);this.slippage=s||(V.gt(0)?1-q(I.premium.mul(S).div(V)):0),this.premium=V,this.pricePerOption=r.gt(0)?this.premium.mul(S).div(r):f;let L=this.quoteToken.transfer,R=this.baseToken.transfer;if(i?L=L.add(this.premium):L=L.sub(this.premium),this.isOpen&&!this.isBuy||c&&!c.isLong){this.collateral=bl({option:a,postTradeSize:this.newSize,setToCollateral:h,setToFullCollateral:v,isBaseCollateral:x});const we=this.collateral.amount.sub((m=(y=c==null?void 0:c.collateral)===null||y===void 0?void 0:y.amount)!==null&&m!==void 0?m:f);this.collateral.isBase?R=R.add(we):L=L.add(we)}L.gt(0)?this.quoteToken.transfer=Yt(L,this.quoteToken.decimals):this.quoteToken.receive=Yt(L.abs(),this.quoteToken.decimals),R.gt(0)?this.baseToken.transfer=Yt(R,this.baseToken.decimals):this.baseToken.receive=Yt(R.abs(),this.baseToken.decimals),this.quoteToken.newBalance=this.quoteToken.transfer.gt(0)?this.quoteToken.balance.sub(this.quoteToken.transfer):this.quoteToken.balance.add(this.quoteToken.receive),this.baseToken.newBalance=this.baseToken.transfer.gt(0)?this.baseToken.balance.sub(this.baseToken.transfer):this.baseToken.balance.add(this.baseToken.receive),this.isCollateralUpdate=!!(this.collateral&&this.size.isZero()&&this.collateral.amount.gt(0));const ne=M.from(C.id),ae=c?M.from(c.id):f,oe=M.from(k),ye=r,N=fl(a.isCall,this.isLong,!!x),fe=(T=(d=this.collateral)===null||d===void 0?void 0:d.amount)!==null&&T!==void 0?T:f,z=!i&&V.gt(f)?V:f,Ye=i?V:Ht;this.contract=E(e,P.contractAddresses,e.version,F.OptionMarket),this.method=this.isOpen||this.isCollateralUpdate?"openPosition":this.isForceClose?"forceClosePosition":"closePosition",e.version===A.Avalon?this.params=[{strikeId:ne,positionId:ae,iterations:oe,optionType:N,amount:ye,setCollateralTo:fe,minTotalCost:z,maxTotalCost:Ye}]:this.params=[{strikeId:ne,positionId:ae,iterations:oe,optionType:N,amount:ye,setCollateralTo:fe,minTotalCost:z,maxTotalCost:Ye,referrer:g}],this.data=this.contract.interface.encodeFunctionData(this.method,this.params),this.disabledReason=kl({isOpen:this.isOpen,owner:this.owner,size:this.size,newSize:this.newSize,quote:I,position:c,collateral:this.collateral,balances:p,quoteTransfer:this.quoteToken.transfer,baseTransfer:this.baseToken.transfer}),this.isDisabled=!!this.disabledReason,this.tx=_(this.lyra.provider,this.lyra.provider.network.chainId,E(e,P.contractAddresses,e.version,F.OptionMarket).address,t,this.data)}static async get(e,t,a,i,r,s,p,o,u){const l=async()=>u!=null&&u.positionId?await Me.get(e,a,u.positionId):void 0,[y,m]=await Promise.all([l(),e.account(t).marketBalances(a)]),d=m.market.liveOption(i,r);return new Ae(e,t,d,s,p,o,m,{...u,position:y})}static getSync(e,t,a,i,r,s,p,o){return new Ae(e,t,a,i,r,s,p,o)}static getPositionIdsForLogs(e,t){const a=wr(e,t),i=gr(e,t),r=[...a.map(s=>s.args.positionId.toNumber()),...i.map(s=>s.args.positionId.toNumber())];return Array.from(new Set(r))}static approveQuote(e,t,a){const i=E(e.lyra,e.contractAddresses,e.lyra.version,F.OptionMarket),r=Vt(e.lyra.provider,e.quoteToken.address),s=r.interface.encodeFunctionData("approve",[i.address,a]);return _(e.lyra.provider,e.lyra.provider.network.chainId,r.address,t,s)}approveQuote(e){return Ae.approveQuote(this.market(),this.owner,e)}static approveBase(e,t,a){const i=E(e.lyra,e.contractAddresses,e.lyra.version,F.OptionMarket),r=Vt(e.lyra.provider,e.baseToken.address),s=r.interface.encodeFunctionData("approve",[i.address,a]);return _(e.lyra.provider,e.lyra.provider.network.chainId,r.address,t,s)}approveBase(e){return Ae.approveBase(this.market(),this.owner,e)}pnl(){const e=this.__position;return e?Pr(e,this):f}newAverageCostPerOption(){const e=this.__position,t=e?e.trades().concat([this]):[this];return Lt(t)}prevAverageCostPerOption(){const e=this.__position;return e?Lt(e.trades()):f}newAverageCollateralSpotPrice(){if(this.isLong)return f;const e=this.__position;if(!e)return this.market().spotPrice;const t=e.collateralUpdates().concat([this]);return Bt(e,t)}prevAverageCollateralSpotPrice(){const e=this.__position;if(this.isLong||!e)return f;const t=e.collateralUpdates();return e?Bt(e,t):f}prevCollateralAmount(){var e;if(this.isLong||!this.__position)return f;const t=this.__position.collateralUpdates(),a=t.length?t[t.length-1]:null;return(e=a==null?void 0:a.amount)!==null&&e!==void 0?e:f}collateralChangeAmount(){var e,t,a;if(this.isLong)return f;const i=this.prevCollateralAmount();return((a=(t=(e=this.__position)===null||e===void 0?void 0:e.collateral)===null||t===void 0?void 0:t.amount)!==null&&a!==void 0?a:f).sub(i)}payoff(e){var t;return Fr(this.isLong,this.option().isCall,this.strike().strikePrice,e,this.newAverageCostPerOption(),this.newSize,(t=this.collateral)===null||t===void 0?void 0:t.liquidationPrice)}breakEven(){var e;return ka(this.isCall,this.strikePrice,this.pricePerOption,!!(!((e=this.collateral)===null||e===void 0)&&e.isBase))}maxProfit(){return vl(this)}maxLoss(){return hl(this)}market(){return this.__option.market()}board(){return this.__option.board()}strike(){return this.__option.strike()}option(){return this.__option}position(){var e;return(e=this.__position)!==null&&e!==void 0?e:null}balances(){return this.__balances}}function qr(n){if(n.startsWith("0x"))return n;{const e=n.startsWith("s")&&n.substring(1).toUpperCase()===n.substring(1)?n:n.startsWith("s")?"s"+n.substring(1).toUpperCase():"s"+n.toUpperCase();return Er(e)}}async function fi(n,e){const t=te(n,A.Avalon,Q.OptionMarketViewer),a=te(n,A.Avalon,Q.ExchangeAdapter),i={contract:a,function:"isGlobalPaused",args:[]},r={contract:a,function:"owner",args:[]};if(aa(e)){const{returnData:[s,p,o],blockNumber:u}=await tt(n,[{contract:t,function:"getMarket",args:[e]},i,r]);return{marketView:s,isGlobalPaused:p,owner:o,blockNumber:u}}else{const s=Ta(n,e),{returnData:[p,o,u],blockNumber:l}=await tt(n,[{contract:t,function:"getMarketForBaseKey",args:[qr(s)]},i,r]);return{marketView:p,isGlobalPaused:o,owner:u,blockNumber:l}}}const gl=re`
  query marketTotalValueSnapshots(
    $market: String!
  ) {
    marketTotalValueSnapshots(
      first: 1, orderBy: timestamp, orderDirection: desc, where: { 
        market: $market, 
        NAV_gt: 0,
        period: ${me.OneHour}
      }
    ) {
      ${rr}
    }
  }
`,wl={tvl:f,freeLiquidity:f,burnableLiquidity:f,utilization:0,reservedCollatLiquidity:f,pendingDeltaLiquidity:f,usedDeltaLiquidity:f,tokenPrice:f,pendingDeposits:f,pendingWithdrawals:f};async function Pl(n,e){if(e.liveBoards().length===0)return{tvl:e.params.NAV,freeLiquidity:e.params.NAV,burnableLiquidity:f,utilization:0,reservedCollatLiquidity:f,pendingDeltaLiquidity:f,usedDeltaLiquidity:f,tokenPrice:e.params.tokenPrice,pendingDeposits:f,pendingWithdrawals:f,timestamp:e.block.timestamp};const{data:t}=await Se(n.subgraphClient,{query:gl,variables:{market:e.address.toLowerCase()}});if(!t||t.marketTotalValueSnapshots.length===0)return{...wl,timestamp:e.block.timestamp};const a=t.marketTotalValueSnapshots[0],i=M.from(a.freeLiquidity),r=M.from(a.burnableLiquidity),s=M.from(a.NAV),p=M.from(a.usedCollatLiquidity),o=M.from(a.pendingDeltaLiquidity),u=M.from(a.usedDeltaLiquidity),l=M.from(a.tokenPrice);return{timestamp:a.timestamp,freeLiquidity:i,burnableLiquidity:r,tvl:s,utilization:s.gt(0)?q(s.sub(i).mul(S).div(s)):0,reservedCollatLiquidity:p,pendingDeltaLiquidity:o,usedDeltaLiquidity:u,tokenPrice:l,pendingDeposits:M.from(a.pendingDeposits),pendingWithdrawals:M.from(a.pendingWithdrawals)}}const Cl=re`
  query marketGreeksSnapshots($market: String!) {
    marketGreeksSnapshots(first: 1, orderBy: timestamp, orderDirection: desc, where: 
    { 
      market: $market,
      period: ${me.OneHour}
    }) {
      ${sr}
    }
  }
`,Ml={poolNetDelta:f,hedgerNetDelta:f,netDelta:f,netStdVega:f};async function Ol(n,e){const{data:t}=await Se(n.subgraphClient,{query:Cl,variables:{market:e.address.toLowerCase()}});if(!t||t.marketGreeksSnapshots.length===0)return{...Ml,timestamp:e.block.timestamp};const a=t.marketGreeksSnapshots[0],i=M.from(a.poolNetDelta),r=M.from(a.hedgerNetDelta),s=M.from(a.netDelta),p=M.from(a.netStdVega);return{poolNetDelta:i,hedgerNetDelta:r,netDelta:s,netStdVega:p,timestamp:a.timestamp}}const Sl=re`
  query marketTotalValueSnapshots(
    $market: String!, $min: Int!, $max: Int! $period: Int!
  ) {
    marketTotalValueSnapshots(
      first: 1000, orderBy: timestamp, orderDirection: asc, where: { 
        market: $market, 
        NAV_gt: 0
        timestamp_gte: $min, 
        timestamp_lte: $max,
        period: $period 
      }
    ) {
      ${rr}
    }
  }
`,xl={freeLiquidity:f,burnableLiquidity:f,tvl:f,utilization:0,reservedCollatLiquidity:f,pendingDeltaLiquidity:f,usedDeltaLiquidity:f,tokenPrice:f,pendingDeposits:f,pendingWithdrawals:f};async function Il(n,e,t){var a;const i=await bt(n,Sl,{market:e.address.toLowerCase()},{...t,endTimestamp:(a=t==null?void 0:t.endTimestamp)!==null&&a!==void 0?a:e.block.timestamp});return i.length===0?[{...xl,timestamp:e.block.timestamp}]:i.map(s=>{const p=M.from(s.freeLiquidity),o=M.from(s.burnableLiquidity),u=M.from(s.NAV),l=M.from(s.usedCollatLiquidity),y=M.from(s.pendingDeltaLiquidity),m=M.from(s.usedDeltaLiquidity),d=M.from(s.tokenPrice);return{freeLiquidity:p,burnableLiquidity:o,tvl:u,utilization:u.gt(0)?q(u.sub(p).mul(S).div(u)):0,totalWithdrawingDeposits:f,reservedCollatLiquidity:l,pendingDeltaLiquidity:y,usedDeltaLiquidity:m,tokenPrice:d,timestamp:s.timestamp,pendingDeposits:M.from(s.pendingDeposits),pendingWithdrawals:M.from(s.pendingWithdrawals)}})}async function Al(n,e){return await E(n,e,n.version,F.OptionMarket).owner()}const Fl=re`
  query marketGreeksSnapshots(
    $market: String!, $min: Int!, $max: Int! $period: Int!,
  ) {
    marketGreeksSnapshots(first: ${ha}, orderBy: timestamp, orderDirection: asc, where: { market: $market, 
      timestamp_gte: $min,
      timestamp_lte: $max,
      period_gte: $period
    }) {
      ${sr}
    }
  }
`,ql={poolNetDelta:f,hedgerNetDelta:f,netDelta:f,netStdVega:f};async function Vl(n,e,t){var a;const i=await bt(n,Fl,{market:e.address.toLowerCase()},{...t,endTimestamp:(a=t==null?void 0:t.endTimestamp)!==null&&a!==void 0?a:e.block.timestamp});return i.length===0?[{...ql,timestamp:e.block.timestamp}]:i.map(r=>{const s=M.from(r.poolNetDelta),p=M.from(r.hedgerNetDelta),o=M.from(r.netDelta),u=M.from(r.netStdVega);return{poolNetDelta:s,hedgerNetDelta:p,netDelta:o,netStdVega:u,timestamp:r.timestamp}})}const Dl={currentPositions:{longPosition:{size:f,collateral:f,averagePrice:f,entryFundingRate:f,unrealisedPnl:f,lastIncreasedTime:f,isLong:!0},shortPosition:{size:f,collateral:f,averagePrice:f,entryFundingRate:f,unrealisedPnl:f,lastIncreasedTime:f,isLong:!1},amountOpen:f,isLong:!0},futuresPoolHedgerParams:{acceptableSpotSlippage:f,deltaThreshold:f,marketDepthBuffer:f,targetLeverage:f,maxLeverage:f,minCancelDelay:f,minCollateralUpdate:f,vaultLiquidityCheckEnabled:!1},hedgerAddresses:{router:Pe,positionRouter:Pe,vault:Pe,quoteAsset:Pe,baseAsset:Pe,weth:Pe},gmxView:{basePoolAmount:f,baseReservedAmount:f,quotePoolAmount:f,quoteReservedAmount:f,maxGlobalLongSize:f,guaranteedUSD:f,maxGlobalShortSize:f,shortSize:f,minExecutionFee:f,remainingLongDollars:f,remainingShortDollars:f},referralCode:"",pendingOrderKey:"",lastOrderTimestamp:f,spotPrice:f,expectedHedge:f,currentHedge:f,currentLeverage:f,pendingCollateralDelta:f,baseBal:f,quoteBal:f,wethBal:f},Ll={interactionDelay:f,hedgeCap:f};async function Bl(n){const e=te(n,A.Newport,Q.OptionMarketViewer),t=te(n,A.Newport,Q.ExchangeAdapter),a={contract:t,function:"owner",args:[]},i=await jt(n),r=ge(n)?[]:i.map(g=>({contract:E(n,g,A.Newport,F.PoolHedger),function:"getHedgerState",args:[]})),s=i.map(g=>({contract:t,function:"getAdapterState",args:[g.optionMarket]})),p=ge(n)?[]:i.map(g=>({contract:E(n,g,A.Newport,F.PoolHedger),function:"getPoolHedgerParams",args:[]})),o=i.map(g=>({contract:E(n,g,A.Newport,F.LiquidityPool),function:"getTokenPrice",args:[]})),{returnData:[u,l,...y],blockNumber:m}=await tt(n,[a,{contract:e,function:"getMarkets",args:[i.map(g=>g.optionMarket)]},...r,...s,...p,...o]),d=y.slice(0,r.length),T=y.slice(r.length,r.length+s.length),c=y.slice(r.length+s.length,r.length+s.length+p.length),h=y.slice(r.length+s.length+p.length),{isPaused:v,markets:k}=l;return{marketViews:k.map((g,C)=>({marketView:g,hedgerView:ge(n)?Dl:d[C],adapterView:T[C],poolHedgerParams:ge(n)?Ll:c[C],tokenPrice:h[C],baseLimit:null})),isGlobalPaused:v,owner:u,blockNumber:m}}const El={interactionDelay:f,hedgeCap:f},_l={lastInteraction:f,hedgedDelta:f,margin:f,leverage:f,hedgerQuoteBalance:f,hedgerMarginQuoteBalance:f,canHedgeDeltaIncrease:!0,canHedgeDeltaDecrease:!0,cappedExpectedHedge:f,snxHasEnoughMarketDepth:!0,marketSuspended:!1,curveRateStable:!0,pendingDeltaLiquidity:f,usedDeltaLiquidity:f,pendingDelta:f,pendingMargin:f,fundingRate:f,trackingCode:"",optionMarket:"",perpsMarket:"",curveSwap:"",quoteAsset:"",futuresPoolHedgerParams:{targetLeverage:f,maximumFundingRate:f,deltaThreshold:f,marketDepthBuffer:f,priceDeltaBuffer:f,worstStableRate:f,maxOrderCap:f},poolHedgerParams:{interactionDelay:f,hedgeCap:f},longInterest:f,shortInterest:f,maxTotalMarketSize:Ht};async function Rl(n){const e=te(n,A.Newport,Q.OptionMarketViewer),t=te(n,A.Newport,Q.ExchangeAdapter),a={contract:t,function:"owner",args:[]},i=await jt(n),r=ge(n)?[]:i.map(P=>({contract:E(n,P,A.Newport,F.PoolHedger),function:"getHedgerState",args:[]})),s=ge(n)?[]:i.map(P=>({contract:t,function:"getAdapterState",args:[P.optionMarket]})),p=ge(n)?[]:i.map(P=>({contract:E(n,P,A.Newport,F.PoolHedger),function:"getPoolHedgerParams",args:[]})),o=ge(n)?[]:i.map(P=>({contract:E(n,P,A.Newport,F.LiquidityPool),function:"getTokenPrice",args:[]})),u=i.map(P=>({contract:E(n,P,A.Newport,F.OptionMarket),function:"baseLimit",args:[]})),{returnData:[l,y,...m],blockNumber:d}=await tt(n,[a,{contract:e,function:"getMarkets",args:[i.map(P=>P.optionMarket)]},...r,...s,...p,...o]),{returnData:T}=await tt(n,u),c=m.slice(0,r.length),h=m.slice(r.length,r.length+s.length),v=m.slice(r.length+s.length,r.length+s.length+p.length),k=m.slice(r.length+s.length+p.length),{isPaused:b,markets:g}=y;return{marketViews:g.map((P,O)=>({marketView:P,hedgerView:ge(n)?_l:c[O],adapterView:h[O],poolHedgerParams:ge(n)?El:v[O],tokenPrice:k[O],baseLimit:T[O]})),isGlobalPaused:b,owner:l,blockNumber:d}}const Fn=1e4,Nl=re`
  query spotPriceSnapshots(
    $market: String!, $min: Int!, $max: Int!, $period: Int!, $limit: Int!
  ) {
    spotPriceSnapshots(first: $limit, orderBy: timestamp, orderDirection: asc, where: { 
      market: $market, 
      timestamp_gte: $min, 
      timestamp_lte: $max,
      period: $period 
    }) {
      ${eu}
    }
  }
`;async function Gl(n,e,t){var a,i,r;const s=(a=t==null?void 0:t.startTimestamp)!==null&&a!==void 0?a:Ji,p=(i=t==null?void 0:t.endTimestamp)!==null&&i!==void 0?i:e.block.timestamp,o=(r=t==null?void 0:t.period)!==null&&r!==void 0?r:hr(s,p,[me.FifteenMinutes,me.OneHour,me.FourHours,me.EightHours,me.OneDay,me.SevenDays]),u=o>0?(p-s)/o:0,l=Math.ceil(u/Fn),y=await vr(n,Nl,{min:s,max:p,limit:Fn,period:o,market:e.address.toLowerCase()},"timestamp",{increment:Fn*o,batch:l});if(y.length===0)return[];const m=y.map(T=>({open:M.from(T.open),high:M.from(T.high),low:M.from(T.low),close:M.from(T.close),startTimestamp:T.timestamp-T.period,endTimestamp:T.timestamp,period:T.period,startBlockNumber:T.blockNumber})),d=m.length?m[m.length-1]:null;return d&&d.endTimestamp>e.block.number&&(d.close=e.spotPrice,e.spotPrice.lt(d.low)&&(d.low=e.spotPrice),e.spotPrice.gt(d.high)&&(d.low=e.spotPrice)),m}const Ql=re`
  query marketVolumeAndFeesSnapshots(
    $market: String!, $min: Int!, $max: Int!, $period: Int!
  ) {
    marketVolumeAndFeesSnapshots(first: 1000, orderBy: timestamp, orderDirection: asc, where: {
      market: $market, 
      timestamp_gte: $min, 
      timestamp_lte: $max, 
      period: $period
    }) {
      ${Jo}
    }
  }
`,Hl={premiumVolume:f,notionalVolume:f,totalShortOpenInterestUSD:f,vaultFees:f,vaultFeeComponents:{spotPriceFees:f,optionPriceFees:f,vegaUtilFees:f,varianceFees:f,forceCloseFees:f,liquidationFees:f},totalPremiumVolume:f,totalNotionalVolume:f,liquidatorFees:f,smLiquidationFees:f};async function Ul(n,e,t){var a;const i=(a=t==null?void 0:t.endTimestamp)!==null&&a!==void 0?a:e.block.timestamp,r=await bt(n,Ql,{market:e.address.toLowerCase()},{...t,endTimestamp:i});return r.length===0?[{...Hl,startTimestamp:e.block.timestamp,endTimestamp:e.block.timestamp}]:r.map(s=>{const p=M.from(s.spotPriceFees),o=M.from(s.optionPriceFees),u=M.from(s.vegaFees),l=M.from(s.varianceFees),y=M.from(s.deltaCutoffFees),m=M.from(s.lpLiquidationFees),d=M.from(s.totalShortPutOpenInterestUSD),T=M.from(s.totalShortCallOpenInterestUSD);return{premiumVolume:M.from(s.premiumVolume),notionalVolume:M.from(s.notionalVolume),totalShortOpenInterestUSD:T.add(d),vaultFees:p.add(o).add(u).add(l).add(y).add(m),vaultFeeComponents:{spotPriceFees:p,optionPriceFees:o,vegaUtilFees:u,varianceFees:l,forceCloseFees:y,liquidationFees:m},totalPremiumVolume:M.from(s.totalPremiumVolume),totalNotionalVolume:M.from(s.totalNotionalVolume),liquidatorFees:M.from(s.liquidatorFees),smLiquidationFees:M.from(s.smLiquidationFees),startTimestamp:s.timestamp-s.period,endTimestamp:s.timestamp}})}async function Wl(n,e,t){if(aa(e))return await te(n,n.version,Q.OptionMarketViewer).getBoard(e,t);{const a=Ta(n,e);switch(n.version){case A.Avalon:return te(n,n.version,Q.OptionMarketViewer).getBoardForBaseKey(qr(a),t);case A.Newport:return te(n,n.version,Q.OptionMarketViewer).getBoardForBase(a,t)}}}async function jl(n,e,t){return await te(n,n.version,Q.OptionMarketViewer).getBoardForStrikeId(e,t)}function zl(n,e){let t=n;switch(t.toLowerCase()){case"weth":t="ETH";break;case"lyarb":t="ARB";break}return`${t}-${e}`}class ee{constructor(e,t,a,i,r,s,p,o,u,l){this.__source=le.ContractCall,this.lyra=e,this.block=s,this.__data=t;const y=ee.getFields(e.version,e.network,t,a,i,r,p,o,u);this.address=y.address,this.isBaseCollateralEnabled=!l||l.gt(0),this.isPaused=y.isPaused,this.spotPrice=y.spotPrice,this.quoteToken=y.quoteToken,this.baseToken=y.baseToken,this.liquidityToken=y.liquidityToken,this.name=y.name,this.contractAddresses=y.contractAddresses;const m=t.liveBoards;this.openInterest=m.reduce((d,T)=>{const c=T.strikes.reduce((b,g)=>b.add(g.longCallOpenInterest),f),h=T.strikes.reduce((b,g)=>b.add(g.shortCallBaseOpenInterest).add(g.shortCallQuoteOpenInterest),f),v=T.strikes.reduce((b,g)=>b.add(g.longPutOpenInterest),f),k=T.strikes.reduce((b,g)=>b.add(g.shortPutOpenInterest),f);return d.add(c).add(h).add(v).add(k)},f),this.params=y.params,this.liveBoardsMap=m.reduce((d,T)=>({...d,[T.boardId.toNumber()]:T}),{})}static getFields(e,t,a,i,r,s,p,o,u,l){var y;const m=a.marketAddresses.optionMarket,d=(y=a.isPaused)!==null&&y!==void 0?y:i;let T,c,h,v,k,b;const g=a.marketParameters.pricingParams,C=a.marketParameters.tradeLimitParams,P=a.marketParameters.minCollatParams,O=a.marketParameters.forceCloseParams,x=a.marketParameters.varianceFeeParams,I=a.marketParameters.lpParams,V={optionPriceFee1xPoint:g.optionPriceFee1xPoint.toNumber(),optionPriceFee2xPoint:g.optionPriceFee2xPoint.toNumber(),optionPriceFeeCoefficient:g.optionPriceFeeCoefficient,spotPriceFee1xPoint:g.spotPriceFee1xPoint.toNumber(),spotPriceFee2xPoint:g.spotPriceFee2xPoint.toNumber(),spotPriceFeeCoefficient:g.spotPriceFeeCoefficient,vegaFeeCoefficient:g.vegaFeeCoefficient,minDelta:C.minDelta,shockVolA:P.shockVolA,shockVolB:P.shockVolB,shockVolPointA:P.shockVolPointA,shockVolPointB:P.shockVolPointB,minStaticQuoteCollateral:P.minStaticQuoteCollateral,minStaticBaseCollateral:P.minStaticBaseCollateral,callSpotPriceShock:P.callSpotPriceShock,putSpotPriceShock:P.putSpotPriceShock,standardSize:g.standardSize,skewAdjustmentFactor:g.skewAdjustmentFactor,minForceCloseDelta:C.minForceCloseDelta,shortPostCutoffVolShock:O.shortPostCutoffVolShock,shortVolShock:O.shortVolShock,longPostCutoffVolShock:O.longPostCutoffVolShock,longVolShock:O.longVolShock,shortSpotMin:O.shortSpotMin,absMinSkew:C.absMinSkew,absMaxSkew:C.absMaxSkew,minSkew:C.minSkew,maxSkew:C.maxSkew,maxBaseIv:C.maxBaseIV,maxVol:C.maxVol,minBaseIv:C.minBaseIV,minVol:C.minVol,forceCloseVarianceFeeCoefficient:x.forceCloseVarianceFeeCoefficient,defaultVarianceFeeCoefficient:x.defaultVarianceFeeCoefficient,minimumStaticVega:x.minimumStaticVega,vegaCoefficient:x.vegaCoefficient,referenceSkew:x.referenceSkew,minimumStaticSkewAdjustment:x.minimumStaticSkewAdjustment,skewAdjustmentCoefficient:x.skewAdjustmentCoefficient,minimumStaticIvVariance:x.minimumStaticIvVariance,ivVarianceCoefficient:x.ivVarianceCoefficient,withdrawalFee:I.withdrawalFee,withdrawalDelay:I.withdrawalDelay.toNumber(),depositDelay:I.depositDelay.toNumber(),tradingCutoff:C.tradingCutoff.toNumber(),NAV:a.liquidity.NAV,freeLiquidity:a.liquidity.freeLiquidity,tokenPrice:s,netStdVega:a.globalNetGreeks.netStdVega,netDelta:a.globalNetGreeks.netDelta,isGlobalPaused:i,isMarketPaused:a.isPaused,owner:r,poolHedgerParams:u??a.marketParameters.poolHedgerParams,hedgerView:p??null,adapterView:o??null,baseLimit:l};if(e===A.Avalon){const N=a;T=N.exchangeParams.spotPrice,c=Fa(N.exchangeParams.quoteKey),h=Fa(N.exchangeParams.baseKey),v=18,k=18,b={referenceSpotPrice:T,rateAndCarry:N.marketParameters.greekCacheParams.rateAndCarry,...V}}else{let N;switch(t){case J.Arbitrum:if(!o||!p)throw new Error("Adapter or hedger view does not exist");N=a,T=o.gmxMaxPrice,c=N.quoteSymbol,v=N.quoteDecimals.toNumber(),h=N.baseSymbol,k=N.baseDecimals.toNumber(),b={rateAndCarry:o.rateAndCarry,referenceSpotPrice:N.spotPrice,...V};break;case J.Optimism:if(!o)throw new Error("Adapter or hedger view does not exist");N=a,T=N.spotPrice,c=N.quoteSymbol,v=N.quoteDecimals.toNumber(),h=N.baseSymbol,k=N.baseDecimals.toNumber(),b={rateAndCarry:o.riskFreeRate,referenceSpotPrice:T,...V}}}const L=a.marketAddresses.quoteAsset,R=a.marketAddresses.baseAsset,ne=zl(h,c),ae=a.marketParameters.tradeLimitParams.tradingCutoff.toNumber(),oe=a.marketParameters.lpParams.depositDelay.toNumber(),ye=a.marketParameters.lpParams.withdrawalDelay.toNumber();return{address:m,name:ne,isPaused:d,spotPrice:T,tradingCutoff:ae,quoteToken:{address:L,symbol:c,decimals:v},baseToken:{address:R,symbol:h,decimals:k},liquidityToken:{address:a.marketAddresses.liquidityToken,symbol:`${h}LP`,decimals:18},contractAddresses:a.marketAddresses,depositDelay:oe,withdrawalDelay:ye,params:b}}static async get(e,t){if(e.version===A.Avalon){const[{marketView:a,isGlobalPaused:i,owner:r},s]=await Promise.all([fi(e,t),e.provider.getBlock("latest")]);return new ee(e,a,i,r,a.tokenPrice,s)}else{const a=(await ee.getAll(e)).find(i=>i.isEqual(t));if(!a)throw new Error("Market does not exist");return a}}static async getMany(e,t){if(e.version===A.Avalon){const[a,i]=await Promise.all([Promise.all(t.map(r=>fi(e,r))),e.provider.getBlock("latest")]);return a.map(({marketView:r,isGlobalPaused:s,owner:p})=>new ee(e,r,s,p,r.tokenPrice,i))}else return(await ee.getAll(e)).filter(a=>t.includes(a.address))}static async getAll(e){if(e.version===A.Avalon){const t=await jt(e);return await ee.getMany(e,t.map(a=>a.optionMarket))}else{const[{marketViews:t,isGlobalPaused:a,owner:i},r]=await Promise.all([e.network===J.Arbitrum?Bl(e):Rl(e),e.provider.getBlock("latest")]);return t.map(({marketView:p,hedgerView:o,adapterView:u,poolHedgerParams:l,tokenPrice:y,baseLimit:m})=>new ee(e,p,a,i,y,r,o,u,l,m))}}static find(e,t){return Zi(e,t)}async refresh(){return await ee.get(this.lyra,this.address)}isEqual(e){return fa(this,e)}liveBoards(){return Object.values(this.liveBoardsMap).map(e=>new _e(this.lyra,this,e,this.block)).filter(e=>this.block.timestamp<e.expiryTimestamp).sort((e,t)=>e.expiryTimestamp-t.expiryTimestamp)}liveBoard(e){const t=this.liveBoardsMap[e];if(!t)throw new Error("Board is expired or does not exist for market");return new _e(this.lyra,this,t,this.block)}async board(e){try{return this.liveBoard(e)}catch{const[a,i]=await Promise.all([Wl(this.lyra,this.address,e),this.lyra.provider.getBlock("latest")]);return new _e(this.lyra,this,a,i)}}liveStrike(e){const t=this.liveBoards().find(i=>i.strikes().find(r=>r.id===e)),a=t==null?void 0:t.strikes().find(i=>i.id===e);if(!a)throw new Error("Strike is expired or does not exist for market");return a}async strike(e){try{return this.liveStrike(e)}catch{const[a,i]=await Promise.all([jl(this.lyra,this.address,e),this.lyra.provider.getBlock("latest")]);return new _e(this.lyra,this,a,i).strike(e)}}liveOption(e,t){return this.liveStrike(e).option(t)}async option(e,t){return(await this.strike(e)).option(t)}async quote(e,t,a,i,r){return(await this.refresh()).quoteSync(e,t,a,i,r)}quoteSync(e,t,a,i,r){return this.liveOption(e,t).quoteSync(a,i,r)}async quoteAll(e,t){return(await this.refresh()).quoteAllSync(e,t)}quoteAllSync(e,t){return{boards:this.liveBoards().map(a=>a.quoteAllSync(e,t)),market:this}}contract(e){return E(this.lyra,this.contractAddresses,this.lyra.version,e)}async trade(e,t,a,i,r,s,p){return await Ae.get(this.lyra,e,this.address,t,a,i,r,s,{...p})}approveDeposit(e,t){return dt.approve(this,e,t)}initiateDeposit(e,t){return dt.initiateDeposit(this,e,t)}initiateWithdraw(e,t){return Dt.initiateWithdraw(this,e,t)}approveTradeQuote(e,t){return Ae.approveQuote(this,e,t)}approveTradeBase(e,t){return Ae.approveBase(this,e,t)}async liquidity(){return await Pl(this.lyra,this)}async netGreeks(){return await Ol(this.lyra,this)}async liquidityHistory(e){return await Il(this.lyra,this,e)}async netGreeksHistory(e){return await Vl(this.lyra,this,e)}async tradingVolumeHistory(e){return await Ul(this.lyra,this,e)}async spotPriceHistory(e){return await Gl(this.lyra,this,e)}async owner(){return await Al(this.lyra,this.contractAddresses)}async deposits(e){return await dt.getByOwner(this.lyra,this,e)}async withdrawals(e){return await Dt.getByOwner(this.lyra,this,e)}}class _e{constructor(e,t,a,i){this.__source=le.ContractCall,this.lyra=e,this.block=i,this.__market=t,this.block=i;const r=_e.getFields(t,a,i);this.id=r.id,this.expiryTimestamp=r.expiryTimestamp,this.timeToExpiry=r.timeToExpiry,this.isExpired=r.isExpired,this.baseIv=r.baseIv,this.spotPriceAtExpiry=r.spotPriceAtExpiry,this.isPaused=r.isPaused,this.tradingCutoffTimestamp=r.tradingCutoffTimestamp,this.timeToTradingCutoff=r.timeToTradingCutoff,this.isTradingCutoff=r.isTradingCutoff,this.params=r.params,this.liveStrikeMap=a.strikes.reduce((s,p)=>({...s,[p.strikeId.toNumber()]:p}),{})}static getFields(e,t,a){var i;const r=t.boardId.toNumber(),s=t.expiry.toNumber(),p=Math.max(0,s-a.timestamp),o=s-e.params.tradingCutoff,u=Math.max(0,o-a.timestamp),l=t.priceAtExpiry.isZero()?void 0:t.priceAtExpiry,y=!!l&&p===0,m=u===0,d=y?f:t.baseIv,T=(i=t.isPaused)!==null&&i!==void 0?i:e.isPaused;let c,h;if(e.lyra.version===A.Avalon){const v=t;c=v.forceCloseGwavIV,h=v.forceCloseGwavIV}else{const v=t;c=v.varianceGwavIv,h=v.forceCloseGwavIv}return{id:r,expiryTimestamp:s,tradingCutoffTimestamp:o,timeToExpiry:p,timeToTradingCutoff:u,isExpired:y,isTradingCutoff:m,spotPriceAtExpiry:l,baseIv:d,isPaused:T,params:{varianceGwavIv:c,forceCloseGwavIv:h,isBoardPaused:t.isPaused}}}static async get(e,t,a){return await(await ee.get(e,t)).board(a)}async refresh(){return await _e.get(this.lyra,this.market().address,this.id)}market(){return this.__market}strikes(){return Object.values(this.liveStrikeMap).map(e=>new Ke(this.lyra,this,e,this.block))}strike(e){const t=this.liveStrikeMap[e];if(!t)throw new Error("Strike does not exist for board");return new Ke(this.lyra,this,t,this.block)}option(e,t){return this.strike(e).option(t)}async quote(e,t,a,i,r){return(await this.refresh()).quoteSync(e,t,a,i,r)}quoteSync(e,t,a,i,r){return this.option(e,t).quoteSync(a,i,r)}async quoteAll(e,t){return(await this.refresh()).quoteAllSync(e,t)}quoteAllSync(e,t){return{strikes:this.strikes().map(a=>a.quoteAllSync(e,t)),board:this}}}var D;(function(n){n.Optimism="optimism",n.OptimismGoerli="optimism-goerli",n.Arbitrum="arbitrum",n.ArbitrumGoerli="arbitrum-goerli"})(D||(D={}));const hi="https://api.lyra.finance";function qn(n){switch(n){case D.Arbitrum:case D.ArbitrumGoerli:case D.Optimism:case D.OptimismGoerli:return A.Newport}}const vi=n=>{switch(n){case 420:return D.OptimismGoerli;case 421613:return D.ArbitrumGoerli;case 10:return D.Optimism;case 42161:return D.Arbitrum;default:throw new Error("Chain ID is not supported by Lyra")}},$l=n=>{switch(n){case D.OptimismGoerli:return 420;case D.ArbitrumGoerli:return 421613;case D.Optimism:return 10;case D.Arbitrum:return 42161;default:throw new Error("Chain is not supported by Lyra")}},Kl=n=>{switch(n){case D.Arbitrum:case D.Optimism:return ve.Mainnet;case D.OptimismGoerli:case D.ArbitrumGoerli:return ve.Testnet}},Xl=n=>{switch(n){case D.Optimism:return 10;case D.OptimismGoerli:return 420;case D.Arbitrum:return 42161;case D.ArbitrumGoerli:return 421613}},Yl=n=>{switch(n){case D.Optimism:return"https://mainnet.optimism.io";case D.OptimismGoerli:return"https://goerli.optimism.io";case D.Arbitrum:return"https://arb1.arbitrum.io/rpc";case D.ArbitrumGoerli:return"https://goerli-rollup.arbitrum.io/rpc"}},bi=n=>{const e=Yl(n),t=Xl(n);return new _r(e,t)},Vn=(n,e)=>{switch(n){case D.Optimism:switch(e){case A.Avalon:return"https://subgraph.satsuma-prod.com/d14de8f7fd46/lyra/optimism-mainnet/api";case A.Newport:default:return"https://subgraph.satsuma-prod.com/d14de8f7fd46/lyra/optimism-mainnet-newport/api"}case D.OptimismGoerli:return"https://subgraph.satsuma-prod.com/d14de8f7fd46/lyra/optimism-goerli/api";case D.Arbitrum:return"https://subgraph.satsuma-prod.com/d14de8f7fd46/lyra/arbitrum-mainnet/api";case D.ArbitrumGoerli:return"https://subgraph.satsuma-prod.com/d14de8f7fd46/lyra/arbitrum-goerli/api"}},Dn=n=>{switch(n){case D.Optimism:case D.OptimismGoerli:return"https://subgraph.satsuma-prod.com/d14de8f7fd46/lyra/optimism-governance/api";case D.Arbitrum:case D.ArbitrumGoerli:return"https://subgraph.satsuma-prod.com/d14de8f7fd46/lyra/arbitrum-governance/api"}};function Zl(n){switch(n){case D.Arbitrum:case D.ArbitrumGoerli:return J.Arbitrum;case D.Optimism:case D.OptimismGoerli:return J.Optimism}}var A;(function(n){n.Avalon="avalon",n.Newport="newport"})(A||(A={}));class ly{constructor(e=D.Optimism){var t,a,i,r;if(typeof e=="object"){const s=e;this.provider=e.provider,this.chain=vi(this.provider.network.chainId),this.apiUri=(t=s.apiUri)!==null&&t!==void 0?t:hi,this.version=(a=e.version)!==null&&a!==void 0?a:qn(this.chain),this.subgraphUri=(i=s==null?void 0:s.subgraphUri)!==null&&i!==void 0?i:Vn(this.chain,this.version),this.govSubgraphUri=(r=s==null?void 0:s.govSubgraphUri)!==null&&r!==void 0?r:Dn(this.chain)}else typeof e=="number"?(this.chain=vi(e),this.provider=bi(this.chain),this.version=qn(this.chain),this.subgraphUri=Vn(this.chain,this.version),this.govSubgraphUri=Dn(this.chain)):(this.chain=e,this.provider=bi(this.chain),this.version=qn(this.chain),this.subgraphUri=Vn(this.chain,this.version),this.govSubgraphUri=Dn(this.chain));this.subgraphClient=new di({connectToDevTools:!0,link:new Wn({uri:this.subgraphUri,fetch:Ln}),cache:new oi}),this.govSubgraphClient=new di({connectToDevTools:!0,link:new Wn({uri:this.govSubgraphUri,fetch:Ln}),cache:new oi}),this.network=Zl(this.chain),this.apiUri=hi,this.chainId=$l(this.chain),this.deployment=Kl(this.chain)}async quote(e,t,a,i,r,s){return await(await this.market(e)).quote(t,a,i,r,s)}async quoteOption(e,t,a,i,r){return(await this.option(e,t,a)).quoteAllSync(i,r)}async quoteStrike(e,t,a,i){return(await this.strike(e,t)).quoteAllSync(a,i)}async quoteBoard(e,t,a,i){return(await this.board(e,t)).quoteAllSync(a,i)}async quoteMarket(e,t,a){return(await this.market(e)).quoteAllSync(t,a)}async approveTradeQuote(e,t,a){return(await this.market(e)).approveTradeQuote(t,a)}async approveTradeBase(e,t,a){return(await this.market(e)).approveTradeBase(t,a)}async trade(e,t,a,i,r,s,p,o){return await(await this.market(t)).trade(e,a,i,r,s,p,o)}onTrade(e,t){return kt.on(this,e,t)}async markets(){return await ee.getAll(this)}async contractAddresses(){return await jt(this)}async marketAddresses(){return(await this.contractAddresses()).map(({optionMarket:e})=>e)}async market(e){return await ee.get(this,e)}async board(e,t){return await _e.get(this,e,t)}async strike(e,t){return await Ke.get(this,e,t)}async option(e,t,a){return await $e.get(this,e,t,a)}async openPositions(e){return await Me.getOpenByOwner(this,e)}async positions(e){return await Me.getByOwner(this,e)}async position(e,t){return await Me.get(this,e,t)}async events(e){return await Wt(this,e)}account(e){return pn.get(this,e)}drip(e){return pn.get(this,e).drip()}async deposits(e,t){const a=await this.market(e);return await dt.getByOwner(this,a,t)}async approveDeposit(e,t,a){return(await this.market(e)).approveDeposit(t,a)}async initiateDeposit(e,t,a){return(await this.market(e)).initiateDeposit(t,a)}async withdrawals(e,t){const a=await this.market(e);return await Dt.getByOwner(this,a,t)}async initiateWithdraw(e,t,a){return(await this.market(e)).initiateWithdraw(t,a)}admin(){return va.get(this)}async claimRewards(e,t){return await ft.claim(this,e,t)}async globalRewardEpochs(){return await hn.getAll(this)}async accountRewardEpochs(e){return await ft.getByOwner(this,e)}}export{ly as L};
